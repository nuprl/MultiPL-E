language: java
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Return empty list if empty string\n        if (string.equals(\"\"))\n      \
    \      return new ArrayList<String>();\n\n        // Initialize prefix array to\
    \ all possible strings of length 1\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        prefixes.add(string);\n\n        // For all strings starting with the\
    \ last character, append the first\n        // character and repeat for all remaining\
    \ characters\n        int length = string.length();\n        for (int i = length-1;\
    \ i >= 0; i--) {\n            prefixes.add(0, string.substring(0, i));\n     \
    \   }\n\n        return prefixes;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn3aisu7m.java:32)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Create a List to hold return value\n        ArrayList<String> retVal = new ArrayList<>();\n\
    \n        // Return an empty list if the input string is empty\n        if (string\
    \ == null || string.length() == 0) {\n            return retVal;\n        }\n\n\
    \        // Add empty string\n        retVal.add(\"\");\n\n        // Iterate\
    \ through input string\n        for (char c : string.toCharArray()) {\n      \
    \      // Iterate through each character in input string\n            for (char\
    \ ch : string.toCharArray()) {\n                // If the current character is\
    \ the current character of the\n                // input string\n            \
    \    if (c == ch) {\n                    // Add the current character to the return\
    \ list\n                    retVal.add(\"\" + ch + c);\n                    //\
    \ Break out of the inner loop\n                    break;\n                }\n\
    \            }\n        }\n\n        return retVal;\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbis271i.java:43)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.isEmpty()) {\n            throw new RuntimeException(\"\
    Invalid input!\");\n        }\n\n        ArrayList<String> result = new ArrayList<>();\n\
    \n        for (int i = 0; i < string.length(); i++) {\n            String prefix\
    \ = string.substring(0, i);\n            result.add(prefix);\n        }\n\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Invalid input!\n\
    \tat Problem.allPrefixes(tmpluynk9dc.java:14)\n\tat Problem.main(tmpluynk9dc.java:27)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        if (string.isEmpty()) return prefixes;\n\
    \        String[] suffixes = string.split(\"(?!^)\");\n        for (String suffix\
    \ : suffixes) {\n            prefixes.addAll(allPrefixes(suffix));\n        }\n\
    \        prefixes.add(string);\n        return prefixes;\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.regex.PatternSyntaxException: Stack\
    \ overflow during pattern compilation near index 2\n(?!^)\n  ^\n\tat java.base/java.util.regex.Pattern.error(Pattern.java:2028)\n\
    \tat java.base/java.util.regex.Pattern.<init>(Pattern.java:1432)\n\tat java.base/java.util.regex.Pattern.compile(Pattern.java:1069)\n\
    \tat java.base/java.lang.String.split(String.java:3153)\n\tat java.base/java.lang.String.split(String.java:3199)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:15)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\
    \tat Problem.allPrefixes(tmprvxei7zu.java:17)\n\tat Problem.allPrefixes(tmprvxei7zu.jav"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n\n        for (String prefix : allPrefixesIterative(string))\
    \ {\n            prefixes.add(prefix);\n        }\n\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9m__v3m3.java:15: error: cannot find symbol\n        for (String\
    \ prefix : allPrefixesIterative(string)) {\n                             ^\n \
    \ symbol:   method allPrefixesIterative(String)\n  location: class Problem\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.length() < 1) {\n            return null;\n      \
    \  }\n        ArrayList<String> res = new ArrayList<>();\n        for (int i =\
    \ 0; i < string.length(); i++) {\n            String prefix = string.substring(0,\
    \ i);\n            res.add(prefix);\n            if (i < string.length() - 1)\
    \ {\n                for (int j = i + 1; j < string.length(); j++) {\n       \
    \             String prefix = string.substring(0, j);\n                    res.add(prefix\
    \ + \"#\" + prefix);\n                }\n            }\n        }\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmtmri_6e.java:22: error: variable prefix is already defined in\
    \ method allPrefixes(String)\n                    String prefix = string.substring(0,\
    \ j);\n                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n\n        // If the string is empty, return the\
    \ empty list\n        if (string.isEmpty()) return prefixes;\n\n        // For\
    \ each letter in the input string\n        for (char letter : string.toCharArray())\
    \ {\n            // For each character in the string up to and including that\
    \ letter\n            for (int i = 0; i < string.length(); i++) {\n          \
    \      // If the character matches the letter we're looking for\n            \
    \    if (string.charAt(i) == letter) {\n                    // We have a prefix\n\
    \                    prefixes.add(string.substring(0, i));\n                 \
    \   break;\n                }\n            }\n        }\n\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgwpeu8n3.java:35)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        String[] array = string.split(\"\");\n\
    \        for (String prefix : prefixes) {\n            prefixes.add(prefix);\n\
    \            for (int i = 0; i < array.length; i++) {\n                String\
    \ new_prefix = prefix + array[i];\n                if (!prefixes.contains(new_prefix))\
    \ {\n                    prefixes.add(new_prefix);\n                }\n      \
    \      }\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3pebzxk4.java:28)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        allPrefixesRec(string, result, \"\
    \", \"\");\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2jrwhi9a.java:14: error: cannot find symbol\n        allPrefixesRec(string,\
    \ result, \"\", \"\");\n        ^\n  symbol:   method allPrefixesRec(String,ArrayList<String>,String,String)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ IntStream.range(0, string.length())\n                .map(i -> new String(string.substring(0,\
    \ i) + string.substring(i + 1, string.length())))\n                .filter(s ->\
    \ !s.isEmpty())\n                .map(s -> s.substring(0, 1))\n              \
    \  .collect(Collectors.toCollection(ArrayList::new));\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk17r7srm.java:14: error: incompatible types: bad return type in\
    \ lambda expression\n                .map(i -> new String(string.substring(0,\
    \ i) + string.substring(i + 1, string.length())))\n                          ^\n\
    \    String cannot be converted to int\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        Stack<Character> stack = new Stack<>();\n\
    \        for (char c : string.toCharArray()) {\n            stack.push(c);\n \
    \           while (!stack.empty() && stack.peek() != '\\0') {\n              \
    \  result.add(stack.pop());\n            }\n            stack.pop();\n       \
    \ }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiumx6iys.java:18: error: incompatible types: Character cannot be\
    \ converted to String\n                result.add(stack.pop());\n            \
    \                        ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ allPrefixes(string, new HashSet<String>());\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpayep5km0.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string, new HashSet<String>());\n\
    \               ^\n  required: String\n  found:    String,HashSet<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        String[] strList = string.split(\"\"\
    );\n        for (String str : strList) {\n            for (int i = str.length();\
    \ i >= 1; i--) {\n                list.add(str.substring(0, i));\n           \
    \ }\n        }\n        return list;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2peh14n2.java:24)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        ArrayList<String> split = new ArrayList<>();\n\
    \        ArrayList<String> results = new ArrayList<>();\n        for (int i =\
    \ 0; i < string.length(); i++) {\n            for (int j = 0; j < string.length();\
    \ j++) {\n                for (int k = 0; k < string.length(); k++) {\n      \
    \              split.add(string.substring(i, j));\n                }\n       \
    \         for (int l = 0; l < split.size(); l++) {\n                    results.add(split.get(l));\n\
    \                }\n            }\n        }\n        int longest = 0;\n     \
    \   for (String item : results) {\n            if (item.length() > longest) {\n\
    \                longest = item.length();\n            }\n        }\n        for\
    \ (int i = 0; i < results.size(); i++) {\n            String item = results.get(i);\n\
    \            for (int j = 0; j < longest; j++) {\n                String prefix\
    \ = item.substring(0, j);\n                prefixes.add(prefix);\n           \
    \ }\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 1, end 0, length 6\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmppxkpnm8e.java:19)\n\
    \tat Problem.main(tmppxkpnm8e.java:43)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        // The first prefix is the empty string\n\
    \        list.add(\"\");\n        // The first prefix is every character in the\
    \ string\n        for (int i = 0; i < string.length(); i++) {\n            list.add(string.substring(0,\
    \ i));\n        }\n        // Append the first prefix to the rest of the prefix\
    \ list\n        // If there are still more prefixes to append, then do it again\n\
    \        while (!list.isEmpty()) {\n            String prefix = list.get(0);\n\
    \            list.remove(0);\n            list.add(0, prefix);\n            String\
    \ rest = string.substring(1);\n            int n = rest.length();\n          \
    \  for (int i = 1; i < n; i++) {\n                list.add(rest.substring(0, i)\
    \ + prefix);\n            }\n        }\n        return list;\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 1, end 0, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat java.base/java.lang.String.substring(String.java:2680)\n\
    \tat Problem.allPrefixes(tmp2ha1xjc1.java:26)\n\tat Problem.main(tmp2ha1xjc1.java:35)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        if (string == null || string.length()\
    \ == 0) {\n            return prefixes;\n        }\n        Queue<Character> queue\
    \ = new LinkedList<>();\n        queue.add(string.charAt(0));\n        int length\
    \ = 1;\n        while (queue.size() != 0) {\n            Character c = queue.poll();\n\
    \            prefixes.add(string.substring(length, length + c));\n           \
    \ length += 1;\n            for (int i = length; i < string.length(); i++) {\n\
    \                queue.add(string.charAt(i));\n            }\n        }\n    \
    \    return prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 1, end 98, length 6\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmp8mkcpf0q.java:22)\n\
    \tat Problem.main(tmp8mkcpf0q.java:32)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        if (string.charAt(0) == string.charAt(string.length()\
    \ - 1)) {\n            prefixes.add(string);\n        } else {\n            for\
    \ (int i = 0; i < string.length(); i++) {\n                prefixes.add(string.substring(0,\
    \ i));\n            }\n        }\n        return prefixes;\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.allPrefixes(tmpcql1ku5_.java:14)\n\
    \tat Problem.main(tmpcql1ku5_.java:24)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.length() == 0) {\n            return new ArrayList<>();\n\
    \        }\n        ArrayList<String> prefixes = new ArrayList<>();\n        ArrayList<String>\
    \ candidates = new ArrayList<>();\n        candidates.add(string);\n        candidates.add(0,\
    \ string);\n        candidates.add(0, string.substring(1));\n        while (!candidates.isEmpty())\
    \ {\n            ArrayList<String> newCandidates = new ArrayList<>();\n      \
    \      for (String candidate : candidates) {\n                String newString\
    \ = \"\";\n                for (int i = 0; i < candidate.length(); i++) {\n  \
    \                  newString += candidate.substring(i, i + 1);\n             \
    \   }\n                newCandidates.add(newString);\n                candidates.remove(newString);\n\
    \            }\n            prefixes.addAll(newCandidates);\n        }\n     \
    \   return prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.allPrefixes(tmpp86tz68u.java:23)\n\
    \tat Problem.main(tmpp86tz68u.java:37)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ Arrays.asList(string.split(\"(?<=\\\\G.{2})\"));\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpugc_eyj6.java:13: error: incompatible types: no instance(s) of\
    \ type variable(s) T exist so that List<T> conforms to ArrayList<String>\n   \
    \     return Arrays.asList(string.split(\"(?<=\\\\G.{2})\"));\n              \
    \              ^\n  where T is a type-variable:\n    T extends Object declared\
    \ in method <T>asList(T...)\n1 error\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        boolean flag = false;\n       \
    \ String prefix = \"\";\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (flag) {\n                if (string.charAt(i) == string.charAt(i\
    \ - 1))\n                    prefix = prefix + string.charAt(i);\n           \
    \     else if (!flag && string.charAt(i) != string.charAt(i - 1))\n          \
    \          flag = true;\n            } else\n                prefix = prefix +\
    \ string.charAt(i);\n            if (flag) {\n                prefixes.add(prefix);\n\
    \                prefix = \"\";\n                flag = false;\n            }\n\
    \        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3l9i02x.java:34)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            for (int j = i; j < string.length(); j++) {\n          \
    \      String prefix = string.substring(0, j);\n                if (!prefixes.contains(prefix))\
    \ {\n                    prefixes.add(prefix);\n                }\n          \
    \  }\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq8hcaf2a.java:26)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        for(int i=0;i<string.length();i++) {\n\
    \            for(int j=i+1;j<string.length();j++) {\n                result.add(string.substring(i,\
    \ j));\n            }\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_zo04h8.java:23)\n"
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        String s = \"\";\n        for (char c :\
    \ string.toCharArray()) {\n            if (s.isEmpty() || c == '.' || c == '!')\
    \ {\n                s = \"\" + c;\n            } else {\n                s =\
    \ s + c;\n            }\n            for (String prefix : allPrefixes(s)) {\n\
    \                result.add(prefix);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.allPrefixes(tmp3rwshhz3.java:17)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\
    \tat Problem.allPrefixes(tmp3rwshhz3.java:21)\n\tat Problem."
  stdout: ''
  timestamp: 1660011847
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        List<String>\
    \ prefix = new ArrayList<>();\n        String prefix = \"\";\n        for (char\
    \ c : string.toCharArray()) {\n            prefix.concat(c);\n            prefix.concat(\"\
    \");\n            prefix.concat(c);\n            prefix.concat(\"\");\n      \
    \      prefix.concat(c);\n            prefix.concat(\"\");\n        }\n      \
    \  return prefix;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqj60pvgr.java:14: error: variable prefix is already defined in\
    \ method allPrefixes(String)\n        String prefix = \"\";\n               ^\n\
    /tmp/tmpqj60pvgr.java:16: error: incompatible types: char cannot be converted\
    \ to String\n            prefix.concat(c);\n                          ^\n/tmp/tmpqj60pvgr.java:18:\
    \ error: incompatible types: char cannot be converted to String\n            prefix.concat(c);\n\
    \                          ^\n/tmp/tmpqj60pvgr.java:20: error: incompatible types:\
    \ char cannot be converted to String\n            prefix.concat(c);\n        \
    \                  ^\n/tmp/tmpqj60pvgr.java:23: error: incompatible types: String\
    \ cannot be converted to ArrayList<String>\n        return prefix;\n         \
    \      ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n5 errors\n"
  stdout: ''
  timestamp: 1660011848
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int n = string.length();\n    \
    \    for (int i = n; i > 0; i--) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm732puzp.java:22)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        if (string.isEmpty()) {\n           \
    \ prefixes.add(string);\n            return prefixes;\n        }\n        allPrefixes(string,\
    \ 1, string, prefixes);\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkz5cjn2q.java:18: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, 1, string, prefixes);\n\
    \        ^\n  required: String\n  found:    String,int,String,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011848
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        for (int i = 0; i < string.length(); ++i)\
    \ {\n            for (int j = i; j <= string.length(); ++j) {\n              \
    \  result.add(string.substring(i, j));\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkxcnriy4.java:23)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        int n = string.length();\n        for(int\
    \ i = 0; i <= n; i++){\n            prefixes.add(string.substring(0, i));\n  \
    \      }\n        return prefixes;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ksknqsl.java:21)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string.isEmpty()) return new ArrayList<>();\n        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        prefixes.add(string);\n        // Add all prefixes\
    \ of this string that come before current string\n        for (int i = string.length()\
    \ - 1; i >= 0; i--) {\n            prefixes.add(string.substring(0, i) + string.substring(i\
    \ + 1));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcnbjvzzn.java:24)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        prefixes.add(string);\n       \
    \ return prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1nt73476.java:18)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        String[] words = string.split(\"\\\\s+\"\
    );\n        final int N = words.length;\n        final HashSet<String> seen =\
    \ new HashSet<>();\n        final ArrayList<String> prefix = new ArrayList<>();\n\
    \        for (String w : words) {\n            while (!seen.contains(w) && prefix.size()\
    \ < N) {\n                prefix.add(w);\n                seen.add(w);\n     \
    \       }\n            seen.add(w);\n        }\n        for (String w : prefix)\
    \ {\n            result.add(w);\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphj_p13l0.java:31)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            result.add(string.substring(0, i));\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1v0vp2c4.java:21)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ res = new ArrayList<String>();\n        allPrefixes(string, res, \"\", \"\"\
    );\n        return res;\n}\n    public static void main(String[] args) {\n   \
    \ assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgg9_qv9d.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, res, \"\", \"\");\n\
    \        ^\n  required: String\n  found:    String,ArrayList<String>,String,String\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (String prefix : string.split(\"\
    (?<=.)\"))\n            prefixes.add(prefix);\n        return prefixes;\n}\n \
    \   public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4bnol8g.java:19)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null)\n            throw new NullPointerException(\"Input string\
    \ is null\");\n        if (string.length() == 0)\n            throw new IllegalArgumentException(\"\
    Input string is empty\");\n\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int prefixLength = 1;\n        result.add(\"\");\n        while (prefixLength\
    \ < string.length()) {\n            int length = string.length() - prefixLength;\n\
    \            for (int i = 0; i < length; i++) {\n                result.add(string.substring(prefixLength,\
    \ prefixLength + i));\n            }\n            prefixLength += length;\n  \
    \      }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: Input\
    \ string is empty\n\tat Problem.allPrefixes(tmpc14wbsyh.java:16)\n\tat Problem.main(tmpc14wbsyh.java:31)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string.isEmpty())\n            return new ArrayList<String>();\n        List<String>\
    \ result = new ArrayList<String>();\n        ArrayList<String> prefixes = allPrefixesRec(string,\
    \ \"\", result);\n        return result.toArray(new String[result.size()]);\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt4qglki6.java:16: error: cannot find symbol\n        ArrayList<String>\
    \ prefixes = allPrefixesRec(string, \"\", result);\n                         \
    \            ^\n  symbol:   method allPrefixesRec(String,String,List<String>)\n\
    \  location: class Problem\n/tmp/tmpt4qglki6.java:17: error: incompatible types:\
    \ no instance(s) of type variable(s) T exist so that T[] conforms to ArrayList<String>\n\
    \        return result.toArray(new String[result.size()]);\n                 \
    \            ^\n  where T is a type-variable:\n    T extends Object declared in\
    \ method <T>toArray(T[])\n2 errors\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefix = new ArrayList<String>();\n        for(int i = 0; i <= string.length();\
    \ ++i) {\n            prefix.add(string.substring(0, i));\n        }\n       \
    \ return prefix;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5_6hp55.java:20)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        String longest = string.substring(0,\
    \ string.length() - 1);\n        String shortest = string.substring(0, string.length()\
    \ / 2);\n        prefixes.add(longest);\n        for (String prefix : allPrefixes(shortest))\
    \ {\n            prefixes.add(prefix + longest);\n        }\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmpraok5ur4.java:14)\n\
    \tat Problem.main(tmpraok5ur4.java:23)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int size = string.length();\n \
    \       if (size <= 1) {\n            prefixes.add(\"\");\n            return\
    \ prefixes;\n        }\n        for (int i = 1; i < size; i++) {\n           \
    \ prefixes.add(string.substring(0, i));\n        }\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp10lp9szr.java:25)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ base case\n        if (string.length() == 0) {\n            return new ArrayList<>();\n\
    \        }\n        ArrayList<String> result = new ArrayList<>();\n        //\
    \ Recursive case\n        // Use helper function allPrefixes() to find all prefixes\
    \ recursively\n        allPrefixes(result, 0, string, string);\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkwxsvlx1.java:20: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(result, 0, string, string);\n\
    \        ^\n  required: String\n  found:    ArrayList<String>,int,String,String\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ results = new ArrayList<>();\n        for (String prefix : allPrefixes(\"\"\
    , string)) {\n            results.add(prefix);\n        }\n        return results;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpci8i4npu.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        for (String prefix : allPrefixes(\"\", string))\
    \ {\n                             ^\n  required: String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Convert string to char array\n        char[] charArray = string.toCharArray();\n\
    \n        // Create stack data structure\n        Stack<Character> stack = new\
    \ Stack<Character>();\n        // Initialize stack data structure\n        stack.push(0);\n\
    \n        // Initialize prefix list\n        ArrayList<String> prefixList = new\
    \ ArrayList<>();\n\n        // While the top of the stack is not empty\n     \
    \   while(!stack.isEmpty()) {\n            // Extract top character of stack\n\
    \            char top = stack.pop();\n            // If the character at the top\
    \ of the stack is less than or equal to zero\n            if(top <= 0) {\n   \
    \             // Add top character to prefix list\n                prefixList.add(String.valueOf(top));\n\
    \            } else {\n                // Push next character onto stack\n   \
    \             stack.push(top-1);\n            }\n        }\n\n        // Return\
    \ the prefix list\n        return prefixList;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrp3jmht.java:19: error: incompatible types: int cannot be converted\
    \ to Character\n        stack.push(0);\n                   ^\n/tmp/tmpbrp3jmht.java:34:\
    \ error: incompatible types: int cannot be converted to Character\n          \
    \      stack.push(top-1);\n                              ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.isEmpty()) {\n            return new ArrayList<>();\n\
    \        }\n        ArrayList<String> prefixes = new ArrayList<>();\n        prefixes.add(string);\n\
    \        for (String prefix : allPrefixes(string.substring(1))) {\n          \
    \  prefixes.add(prefix + \"a\");\n            prefixes.add(prefix + \"ab\");\n\
    \            prefixes.add(prefix + \"abc\");\n        }\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83kkpl02.java:27)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        allPrefixes(\"\", string, prefixes);\n\
    \        return prefixes;\n}\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9v3yg1x_.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(\"\", string, prefixes);\n \
    \       ^\n  required: String\n  found:    String,String,ArrayList<String>\n \
    \ reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ size = string.length();\n        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        if (size <= 1) return prefixes;\n        // Recursively add all prefixes\
    \ from smaller strings\n        // until we get to size 1\n        for (int i\
    \ = 0; i < size - 1; i++) {\n            prefixes.addAll(allPrefixes(string.substring(0,\
    \ i)));\n        }\n        // Now add the current prefix as well\n        prefixes.add(string.substring(0,\
    \ size));\n        return prefixes;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zqi7dyv.java:27)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Return empty set if empty string\n        if (string.isEmpty()) return new ArrayList<>();\n\
    \        ArrayList<String> prefixes = new ArrayList<>();\n        // Initialize\
    \ prefix length\n        int minLength = Integer.MAX_VALUE;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            int length = string.substring(i,\
    \ i + 1).length();\n            if (length >= minLength) continue;\n         \
    \   minLength = length;\n            prefixes.add(string.substring(i, i + 1));\n\
    \        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2s83y384.java:28)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        // Loop through all possible substring\
    \ lengths\n        for (int length = 1; length <= string.length(); length++) {\n\
    \            // For each substring, add it to the current prefix array\n     \
    \       for (int start = 0; start <= string.length() - length; start++) {\n  \
    \              prefixes.add(string.substring(start, start + length));\n      \
    \      }\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyoz4z_l8.java:25)\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        allPrefixes(\"\", string, \"\", prefixes);\n\
    \        return prefixes;\n}\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjvh1atju.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(\"\", string, \"\", prefixes);\n\
    \        ^\n  required: String\n  found:    String,String,String,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        ArrayList<String> shortest = new ArrayList<>();\n\
    \        ArrayList<String> longest = new ArrayList<>();\n        for (String char\
    \ : string.toCharArray()) {\n            if (shortest.isEmpty()) {\n         \
    \       shortest.add(char);\n                result.add(char);\n            }\
    \ else if (char.equals(shortest.get(0))) {\n                result.add(char);\n\
    \            } else if (char.equals(longest.get(shortest.size() - 1))) {\n   \
    \             longest.add(char);\n            } else if (char.equals(shortest.get(shortest.size()\
    \ - 1))) {\n                result.add(char);\n                result.add(char.substring(0,1));\n\
    \            } else {\n                ArrayList<String> remaining = new ArrayList<>();\n\
    \                for (int i = 0; i < shortest.size() ; i++) {\n              \
    \      if (char.equals(shortest.get(i))) {\n                        result.add(char);\n\
    \                        break;\n                    }\n                    remaining.add(shortest.get(i));\n\
    \                }\n                for (int i = 0; i < longest.size() ; i++)\
    \ {\n                    if (char.equals(longest.get(i))) {\n                \
    \        result.add(char);\n                        break;\n                 \
    \   }\n                    remaining.add(longest.get(i));\n                }\n\
    \                result.addAll(remaining);\n            }\n        }\n       \
    \ return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp437vhodx.java:16: error: not a statement\n        for (String char\
    \ : string.toCharArray()) {\n             ^\n/tmp/tmp437vhodx.java:16: error:\
    \ ';' expected\n        for (String char : string.toCharArray()) {\n         \
    \          ^\n/tmp/tmp437vhodx.java:16: error: '.class' expected\n        for\
    \ (String char : string.toCharArray()) {\n                         ^\n/tmp/tmp437vhodx.java:16:\
    \ error: ';' expected\n        for (String char : string.toCharArray()) {\n  \
    \                                             ^\n/tmp/tmp437vhodx.java:18: error:\
    \ '.class' expected\n                shortest.add(char);\n                   \
    \              ^\n/tmp/tmp437vhodx.java:19: error: '.class' expected\n       \
    \         result.add(char);\n                               ^\n/tmp/tmp437vhodx.java:20:\
    \ error: class expected\n            } else if (char.equals(shortest.get(0)))\
    \ {\n                            ^\n/tmp/tmp437vhodx.java:20: error: ')' expected\n\
    \            } else if (char.equals(shortest.get(0))) {\n                    \
    \              ^\n/tmp/tmp437vhodx.java:20: error: ';' expected\n            }\
    \ else if (char.equals(shortest.get(0))) {\n                                 \
    \                  ^\n/tmp/tmp437vhodx.java:21: error: '.class' expected\n   \
    \             result.add(char);\n                               ^\n/tmp/tmp437vhodx.java:22:\
    \ error: class expected\n            } else if (char.equals(longest.get(shortest.size()\
    \ - 1))) {\n                            ^\n/tmp/tmp437vhodx.java:22: error: ')'\
    \ expected\n            } else if (char.equals(longest.get(shortest.size() - 1)))\
    \ {\n                                  ^\n/tmp/tmp437vhodx.java:22: error: ';'\
    \ expected\n            } else if (char.equals(longest.get(shortest.size() - 1)))\
    \ {\n                                                                    ^\n/tmp/tmp437vhodx.java:22:\
    \ error: 'else' without 'if'\n            } else if (char.equals(longest.get(shortest.size()\
    \ - 1))) {\n              ^\n/tmp/tmp437vhodx.java:23: error: '.class' expected\n\
    \                longest.add(char);\n                                ^\n/tmp/"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string.length() <= 1) return new ArrayList<>();\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        ArrayList<String> prefix = new ArrayList<>();\n\
    \        prefix.add(string);\n        while (!prefix.isEmpty()) {\n          \
    \  String prefix = prefix.remove(0);\n            if (prefix.length() <= 1) continue;\n\
    \            result.add(prefix);\n            prefix.remove(0);\n            String\
    \ tail = prefix.get(1);\n            prefix.remove(1);\n            prefix.add(tail);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3vp2s96w.java:18: error: variable prefix is already defined in\
    \ method allPrefixes(String)\n            String prefix = prefix.remove(0);\n\
    \                   ^\n/tmp/tmp3vp2s96w.java:18: error: cannot find symbol\n \
    \           String prefix = prefix.remove(0);\n                              \
    \    ^\n  symbol:   method remove(int)\n  location: variable prefix of type String\n\
    /tmp/tmp3vp2s96w.java:21: error: cannot find symbol\n            prefix.remove(0);\n\
    \                  ^\n  symbol:   method remove(int)\n  location: variable prefix\
    \ of type String\n/tmp/tmp3vp2s96w.java:22: error: cannot find symbol\n      \
    \      String tail = prefix.get(1);\n                                ^\n  symbol:\
    \   method get(int)\n  location: variable prefix of type String\n/tmp/tmp3vp2s96w.java:23:\
    \ error: cannot find symbol\n            prefix.remove(1);\n                 \
    \ ^\n  symbol:   method remove(int)\n  location: variable prefix of type String\n\
    /tmp/tmp3vp2s96w.java:24: error: cannot find symbol\n            prefix.add(tail);\n\
    \                  ^\n  symbol:   method add(String)\n  location: variable prefix\
    \ of type String\n6 errors\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int len = string.length();\n  \
    \      if (len == 0) {\n            return prefixes;\n        }\n        // Recursively\
    \ add prefix to list from first character of string\n        prefixes.add(string.substring(0,\
    \ 1));\n        int i = 1;\n        while (i <= len) {\n            prefixes.addAll(allPrefixes(string.substring(1,\
    \ len)));\n            i++;\n        }\n        return prefixes;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpei2e88vd.java:29)\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int shortest = 0;\n        int\
    \ longest = 0;\n        int index = 0;\n        while (index < string.length())\
    \ {\n            if (string.charAt(index) == string.charAt(shortest)) {\n    \
    \            prefixes.add(string.substring(0, index));\n                longest\
    \ = index;\n                index++;\n            } else if (string.charAt(index)\
    \ > string.charAt(shortest)) {\n                shortest++;\n            } else\
    \ {\n                index++;\n            }\n        }\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3t_okpvt.java:32)\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ stream(string)\n            .collect(Collectors.toList())\n            .stream()\n\
    \            .map(String::toUpperCase)\n            .map(str -> str.substring(0,\
    \ 1))\n            .collect(Collectors.toList());\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6ymlv2eq.java:13: error: cannot find symbol\n        return stream(string)\n\
    \               ^\n  symbol:   method stream(String)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        Queue<String> queue = new LinkedList<>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            queue.add(string.substring(0,\
    \ i));\n        }\n        while (!queue.isEmpty()) {\n            String prefix\
    \ = queue.poll();\n            if (prefix.length() > 0) {\n                result.add(prefix);\n\
    \            }\n            for (int i = 1; i < prefix.length(); i++) {\n    \
    \            String candidate = prefix.substring(0, i) + prefix.substring(i +\
    \ 1, prefix.length());\n                if (string.startsWith(candidate)) {\n\
    \                    queue.add(candidate);\n                }\n            }\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnr7ey6bq.java:34)\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n\n        for (String prefix: allPrefixesHelper(string,\
    \ prefixes)) {\n            prefixes.add(prefix);\n        }\n\n        return\
    \ prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5na081jf.java:15: error: cannot find symbol\n        for (String\
    \ prefix: allPrefixesHelper(string, prefixes)) {\n                           \
    \ ^\n  symbol:   method allPrefixesHelper(String,ArrayList<String>)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string.equals(\"\")) {\n            return null;\n        }\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for(int i=0;i<string.length();i++)\
    \ {\n            prefixes.add(string.substring(0, i));\n        }\n        return\
    \ prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.allPrefixes(String)\"\
    \ is null\n\tat Problem.main(tmpgde9rlgp.java:23)\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ string.chars().mapToObj(i -> String.valueOf(i)).map(x -> x.substring(0, x)).collect(Collectors.toList());\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo2ujl3rd.java:13: error: incompatible types: String cannot be converted\
    \ to int\n        return string.chars().mapToObj(i -> String.valueOf(i)).map(x\
    \ -> x.substring(0, x)).collect(Collectors.toList());\n                      \
    \                                                                 ^\n/tmp/tmpo2ujl3rd.java:13:\
    \ error: incompatible types: inference variable R has incompatible bounds\n  \
    \      return string.chars().mapToObj(i -> String.valueOf(i)).map(x -> x.substring(0,\
    \ x)).collect(Collectors.toList());\n                                        \
    \                                                          ^\n    equality constraints:\
    \ List<T#2>\n    lower bounds: ArrayList<String>,Object\n  where R,A,T#1,T#2 are\
    \ type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    T#1 extends Object declared in interface Stream\n    T#2\
    \ extends Object declared in method <T#2>toList()\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Find shortest prefix and longest prefix\n        String shortest = string.substring(0,\
    \ Math.min(string.length(), 5));\n        String longest = string.substring(0,\
    \ Math.min(string.length(), string.length()));\n\n        // For every character\
    \ in shortest prefix from beginning to end\n        for (int i = 0; i < shortest.length();\
    \ i++) {\n            // Add that character to the longest prefix\n          \
    \  longest = longest + shortest.charAt(i);\n\n            // If we have reached\
    \ the end of the longest prefix, add it to the list\n            if (i == shortest.length()\
    \ - 1) {\n                ArrayList<String> result = new ArrayList<>();\n    \
    \            result.add(longest);\n                return result;\n          \
    \  }\n        }\n        // If we reach this point then we didn't have a prefix\n\
    \        return null;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.allPrefixes(String)\"\
    \ is null\n\tat Problem.main(tmpa_lhtemc.java:33)\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Initialize list of prefixes\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        // Add prefixes of length 0 to the list\n        prefixes.add(\"a\");\n\
    \        // Add string as prefix to list of all prefixes\n        prefixes.add(string);\n\
    \        // Initialize current length of string\n        int string_length = string.length();\n\
    \        // While there are still characters in the string\n        while (string_length\
    \ != 0) {\n            // Add current character to the end of list of all prefixes\n\
    \            prefixes.add(string.substring(0, string_length));\n            //\
    \ Remove current character from string\n            string = string.substring(string_length);\n\
    \            // Increment length of string\n            string_length = string.length();\n\
    \        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc985zguq.java:33)\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.isEmpty()) {\n            return new ArrayList<>();\n\
    \        }\n\n        // Get length\n        int len = string.length();\n    \
    \    ArrayList<String> prefixes = new ArrayList<>();\n        for (int i = 0;\
    \ i < len; i++) {\n            prefixes.add(string.substring(0, i));\n       \
    \ }\n\n        // Add prefix from longest to shortest\n        for (int i = 0;\
    \ i < len; i++) {\n            prefixes.add(string.substring(0, len - (i + 1)));\n\
    \        }\n\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphbj2pwgu.java:33)\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        ArrayList<String> prefixes = new\
    \ ArrayList<String>();\n        for (String prefix : allPrefixes(string, prefixes))\
    \ {\n            result.add(prefix);\n        }\n        return result;\n}\n \
    \   public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpasjp98ht.java:15: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        for (String prefix : allPrefixes(string,\
    \ prefixes)) {\n                             ^\n  required: String\n  found: \
    \   String,ArrayList<String>\n  reason: actual and formal argument lists differ\
    \ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        Arrays.stream(string.length()).forEach(i\
    \ -> {\n            result.add(string.substring(0, i));\n        });\n       \
    \ return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9qdfcbea.java:14: error: no suitable method found for stream(int)\n\
    \        Arrays.stream(string.length()).forEach(i -> {\n              ^\n    method\
    \ Arrays.<T#1>stream(T#1[]) is not applicable\n      (cannot infer type-variable(s)\
    \ T#1\n        (argument mismatch; int cannot be converted to T#1[]))\n    method\
    \ Arrays.<T#2>stream(T#2[],int,int) is not applicable\n      (cannot infer type-variable(s)\
    \ T#2\n        (actual and formal argument lists differ in length))\n    method\
    \ Arrays.stream(int[]) is not applicable\n      (argument mismatch; int cannot\
    \ be converted to int[])\n    method Arrays.stream(long[]) is not applicable\n\
    \      (argument mismatch; int cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; int cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.length() < 2)\n            return new ArrayList<String>();\n\
    \n        // Initialize prefix and suffix\n        String prefix = \"\", suffix\
    \ = \"\";\n        ArrayList<String> result = new ArrayList<String>();\n\n   \
    \     // Split input string and add suffix to prefix\n        String[] parts =\
    \ string.split(\"\");\n        prefix = parts[0] + (parts.length > 1 ? parts[1]\
    \ : \"\");\n        suffix = parts[parts.length-1];\n\n        // For each prefix\
    \ and suffix in the list\n        for (String prefix : allPrefixes(prefix))\n\
    \            for (String suffix : allPrefixes(suffix))\n                result.add(prefix\
    \ + \"_\" + suffix);\n\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgxf0vmb_.java:26: error: variable prefix is already defined in\
    \ method allPrefixes(String)\n        for (String prefix : allPrefixes(prefix))\n\
    \                    ^\n/tmp/tmpgxf0vmb_.java:27: error: variable suffix is already\
    \ defined in method allPrefixes(String)\n            for (String suffix : allPrefixes(suffix))\n\
    \                        ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (String prefix : allPrefixesImpl(\"\
    \", string))\n            prefixes.add(prefix);\n        return prefixes;\n}\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpne5elied.java:14: error: cannot find symbol\n        for (String\
    \ prefix : allPrefixesImpl(\"\", string))\n                             ^\n  symbol:\
    \   method allPrefixesImpl(String,String)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        ArrayList<String> prefix = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefix.add(string.substring(0,\
    \ i));\n            if (string.length() <= prefix.length()) {\n              \
    \  list.addAll(prefix);\n                prefix.clear();\n            } else {\n\
    \                prefix.remove(0);\n            }\n        }\n        return list;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk08lwf64.java:17: error: cannot find symbol\n            if (string.length()\
    \ <= prefix.length()) {\n                                         ^\n  symbol:\
    \   method length()\n  location: variable prefix of type ArrayList<String>\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        List<String>\
    \ list = new ArrayList<>();\n        Arrays.stream(string.toCharArray()).map(c\
    \ -> String.valueOf(c)).forEach(s -> list.add(s));\n        return list;\n}\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmiievwna.java:14: error: no suitable method found for stream(char[])\n\
    \        Arrays.stream(string.toCharArray()).map(c -> String.valueOf(c)).forEach(s\
    \ -> list.add(s));\n              ^\n    method Arrays.<T#1>stream(T#1[]) is not\
    \ applicable\n      (inference variable T#1 has incompatible bounds\n        equality\
    \ constraints: char\n        lower bounds: Object)\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; char[] cannot be converted to int[])\n\
    \    method Arrays.stream(long[]) is not applicable\n      (argument mismatch;\
    \ char[] cannot be converted to long[])\n    method Arrays.stream(double[]) is\
    \ not applicable\n      (argument mismatch; char[] cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    /tmp/tmpmiievwna.java:15: error: incompatible types: List<String> cannot be converted\
    \ to ArrayList<String>\n        return list;\n               ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        String\
    \ prefix = \"\";\n        String suffix = \"\";\n        int longestLength = 0;\n\
    \        ArrayList<String> prefixes = new ArrayList<>();\n\n        for (int i\
    \ = 0; i < string.length(); i++) {\n            prefix = prefix + string.charAt(i);\n\
    \            if (string.length() > longestLength) {\n                longestLength\
    \ = string.length();\n            }\n        }\n\n        for (int i = longestLength\
    \ - 1; i >= 0; i--) {\n            suffix = suffix + string.charAt(i);\n     \
    \       prefixes.add(prefix);\n            prefix = suffix;\n        }\n\n   \
    \     return prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi718hntj.java:35)\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        prefixes.add(\"\");\n        int len\
    \ = string.length();\n        for (int i = 0; i < len; ++i) {\n            String\
    \ prefix = string.substring(0, i);\n            if (!prefixes.contains(prefix))\
    \ {\n                prefixes.add(prefix);\n            }\n        }\n       \
    \ return prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k3kpfma.java:25)\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Create list of prefix sizes\n        ArrayList<Integer> sizes = new ArrayList<>();\n\
    \        for (int i=0; i<string.length(); i++) {\n            sizes.add(string.length()\
    \ - i);\n        }\n\n        // Find minimum prefix size\n        int minSize\
    \ = sizes.stream().min().getAsInt();\n        ArrayList<String> prefixes = new\
    \ ArrayList<>();\n\n        // Add prefix to prefix list until input string length\
    \ reaches minimum prefix size\n        for (int i=minSize; i<string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i));\n        }\n\n   \
    \     return prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrifw6ek.java:20: error: method min in interface Stream<T> cannot\
    \ be applied to given types;\n        int minSize = sizes.stream().min().getAsInt();\n\
    \                                    ^\n  required: Comparator<? super Integer>\n\
    \  found:    no arguments\n  reason: actual and formal argument lists differ in\
    \ length\n  where T is a type-variable:\n    T extends Object declared in interface\
    \ Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        prefixes.add(string);\n        allPrefixes(string,\
    \ 0, prefixes);\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuwngg80r.java:15: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, 0, prefixes);\n    \
    \    ^\n  required: String\n  found:    String,int,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ write your code here\n        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for(char c: string.toCharArray()) {\n            prefixes.add(\"\");\n\
    \            prefixes.add(String.valueOf(c));\n        }\n        Collections.sort(prefixes);\n\
    \        Collections.reverse(prefixes);\n        return prefixes;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmij5rc87.java:25)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ len = string.length();\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i = 0; i < len; i++) {\n            for(int j = i+1; j < len;\
    \ j++) {\n                String prefix = string.substring(i, j);\n          \
    \      if(result.contains(prefix)) {\n                    continue;\n        \
    \        }\n                result.add(prefix);\n            }\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3nllteap.java:28)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Complete the implementation here\n        ArrayList<String> result = new ArrayList<>();\n\
    \        \n        \n        \n        \n        \n        \n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw3akna8q.java:25)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        prefixes.add(\"\");\n        for (int\
    \ i = 0; i <= string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptepzgwls.java:21)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        prefixes.add(\"\");\n        for (char\
    \ c : string.toCharArray()) {\n            prefixes.add(prefixes.get(0) + c);\n\
    \        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfx00jdq8.java:21)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        allPrefixes(string, new ArrayList<>(),\
    \ result);\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpso2yn5uj.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, new ArrayList<>(), result);\n\
    \        ^\n  required: String\n  found:    String,ArrayList<Object>,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        Collection<Character> stringChars = string.chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toCollection(ArrayList::new));\n        LinkedList<Character>\
    \ chars = new LinkedList<>();\n        for (char c : stringChars) {\n        \
    \    chars.add(c);\n        }\n        chars.removeFirst();\n        while (!chars.isEmpty())\
    \ {\n            String prefix = \"\";\n            int count = 0;\n         \
    \   for (Character c : chars) {\n                prefix += c;\n              \
    \  count++;\n            }\n            result.add(prefix);\n            chars.remove(prefix);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.NoSuchElementException\n\tat java.base/java.util.LinkedList.removeFirst(LinkedList.java:274)\n\
    \tat Problem.allPrefixes(tmpuaqgxrit.java:19)\n\tat Problem.main(tmpuaqgxrit.java:33)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        List<String> prefixes = new ArrayList<>();\n\
    \        List<String> currentPrefix = new ArrayList<>();\n        result.add(string);\n\
    \        // Add every prefix to result if they start the same way as the input\
    \ string\n        while (!prefixes.isEmpty()) {\n            String currentPrefix\
    \ = prefixes.remove(0);\n            if (currentPrefix.equals(string)) {\n   \
    \             result.add(currentPrefix);\n            }\n            currentPrefix.trim();\n\
    \            for (int i = 0; i < currentPrefix.length(); i++) {\n            \
    \    String prefix = currentPrefix.substring(0, i);\n                if (string.length()\
    \ > prefix.length()) {\n                    // Add prefix to result if string\
    \ is longer than it\n                    result.add(prefix);\n               \
    \ }\n                currentPrefix = prefix;\n            }\n        }\n     \
    \   return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc5uo9ruz.java:19: error: variable currentPrefix is already defined\
    \ in method allPrefixes(String)\n            String currentPrefix = prefixes.remove(0);\n\
    \                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        char[] chars = string.toCharArray();\n\
    \        if (chars.length < 2) return prefixes;\n        // Start with first character\n\
    \        prefixes.add(chars[0]);\n        // Now recursively apply the function\
    \ to all remaining characters\n        prefixes.addAll(allPrefixes(new String(chars,\
    \ 1, chars.length)));\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_tonjj17.java:17: error: incompatible types: char cannot be converted\
    \ to String\n        prefixes.add(chars[0]);\n                          ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        int n = string.length();\n        for\
    \ (int i = 0; i < n; ++i) {\n            if (i == 0)\n                prefixes.add(string.charAt(i));\n\
    \            else if (string.charAt(i) != string.charAt(i - 1))\n            \
    \    prefixes.add(string.charAt(i));\n        }\n        return prefixes;\n}\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpix1c5a14.java:17: error: incompatible types: char cannot be converted\
    \ to String\n                prefixes.add(string.charAt(i));\n               \
    \                           ^\n/tmp/tmpix1c5a14.java:19: error: incompatible types:\
    \ char cannot be converted to String\n                prefixes.add(string.charAt(i));\n\
    \                                          ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        // Iterate through all possible prefixes\n\
    \        for (int i = 0; i < string.length(); ++i) {\n            // Iterate through\
    \ all possible suffixes of input string\n            for (int j = i + 1; j <=\
    \ string.length(); j++) {\n                String prefix = string.substring(0,\
    \ i);\n                String suffix = string.substring(j);\n                //\
    \ Check if prefix is a prefix of suffix\n                if (prefix.endsWith(suffix))\
    \ {\n                    // Add prefix to result list\n                    result.add(prefix);\n\
    \                }\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi3wzhz4n.java:31)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        StringBuilder builder = new StringBuilder();\n\
    \        builder.append(string);\n        while (builder.length() > 0) {\n   \
    \         String prefix = builder.substring(0, builder.length() - 1);\n      \
    \      result.add(prefix);\n            builder = new StringBuilder(prefix);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1rgze43a.java:25)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<>();\n        for (String prefix: allPrefixes(string, string.length()))\
    \ list.add(prefix);\n        return list;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyi2a2ua.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        for (String prefix: allPrefixes(string,\
    \ string.length())) list.add(prefix);\n                            ^\n  required:\
    \ String\n  found:    String,int\n  reason: actual and formal argument lists differ\
    \ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ res = new ArrayList<String>();\n        if (string.length() == 1) {\n      \
    \      res.add(string);\n            return res;\n        }\n\n        ArrayList<String>\
    \ prefixes = allPrefixes(string.substring(1));\n        if (prefixes.isEmpty())\
    \ {\n            res.add(string.substring(1));\n        }\n        for (String\
    \ prefix : prefixes) {\n            res.add(prefix + string.charAt(0));\n    \
    \    }\n        return res;\n}\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 1, end 0, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat java.base/java.lang.String.substring(String.java:2680)\n\
    \tat Problem.allPrefixes(tmpp_dajf0p.java:19)\n\tat Problem.main(tmpp_dajf0p.java:29)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            String prefix = string.substring(0, i);\n            prefixes.add(prefix);\n\
    \            allPrefixes(prefix, prefixes);\n        }\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw_tb96xe.java:17: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n            allPrefixes(prefix, prefixes);\n   \
    \         ^\n  required: String\n  found:    String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ Arrays.stream(string.split(\"\"))\n                .map(e -> string.substring(0,\
    \ e))\n                .map(e -> Arrays.asList(e))\n                .flatMap(List::stream)\n\
    \                .collect(Collectors.toList());\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2g2mlvhk.java:14: error: incompatible types: String cannot be converted\
    \ to int\n                .map(e -> string.substring(0, e))\n                \
    \                              ^\n/tmp/tmp2g2mlvhk.java:17: error: incompatible\
    \ types: inference variable R has incompatible bounds\n                .collect(Collectors.toList());\n\
    \                        ^\n    equality constraints: List<T#2>\n    lower bounds:\
    \ ArrayList<String>,Object\n  where R,A,T#1,T#2 are type-variables:\n    R extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    A extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    T#1\
    \ extends Object declared in interface Stream\n    T#2 extends Object declared\
    \ in method <T#2>toList()\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int length = string.length();\n\
    \        for (int i = 0; i < length; i++) {\n            String prefix = string.substring(0,\
    \ i);\n            prefixes.add(prefix);\n            string = string.substring(i\
    \ + 1);\n        }\n        prefixes.add(string);\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5tjt5em.java:24)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string.length() <= 1) return new ArrayList<String>();\n        String prefix\
    \ = \"\";\n        ArrayList<String> results = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            prefix = prefix\
    \ + string.charAt(i);\n            if (prefix.equals(string)) {\n            \
    \    results.add(prefix);\n                prefix = \"\";\n            } else\
    \ {\n                prefix = prefix + string.charAt(i);\n                results.add(prefix);\n\
    \                prefix = \"\";\n            }\n        }\n        return results;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpifjiz3gw.java:31)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.isEmpty()) return new ArrayList<>();\n\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        int lengthOfString = string.length();\n\
    \        for (int i = 0; i < lengthOfString; i++) {\n            String prefix\
    \ = string.substring(0, i);\n            result.add(prefix);\n            result.addAll(allPrefixes(prefix));\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprfsuhv96.java:26)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<>();\n        allPrefixes(list, string);\n        return\
    \ list;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe2ey132g.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(list, string);\n        ^\n\
    \  required: String\n  found:    ArrayList<String>,String\n  reason: actual and\
    \ formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        if (string.equals(\"\")) {\n        \
    \    return prefixes;\n        }\n        int longestPrefixLength = string.length();\n\
    \        int currentPrefixLength = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == string.charAt(longestPrefixLength\
    \ - 1 - i)) {\n                currentPrefixLength++;\n            } else {\n\
    \                currentPrefixLength = 1;\n            }\n            if (currentPrefixLength\
    \ >= longestPrefixLength) {\n                prefixes.add(string.substring(0,\
    \ i));\n                longestPrefixLength = i;\n            }\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuwlkqcmr.java:34)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string.length() < 3) return new ArrayList<>();\n        String first = string.substring(0,\
    \ Math.min(string.length(), 2));\n        ArrayList<String> result = new ArrayList<>(allPrefixes(first));\n\
    \        result.add(first);\n        result.add(first + first);\n        result.add(first\
    \ + first + first);\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vbz0vvu.java:23)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n\n        StringBuilder builder = new StringBuilder();\n\
    \        for(int i = string.length() - 1; i >= 0; i--)\n            builder.append(string.charAt(i));\n\
    \        builder.append(string.charAt(0));\n\n        for(int i = 0; i < builder.length();\
    \ i++)\n            list.add(builder.substring(i+1, builder.length()));\n\n  \
    \      return list;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.allPrefixes(tmpimeg0mml.java:18)\n\
    \tat Problem.main(tmpimeg0mml.java:26)\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        \n        // Recursively iterate\
    \ over input string\n        prefixes.addAll(AllPrefixes.allPrefixes(string,0));\n\
    \        \n        return prefixes;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp81zxii0z.java:16: error: cannot find symbol\n        prefixes.addAll(AllPrefixes.allPrefixes(string,0));\n\
    \                        ^\n  symbol:   variable AllPrefixes\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null) {\n            throw new NullPointerException();\n        }\n\
    \        ArrayList<String> list = new ArrayList<>();\n        int length = (int)\
    \ Math.log10(string.length());\n        for (int i = 1; i <= length; i++) {\n\
    \            list.add(\"0\" + string + \"0\");\n        }\n        return list;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa0i6mx8r.java:25)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (char c : string.toCharArray())\
    \ {\n            prefixes.add(\"\" + c);\n        }\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpklu9o94b.java:21)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Return list of all prefixes from shortest to longest of the input string\n \
    \       // >>> allPrefixes('abc')\n        // ['a', 'ab', 'abc']\n        List<String>\
    \ prefixes = new ArrayList<>();\n        // Loop through string lengths\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            // Add prefixes\
    \ from length 0 to i\n            for (int j = 0; j < i; j++) {\n            \
    \    // Add prefix from length i to string length\n                prefixes.add(string.substring(j,\
    \ i + 1));\n            }\n        }\n        // Return prefixes\n        return\
    \ prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd0kp13ka.java:26: error: incompatible types: List<String> cannot\
    \ be converted to ArrayList<String>\n        return prefixes;\n              \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null)\n            throw new NullPointerException(\"Null input\"\
    );\n\n        List<String> prefixes = new ArrayList<>();\n        for (int i =\
    \ string.length(); i >= 0; i--) {\n            String prefix = string.substring(0,\
    \ i);\n            prefixes.add(prefix);\n        }\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1_816z_q.java:21: error: incompatible types: List<String> cannot\
    \ be converted to ArrayList<String>\n        return prefixes;\n              \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        allPrefixes(string, \"\", prefixes);\n\
    \        return prefixes;\n}\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppkih4yge.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", prefixes);\n \
    \       ^\n  required: String\n  found:    String,String,ArrayList<String>\n \
    \ reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        ArrayList<String> prefix = new ArrayList<>();\n\
    \        prefix.add(\"\");\n        prefix.add(string);\n        while (!prefix.isEmpty())\
    \ {\n            String s = prefix.remove(0);\n            for (int i = 0; i <\
    \ s.length(); i++) {\n                String prefix = s.substring(0, i);\n   \
    \             result.add(prefix);\n                prefix.remove(0);\n       \
    \     }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_2yl05l.java:20: error: variable prefix is already defined in\
    \ method allPrefixes(String)\n                String prefix = s.substring(0, i);\n\
    \                       ^\n/tmp/tmpx_2yl05l.java:22: error: cannot find symbol\n\
    \                prefix.remove(0);\n                      ^\n  symbol:   method\
    \ remove(int)\n  location: variable prefix of type String\n2 errors\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ allPrefixes(string, \"\", \"\");\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp26v_ab14.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string, \"\", \"\");\n\
    \               ^\n  required: String\n  found:    String,String,String\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        prefixes.add(string);\n       \
    \ return prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1nt73476.java:18)\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Write your code here\n        if (string.isEmpty()) {\n            return new\
    \ ArrayList<String>();\n        }\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        // For each letter in the string\n        for (int i = 0; i < string.length();\
    \ i++) {\n            // For each prefix of length 1 up to and including the current\
    \ index\n            for (int j = 1; j <= i; j++) {\n                // Add the\
    \ prefix to the list\n                result.add(string.substring(0, j));\n  \
    \          }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeg3ivdg4.java:30)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ n = string.length();\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        for (int i = 0; i < n; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr5i0jp6d.java:22)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        ArrayList<String> remaining = new ArrayList<>();\n\
    \        remaining.add(string);\n        while (remaining.size() > 0) {\n    \
    \        ArrayList<String> next = new ArrayList<>(remaining);\n            String\
    \ prefix = next.remove(0);\n            prefixes.add(prefix);\n            remaining.removeAll(prefixes);\n\
    \            remaining.addAll(next.subList(0, next.size() - 1));\n        }\n\
    \        return prefixes;\n}\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: fromIndex(0)\
    \ > toIndex(-1)\n\tat java.base/java.util.AbstractList.subListRangeCheck(AbstractList.java:509)\n\
    \tat java.base/java.util.ArrayList.subList(ArrayList.java:1108)\n\tat Problem.allPrefixes(tmpbtwe_thu.java:21)\n\
    \tat Problem.main(tmpbtwe_thu.java:26)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.length() < 2) return new ArrayList<>();\n        ArrayList<String>\
    \ res = new ArrayList<>();\n        boolean isFirst = true;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.length() - 1 < i)\
    \ {\n                isFirst = false;\n            }\n            res.add(string.substring(0,\
    \ i));\n        }\n        if (isFirst)\n            res.add(\"'\");\n       \
    \ return res;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwso0m5in.java:28)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Pre-allocate array\n        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \n        // Set prefix length to 0 to begin with\n        int prefix_length =\
    \ 0;\n\n        // Iterate over all characters in input string\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            // If character in string at\
    \ index is the same as the current prefix length\n            if (string.charAt(i)\
    \ == string.charAt(prefix_length)) {\n                // Increment the prefix\
    \ length\n                prefix_length++;\n            } else {\n           \
    \     // If prefix length has reached length of string\n                // Add\
    \ the prefix length to the array and clear the prefix length\n               \
    \ prefixes.add(string.substring(prefix_length, i));\n                prefix_length\
    \ = i;\n            }\n        }\n        // Add the prefix length to the array\
    \ and clear the prefix length\n        prefixes.add(string.substring(prefix_length,\
    \ string.length()));\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpld2h5ojo.java:37)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        allPrefixesImpl(string, new HashSet<String>(),\
    \ prefixes);\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdu8dxeq6.java:14: error: cannot find symbol\n        allPrefixesImpl(string,\
    \ new HashSet<String>(), prefixes);\n        ^\n  symbol:   method allPrefixesImpl(String,HashSet<String>,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        ArrayList<String> newPrefixes = new ArrayList<>();\n\
    \        for(int i = 0; i < string.length(); i++) {\n            newPrefixes.add(string.substring(0,\
    \ i));\n        }\n        // Add all prefixes to prefixes\n        for(int i\
    \ = 0; i < newPrefixes.size(); i++) {\n            prefixes.add(newPrefixes.get(i));\n\
    \        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmiu_cl9x.java:26)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        if (string.length() == 0) {\n       \
    \     return prefixes;\n        }\n        prefixes.add(string);\n        return\
    \ prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpre36ygag.java:22)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        for (char c : string.toCharArray())\n\
    \            prefixes.addAll(allPrefixes(new StringBuilder().append(c)));\n  \
    \      prefixes.add(string);\n        return prefixes;\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphao3lrzn.java:15: error: incompatible types: StringBuilder cannot\
    \ be converted to String\n            prefixes.addAll(allPrefixes(new StringBuilder().append(c)));\n\
    \                                                                  ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.equals(\"\")) {\n            return new ArrayList<String>();\n\
    \        }\n        ArrayList<String> list = new ArrayList<String>();\n      \
    \  boolean found = false;\n        char[] chars = string.toCharArray();\n    \
    \    for (int i = chars.length - 1; i >= 0; i--) {\n            if (found == true)\
    \ {\n                list.add(string.substring(0, i));\n            }\n      \
    \      if (chars[i] == ' ') {\n                found = true;\n            }\n\
    \        }\n        return list;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsyw4ki_q.java:31)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n\n        if (string.length() < 2) {\n      \
    \      return prefixes;\n        }\n\n        char[] charArray = string.toCharArray();\n\
    \        for (int i = 1; i < charArray.length; i++) {\n            prefixes.add(\"\
    \" + charArray[i]);\n        }\n\n        return prefixes;\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6q6l6ap.java:28)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ O(N) time, O(1) space\n        ArrayList<String> result = new ArrayList<>();\n\
    \        Queue<String> q = new LinkedList<>();\n        q.offer(string);\n   \
    \     while (!q.isEmpty()) {\n            String str = q.poll();\n           \
    \ for (int i = 0; i < str.length(); i++) {\n                String prefix = str.substring(0,\
    \ i);\n                if (!result.contains(prefix)) {\n                    result.add(prefix);\n\
    \                    q.offer(prefix + str.substring(i));\n                }\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvihmy73z.java:31)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        ArrayList<String> result = new\
    \ ArrayList<String>();\n        for (String prefix : prefix_gen(string))\n   \
    \         if (!prefixes.contains(prefix))\n                prefixes.add(prefix);\n\
    \        return prefixes;\n}\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvznuwvtu.java:15: error: cannot find symbol\n        for (String\
    \ prefix : prefix_gen(string))\n                             ^\n  symbol:   method\
    \ prefix_gen(String)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        int size = string.length();\n   \
    \     for(int i = 1; i <= size; i++) {\n            String prefix = string.substring(0,\
    \ i);\n            result.add(prefix);\n        }\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string.isEmpty()) {\n            return new ArrayList<>();\n        }\n   \
    \     ArrayList<String> prefixes = new ArrayList<>();\n        // Iterate over\
    \ input string starting from left\n        // Start with empty prefixes list\n\
    \        allPrefixesHelper(\"\", string, prefixes);\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb5ni79_j.java:19: error: cannot find symbol\n        allPrefixesHelper(\"\
    \", string, prefixes);\n        ^\n  symbol:   method allPrefixesHelper(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        char[] chars = string.toCharArray();\n\
    \        Arrays.sort(chars);\n        for(char c : chars) {\n            String\
    \ prefix = new String(Arrays.copyOf(chars, chars.length - 1));\n            result.add(prefix);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkqse3a19.java:24)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n\n        StringBuilder prefix = new StringBuilder();\n\
    \n        for (int i = 0; i < string.length(); i++) {\n            prefix.append(string.charAt(i));\n\
    \            if (prefix.length() > 0 && prefix.length() >= string.length()) {\n\
    \                prefixes.add(prefix.toString());\n                prefix.setLength(0);\n\
    \            }\n        }\n\n        return prefixes;\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6k0gi51y.java:29)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        List<String> strings = Arrays.asList(string.split(\"\
    \"));\n        int longest = strings.get(0).getBytes().length;\n        for (String\
    \ prefix : strings.subList(1, strings.size())) {\n            if (prefix.length()\
    \ > longest)\n                longest = prefix.length();\n            prefixes.add(prefix);\n\
    \        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb880xzzn.java:25)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        prefixes.add(\"\");\n        for (int\
    \ i = 0; i <= string.length(); i++) {\n            prefixes.addAll(prefixes(string,\
    \ i, prefixes));\n        }\n        return prefixes;\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu3gq9rdc.java:16: error: cannot find symbol\n            prefixes.addAll(prefixes(string,\
    \ i, prefixes));\n                            ^\n  symbol:   method prefixes(String,int,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n\n        ArrayList<String> strings = new ArrayList<>();\n\
    \        strings.add(string);\n        while (true) {\n            ArrayList<String>\
    \ newStrings = new ArrayList<>();\n            String longest = Collections.max(strings);\n\
    \            for (String s : strings) {\n                if (s.length() > longest.length())\n\
    \                    newStrings.add(s);\n                else\n              \
    \      break;\n            }\n            if (newStrings.isEmpty())\n        \
    \        return result;\n            strings = newStrings;\n            for (int\
    \ i = 0; i < strings.size(); i++) {\n                String s = strings.get(i);\n\
    \                for (int j = 0; j < s.length(); j++) {\n                    String\
    \ t = s.substring(0, j);\n                    if (result.size() <= longest.length())\n\
    \                        result.add(t);\n                    else\n          \
    \              break;\n                }\n            }\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9i8y436_.java:43)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        String prefix = \"\";\n        for (char\
    \ c : string.toCharArray()) {\n            String s = new String(new char[] {c});\n\
    \            if (s.equals(\"\")) {\n                prefixes.add(prefix);\n  \
    \              prefix = \"\";\n                continue;\n            }\n    \
    \        prefix += s;\n            prefixes.add(prefix);\n        }\n        return\
    \ prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        char[] chars = string.toCharArray();\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i=1; i<chars.length;\
    \ i++) {\n            sb.append(chars[i]);\n            prefixes.add(sb.toString());\n\
    \            sb.setLength(0);\n        }\n        return prefixes;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkzt0no2j.java:25)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Use a list because we'll add multiple items to it\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        // Initialize with empty string\n\
    \        prefixes.add(\"\");\n        // Keep adding to prefix until string is\
    \ empty\n        while(!string.isEmpty()) {\n            // Get prefix from string\
    \ until you get empty string\n            String prefix = string.substring(0,\
    \ Math.min(string.length(), string.length()));\n            // Add prefix to list\
    \ of all prefixes\n            prefixes.add(prefix);\n            // Remove prefix\
    \ from string\n            string = string.substring(prefix.length());\n     \
    \   }\n        return prefixes;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0umkyuk0.java:29)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        if (string == null || string.isEmpty())\
    \ return result;\n        if (string.length() == 1) result.add(string);\n    \
    \    for (String prefix : allPrefixes(string.substring(0, string.length() - 1)))\
    \ {\n            result.add(prefix);\n        }\n        return result;\n}\n \
    \   public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22maucke.java:23)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string.length() == 0) return new ArrayList<>();\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        StringBuilder builder = new StringBuilder(string);\n        prefixes.add(builder.toString());\n\
    \        while (prefixes.size() <= string.length()) {\n            String current\
    \ = builder.toString();\n            String prefix = builder.substring(0, builder.length()\
    \ - current.length());\n            if (prefixes.contains(prefix)) {\n       \
    \         builder.deleteCharAt(builder.length() - current.length());\n       \
    \     } else {\n                prefixes.add(prefix);\n            }\n       \
    \ }\n        result.addAll(prefixes);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ index 0, length 0\n\tat java.base/java.lang.String.checkIndex(String.java:4563)\n\
    \tat java.base/java.lang.AbstractStringBuilder.deleteCharAt(AbstractStringBuilder.java:970)\n\
    \tat java.base/java.lang.StringBuilder.deleteCharAt(StringBuilder.java:298)\n\t\
    at Problem.allPrefixes(tmpylbtom01.java:22)\n\tat Problem.main(tmpylbtom01.java:32)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        for (String prefix : allPrefixes0(string))\
    \ {\n            result.add(prefix);\n        }\n        return result;\n}\n \
    \   public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphtuawsrs.java:14: error: cannot find symbol\n        for (String\
    \ prefix : allPrefixes0(string)) {\n                             ^\n  symbol:\
    \   method allPrefixes0(String)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ Arrays.asList(string.split(\"\"));\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg8qovz23.java:13: error: incompatible types: no instance(s) of\
    \ type variable(s) T exist so that List<T> conforms to ArrayList<String>\n   \
    \     return Arrays.asList(string.split(\"\"));\n                            ^\n\
    \  where T is a type-variable:\n    T extends Object declared in method <T>asList(T...)\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        if (string == null || string.length() <\
    \ 2) return result;\n        List<String> prefix = new ArrayList<>();\n      \
    \  prefix.add(string);\n        result.add(string);\n        while (prefix.size()\
    \ < string.length()) {\n            prefix.add(prefix.remove(prefix.size() - 1)\
    \ + prefix.remove(prefix.size() - 2));\n            result.add(prefix.get(prefix.size()\
    \ - 1));\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ -2 out of bounds for length 0\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.remove(ArrayList.java:504)\n\
    \tat Problem.allPrefixes(tmp9ms2k8js.java:19)\n\tat Problem.main(tmp9ms2k8js.java:26)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        allPrefixes(string, result, new ArrayList<String>(),\
    \ string);\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyejkbduw.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, result, new ArrayList<String>(),\
    \ string);\n        ^\n  required: String\n  found:    String,ArrayList<String>,ArrayList<String>,String\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        List<String> s = Arrays.asList(string.split(\"\
    \"));\n        Arrays.sort(s);\n        prefixes.add(\"\");\n        for (String\
    \ string : s) {\n            for (String prefix : allPrefixes(prefix + string))\
    \ {\n                prefixes.add(prefix);\n            }\n        }\n       \
    \ return prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5hzf119y.java:15: error: no suitable method found for sort(List<String>)\n\
    \        Arrays.sort(s);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; List<String> cannot be converted to int[])\n\
    \    method Arrays.sort(long[]) is not applicable\n      (argument mismatch; List<String>\
    \ cannot be converted to long[])\n    method Arrays.sort(short[]) is not applicable\n\
    \      (argument mismatch; List<String> cannot be converted to short[])\n    method\
    \ Arrays.sort(char[]) is not applicable\n      (argument mismatch; List<String>\
    \ cannot be converted to char[])\n    method Arrays.sort(byte[]) is not applicable\n\
    \      (argument mismatch; List<String> cannot be converted to byte[])\n    method\
    \ Arrays.sort(float[]) is not applicable\n      (argument mismatch; List<String>\
    \ cannot be converted to float[])\n    method Arrays.sort(double[]) is not applicable\n\
    \      (argument mismatch; List<String> cannot be converted to double[])\n   \
    \ method Arrays.sort(Object[]) is not applicable\n      (argument mismatch; List<String>\
    \ cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmp5hzf119y.java:17: error: variable string is already defined\
    \ in method allPrefixes(String)\n        for (String string : s) {\n         \
    \           ^\n/tmp/tmp5hzf119y.java:18: error: cannot find symbol\n         \
    \   for (String prefix : allPrefixes(prefix + string)) {\n                   \
    \                          ^\n  symbol:   variable prefix\n  location: class Problem\n\
    Note: Some messag"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        String[] characters = string.split(\"\
    \");\n        prefixes(characters, 0, result);\n        return result;\n}\n  \
    \  public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5kn513p6.java:15: error: cannot find symbol\n        prefixes(characters,\
    \ 0, result);\n        ^\n  symbol:   method prefixes(String[],int,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        allPrefixesHelper(string, \"\", result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3_maq5zi.java:14: error: cannot find symbol\n        allPrefixesHelper(string,\
    \ \"\", result);\n        ^\n  symbol:   method allPrefixesHelper(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Create new array list to store the prefixes in\n        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n\n        // Iterate through each letter in the\
    \ string\n        for (char c : string.toCharArray()) {\n            // If the\
    \ letter is not a space (for example, if we are working with the letter c), add\
    \ it to the list\n            if (c != ' ') {\n                prefixes.add(String.valueOf(c));\n\
    \            }\n        }\n\n        // Return the prefixes\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2orcvjbl.java:29)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        // Initialize result with empty string\n\
    \        prefixes.add(\"\");\n        // Iterate through each character in the\
    \ string\n        for (int i=0; i<string.length(); i++) {\n            // For\
    \ each character in the string, iterate through each prefix of this character\n\
    \            for (String prefix : prefixes) {\n                // If a prefix\
    \ for the current character is the longest, append it to our result\n        \
    \        if (prefix.length() <= string.length() && prefix.length() < string.length())\
    \ \n                    prefixes.add(prefix + string.charAt(i));\n           \
    \ }\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpccb27p35.java:28)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ max = Integer.MIN_VALUE;\n        ArrayList<String> ret = new ArrayList<String>();\n\
    \n        if (string.equals(\"\")) return ret;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            for (int j = 0; j < string.length(); j++) {\n          \
    \      if (string.length() >= i + j + 1) {\n                    if (i == j) continue;\n\
    \                    String prefix = string.substring(0, i);\n               \
    \     String suffix = string.substring(i, j);\n                    String combined\
    \ = prefix + suffix;\n                    String reversed = new StringBuilder(combined).reverse().toString();\n\
    \                    if (Integer.parseInt(reversed) > max) {\n               \
    \         max = Integer.parseInt(reversed);\n                        ret.clear();\n\
    \                        ret.add(prefix);\n                    }\n           \
    \         else if (Integer.parseInt(reversed) == max) {\n                    \
    \    ret.add(prefix);\n                    }\n                }\n            }\n\
    \        }\n        return ret;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"a\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.allPrefixes(tmpz4uhh76u.java:25)\n\tat Problem.main(tmpz4uhh76u.java:40)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ The first array will be returned immediately\n        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        // Loop through the string from beginning\
    \ to end\n        for (int i = 0; i <= string.length(); i++) {\n            //\
    \ Prepend the ith element to the list of prefixes\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0gj744b.java:23)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        for(String prefix: allPrefixes(\"\"\
    , string))\n            list.add(prefix);\n        return list;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqv5ye8jl.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        for(String prefix: allPrefixes(\"\", string))\n\
    \                           ^\n  required: String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null)\n            throw new NullPointerException(\"String is null\"\
    );\n        ArrayList<String> result = new ArrayList<>();\n        for (String\
    \ prefix : all_prefixes(string, 0))\n            result.add(prefix);\n       \
    \ return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyujh3w4c.java:16: error: cannot find symbol\n        for (String\
    \ prefix : all_prefixes(string, 0))\n                             ^\n  symbol:\
    \   method all_prefixes(String,int)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        Stack<String> stack = new Stack<>();\n\
    \        stack.add(string);\n        int len = string.length();\n        while\
    \ (stack.size() > 0) {\n            String current = stack.pop();\n          \
    \  result.add(current);\n            len = current.length();\n            for\
    \ (int i = 0; i < len; i++) {\n                String rest = current.substring(i,\
    \ i + 1);\n                if (!stack.contains(rest)) {\n                    stack.add(rest);\n\
    \                }\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkvk4t6gn.java:31)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        char current = string.charAt(0);\n\
    \        prefixes.add(current);\n        for (int i = 1; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == current) {\n                prefixes.add(string.substring(0,\
    \ i));\n                current = string.charAt(i);\n            }\n        }\n\
    \        prefixes.add(string.substring(0, i));\n        return prefixes;\n}\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8e3qlpuk.java:15: error: incompatible types: char cannot be converted\
    \ to String\n        prefixes.add(current);\n                     ^\n/tmp/tmp8e3qlpuk.java:22:\
    \ error: cannot find symbol\n        prefixes.add(string.substring(0, i));\n \
    \                                        ^\n  symbol:   variable i\n  location:\
    \ class Problem\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        if (string.startsWith(string.charAt(0)))\n\
    \            allPrefixes(string, 1, string.length(), result);\n        else\n\
    \            result.add(\"\");\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv0nfqx79.java:14: error: incompatible types: char cannot be converted\
    \ to String\n        if (string.startsWith(string.charAt(0)))\n              \
    \                             ^\n/tmp/tmpv0nfqx79.java:15: error: method allPrefixes\
    \ in class Problem cannot be applied to given types;\n            allPrefixes(string,\
    \ 1, string.length(), result);\n            ^\n  required: String\n  found:  \
    \  String,int,int,ArrayList<String>\n  reason: actual and formal argument lists\
    \ differ in length\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        allPrefixes1(string, new ArrayList<String>(),\
    \ result);\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplo91oe3n.java:14: error: cannot find symbol\n        allPrefixes1(string,\
    \ new ArrayList<String>(), result);\n        ^\n  symbol:   method allPrefixes1(String,ArrayList<String>,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ longest = 1;\n        int shortest = 0;\n        for (String prefix : allPrefixes(string).subList(0,\
    \ longest)) {\n            int length = prefix.length();\n            if (length\
    \ > longest && string.length() > length) {\n                longest = length;\n\
    \                shortest = prefix;\n            }\n        }\n        if (longest\
    \ > shortest) return allPrefixes(string);\n        else return allPrefixes(string.substring(shortest));\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5q_6n89c.java:19: error: incompatible types: String cannot be converted\
    \ to int\n                shortest = prefix;\n                           ^\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        // find all prefixes of string\n      \
    \  StringBuilder stringBuilder = new StringBuilder(string);\n        for (int\
    \ i = stringBuilder.length() - 1; i >= 0; i--) {\n            String prefix =\
    \ stringBuilder.substring(0, i);\n            result.add(prefix);\n          \
    \  // delete prefix from string\n            stringBuilder.delete(i - 1, 1);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ start 4, end 1, length 6\n\tat java.base/java.lang.AbstractStringBuilder.checkRangeSIOOBE(AbstractStringBuilder.java:1810)\n\
    \tat java.base/java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:917)\n\
    \tat java.base/java.lang.StringBuilder.delete(StringBuilder.java:289)\n\tat Problem.allPrefixes(tmpm4po7neb.java:20)\n\
    \tat Problem.main(tmpm4po7neb.java:26)\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ all_prefixes(new ArrayList<String>(), string);\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7e3fae85.java:13: error: cannot find symbol\n        return all_prefixes(new\
    \ ArrayList<String>(), string);\n               ^\n  symbol:   method all_prefixes(ArrayList<String>,String)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ results = new ArrayList<String>();\n        allPrefixes(string, results);\n\
    \        return results;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzmpc36v3.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, results);\n        ^\n\
    \  required: String\n  found:    String,ArrayList<String>\n  reason: actual and\
    \ formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        allPrefixes(\"\", string, prefixes);\n\
    \        return prefixes;\n}\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9v3yg1x_.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(\"\", string, prefixes);\n \
    \       ^\n  required: String\n  found:    String,String,ArrayList<String>\n \
    \ reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011849
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ allPrefixes(string, String.class);\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4sp73i81.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string, String.class);\n\
    \               ^\n  required: String\n  found:    String,Class<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        boolean prefixes[] = new boolean[string.Length()];\n\
    \        // Initialize all prefixes to be empty strings (except the first one)\n\
    \        for (int i = 1; i < string.Length(); i++)\n            prefixes[i] =\
    \ false;\n        // For each character in the string and each prefix that hasn't\
    \ been used yet\n        for (int i = 0; i < string.Length(); i++)\n         \
    \   for (int j = 0; j < string.Length(); j++)\n                if (i != j) {\n\
    \                    if (string[i] == string[j])\n                        prefixes[i]\
    \ = true;\n                    else {\n                        for (int k = j\
    \ + 1; k < string.Length(); k++)\n                            if (prefixes[k])\n\
    \                                prefixes[i] = true;\n                       \
    \ if (prefixes[i]) {\n                            result.Add(string.Substring(i));\n\
    \                            break;\n                        }\n             \
    \       }\n                }\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpet59ouuq.java:14: error: cannot find symbol\n        boolean prefixes[]\
    \ = new boolean[string.Length()];\n                                          \
    \     ^\n  symbol:   method Length()\n  location: variable string of type String\n\
    /tmp/tmpet59ouuq.java:16: error: cannot find symbol\n        for (int i = 1; i\
    \ < string.Length(); i++)\n                                  ^\n  symbol:   method\
    \ Length()\n  location: variable string of type String\n/tmp/tmpet59ouuq.java:19:\
    \ error: cannot find symbol\n        for (int i = 0; i < string.Length(); i++)\n\
    \                                  ^\n  symbol:   method Length()\n  location:\
    \ variable string of type String\n/tmp/tmpet59ouuq.java:20: error: cannot find\
    \ symbol\n            for (int j = 0; j < string.Length(); j++)\n            \
    \                          ^\n  symbol:   method Length()\n  location: variable\
    \ string of type String\n/tmp/tmpet59ouuq.java:22: error: array required, but\
    \ String found\n                    if (string[i] == string[j])\n            \
    \                  ^\n/tmp/tmpet59ouuq.java:22: error: array required, but String\
    \ found\n                    if (string[i] == string[j])\n                   \
    \                        ^\n/tmp/tmpet59ouuq.java:25: error: cannot find symbol\n\
    \                        for (int k = j + 1; k < string.Length(); k++)\n     \
    \                                                 ^\n  symbol:   method Length()\n\
    \  location: variable string of type String\n/tmp/tmpet59ouuq.java:29: error:\
    \ cannot find symbol\n                            result.Add(string.Substring(i));\n\
    \                                             ^\n  symbol:   method Substring(int)\n\
    \  location: variable string of type String\n8 errors\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ res = new ArrayList<String>();\n        res.add(\"\");\n        if (string.length()\
    \ == 0) return res;\n        String prefix = string.substring(0, 1);\n       \
    \ res.add(prefix);\n        while (prefix.length() < string.length()) \n     \
    \       res.add(prefix + string.substring(1, string.length()));\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswmqz1e9.java:23)\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        char[] charArray = string.toCharArray();\n\
    \        for (int i = 0; i < charArray.length; i++) {\n            prefixes.addAll(allPrefixes(charArray,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1eaa1hcc.java:16: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n            prefixes.addAll(allPrefixes(charArray,\
    \ i));\n                            ^\n  required: String\n  found:    char[],int\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        allPrefixesRecursive(string, 0, new ArrayList<>(),\
    \ prefixes);\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkdo600fl.java:14: error: cannot find symbol\n        allPrefixesRecursive(string,\
    \ 0, new ArrayList<>(), prefixes);\n        ^\n  symbol:   method allPrefixesRecursive(String,int,ArrayList<Object>,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ allPrefixes(string, 1);\n}\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vxkf5hs.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string, 1);\n       \
    \        ^\n  required: String\n  found:    String,int\n  reason: actual and formal\
    \ argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        ArrayList<String> prefixesWithLast =\
    \ new ArrayList<>();\n        ArrayList<String> prefixesWithAll = new ArrayList<>();\n\
    \        ArrayList<String> allPrefixes = new ArrayList<>();\n        ArrayList<String>\
    \ allPrefixesWithAll = new ArrayList<>();\n\n        // Iterate through each character\n\
    \        for(int i = 0; i<string.length(); i++) {\n            // Iterate through\
    \ all possible prefixes\n            for(String prefix : allPrefixes) {\n    \
    \            // Add prefix to the prefix list\n                if(prefix.length()\
    \ < string.length() && string.length() < i) {\n                    prefixes.add(prefix);\n\
    \                }\n\n                // Add prefix to prefix list with last letter\n\
    \                if(prefix.length() < string.length() && i == string.length())\
    \ {\n                    prefixesWithLast.add(prefix);\n                }\n\n\
    \                // Add prefix to prefix list with all letters present\n     \
    \           if(prefix.length() < string.length() && i <= string.length()) {\n\
    \                    prefixesWithAll.add(prefix);\n                }\n\n     \
    \           // Add prefix to prefix list with all letters present\n          \
    \      if(prefix.length() < string.length() && i <= string.length() && string.length()\
    \ < i) {\n                    allPrefixes.add(prefix);\n                }\n  \
    \          }\n\n            // Add string to prefix list\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n\n        // Add each prefix to prefix list with last letter\n\
    \        for(String prefix : prefixesWithLast) {\n            allPrefixes.add(prefix);\n\
    \            allPrefixesWithAll.add(prefix);\n        }\n\n        // Add each\
    \ prefix to prefix list with all letters present\n        for(String prefix :\
    \ prefixesWithAll) {\n            allPrefixes.add(prefix);\n            allPrefixesWithAll.add(prefix);\n\
    \        }\n\n        // Add each prefix to prefix list with all letters present\n\
    \        for(String prefix : prefixes) {\n            allPrefixes.add(prefix);\n\
    \            allPrefixesWithAll.add(prefix);\n        }\n\n        // Add all\
    \ prefixes to the prefix list with all\n        for(String prefix : allPrefixes)\
    \ {\n            allPrefixesWithAll.add(prefix);\n        }\n\n        // Add\
    \ all prefixes to the prefix list with all letters present\n        for(String\
    \ prefix : allPrefixesWithAll) {\n            allPrefixes.add(prefix);\n     \
    \   }\n\n        return allPrefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxu88129h.java:80)\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        String[] prefixes = getPrefixes(string);\n\
    \        for (int i = 0; i < prefixes.length; i++) {\n            result.add(prefixes[i]);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ybn_nq3.java:14: error: cannot find symbol\n        String[] prefixes\
    \ = getPrefixes(string);\n                            ^\n  symbol:   method getPrefixes(String)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n\n        String[] prefixes = string.split(\"\\\
    \\W\");\n        Arrays.sort(prefixes);\n\n        for (String prefix : prefixes)\
    \ {\n            result.add(prefix);\n        }\n\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcirzl1x9.java:25)\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        allPrefixes(string, \"\", \"\", prefixes);\n\
    \        return prefixes;\n}\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9vxc4fc0.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", \"\", prefixes);\n\
    \        ^\n  required: String\n  found:    String,String,String,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.length() < 1) {\n            return new ArrayList<String>();\n\
    \        }\n        ArrayList<String> prefixes = new ArrayList<String>();\n  \
    \      // initialize prefixes with the empty string\n        prefixes.add(\"\"\
    );\n        // process the rest of the string\n        int len = string.length();\n\
    \        for (int i = 1; i < len; i++) {\n            String prefix = prefixes.get(prefixes.size()\
    \ - 1);\n            String next = string.substring(i, len);\n            // append\
    \ next prefix to current prefix\n            prefix = prefix + next;\n       \
    \     // add to list of all prefixes\n            prefixes.add(prefix);\n    \
    \    }\n        return prefixes;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvmcjqqtd.java:33)\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        int startIndex = 0;\n        while (startIndex\
    \ < string.length()) {\n            result.add(string.substring(0, startIndex));\n\
    \            startIndex += 1;\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2uz0d4qs.java:23)\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        ArrayList<Character> charList = new ArrayList<>();\n\
    \        for (char c : string.toCharArray()) {\n            charList.add(c);\n\
    \        }\n        allPrefixes(charList, result, string.length());\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpivw1q_1_.java:18: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(charList, result, string.length());\n\
    \        ^\n  required: String\n  found:    ArrayList<Character>,ArrayList<String>,int\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        if (string == null || string.isEmpty())\
    \ {\n            return prefixes;\n        }\n        \n        ArrayList<String>\
    \ candidates = new ArrayList<>(string.length());\n        for (String prefix:\
    \ prefixes) {\n            candidates.addAll(string.substring(prefix.length()).split(\"\
    \"));\n        }\n        \n        ArrayList<String> prefixes_copy = new ArrayList<>(prefixes.size());\n\
    \        for (String candidate: candidates) {\n            String candidate2 =\
    \ candidate;\n            if (candidate.length() == string.length()) {\n     \
    \           prefixes_copy.add(candidate);\n            }\n            else {\n\
    \                for (int i=0; i<candidate2.length(); i++) {\n               \
    \     String prefix2 = candidate2.substring(0, i);\n                    prefixes_copy.add(prefix2);\n\
    \                }\n            }\n        }\n        \n        prefixes.addAll(prefixes_copy);\n\
    \        \n        return prefixes;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp22chfhgo.java:20: error: incompatible types: String[] cannot be\
    \ converted to Collection<? extends String>\n            candidates.addAll(string.substring(prefix.length()).split(\"\
    \"));\n                                                                     ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            String prefix = string.substring(0, i + 1);\n          \
    \  list.add(prefix);\n        }\n        return list;\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null || string.length() < 2) {\n            return null;\n      \
    \  }\n        ArrayList<String> result = new ArrayList<>();\n        result.add(string.substring(0,\
    \ 1));\n        for (String prefix : allPrefixes(string.substring(1))) {\n   \
    \         result.add(prefix);\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.allPrefixes(String)\"\
    \ is null\n\tat Problem.main(tmplxgfq84d.java:24)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ res = new ArrayList<>();\n        allPrefixes(string, res);\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzhn5ocu9.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, res);\n        ^\n \
    \ required: String\n  found:    String,ArrayList<String>\n  reason: actual and\
    \ formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<>();\n        ArrayList<String> current = new ArrayList<>();\n\
    \        for (char c: string.toCharArray()) {\n            current.add(c);\n \
    \           String newCurrent = new String(current);\n            if (!list.contains(newCurrent))\
    \ {\n                list.add(newCurrent);\n            }\n        }\n       \
    \ return list;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz1_s4or4.java:16: error: incompatible types: char cannot be converted\
    \ to String\n            current.add(c);\n                        ^\n/tmp/tmpz1_s4or4.java:17:\
    \ error: no suitable constructor found for String(ArrayList<String>)\n       \
    \     String newCurrent = new String(current);\n                             \
    \   ^\n    constructor String.String(String) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to String)\n    constructor\
    \ String.String(char[]) is not applicable\n      (argument mismatch; ArrayList<String>\
    \ cannot be converted to char[])\n    constructor String.String(byte[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to byte[])\n    constructor String.String(StringBuffer) is not applicable\n\
    \      (argument mismatch; ArrayList<String> cannot be converted to StringBuffer)\n\
    \    constructor String.String(StringBuilder) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to StringBuilder)\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        \n        for(int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i));\n        }\n     \
    \   \n        return prefixes;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqrpllm5p.java:23)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        StringBuilder buffer = new StringBuilder();\n\
    \        for (char c: string.toCharArray()) {\n            if (buffer.length()\
    \ > 0) {\n                buffer.deleteCharAt(0);\n            }\n           \
    \ buffer.append(c);\n            if (buffer.length() >= string.length()) {\n \
    \               result.add(buffer.toString());\n                buffer.delete(0,\
    \ string.length());\n            }\n        }\n        return result;\n}\n   \
    \ public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqyshy5il.java:29)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<>();\n        char[] charArray = string.toCharArray();\n\
    \        Arrays.sort(charArray);\n        int len = charArray.length;\n      \
    \  int start = 0;\n        int end = len-1;\n        while (start <= end) {\n\
    \            list.add(new String(charArray,start,len));\n            start +=\
    \ 1;\n            end -= 1;\n        }\n        return list;\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ offset 1, count 6, length 6\n\tat java.base/java.lang.String.checkBoundsOffCount(String.java:4589)\n\
    \tat java.base/java.lang.String.rangeCheck(String.java:304)\n\tat java.base/java.lang.String.<init>(String.java:300)\n\
    \tat Problem.allPrefixes(tmp4izwhh7b.java:20)\n\tat Problem.main(tmp4izwhh7b.java:28)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            String prefix = string.substring(0, i);\n            if (result.size()\
    \ == 0 || prefix.length() < result.get(result.size() - 1).length())\n        \
    \        result.add(prefix);\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu8k648pl.java:23)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        if (string.isEmpty()) {\n           \
    \ prefixes.add(\"\");\n            return prefixes;\n        }\n\n        int\
    \ minLen = Integer.MAX_VALUE;\n        int maxLen = Integer.MIN_VALUE;\n     \
    \   for (char c : string.toCharArray()) {\n            int len = c - 'a';\n  \
    \          if (len < minLen) {\n                minLen = len;\n            }\n\
    \            if (len > maxLen) {\n                maxLen = len;\n            }\n\
    \        }\n\n        do {\n            prefixes.add(\"\" + string);\n       \
    \     string = String.format(\"%1$%1$s\", string.substring(0, minLen));\n    \
    \    } while (string.compareTo(string) != 0 && minLen <= maxLen);\n\n        prefixes.add(\"\
    \" + string);\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd_21l8ww.java:40)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null) return null;\n        ArrayList<String> result = new ArrayList<>();\n\
    \        char[] chars = string.toCharArray();\n        int len = 0;\n        for\
    \ (int i = 0; i < chars.length; i++) {\n            if (chars[i] == ' ') len++;\n\
    \        }\n        while (len > 0) {\n            for (int i = 0; i < chars.length;\
    \ i++) {\n                if (chars[i] == ' ') {\n                    len--;\n\
    \                }\n                else if (chars[i - 1] != ' ') {\n        \
    \            result.add(String.valueOf(chars[i - 1]));\n                    len--;\n\
    \                }\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm1p7qk3l.java:35)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        if (string == null || string.isEmpty())\
    \ return result;\n\n        // Use recursion to find all prefixes of a given string\n\
    \        allPrefixes(string, new StringBuilder(), result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_r88782.java:17: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, new StringBuilder(),\
    \ result);\n        ^\n  required: String\n  found:    String,StringBuilder,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Initialize result list\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        // Initialize helper variables\n        int start = 0;\n        int i\
    \ = 1;\n        int len;\n        // Get length of input string\n        len =\
    \ string.length();\n        // Initialize longest prefix list\n        ArrayList<String>\
    \ longest = new ArrayList<String>();\n        while (start < len) {\n        \
    \    // Initialize current prefix and suffix\n            String prefix = string.substring(0,\
    \ start);\n            String suffix = string.substring(start);\n            //\
    \ Check if current prefix and suffix are already in longest prefix list\n    \
    \        if (longest.contains(prefix) && longest.contains(suffix)) {\n       \
    \         // If so, skip it and continue with next prefix\n                i +=\
    \ 1;\n                start += 1;\n                continue;\n            }\n\
    \            // Otherwise, add current prefix and suffix to longest prefix list\n\
    \            longest.add(prefix);\n            longest.add(suffix);\n        \
    \    // Increment counter\n            i += 1;\n            // Increment current\
    \ index\n            start = i;\n        }\n        // Return longest prefix list\n\
    \        return longest;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfw592g26.java:47)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            for (int j = i; j < string.length(); j++) {\n          \
    \      prefixes.add(string.substring(i, j));\n            }\n        }\n     \
    \   return prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz80ymzfj.java:23)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Initialize and empty prefix array\n        ArrayList<String> prefixes = new\
    \ ArrayList<>();\n\n        // If the string is only one character long, return\
    \ the prefix\n        if (string.length() == 1) {\n            prefixes.add(string);\n\
    \            return prefixes;\n        }\n\n        // Otherwise, loop through\
    \ all characters of the string\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            // If the current character is the same as the last character,\
    \ continue\n            if (i == 0) {\n                prefixes.add(string.substring(0,\
    \ i));\n                continue;\n            }\n\n            // Otherwise,\
    \ add the last character to the prefix\n            prefixes.add(string.substring(0,\
    \ i));\n\n            // Get the substring from i+1 to the end of the string\n\
    \            prefixes.addAll(allPrefixes(string.substring(i + 1)));\n        }\n\
    \n        return prefixes;\n}\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr8_69t__.java:41)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ IntStream.range(0, string.length())\n                .mapToObj(i -> string.substring(i,i+1))\n\
    \                .map(s -> Arrays.stream(s.split(\"(?<=[a-z])(?=[A-Z])\"))\n \
    \                       .map(String::trim)\n                        .filter(s\
    \ -> !s.isEmpty())\n                        .map(String::toLowerCase)\n      \
    \                  .distinct()\n                        .collect(Collectors.toList()))\n\
    \                .flatMap(List::stream)\n                .distinct()\n       \
    \         .collect(Collectors.toCollection(ArrayList::new));\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpag0uf2p3.java:17: error: variable s is already defined in method\
    \ allPrefixes(String)\n                        .filter(s -> !s.isEmpty())\n  \
    \                              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        if (string.length() <= 1) return result;\n\
    \        result.add(string.substring(0, 1));\n        for (int i = 1; i < string.length();\
    \ i++) {\n            result.addAll(allPrefixes(string.substring(0, i)));\n  \
    \      }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd2i92it.java:23)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        String prefix = \"\";\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefix = prefix + string.charAt(i);\n\
    \            result.add(prefix);\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Initialize hash set\n        HashSet<String> hashSet = new HashSet<>();\n  \
    \      // Add all characters as prefix\n        hashSet.addAll(Arrays.asList(\"\
    _\" + string));\n        // Add all combinations of length 1 to the set\n    \
    \    for(int i = 1; i < string.length(); i++) {\n            for(int j = 0; j\
    \ < i; j++) {\n                hashSet.addAll(Arrays.asList(string.substring(i,\
    \ j)));\n            }\n        }\n        // Get result array\n        ArrayList<String>\
    \ result = new ArrayList<>(hashSet);\n        // Add \"_\" to the front of each\
    \ element\n        for(int i = 0; i < result.size(); i++) {\n            result.set(i,\
    \ \"_\" + result.get(i));\n        }\n        // Return result\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ufdy8q9.java:33)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ base case\n        if (string == null) {\n            return null;\n       \
    \ }\n        // get all chars in string and their lengths\n        ArrayList<Character>\
    \ chars = new ArrayList<>();\n        int length = string.length();\n        for\
    \ (int i = 0; i < length; i++) {\n            chars.add(string.charAt(i));\n \
    \       }\n        // initialize prefix list\n        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        // add string and length to the prefix list\n\
    \        prefixes.add(string + \", \" + length);\n        // get all possible\
    \ prefixes of string\n        for (int i = 0; i < length; i++) {\n           \
    \ ArrayList<String> newPrefixes = new ArrayList<>();\n            for (int j =\
    \ 0; j < length; j++) {\n                String prefix = chars.get(i).toString()\
    \ + chars.get(j).toString();\n                newPrefixes.add(prefix + \", \"\
    \ + length);\n            }\n            prefixes.addAll(newPrefixes);\n     \
    \   }\n        return prefixes;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm1_kk4yn.java:39)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Initialize prefix array to store result\n        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        // Iterate over all characters in input string\n\
    \        for (char character : string.toCharArray()) {\n            // Add all\
    \ prefixes to prefix array\n            for (String prefix : prefixes) {\n   \
    \             // If prefix is empty or character matches prefix character, add\
    \ it to prefix array\n                if (prefix.length() == 0 || string.charAt(0)\
    \ == prefix.charAt(0)) {\n                    prefixes.add(prefix + character);\n\
    \                    break;\n                }\n                // Else, check\
    \ next prefix in prefix array and if character matches prefix character, add it\
    \ to prefix array\n                else if (prefix.length() > 0) {\n         \
    \           String nextPrefix = prefix.substring(0, prefix.length() - 1);\n  \
    \                  if (string.charAt(0) == prefix.charAt(0)) {\n             \
    \           prefixes.add(nextPrefix + character);\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvr5d306r.java:38)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        if\
    \ (string == null) return null;\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        ArrayList<String> temp = new ArrayList<String>();\n        ArrayList<String>\
    \ temp2 = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            String sub = string.substring(i, string.length());\n   \
    \         temp.clear();\n            temp2.clear();\n            for (int j =\
    \ 0; j < sub.length(); j++) {\n                String letter = sub.substring(j,\
    \ j + 1);\n                temp.add(letter);\n                temp2.add(letter);\n\
    \            }\n            result.addAll(temp);\n            result.addAll(temp2);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxpz0q4n5.java:33)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        if (string == null || string.length()\
    \ == 0) {\n            return prefixes;\n        }\n        char current = string.charAt(0);\n\
    \        prefixes.add(current);\n        for (int i = 1; i < string.length();\
    \ i++) {\n            current = string.charAt(i);\n            if (!prefixes.contains(current))\
    \ {\n                prefixes.add(current);\n            }\n        }\n      \
    \  return prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbpfzz7xw.java:18: error: incompatible types: char cannot be converted\
    \ to String\n        prefixes.add(current);\n                     ^\n/tmp/tmpbpfzz7xw.java:22:\
    \ error: incompatible types: char cannot be converted to String\n            \
    \    prefixes.add(current);\n                             ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n\n        for (int i = 0; i < string.length();\
    \ i++) {\n            String prefix = string.substring(0, i);\n            prefixes.add(prefix);\n\
    \        }\n\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclgu9nrc.java:24)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        // Find the length of string\n      \
    \  int len = string.length();\n        // Initialize length\n        int prefixLen\
    \ = 0;\n        // Check if string has only one character or string length is\
    \ smaller than 2\n        if (len < 2 || len == 0) {\n            return prefixes;\n\
    \        }\n        // Loop through the string\n        for (int i = 0; i < len\
    \ - 1; i++) {\n            // Update prefix length\n            prefixLen += 1;\n\
    \            // Update prefix list\n            prefixes.add(string.substring(i,\
    \ i + prefixLen));\n        }\n        return prefixes;\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 3, end 7, length 6\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmplhbmtnn4.java:27)\n\
    \tat Problem.main(tmplhbmtnn4.java:33)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        for( int i = 0; i < string.length(); i++\
    \ )\n            for( int j = i; j < string.length(); j++ )\n                result.add(\
    \ string.substring(i, j) ); \n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptmi5j5hg.java:21)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        ArrayList<String> currentPrefixes = new\
    \ ArrayList<>();\n        int currentLength = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            String prefix = string.substring(0, i);\n\
    \            if (currentLength == currentPrefixes.length) {\n                currentPrefixes.add(prefix);\n\
    \            } else {\n                for (int j = 0; j < currentPrefixes.size();\
    \ j++) {\n                    String newPrefix = currentPrefixes.get(j);\n   \
    \                 if (prefix.compareTo(newPrefix) < 0) {\n                   \
    \     currentLength++;\n                        currentPrefixes.add(prefix);\n\
    \                    }\n                }\n            }\n            if (currentLength\
    \ > currentPrefixes.length) {\n                for (int j = 0; j < currentPrefixes.size();\
    \ j++) {\n                    String newPrefix = currentPrefixes.get(j);\n   \
    \                 if (newPrefix.compareTo(prefix) > 0) {\n                   \
    \     prefixes.add(newPrefix);\n                    }\n                }\n   \
    \         }\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp78gqb78p.java:18: error: cannot find symbol\n            if (currentLength\
    \ == currentPrefixes.length) {\n                                             \
    \   ^\n  symbol:   variable length\n  location: variable currentPrefixes of type\
    \ ArrayList<String>\n/tmp/tmp78gqb78p.java:29: error: cannot find symbol\n   \
    \         if (currentLength > currentPrefixes.length) {\n                    \
    \                           ^\n  symbol:   variable length\n  location: variable\
    \ currentPrefixes of type ArrayList<String>\n2 errors\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ret = new ArrayList<String>();\n        \n        for (int i = 0; i < string.length();\
    \ i++) {\n            for (int j = i; j < string.length(); j++) {\n          \
    \      String prefix = string.substring(0, i);\n                String suffix\
    \ = string.substring(j);\n                \n                if (string.length()\
    \ > 1 && string.length() < i) {\n                    if (prefix.length() == 0\
    \ || suffix.length() == 0)\n                        ret.add(\"\");\n         \
    \           else\n                        ret.add(prefix + \"*\" + suffix);\n\
    \                }\n            }\n        }\n        return ret;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9iq6ba87.java:32)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n\n        for (char c : string.toCharArray())\
    \ {\n            prefixes.add(String.valueOf(c));\n            prefixes.add(String.valueOf(c\
    \ + 1));\n        }\n\n        prefixes.sort(String::compareToIgnoreCase);\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4j07rdmp.java:25)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        if (string == null || string.length() ==\
    \ 0) {\n            return result;\n        }\n        // Find the first letter\n\
    \        int len = string.length();\n        for (int i = 0; i < len; i++) {\n\
    \            if (string.charAt(i) == string.charAt(len - 1) - 1) {\n         \
    \       break;\n            }\n        }\n        // Add prefix to all strings\
    \ in input string\n        // The first letter of each string\n        String[]\
    \ parts = string.split(\"\");\n        for (int i = 0; i < len; i++) {\n     \
    \       String prefix = parts[i].substring(0, 1).toLowerCase() + parts[i].substring(1).toLowerCase();\n\
    \            result.add(prefix);\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiu3gu6wa.java:35)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int n = string.length();\n    \
    \    for (int i = 0; i < n; ++i) {\n            String prefix = string.substring(0,\
    \ i);\n            prefixes.add(prefix);\n            string = string.substring(i\
    \ + 1);\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end 3, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmp67emr5fe.java:16)\n\
    \tat Problem.main(tmp67emr5fe.java:24)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n\n        // If the string is empty, just\
    \ return an empty array\n        if (string.length() == 0) {\n            return\
    \ result;\n        }\n\n        // Add an empty prefix to this array\n       \
    \ result.add(\"\");\n\n        // Add all of the prefixes of the tail\n      \
    \  for (String prefix : allPrefixes(string.substring(1))) {\n            // Add\
    \ the prefix to the result array\n            result.add(prefix + \"\");\n   \
    \     }\n\n        // Return the result array\n        return result;\n}\n   \
    \ public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstr74h_s.java:34)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        \n        StringBuilder sb = new\
    \ StringBuilder();\n        sb.append(string);\n        \n        char[] arr =\
    \ string.toCharArray();\n        \n        do {\n            int start = 0;\n\
    \            int end = sb.length();\n            \n            while (end > start)\
    \ {\n                String prefix = sb.substring(start, end);\n             \
    \   result.add(prefix);\n                \n                if (end == sb.length())\
    \ {\n                    break;\n                }\n                \n       \
    \         end = end - 1;\n                start = end + 1;\n            }\n  \
    \          \n            String suffix = sb.substring(start);\n            \n\
    \            sb.delete(0, sb.length());\n            sb.insert(0, suffix);\n \
    \       } while (!sb.isEmpty());\n        \n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ Your code here\n        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        if (string.length() == 0) {\n            prefixes.add(\"\");\n      \
    \  } else {\n            for (int i = 0; i <= string.length(); i++) {\n      \
    \          String prefix = string.substring(0, i);\n                prefixes.add(prefix);\n\
    \            }\n        }\n        return prefixes;\n}\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwplrn6rx.java:26)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        allPrefixes(string, \"\", prefixes);\n\
    \        return prefixes;\n}\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppkih4yge.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", prefixes);\n \
    \       ^\n  required: String\n  found:    String,String,ArrayList<String>\n \
    \ reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ Collections.nCopies(string.length(), string).stream()\n            .map(s ->\
    \ s.substring(0, 1))\n            .distinct()\n            .map(s -> String.join(\"\
    \", Stream.of(s)).substring(0, s.length()))\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpytjyykit.java:16: error: no suitable method found for join(String,Stream<String>)\n\
    \            .map(s -> String.join(\"\", Stream.of(s)).substring(0, s.length()))\n\
    \                            ^\n    method String.join(CharSequence,CharSequence...)\
    \ is not applicable\n      (varargs mismatch; no instance(s) of type variable(s)\
    \ T exist so that Stream<T> conforms to CharSequence)\n    method String.join(CharSequence,Iterable<?\
    \ extends CharSequence>) is not applicable\n      (argument mismatch; no instance(s)\
    \ of type variable(s) T exist so that Stream<T> conforms to Iterable<? extends\
    \ CharSequence>)\n  where T is a type-variable:\n    T extends Object declared\
    \ in method <T>of(T)\n/tmp/tmpytjyykit.java:17: error: incompatible types: inference\
    \ variable E has incompatible bounds\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    \                    ^\n    equality constraints: String,T\n    lower bounds:\
    \ Object\n  where E,T,C are type-variables:\n    E extends Object declared in\
    \ class ArrayList\n    T extends Object declared in method <T,C>toCollection(Supplier<C>)\n\
    \    C extends Collection<T> declared in method <T,C>toCollection(Supplier<C>)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n\n        for (char ch : string.toCharArray())\
    \ {\n            prefixes.add(ch);\n            prefixes.addAll(allPrefixes(String.valueOf(ch)));\n\
    \        }\n\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqj_d9eqv.java:16: error: incompatible types: char cannot be converted\
    \ to String\n            prefixes.add(ch);\n                         ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ res = new ArrayList<>();\n\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        ArrayList<String> suffixes = new ArrayList<>();\n\n        ArrayList<String>\
    \ current = new ArrayList<>();\n        current.add(string);\n        for (String\
    \ prefix : current) {\n            prefixes.add(prefix);\n            for (String\
    \ suffix : suffixes) {\n                res.add(prefix + suffix);\n          \
    \  }\n            current.remove(prefix);\n            current.add(0, prefix);\n\
    \            suffixes.add(\"\"); // Re-use suffixes\n        }\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxn03tqfc.java:33)\n"
  stdout: ''
  timestamp: 1660011858

name: HumanEval_160_do_algebra
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given two lists operator, and operand. The first list has\
  \ basic algebra operations, and \n    // the second list is a list of integers.\
  \ Use the two given lists to build the algebric \n    // expression and return the\
  \ evaluation of this expression.\n    // The basic algebra operations:\n    // Addition\
  \ ( + ) \n    // Subtraction ( - ) \n    // Multiplication ( * ) \n    // Floor\
  \ division ( // ) \n    // Exponentiation ( ** ) \n    // Example:\n    // operator['+',\
  \ '*', '-']\n    // array = [2, 3, 4, 5]\n    // result = 2 + 3 * 4 - 5\n    //\
  \ => result = 9\n    // Note:\n    // The length of operator list is equal to the\
  \ length of operand list minus one.\n    // Operand is a list of of non-negative\
  \ integers.\n    // Operator list has at least one operator, and operand list has\
  \ at least two operands.\n    public static int doAlgebra(ArrayList<String> op,\
  \ ArrayList<Integer> operand) {\n"
tests: "return 0;\n    }\n    public static void main(String[] args) {\n    assert(doAlgebra((new\
  \ ArrayList<String>(Arrays.asList((String)\"**\", (String)\"*\", (String)\"+\"))),\
  \ (new ArrayList<Integer>(Arrays.asList((int)2, (int)3, (int)4, (int)5)))) == (37));\n\
  \    assert(doAlgebra((new ArrayList<String>(Arrays.asList((String)\"+\", (String)\"\
  *\", (String)\"-\"))), (new ArrayList<Integer>(Arrays.asList((int)2, (int)3, (int)4,\
  \ (int)5)))) == (9));\n    assert(doAlgebra((new ArrayList<String>(Arrays.asList((String)\"\
  //\", (String)\"*\"))), (new ArrayList<Integer>(Arrays.asList((int)7, (int)3, (int)4))))\
  \ == (8));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

name: HumanEval_37_sort_even
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // This function takes a list l and returns a list l' such\
  \ that\n    // l' is identical to l in the odd indicies, while its values at the\
  \ even indicies are equal\n    // to the values of the even indicies of l, but sorted.\n\
  \    // >>> sort_even([1, 2, 3])\n    // [1, 2, 3]\n    // >>> sort_even([5, 6,\
  \ 3, 4])\n    // [3, 6, 5, 4]\n    public static ArrayList<Integer> sortEven(ArrayList<Integer>\
  \ l) {\n"
tests: "return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
  \ void main(String[] args) {\n    assert(sortEven((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)2,\
  \ (int)3)))));\n    assert(sortEven((new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)3, (int)-5, (int)2, (int)-3, (int)3, (int)9, (int)0, (int)123, (int)1, (int)-10)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)-10, (int)3, (int)-5, (int)2, (int)-3, (int)3,\
  \ (int)5, (int)0, (int)9, (int)1, (int)123)))));\n    assert(sortEven((new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)8, (int)-12, (int)4, (int)23, (int)2, (int)3, (int)11, (int)12, (int)-10)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)-12, (int)8, (int)3, (int)4, (int)5, (int)2,\
  \ (int)12, (int)11, (int)23, (int)-10)))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

language: java
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        System.out.println(a);\n\
    \        System.out.println(b);\n        System.out.println(c);\n        if(a>b||b>c||c>a){\n\
    \            return false;\n        }\n        else if (a==b||a==c){\n       \
    \     return true;\n        }\n        else{\n            return ((180 - ((180-a)+(a-b)+(b-c))+((180-b)+(b-c)+(c-a)+(a-(b-c)-(b-a)-(c-a))-(180-(a-(b-c)-(b-a))))\
    \ <180);\n        }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpktxetgjg.java:27: error: ')' expected\n            return ((180\
    \ - ((180-a)+(a-b)+(b-c))+((180-b)+(b-c)+(c-a)+(a-(b-c)-(b-a)-(c-a))-(180-(a-(b-c)-(b-a))))\
    \ <180);\n                                                                   \
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011262
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((a + b > c) && (a\
    \ + c > b) && (b + c > a));\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvg0ib6re.java:23)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((b*b)-(c*a))==0;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0hv44e9a.java:20)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Triangle sides must have\
    \ equal length\n        if(a==0 || b==0 || c==0){\n            return false;\n\
    \        }\n\n        int d = b * b;\n        int e = c * c;\n        int f =\
    \ a * c;\n        int g = a * b;\n        int h = (c * a / b + b * c / a + a *\
    \ b) / 2;\n\n        return Math.abs(d - e) < Math.abs(f - g) && Math.abs(h -\
    \ e) < Math.abs(e - g);\n}\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0igz7kao.java:31)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean result = true;\n\
    \        if (a != 0 && b != 0 && c != 0) {\n            if (b * c < a * b) {\n\
    \                result = false;\n            } else if (b * c > a * b) {\n  \
    \              result = true;\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppplhzsul.java:29)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((a + b > c) && (a\
    \ + c > b) && (b + c > a));\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvg0ib6re.java:23)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a == b) return b == c\
    \ || c == 0;\n        if (a == c) return b == c || c == 0;\n        if (b == c)\
    \ return b == a || a == 0;\n        int area = a * b;\n        int area_side =\
    \ sqrt(area / 2);\n        return area_side == (b + c) || (area_side == (b - c)\
    \ && a > 0);\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyn6jee7y.java:21: error: cannot find symbol\n        int area_side\
    \ = sqrt(area / 2);\n                        ^\n  symbol:   method sqrt(int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here.\n\
    \        boolean result = ((b * b) - (4 * a * c)) >= 0;\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkew7p_3h.java:22)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((a + b + c) / 2)\
    \ != (a * a + b * b + c * c);\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0mzko4_3.java:21)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (a==b && b==c || a==c\
    \ && b==c) || a==b && b==a || a==c && b==c;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmcpbpavd.java:20)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (a * b * c == a *\
    \ c * b) || (a * b * c == b * c * a);\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjejhmpbf.java:21)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (b - a) * (b - c)\
    \ == (a * c - b * b) * 0.0;\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2oi_ntl.java:20)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if(a < b) swap(a,b);\n  \
    \      if(a < c) swap(a,c);\n        if(b < c) swap(b,c);\n        for(int i =\
    \ 1; i <= b - c; i++) {\n            if(i*(i-1)/2 != a) return false;\n      \
    \  }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqhf24g76.java:17: error: cannot find symbol\n        if(a < b)\
    \ swap(a,b);\n                  ^\n  symbol:   method swap(int,int)\n  location:\
    \ class Problem\n/tmp/tmpqhf24g76.java:18: error: cannot find symbol\n       \
    \ if(a < c) swap(a,c);\n                  ^\n  symbol:   method swap(int,int)\n\
    \  location: class Problem\n/tmp/tmpqhf24g76.java:19: error: cannot find symbol\n\
    \        if(b < c) swap(b,c);\n                  ^\n  symbol:   method swap(int,int)\n\
    \  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean b = (a==b);\n   \
    \     boolean c = (b==c);\n        if(a != b && a != c && b != c){\n         \
    \   return false;\n        }\n        else{\n            return ((a < b && a <\
    \ c) || (a > b && a > c) || (b > a && b > c) || (c > a && c > b));\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4lfmmknm.java:17: error: variable b is already defined in method\
    \ rightAngleTriangle(int,int,int)\n        boolean b = (a==b);\n             \
    \   ^\n/tmp/tmp4lfmmknm.java:17: error: incomparable types: int and boolean\n\
    \        boolean b = (a==b);\n                      ^\n/tmp/tmp4lfmmknm.java:18:\
    \ error: variable c is already defined in method rightAngleTriangle(int,int,int)\n\
    \        boolean c = (b==c);\n                ^\n/tmp/tmp4lfmmknm.java:19: error:\
    \ incomparable types: int and boolean\n        if(a != b && a != c && b != c){\n\
    \             ^\n/tmp/tmp4lfmmknm.java:19: error: incomparable types: int and\
    \ boolean\n        if(a != b && a != c && b != c){\n                       ^\n\
    /tmp/tmp4lfmmknm.java:23: error: bad operand types for binary operator '<'\n \
    \           return ((a < b && a < c) || (a > b && a > c) || (b > a && b > c) ||\
    \ (c > a && c > b));\n                       ^\n  first type:  int\n  second type:\
    \ boolean\n/tmp/tmp4lfmmknm.java:23: error: bad operand types for binary operator\
    \ '<'\n            return ((a < b && a < c) || (a > b && a > c) || (b > a && b\
    \ > c) || (c > a && c > b));\n                                ^\n  first type:\
    \  int\n  second type: boolean\n/tmp/tmp4lfmmknm.java:23: error: bad operand types\
    \ for binary operator '>'\n            return ((a < b && a < c) || (a > b && a\
    \ > c) || (b > a && b > c) || (c > a && c > b));\n                           \
    \                ^\n  first type:  int\n  second type: boolean\n/tmp/tmp4lfmmknm.java:23:\
    \ error: bad operand types for binary operator '>'\n            return ((a < b\
    \ && a < c) || (a > b && a > c) || (b > a && b > c) || (c > a && c > b));\n  \
    \                                                  ^\n  first type:  int\n  second\
    \ type: boolean\n/tmp/tmp4lfmmknm.java:23: error: bad operand types for binary\
    \ operator '>'\n            return ((a < b && a < c) || (a > b && a > c) || (b\
    \ > a && b > c) || (c > a && c > b));\n                                      \
    \                         ^\n  first type:  boolean\n  second type: int\n/tmp/tmp4lfmmknm.java:23:\
    \ error: bad operand types for binary op"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double angle = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n        double anglec = Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2));\n        if ((angle * anglec) >= 0) {\n            return true;\n     \
    \   }\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw12htos6.java:26)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double x1,y1,x2,y2;\n   \
    \     x1 = Math.pow(a,2)/Math.pow(b,2);\n        y1 = Math.pow(b,2)/Math.pow(c,2);\n\
    \        x2 = Math.pow(b,2)/Math.pow(a,2);\n        y2 = Math.pow(c,2)/Math.pow(a,2);\n\
    \        if (Math.pow(x1,2)+Math.pow(y1,2)==Math.pow(x2,2)+Math.pow(y2,2)) {\n\
    \            return true;\n        }\n        else return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstsdo3db.java:28)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (Math.abs(a-b)<=(Math.abs(b-c))\
    \ && Math.abs(a-c)<=(Math.abs(b-a))\n                        && Math.abs(b-a)<=(Math.abs(c-a))&&\
    \ Math.abs(b-c)<=(Math.abs(c-b))\n                        && Math.abs(c-a)<=(Math.abs(c-b))&&\
    \ Math.abs(c-b)<=(Math.abs(c-c))) \n            return true;\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0u0rv480.java:24)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here\n\
    \        double l1=Math.sqrt((Math.pow(a,2)+Math.pow(b,2)));\n        double l2=Math.sqrt((Math.pow(c,2)+Math.pow(Math.cos(Math.toRadians(90)),2)));\n\
    \        double l3=Math.sqrt((Math.pow(c,2)+Math.pow(Math.sin(Math.toRadians(90)),2)));\n\
    \        double l4=Math.sqrt((Math.pow(a,2)+Math.pow(c,2)));\n        double l5=Math.sqrt((Math.pow(a,2)+Math.pow(Math.sin(Math.toRadians(90)),2)));\n\
    \        double l6=Math.sqrt((Math.pow(b,2)+Math.pow(c,2)));\n        if(l1==l2\
    \ && l1==l3&&l1==l4&&l1==l5&&l1==l6){\n            return true;\n        }\n \
    \       else{\n            return false;\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwje2shlw.java:32)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int ad = a / 2;\n       \
    \ int bd = b / 2;\n        int cd = c / 2;\n        int ac = a - ad;\n       \
    \ int bc = b - bc;\n        int cd = c - cd;\n\n        return ad*bc + bd*cd ==\
    \ ac*cd + bc*ac;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqzwj0vnr.java:22: error: variable cd is already defined in method\
    \ rightAngleTriangle(int,int,int)\n        int cd = c - cd;\n            ^\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if((Math.abs(a-b) == b &&\
    \ Math.abs(b-c) == a && Math.abs(c-a) == b) || (Math.abs(a-b) == b && Math.abs(b-c)\
    \ == c && Math.abs(c-a) == a) || (Math.abs(a-b) == c && Math.abs(b-c) == a &&\
    \ Math.abs(c-a) == c) || (Math.abs(a-b) == c && Math.abs(b-c) == c && Math.abs(c-a)\
    \ == a)) {\n            return true;\n        } else {\n            return false;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz25t7blj.java:24)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int d = b*b - 4*a*c;\n  \
    \      if (d < 0) return false;\n        double disc = Math.hypot(b,c);\n    \
    \    if (disc < 0) return false;\n        if (disc > d) return false;\n      \
    \  double angle = Math.acos((disc - d) / (2 * b*c));\n        if (angle < 90 )\
    \ {\n            return true;\n        } else {\n            return false;\n \
    \       }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2q7lkzgi.java:30)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int a = Math.abs(a);\n  \
    \      int b = Math.abs(b);\n        int c = Math.abs(c);\n        if ((a + b\
    \ + c) != 0) return false;\n        int d = (a + b) * (b + c);\n        int e\
    \ = (a * (a + b)) * (a + c);\n        if (d == e || d == (-1 * e)) return true;\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw8zr33k2.java:17: error: variable a is already defined in method\
    \ rightAngleTriangle(int,int,int)\n        int a = Math.abs(a);\n            ^\n\
    /tmp/tmpw8zr33k2.java:18: error: variable b is already defined in method rightAngleTriangle(int,int,int)\n\
    \        int b = Math.abs(b);\n            ^\n/tmp/tmpw8zr33k2.java:19: error:\
    \ variable c is already defined in method rightAngleTriangle(int,int,int)\n  \
    \      int c = Math.abs(c);\n            ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean result = true;\n\
    \        if (Math.abs(Math.sqrt(Math.pow(b - a, 2) + Math.pow(c-b, 2))) > Math.pow(a,\
    \ 2)) {\n            System.out.println(\"abs \" + Math.sqrt(Math.pow(b-a, 2)\
    \ + Math.pow(c-b, 2)));\n        }\n        System.out.println(\"a \" + a + \"\
    \ b \" + b + \" c \" + c);\n        System.out.println(\"result = \" + result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbrs8mmdw.java:27)\n"
  stdout: 'a 3 b 4 c 5

    result = true

    abs 1.4142135623730951

    a 1 b 2 c 3

    result = true

    '
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int ab = a + b;\n       \
    \ int bc = b + c;\n        int cb = c + b;\n        return (ab * bc == cb * ab);\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84steldq.java:24)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if(a == 0)\n            return\
    \ true;\n        if(b == 0)\n            return true;\n        if(c == 0)\n  \
    \          return true;\n        if(a == b)\n            return true;\n      \
    \  if(b == c)\n            return true;\n        if(a == c)\n            return\
    \ true;\n        if((a + b) > c && (a + c) > b && (b + c) > a)\n            return\
    \ true;\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxuzbesdg.java:37)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean ans = false;\n  \
    \      if (a * b > c && b * c > a && c * a > b) {\n            ans = true;\n \
    \       }\n        return ans;\n}\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkqicu207.java:27)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (Math.abs(b - a) >\
    \ Math.abs(c - b));\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptc8yvwuu.java:20)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ( a == b && b == c\
    \ || a == c && b == c );\n}\n    public static void main(String[] args) {\n  \
    \  assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp839ptan0.java:20)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double triangleArea;\n  \
    \      double trianglePerimeter;\n        boolean result = false;\n\n        triangleArea\
    \ = Math.sqrt(a * a + b * b);\n        trianglePerimeter = a + b;\n\n        if\
    \ (trianglePerimeter > c) {\n            result = true;\n        }\n\n       \
    \ return result;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpedqaqxtd.java:34)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean isRightAngle = Math.abs(Math.atan2(b,a)\
    \ - Math.atan2(c,a)) < 0.001;\n        return isRightAngle;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8u1ys3fx.java:21)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a >= b && a >= c)\n \
    \           return true;\n        if (b >= a && b >= c)\n            return true;\n\
    \        if (c >= a && c >= b)\n            return true;\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn963hf70.java:27)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n      double side1 = Math.sqrt( (b*b)-(Math.pow(a,\
    \ (2))) );\n      double side2 = Math.sqrt( (c*c)-(Math.pow(b, (2))) );\n    \
    \  double side3 = Math.sqrt( (a*a)-(Math.pow(c, (2))) );\n      if ( side1 ==\
    \ side2 && side2 == side3 ) {\n        return true;\n      } else {\n        return\
    \ false;\n      }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_s9e6kh.java:27)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        List<Integer> leftSide =\
    \ new ArrayList<>();\n        List<Integer> rightSide = new ArrayList<>();\n\n\
    \        leftSide.add(a);\n        rightSide.add(b);\n        rightSide.add(b);\n\
    \        leftSide.add(b);\n        leftSide.add(c);\n        rightSide.add(c);\n\
    \        rightSide.add(c);\n\n        Set<Integer> set = new HashSet<>(leftSide);\n\
    \        set.removeAll(rightSide);\n        return set.size() != 0;\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyx3k9o7z.java:34)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int ab = a + b;\n       \
    \ int bc = b + c;\n        int ac = a + c;\n        if (ab * b == ac * c) {\n\
    \            double abc = Math.sqrt(ab * ab + bc * bc);\n            if (abc >\
    \ Math.sqrt(a * b * c)) {\n                return true;\n            } else {\n\
    \                return false;\n            }\n        } else if (ab > bc) {\n\
    \            return true;\n        } else {\n            return false;\n     \
    \   }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptn41eu5d.java:34)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // write your logic here\n\
    \        int a = a;\n        int b = b;\n        int c = c;\n        if ((a +\
    \ b > c) && (c > b)) {\n            if (b > a) {\n                boolean isRight\
    \ = true;\n                int maxValue = Math.max(a, b, c);\n               \
    \ int minValue = Math.min(a, b, c);\n                if (maxValue - minValue ==\
    \ 1) {\n                    isRight = false;\n                }\n            \
    \    return isRight;\n            }\n            else {\n                return\
    \ false;\n            }\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_h29dam4.java:18: error: variable a is already defined in method\
    \ rightAngleTriangle(int,int,int)\n        int a = a;\n            ^\n/tmp/tmp_h29dam4.java:19:\
    \ error: variable b is already defined in method rightAngleTriangle(int,int,int)\n\
    \        int b = b;\n            ^\n/tmp/tmp_h29dam4.java:20: error: variable\
    \ c is already defined in method rightAngleTriangle(int,int,int)\n        int\
    \ c = c;\n            ^\n/tmp/tmp_h29dam4.java:24: error: no suitable method found\
    \ for max(int,int,int)\n                int maxValue = Math.max(a, b, c);\n  \
    \                                 ^\n    method Math.max(int,int) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method Math.max(long,long)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.max(float,float) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n    method Math.max(double,double) is not\
    \ applicable\n      (actual and formal argument lists differ in length)\n/tmp/tmp_h29dam4.java:25:\
    \ error: no suitable method found for min(int,int,int)\n                int minValue\
    \ = Math.min(a, b, c);\n                                   ^\n    method Math.min(int,int)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.min(long,long) is not applicable\n      (actual and formal argument\
    \ lists differ in length)\n    method Math.min(float,float) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method Math.min(double,double)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    5 errors\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return Math.acos((a * b +\
    \ c) / (Math.sqrt(a) * Math.sqrt(b) * Math.sqrt(c))) * 180 / Math.PI == 360 ?\n\
    \                true : false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp74ok46xn.java:21)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        final double EPSILON = 0.0000000001;\n\
    \        final double sign = Math.sign;\n\n        if (sign(a) == sign(b) == sign(c))\n\
    \            return false;\n\n        // If any of the lengths is 0 then a triangle\
    \ is possible.\n        if (a * b * c < EPSILON)\n            return true;\n\n\
    \        double discriminant = Math.sqrt(b * b - 4 * a * c);\n        double u\
    \ = (b * b - 4 * a * c) / discriminant;\n        double v = (2 * a * b) / discriminant;\n\
    \n        // Check for valid triangles\n        if (u < 0 || v < 0 || u > 1 ||\
    \ v > 1)\n            return false;\n\n        // We found a triangle with one\
    \ side of the leg on the outside\n        // and a side of the hypotenus. So the\
    \ hypotenus must be opposite.\n        if (sign(u) == sign(v))\n            return\
    \ false;\n\n        // A triangle is right-angled if the hypotenus is 90 degrees.\n\
    \        if (Math.sqrt(u * u + v * v) < EPSILON)\n            return true;\n\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphkapdfsq.java:18: error: cannot find symbol\n        final double\
    \ sign = Math.sign;\n                                ^\n  symbol:   variable sign\n\
    \  location: class Math\n/tmp/tmphkapdfsq.java:20: error: cannot find symbol\n\
    \        if (sign(a) == sign(b) == sign(c))\n            ^\n  symbol:   method\
    \ sign(int)\n  location: class Problem\n/tmp/tmphkapdfsq.java:20: error: cannot\
    \ find symbol\n        if (sign(a) == sign(b) == sign(c))\n                  \
    \     ^\n  symbol:   method sign(int)\n  location: class Problem\n/tmp/tmphkapdfsq.java:20:\
    \ error: cannot find symbol\n        if (sign(a) == sign(b) == sign(c))\n    \
    \                              ^\n  symbol:   method sign(int)\n  location: class\
    \ Problem\n/tmp/tmphkapdfsq.java:37: error: cannot find symbol\n        if (sign(u)\
    \ == sign(v))\n            ^\n  symbol:   method sign(double)\n  location: class\
    \ Problem\n/tmp/tmphkapdfsq.java:37: error: cannot find symbol\n        if (sign(u)\
    \ == sign(v))\n                       ^\n  symbol:   method sign(double)\n  location:\
    \ class Problem\n6 errors\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double angle = Math.asin(Math.sqrt((Math.pow(b,\
    \ 2.0))-(Math.pow(a, 2.0))));\n        double angle1 = Math.asin(Math.sqrt((Math.pow(c,\
    \ 2.0))-(Math.pow(b, 2.0))));\n        double angle2 = Math.asin(Math.sqrt((Math.pow(c,\
    \ 2.0))-(Math.pow(a, 2.0))));\n        double angle3 = Math.asin(Math.sqrt((Math.pow(b,\
    \ 2.0))-(Math.pow(c, 2.0))));\n        System.out.println(\"angle\"+angle);\n\
    \        System.out.println(\"angle\"+angle1);\n        System.out.println(\"\
    angle\"+angle2);\n        System.out.println(\"angle\"+angle3);\n        if(angle<=30\
    \ && angle1<=30 && angle2<=30 && angle3<=30){\n            return true;\n    \
    \    }\n        else\n        {\n            return false;\n        }\n}\n   \
    \ public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2h8_xzt.java:34)\n"
  stdout: 'angleNaN

    angleNaN

    angleNaN

    angleNaN

    '
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if ((b == c) && (a==b)) {\n\
    \            return true;\n        }\n        if ((a>b) && (a>c)) {\n        \
    \    return false;\n        }\n        if ((a<b) && (a<c)) {\n            return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyug3ge_j.java:29)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if( Math.abs(b - a) > Math.abs(b\
    \ - c) && Math.abs(c - a) > Math.abs(c - b)) {\n            return true;\n   \
    \     }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp46mssurp.java:23)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a<b&&b<c&&a>c) {\n  \
    \          if (Math.sqrt((b * b)-(4 * a * c))<Math.sqrt((c * c)-(4 * a * b)))\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbq3zaty8.java:25)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (b * b) == (a + b\
    \ + c) && (c / a == b / c); // && b!=c && b!=a && b!=a \n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx02nx0b_.java:20)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your logic here\n\
    \        if(a==b&&b==c)\n            return true;\n        if(a==c&&c==b)\n  \
    \          return true;\n        if(Math.sqrt(a*a+b*b)==Math.sqrt(a*a+c*c)&&Math.sqrt(b*b+c*c)==Math.sqrt(a*a+c*c))\n\
    \            return true;\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe78amd7d.java:27)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (b * b) - (4 * c *\
    \ a) < 0;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcnsevvfq.java:21)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return a!=0 && b!=0 && c!=0\
    \ && a+b+c==180;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp063v96nd.java:20)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 4
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if(isRightAngle(a, b, c)\
    \ == false)\n            return false;\n        else {\n            int[] sides\
    \ = new int[] {a, b, c};\n            Arrays.sort(sides);\n            Arrays.stream(sides).forEach(side\
    \ -> {\n                if (side != sides[2])\n                    return false;\n\
    \            });\n            return true;\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz6a_crr0.java:17: error: cannot find symbol\n        if(isRightAngle(a,\
    \ b, c) == false)\n           ^\n  symbol:   method isRightAngle(int,int,int)\n\
    \  location: class Problem\n/tmp/tmpz6a_crr0.java:22: error: incompatible types:\
    \ unexpected return value\n            Arrays.stream(sides).forEach(side -> {\n\
    \                                         ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\nprinting javac\
    \ parameters to: /work/arjunguha-research-group/repos/polyglot-codegen-evaluation/src/javac.20220808_221424.args\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a>b+c) {\n          \
    \  return false;\n        }\n        if (a>c) {\n            return false;\n \
    \       }\n        if (b>c) {\n            return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnhqeymg.java:30)\n"
  stdout: ''
  timestamp: 1660011264
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((Math.pow(a, 2) +\
    \ Math.pow(b, 2) != Math.pow(c, 2)) || (a != c && b != c));\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2fobu2hr.java:21)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here\n\
    \        int ab = Math.abs(a - b);\n        int ac = Math.abs(a - c);\n      \
    \  int bc = Math.abs(b - c);\n        boolean isRight = ac + bc == ab;\n     \
    \   return isRight;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp16mge4gr.java:25)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int discriminant = b*b -\
    \ 4*a*c;\n        double angle = (double)Math.acos((b * b + 4 * a * c) / Math.sqrt(b*b\
    \ + 4 * a * c));\n        return (discriminant <= 0 && angle <= 90 || discriminant\
    \ >= 0 && angle <= 270);\n}\n    public static void main(String[] args) {\n  \
    \  assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7lnd4sq0.java:22)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (-b + Math.sqrt((b*b)\
    \ - 4*a*c)) / (2*a) > 0 ? true : false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphkxilybn.java:20)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Use this to check if a\
    \ point is on the line segment that goes through (0,0)\n        // and a point\
    \ that is centered\n        boolean isCCW = (b * b) - (4 * a * c);\n        //\
    \ Use this to check if a point is on the line segment that goes through (0,0)\n\
    \        // and a point that is equidistant from the line through c\n        boolean\
    \ isCW = (b * b) + (4 * a * c);\n        return isCCW == 0 && isCW == 0;\n}\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3heg__xi.java:19: error: incompatible types: int cannot be converted\
    \ to boolean\n        boolean isCCW = (b * b) - (4 * a * c);\n               \
    \                 ^\n/tmp/tmp3heg__xi.java:22: error: incompatible types: int\
    \ cannot be converted to boolean\n        boolean isCW = (b * b) + (4 * a * c);\n\
    \                               ^\n/tmp/tmp3heg__xi.java:23: error: incomparable\
    \ types: boolean and int\n        return isCCW == 0 && isCW == 0;\n          \
    \           ^\n/tmp/tmp3heg__xi.java:23: error: incomparable types: boolean and\
    \ int\n        return isCCW == 0 && isCW == 0;\n                             \
    \     ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your logic here\n\
    \        if ((a<0||b<0||c<0)||(a>b&&b>c)||(a>c&&c>b)) {\n            return false;\n\
    \        }\n        else {\n            if (a == b||a == c||b == c) {\n      \
    \          return true;\n            }\n            else if (a == 0 || a == b\
    \ || a == c) {\n                return false;\n            }\n            else\
    \ {\n                return rightAngleTriangle(b,c,a-b);\n            }\n    \
    \    }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rec3m3q.java:34)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int d = (b * b) - (4 * a\
    \ * c);\n        if (d < 0) {\n            System.out.println(\"Not a right angle\
    \ triangle\");\n            return false;\n        }\n        if (d == 0) {\n\
    \            System.out.println(\"Right angle triangle\");\n            return\
    \ true;\n        }\n        d = (Math.sqrt(d)) * (Math.sqrt(d));\n        if (d\
    \ != 0) {\n            System.out.println(\"Right angle triangle\");\n       \
    \     return true;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkgdl7j90.java:26: error: incompatible types: possible lossy conversion\
    \ from double to int\n        d = (Math.sqrt(d)) * (Math.sqrt(d));\n         \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((Math.sqrt(b*b +\
    \ c*c-a*a)) % 180 != 0);\n}\n    public static void main(String[] args) {\n  \
    \  assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_glql91m.java:21)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Your code here!\n    \
    \    if(a == 0)\n            return b == 0;\n        if(b == 0)\n            return\
    \ c == 0;\n        if(a == b && a == c)\n            return true;\n        if(b\
    \ == c)\n            return true;\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpowb5rb4p.java:29)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if ((a <= 0) && (b <= 0)\
    \ && (c <= 0)) {\n            System.out.println(\"Invalid input\");\n       \
    \     return false;\n        }\n        if ((a + b > c) && (a + c > b) && (b +\
    \ c > a)) {\n            return true;\n        } else {\n            return false;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuwau3yw3.java:31)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // YOUR CODE HERE\n     \
    \   double a2 = Math.pow(a,2);\n        double b2 = Math.pow(b,2);\n        double\
    \ c2 = Math.pow(c,2);\n        double abc = Math.pow(a,2) + Math.pow(b,2) + Math.pow(c,2);\n\
    \        double abc2 = Math.pow(abc,0.5);\n        boolean result = false;\n \
    \       if (abc2 > a2) {\n            if (abc2 > b2) {\n                if (abc2\
    \ > c2) {\n                    result = true;\n                }\n           \
    \ }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpphqkox21.java:34)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if ((a + b + c) <= 0) {\n\
    \            return false;\n        }\n        double aa = (Math.sqrt((Math.pow(a\
    \ - c, 2))) / 2);\n        double ab = (Math.sqrt((Math.pow(b - c, 2))) / 2);\n\
    \        double ac = (Math.sqrt((Math.pow(c - a, 2))) / 2);\n        double bc\
    \ = Math.sqrt((Math.pow(b - c, 2)));\n        double abc = Math.sqrt((Math.pow(a\
    \ - b, 2)));\n        double acb = Math.sqrt((Math.pow(c - a, 2)));\n        double\
    \ abbc = Math.sqrt((Math.pow(b - a, 2)));\n        double cba = Math.sqrt((Math.pow(c\
    \ - b, 2)));\n        if (((aa + ab + ac) == 0) || ((bb + cb + abc) == 0) || ((cb\
    \ + abc + abc) == 0)) {\n            return false;\n        }\n        if (((aa\
    \ + ab + ac) == 0) || ((bb + cb + abc) == 0) || ((cb + abc + abc) == 0)) {\n \
    \           return false;\n        }\n        if (((aa + ab + ac) == 0) || ((bb\
    \ + cb + abc) == 0) || ((cb + abc + abc) == 0)) {\n            return false;\n\
    \        }\n        if (((aaa + abbc + acb) == 0) || ((bca + abbc + abcb) == 0)\
    \ || ((cba + abbc + abcb) == 0)) {\n            return false;\n        }\n   \
    \     if (((aaa + abbc + acb) == 0) || ((bca + abbc + abcb) == 0) || ((cba + abbc\
    \ + abcb) == 0)) {\n            return false;\n        }\n        if (((aaa +\
    \ abbc + acb) == 0) || ((bca + abbc + abcb) == 0) || ((cba + abbc + abcb) == 0))\
    \ {\n            return false;\n        }\n        if (((aaa + abbc + acb) ==\
    \ 0) || ((bca + abbc + abcb) == 0) || ((cba + abbc + abcb) == 0)) {\n        \
    \    return false;\n        }\n        if (((aaa + abbc + acb) == 0) || ((bca\
    \ + abbc + abcb) == 0) || ((cba + abbc + abcb) == 0)) {\n            return false;\n\
    \        }\n        if (((aaa + abbc + acb) == 0) || ((bca + abbc + abcb) == 0)\
    \ || ((cba + abbc + abcb) == 0)) {\n            return false;\n        }\n   \
    \     if (((aaa + abbc + acb) == 0) || ((bca + abbc + abcb) == 0) || ((cba + abbc\
    \ + abcb) == 0)) {\n            return false;\n        }\n        if (((aaa +\
    \ abbc + acb) == 0) || ((bca + abbc + \n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpq1mptar4.java:59: error: illegal start of expression

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here.\n\
    \        double d = b*b - 4*a*c;\n        if (d<0)\n            return false;\n\
    \        double x = Math.sqrt(d);\n        double y = (-b+x)/2*a;\n        double\
    \ z = (-b-x+y)/2*a;\n        return (Math.abs(x)<1 && Math.abs(y)<1 && Math.abs(z)<1);\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu682yn91.java:27)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((a + b > c) && (a\
    \ + c > b) && (b + c > a));\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvg0ib6re.java:23)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((a + b > c) || (b\
    \ + c > a) || (a + c > b));\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz28z9b5v.java:21)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (Math.sqrt(Math.pow((a-b),\
    \ 2) + Math.pow((a-c), 2)) > \n            Math.sqrt(Math.pow((b-c), 2) + Math.pow((c-a),\
    \ 2)));\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjg3s4uod.java:21)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int a1, b1, c1;\n       \
    \ a1 = Math.abs(a);\n        b1 = Math.abs(b);\n        c1 = Math.abs(c);\n  \
    \      boolean aIsNegative = b1 < 0;\n        boolean bIsNegative = c1 < 0;\n\
    \        boolean aIsPositive = b1 > 0;\n        boolean bIsPositive = c1 > 0;\n\
    \        if (aIsNegative && !bIsNegative && !cIsPositive)\n            return\
    \ false;\n        if (!aIsNegative && bIsNegative && !cIsPositive)\n         \
    \   return false;\n        if (aIsPositive && !bIsPositive && !cIsPositive)\n\
    \            return false;\n        double side1 = a1 * b1;\n        double side2\
    \ = a1 * c1;\n        double side3 = b1 * c1;\n        double sideSum = side1\
    \ + side2 + side3;\n        if (sideSum != 180) {\n            return false;\n\
    \        }\n        boolean result = (side1 == side2 && side2 == side3 && !(a\
    \ < 0 && b > 0 && c < 0));\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6rocb7cc.java:25: error: cannot find symbol\n        if (aIsNegative\
    \ && !bIsNegative && !cIsPositive)\n                                         \
    \   ^\n  symbol:   variable cIsPositive\n  location: class Problem\n/tmp/tmp6rocb7cc.java:27:\
    \ error: cannot find symbol\n        if (!aIsNegative && bIsNegative && !cIsPositive)\n\
    \                                            ^\n  symbol:   variable cIsPositive\n\
    \  location: class Problem\n/tmp/tmp6rocb7cc.java:29: error: cannot find symbol\n\
    \        if (aIsPositive && !bIsPositive && !cIsPositive)\n                  \
    \                          ^\n  symbol:   variable cIsPositive\n  location: class\
    \ Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (Math.abs(b * b - 4 *\
    \ a * c) < 0.000001) return true;\n        if (Math.abs(b * b + 4 * a * c) < 0.000001)\
    \ return true;\n        if (((b * b) - (4 * a * c)) < 0.000001) return true;\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsztva7lh.java:24)\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here\n\
    \        boolean answer = false;\n        if ((a + b > c) && (a + c > b) && (b\
    \ + c > a)) {\n            answer = true;\n        }\n        return answer;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzn7uko4p.java:28)\n"
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double s1=a/2;\n        double\
    \ s2=b/2;\n        double s3=c/2;\n        double l1=Math.toRadians(b+a);\n  \
    \      double l2=Math.toRadians(c-a);\n        double l3=Math.toRadians(a+b);\n\
    \        if(Math.cos(l1)==Math.cos(l2)&&Math.cos(l2)==Math.cos(l3)&&Math.sin(l1)==Math.sin(l2)&&Math.sin(l2)==Math.sin(l3)&&Math.cos(l1)==Math.cos(l3)&&Math.sin(l3)==Math.sin(l2))\
    \ {\n            return true;\n        }else {\n            return false;\n  \
    \      }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ym_r9qq.java:30)\n"
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double ab = Math.sqrt(a*a\
    \ + b*b);\n        double ac = Math.sqrt(a*a + c*c);\n        double bc = Math.sqrt(b*b\
    \ + c*c);\n        return Math.acos((a*a + c*c - b*b) / (2 * ab * ac) <\n    \
    \                     (bc * b + ab * ac) / (2 * bc * ac)) == 1;\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpykd17d5u.java:20: error: incompatible types: boolean cannot be\
    \ converted to double\n        return Math.acos((a*a + c*c - b*b) / (2 * ab *\
    \ ac) <\n                                                           ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011265
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here\n\
    \        int s1,s2,s3;\n        s1=Math.toIntExact(a-(b/2));\n        s2=Math.toIntExact(a-(b/2));\n\
    \        s3=Math.toIntExact(c-(b/2));\n        System.out.println(s1+\" \"+s2);\n\
    \        System.out.println(s3+\" \"+s1);\n        if (s1==s3&&s2==s1) {\n   \
    \         return true;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ajo2r7c.java:30)\n"
  stdout: '1 1

    3 1

    '
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if(a!=b){\n            return\
    \ false;\n        }\n        if(a!=c){\n            return false;\n        }\n\
    \        return (b-a == c-b);\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1s0t_is.java:26)\n"
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a == b || a == c) {\n\
    \            return true;\n        }\n        if (b == c || b == a) {\n      \
    \      return true;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp43zcymam.java:26)\n"
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double b1 = Math.sqrt((b*b)-(a*a));\n\
    \        double c1 = Math.sqrt((c*c)-(b1*b1));\n        double angle = b1*Math.sin(Math.PI/180.*((double)b1/c1));\n\
    \        if (Math.round(b1*Math.sin(Math.PI/180.*((double)b1/c1))) == angle) {\n\
    \            return true;\n        } else {\n            return false;\n     \
    \   }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_m3khswl.java:27)\n"
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a > b && a > c) {\n \
    \           System.out.println(\"a > b\");\n            return false;\n      \
    \  } else if (b > a && b > c) {\n            System.out.println(\"b > a\");\n\
    \            return false;\n        } else if (c > a && c > b) {\n           \
    \ System.out.println(\"c > a\");\n            return false;\n        }\n     \
    \   double a1 = (double)(a/2);\n        double b1 = (double)(b/2);\n        double\
    \ c1 = (double)(c/2);\n        double a2 = (b1 + c1);\n        double b2 = (a1\
    \ + c1);\n        double c2 = (a1 + b1);\n        double a3 = (a2 + b2);\n   \
    \     double b3 = (a2 + c2);\n        double c3 = (b2 + c2);\n        if (a1 ==\
    \ b2 && b1 == c2 && a2 == c3 && a3 == b3 && b3 == c3 && a1 == c3) {\n        \
    \    System.out.println(\"a1 == b2\");\n            return true;\n        } else\
    \ if (a2 == b3 && b2 == c3 && a3 == c2 && b3 == a3 && c3 == a2) {\n          \
    \  System.out.println(\"a2 == b3\");\n            return true;\n        } else\
    \ if (b1 == c2 && b2 == a3 && b3 == c3 && c == a2) {\n            System.out.println(\"\
    b1 == c2\");\n            return true;\n        } else if (c2 == a3 && c3 == b2\
    \ && c3 == a2) {\n            System.out.println(\"c2 == a3\");\n            return\
    \ true;\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxilezd2t.java:52)\n"
  stdout: 'c > a

    '
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((Math.abs(Math.sin(Math.acos((a\
    \ * b + c) / Math.sqrt(a * b * c + a * a + b * b)))) == Math.PI / 2)\n       \
    \     || (Math.abs(Math.sin(Math.acos((a * a + c) / Math.sqrt(a * a + b * b +\
    \ c * c)))) == Math.PI / 2));\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpamwhage0.java:21)\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean isRightAngle = false;\n\
    \        if ((a + b) > c || (b + c) > a || (c + a) > b) {\n            isRightAngle\
    \ = true;\n        }\n        return isRightAngle;\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7_ydq3u4.java:25)\n"
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double aa = Math.abs(a/b),\
    \ ba = Math.abs(b/c), ca = Math.abs(c/a); \n        if (aa==ba&&ba==ca) return\
    \ false;\n        else if ((aa<=90 && ba<=90 && ca<=90) || (aa>=90 && ba>=90 &&\
    \ ca>=90)) \n            return false;\n        else return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rf9pyni.java:24)\n"
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double d1=Math.sqrt(Math.pow(a,2)+Math.pow(b,2));\n\
    \        double d2=Math.sqrt(Math.pow(c,2)+Math.pow(a,2));\n        double d3=Math.sqrt(Math.pow(c,2)+Math.pow(b,2));\n\
    \        double den1=d1/d2;\n        double den2=d1/d3;\n        return (Math.abs(a-b)*Math.abs(a-b)*Math.abs(c-b))\
    \ < den1 \n        && Math.abs(a-b)*Math.abs(c-b) < den2 \n        && Math.abs(c-b)*Math.abs(c-b)\
    \ < den2;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq7jz6667.java:27)\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int ac = (a + c) / 2;\n \
    \       int bc = (b + c) / 2;\n        int ab = (a + b) / 2;\n        int bc =\
    \ b - c;\n\n        return a == ab && b == bc && c == ac;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj_rs2z3x.java:20: error: variable bc is already defined in method\
    \ rightAngleTriangle(int,int,int)\n        int bc = b - c;\n            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int s = Math.sqrt(Math.pow(b,2)+Math.pow(c,2));\n\
    \        if (a == 0 && b == 0 && c == 0) return true;\n        if (s == 0) return\
    \ false;\n        if (s == a) return true;\n        if (s == b) return true;\n\
    \        if (s == c) return true;\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjjuuzczc.java:17: error: incompatible types: possible lossy conversion\
    \ from double to int\n        int s = Math.sqrt(Math.pow(b,2)+Math.pow(c,2));\n\
    \                         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code in Java\
    \ here\n        return (a + b > c && c + b > a && a + c > b) || (b + c > a &&\
    \ a + c > b && c + a > b);\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprkhehlhz.java:22)\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int ab, bc, ac, ad, adb,\
    \ acd;\n        ab = a - b;\n        bc = b - c;\n        ac = a - c;\n      \
    \  ad = a + d;\n        adb = a + b - b;\n        acd = a - c + d;\n        //\
    \ Calculate the area of the triangle\n        double abc = ab * bc;\n        double\
    \ acd = ac * ad;\n        double adb = adb * ab;\n        double acbd = acd *\
    \ bc;\n        // If one side is zero then the triangle is equilateral\n     \
    \   if (acbd == 0)\n            return true;\n        // If other side is zero\
    \ then the triangle is right angle\n        else if (bcd == 0)\n            return\
    \ false;\n        // If both sides are equal then the triangle is scalene triangle\n\
    \        else\n            return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3um3ihjk.java:21: error: cannot find symbol\n        ad = a + d;\n\
    \                 ^\n  symbol:   variable d\n  location: class Problem\n/tmp/tmp3um3ihjk.java:23:\
    \ error: cannot find symbol\n        acd = a - c + d;\n                      ^\n\
    \  symbol:   variable d\n  location: class Problem\n/tmp/tmp3um3ihjk.java:26:\
    \ error: variable acd is already defined in method rightAngleTriangle(int,int,int)\n\
    \        double acd = ac * ad;\n               ^\n/tmp/tmp3um3ihjk.java:27: error:\
    \ variable adb is already defined in method rightAngleTriangle(int,int,int)\n\
    \        double adb = adb * ab;\n               ^\n/tmp/tmp3um3ihjk.java:33: error:\
    \ cannot find symbol\n        else if (bcd == 0)\n                 ^\n  symbol:\
    \   variable bcd\n  location: class Problem\n5 errors\n"
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double area = a * b * c /\
    \ 2;\n        double triangleArea = Math.sqrt(a * a + b * b + c * c) / 2;\n\n\
    \        boolean isRightAngleTriangle = area == triangleArea;\n        return\
    \ isRightAngleTriangle;\n}\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpldbgntlf.java:24)\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        final double a = a * Math.PI\
    \ / 180;\n        final double b = b * Math.PI / 180;\n        final double c\
    \ = c * Math.PI / 180;\n\n        double x1 = Math.cos(b);\n        double y1\
    \ = Math.sin(b);\n        double x2 = Math.cos(c);\n        double y2 = Math.sin(c);\n\
    \n        double x3 = Math.cos(a - b);\n        double y3 = Math.sin(a - b);\n\
    \n        // x1*y2 + x2*y3 + x3*y1 == 0\n        double x1y2_x2 = x1 * y2;\n \
    \       double x2y3_x3 = x2 * y3;\n        double x3y1_xy = x3 * y1;\n       \
    \ if (x1y2_x2 == 0 && x2y3_x3 == 0 && x3y1_xy == 0) {\n            // return true;\n\
    \            return true;\n        } else {\n            return false;\n     \
    \   }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpozlrxbch.java:17: error: variable a is already defined in method\
    \ rightAngleTriangle(int,int,int)\n        final double a = a * Math.PI / 180;\n\
    \                     ^\n/tmp/tmpozlrxbch.java:18: error: variable b is already\
    \ defined in method rightAngleTriangle(int,int,int)\n        final double b =\
    \ b * Math.PI / 180;\n                     ^\n/tmp/tmpozlrxbch.java:19: error:\
    \ variable c is already defined in method rightAngleTriangle(int,int,int)\n  \
    \      final double c = c * Math.PI / 180;\n                     ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Return False if either\
    \ argument is 0\n        if (a==0 || b==0 || c==0)\n            return false;\n\
    \        // Return True if any side is greater than the other two\n        if\
    \ (a>b && b>c && c>a)\n            return true;\n        // Return True if any\
    \ side is greater than the other two\n        if (a>b && b>c && c>a)\n       \
    \     return true;\n        // Return False if any side is less than the other\
    \ two\n        if (a<b && b>c && c>a)\n            return false;\n        // Return\
    \ False if any side is less than the other two\n        if (a<b && b>c && c>a)\n\
    \            return false;\n        // Return True if two sides are equal\n  \
    \      if (a==b && b==c)\n            return true;\n        // Return False if\
    \ two sides are equal\n        if (a==b && b==c)\n            return false;\n\
    \        // Return True if all sides are equal\n        if (a==b && b==c)\n  \
    \          return true;\n        // Return False if two sides are equal\n    \
    \    if (a==b && b==c)\n            return false;\n        // Return False if\
    \ two sides are equal\n        if (a==b && b==c)\n            return false;\n\
    \        // Return True if all sides are equal\n        if (a==b && b==c)\n  \
    \          return true;\n        // Return False if two sides are equal\n    \
    \    if (a==b && b==c)\n            return false;\n        // Return False if\
    \ two sides are equal\n        if (a==b && b==c)\n            return false;\n\
    \        // Return True if all sides are equal\n        if (a==b && b==c)\n  \
    \          return true;\n        // Return False if two sides are equal\n    \
    \    if (a==b && b==c)\n            return false;\n        // Return False if\
    \ two sides are equal\n        if (a==b && b==c)\n            return false;\n\
    \        // Return False if two sides are equal\n        if (a==b && b==c)\n \
    \           return false;\n        // Return False if two sides are equal\n  \
    \      if (a==b && b==c)\n            return false;\n        // Return False if\
    \ two sides are equal\n        if (a==b && b==c)\n            return false;\n\
    \        // Return True if all sides are equal\n        if (a==b && b==c)\n  \
    \          return true;\n        // Return False if two sides are equal\n    \
    \    if (a==b && b==c)\n            return false;\n        // Return True if all\
    \ sides are equal\n        if (a==b && b==c)\n            return true;\n     \
    \   // Return True if all sides are equal\n        if (a==b && b==c)\n       \
    \     return true;\n        // Return True if all sides are equal\n        if\
    \ (a==b && \n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpdw7h_xlm.java:88: error: illegal start of expression

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011266
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return a>b && b>c && a>c\
    \ && Math.abs(a-b-c) < Math.sqrt(Math.pow(a,2) + Math.pow(b,2) + Math.pow(c,2));\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo6dzkqql.java:20)\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (b==0) return false;\n\
    \        if (b > a && b > c) return false;\n        if (a == 0 && b == c) return\
    \ true;\n        if (c == 0) return false;\n        if (c > a && c > b) return\
    \ false;\n        if (a==0 && c==b) return true;\n        if (a == 0 || b == 0\
    \ || c == 0) return false;\n        if (a==c&&b==b) return true;\n        if (b==c&&a==a)\
    \ return true;\n        boolean equal = (a==b || a==c || b==c) ? true : false;\n\
    \        return equal;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2g5heebb.java:30)\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Only the base triangle\
    \ is counted.\n        if ((a + b > c) || (b + c > a) || (a + c > b)) {\n    \
    \        return false;\n        }\n        else {\n            int rads = Math.toRadians(180);\n\
    \            double cos = Math.abs(Math.cos(rads));\n            double sin =\
    \ Math.abs(Math.sin(rads));\n\n            int c1 = (a + b) / 2;\n           \
    \ int c2 = (c + a) / 2;\n            int c3 = (c + b) / 2;\n\n            boolean\
    \ areRight = (cos == sin && cos >= 0);\n            boolean areRightAngle = (cos\
    \ <= sin && cos > 0);\n\n            boolean leftAngle = (Math.abs(c1 - c2) <=\
    \ c / 2 &&\n                Math.abs(c3 - c2) <= c / 2);\n\n            boolean\
    \ rightAngle = (Math.abs(c1 - c3) <= c / 2 &&\n                Math.abs(c2 - c3)\
    \ <= c / 2);\n\n            boolean isRightAngle = areRight && areRightAngle &&\
    \ leftAngle && rightAngle;\n\n            return isRightAngle;\n        }\n}\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvp0do6b4.java:22: error: incompatible types: possible lossy conversion\
    \ from double to int\n            int rads = Math.toRadians(180);\n          \
    \                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        List<Integer> sides = new\
    \ ArrayList();\n        sides.add(a);\n        sides.add(b);\n        sides.add(c);\n\
    \        int abc = getAB(sides);\n        double a = (double) abc / 2;\n     \
    \   double b = (double) a / 2;\n        double c = (double) b / 2;\n        if\
    \ (a == b && b == c) {\n            return true;\n        }\n        if (a > b){\n\
    \            return rightAngleTriangle(c, b, a);\n        }\n        if (a > c){\n\
    \            return rightAngleTriangle(b, a , c);\n        }\n        if (b >\
    \ c){\n            return rightAngleTriangle(a, b, c );\n        }\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6o_ngfl.java:21: error: cannot find symbol\n        int abc =\
    \ getAB(sides);\n                  ^\n  symbol:   method getAB(List<Integer>)\n\
    \  location: class Problem\n/tmp/tmpt6o_ngfl.java:22: error: variable a is already\
    \ defined in method rightAngleTriangle(int,int,int)\n        double a = (double)\
    \ abc / 2;\n               ^\n/tmp/tmpt6o_ngfl.java:23: error: variable b is already\
    \ defined in method rightAngleTriangle(int,int,int)\n        double b = (double)\
    \ a / 2;\n               ^\n/tmp/tmpt6o_ngfl.java:24: error: variable c is already\
    \ defined in method rightAngleTriangle(int,int,int)\n        double c = (double)\
    \ b / 2;\n               ^\n/tmp/tmpt6o_ngfl.java:29: error: incompatible types:\
    \ possible lossy conversion from double to int\n            return rightAngleTriangle(c,\
    \ b, a);\n                                      ^\n/tmp/tmpt6o_ngfl.java:32: error:\
    \ incompatible types: possible lossy conversion from double to int\n         \
    \   return rightAngleTriangle(b, a , c);\n                                   \
    \   ^\n/tmp/tmpt6o_ngfl.java:35: error: incompatible types: possible lossy conversion\
    \ from double to int\n            return rightAngleTriangle(a, b, c );\n     \
    \                                 ^\nNote: /tmp/tmpt6o_ngfl.java uses unchecked\
    \ or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n7 errors\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if(a == 0 || b == 0 || c\
    \ == 0) return false; // Triangle of 0 length\n\n        if(a + b > c) return\
    \ false; // Two sides are the same length\n        if(a + c > b) return false;\
    \ // Two sides are the same length\n        if(b + c > a) return false; // Two\
    \ sides are the same length\n\n        double ab = a/b;\n        double ac = a/c;\n\
    \        double bc = b/c;\n\n        // Check if triangle is right angle\n   \
    \     if(Math.sqrt((ab*ab)+(ac*ac)) > (bc*bc)) return false;\n\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgim2za4o.java:33)\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a==0 && b==0 && c==0)\n\
    \            return true;\n        if(a==0 || b==0 || c==0 || Math.abs(a-b)<Math.abs(a-c)\
    \ || Math.abs(a-b)<Math.abs(c-a))\n            return false;\n        if(a==b)\n\
    \            return false;\n        if(Math.abs(a-c)<Math.abs(b-c))\n        \
    \    return false;\n        double ac = a-c;\n        double bc = b-c;\n     \
    \   double bcac = b*c-a*c;\n        double acbc = a*c-b*c;\n        double acbcac\
    \ = acbc - (a*b*c);\n        return Math.sqrt(acbcac*acbcac + (bcac*bcac)<0) &&\
    \ Math.sqrt(bcac*bcac+acbcac*acbcac<0);\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkn1mk_01.java:30: error: incompatible types: boolean cannot be\
    \ converted to double\n        return Math.sqrt(acbcac*acbcac + (bcac*bcac)<0)\
    \ && Math.sqrt(bcac*bcac+acbcac*acbcac<0);\n                                 \
    \                   ^\n/tmp/tmpkn1mk_01.java:30: error: incompatible types: boolean\
    \ cannot be converted to double\n        return Math.sqrt(acbcac*acbcac + (bcac*bcac)<0)\
    \ && Math.sqrt(bcac*bcac+acbcac*acbcac<0);\n                                 \
    \                                                           ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int d = b * b - 4 * a * c;\n\
    \        int sgn = a > b ? 1 : -1;\n\n        if (d > 0)\n            return true;\n\
    \n        if (d == 0) {\n            sgn = -b > c ? 1 : -1;\n            return\
    \ sgn != 0;\n        }\n\n        int x0 = 0, x1 = 1, x2 = 1;\n        double\
    \ y0 = -a, y1 = -c / b;\n\n        if (sgn == -1)\n            while (true) {\n\
    \                x1 += 2;\n                if (x1 >= b)\n                    break;\n\
    \                y1 = -c / (x1 - b);\n            }\n        \n        x0 += sgn;\n\
    \        while (true) {\n            x2 += 2;\n            if (x2 >= b)\n    \
    \            break;\n            y0 = -c / (x2 - b);\n        }\n\n        return\
    \ (sgn == -1 && x1 == b) || (sgn == 1 && x2 == b);\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp89_i_nij.java:50)\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if(b>c || b>a)\n        \
    \    return false;\n        else\n            return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9kbtbwqp.java:23)\n"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int ab = a - b;\n       \
    \ int ac = c - a;\n        int bc = b - c;\n\n        if (bc < ab && ac > bc)\
    \ {\n            System.out.println(\"bc < ab && ac > bc\");\n            return\
    \ true;\n        } else if (ac < ab && ab > ac) {\n            System.out.println(\"\
    ac < ab && ab > ac\");\n            return true;\n        } else {\n         \
    \   System.out.println(\"ac >= ab && ab >= ac\");\n            return false;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvlhpwbk7.java:33)\n"
  stdout: 'ac >= ab && ab >= ac

    '
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here\n\
    \        if(a==0 && b==0 && c==0){\n            return true;\n        }\n    \
    \    else if (a==0 && b==0){\n            return false;\n        }\n        else\
    \ if (a==0 && c==0){\n            return false;\n        }\n        else if (b==0\
    \ && c==0){\n            return false;\n        }\n        else if (a!=0 && b!=0\
    \ && c!=0){\n            if (Math.acos((b*b + c*c - a*a)/(Math.pow(b,2)+Math.pow(c,2)))\
    \ < 1) {\n                return true;\n            }\n            return false;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp__qit8rt.java:36: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // TODO: Complete the function\n\
    \        if ((a+b>c) && (a+c>b) && (a+c>a)) {\n            return true;\n    \
    \    }\n        else return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_7jb17w.java:27)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int rad = (90 - b) * (90\
    \ - b) + (360 - a) * (360 - a) - (360 - c) * (360 - c);\n        int deg = (360\
    \ - b) * (360 - b) + (360 - a) * (360 - a) - (360 - c) * (360 - c);\n        if\
    \ (deg >= 0 && deg <= 90) {\n            return true;\n        }\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnvkkcb1k.java:25)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (b * b) - 4 * (a *\
    \ c) == 0;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk1a7tigo.java:20)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if ((a < 0) && (b < 0) &&\
    \ (c < 0))\n            return true;\n        if ((b < a) && (c < 0))\n      \
    \      return false;\n        if ((c < 0) && (b < 0))\n            return false;\n\
    \        \n        int sum = a+b+c;\n        int prod = a*b*c;\n        \n   \
    \     boolean a = Math.abs(a) < (b+c)/2;\n        boolean b = Math.abs(b) < (a+c)/2;\n\
    \        boolean c = Math.abs(c) < (a+b)/2;\n        \n        if (sum % 2 !=\
    \ 0) {\n            prod *= -1;\n            sum *= -1;\n        }\n        \n\
    \        return ((a != b) && (a != c) && (b != c))\n                || ((a !=\
    \ b) && (b != c) && (c != a));\n}\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpygicoaeg.java:27: error: variable a is already defined in method\
    \ rightAngleTriangle(int,int,int)\n        boolean a = Math.abs(a) < (b+c)/2;\n\
    \                ^\n/tmp/tmpygicoaeg.java:27: error: no suitable method found\
    \ for abs(boolean)\n        boolean a = Math.abs(a) < (b+c)/2;\n             \
    \           ^\n    method Math.abs(int) is not applicable\n      (argument mismatch;\
    \ boolean cannot be converted to int)\n    method Math.abs(long) is not applicable\n\
    \      (argument mismatch; boolean cannot be converted to long)\n    method Math.abs(float)\
    \ is not applicable\n      (argument mismatch; boolean cannot be converted to\
    \ float)\n    method Math.abs(double) is not applicable\n      (argument mismatch;\
    \ boolean cannot be converted to double)\n/tmp/tmpygicoaeg.java:28: error: variable\
    \ b is already defined in method rightAngleTriangle(int,int,int)\n        boolean\
    \ b = Math.abs(b) < (a+c)/2;\n                ^\n/tmp/tmpygicoaeg.java:28: error:\
    \ no suitable method found for abs(boolean)\n        boolean b = Math.abs(b) <\
    \ (a+c)/2;\n                        ^\n    method Math.abs(int) is not applicable\n\
    \      (argument mismatch; boolean cannot be converted to int)\n    method Math.abs(long)\
    \ is not applicable\n      (argument mismatch; boolean cannot be converted to\
    \ long)\n    method Math.abs(float) is not applicable\n      (argument mismatch;\
    \ boolean cannot be converted to float)\n    method Math.abs(double) is not applicable\n\
    \      (argument mismatch; boolean cannot be converted to double)\n/tmp/tmpygicoaeg.java:28:\
    \ error: bad operand types for binary operator '+'\n        boolean b = Math.abs(b)\
    \ < (a+c)/2;\n                                    ^\n  first type:  boolean\n\
    \  second type: int\n/tmp/tmpygicoaeg.java:29: error: variable c is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        boolean c = Math.abs(c) <\
    \ (a+b)/2;\n                ^\n/tmp/tmpygicoaeg.java:29: error: no suitable method\
    \ found for abs(boolean)\n        boolean c = Math.abs(c) < (a+b)/2;\n       \
    \                 ^\n    method Math.abs(int) is not applicable\n      (argume"
  stdout: ''
  timestamp: 1660011267
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if ((a > b) && (b > c)) {\n\
    \            double x = (a + b + c) / 2;\n            double delta = (b - a);\n\
    \            double angle = Math.atan2(delta, (x * b + x * c - a * c)) / Math.PI;\n\
    \            return Math.abs(angle) < 0.5;\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivapb__b.java:26)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int a2 = a * a;\n       \
    \ int b2 = b * b;\n        int c2 = c * c;\n        int det = a2 + b2 + c2;\n\
    \        if(det != 0) {\n            // If any of the sides is 0 then they are\
    \ not valid triangle\n            // Return False to indicate that the input is\
    \ not a triangle\n            return false;\n        }\n        // If all of the\
    \ sides are valid then they are valid triangle\n        // If one of them is 0\
    \ then the triangle is NOT right-angle\n        // Return True to indicate that\
    \ the input is a triangle\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn2dnkvv5.java:32)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean result = (Math.acos(b\
    \ * b + c * c - a * a) > 1);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmtaaww2c.java:21)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean isRightAngleTriangle\
    \ = (Math.sqrt(a*a + b*b) >= (a + b + c));\n        System.out.println(\"isRightAngleTriangle:\
    \ \" + isRightAngleTriangle);\n        return isRightAngleTriangle;\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprb85xr6n.java:22)\n"
  stdout: 'isRightAngleTriangle: false

    '
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (b - a) * (c - b)\
    \ <= (2 * a) * (a + b + c);\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnme9re79.java:21)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if((a + b <= c && a + c <=\
    \ b && b + c <= a) || (a + b <= c && a + c <= b && b + c >= a)){\n           \
    \ return true;\n        }else{\n            return false;\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5izi9u_l.java:24)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here\n\
    \        int d1 = Math.sqrt(a * a + b * b - c * c);\n        int d2 = Math.abs((a\
    \ * b) - (c * d1));\n        int d3 = Math.abs((a * c) - (b * d1));\n        return\
    \ (d1 > d2 && d1 > d3) == (a * b + c * d2 > a * c + b * d3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5k4yzs_4.java:18: error: incompatible types: possible lossy conversion\
    \ from double to int\n        int d1 = Math.sqrt(a * a + b * b - c * c);\n   \
    \                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Code here\n        if((Math.abs\
    \ (a-b)*Math.abs (c-b)) > Math.abs (a-c) * Math.abs (b-c))\n            return\
    \ true;\n        else \n            return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphodhagxh.java:24)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a==b){\n            if\
    \ (b==c){\n                return true;\n            }\n            return false;\n\
    \        }\n        else if (a==c || b==c){\n            return true;\n      \
    \  }\n        else if (b==a || c==a){\n            return true;\n        }\n \
    \       return false;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp74p38fw4.java:32)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a * b > c) {\n      \
    \      return true;\n        }\n        if (a * b < c) {\n            return false;\n\
    \        }\n        if ((a != b) && (a != c)) {\n            return false;\n \
    \       }\n        if ((b != c) && (b != a)) {\n            return false;\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9htpfd1.java:35)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        System.out.println(a+\",\
    \ \"+b+\", \"+c);\n        if(a==b || a==c || b==c)\n        {\n            return\
    \ true;\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpti3apbp2.java:25)\n"
  stdout: '3, 4, 5

    '
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if ((b > a) && (c > b)) {\n\
    \            int ac = a - c;\n            int bc = b - c;\n            if (ac\
    \ > bc) {\n                return true;\n            }\n        }\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprjo6p8ob.java:27)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int ab = a-b;\n        int\
    \ ac = c-a;\n        int bc = b-c;\n        int acab = ac-bab;\n        int bcab\
    \ = bc-bab;\n        boolean result = true;\n        if(ab != 0) {\n         \
    \   if(acab != 0) {\n                if(bcab != 0) {\n                    result\
    \ = false;\n                }\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqgoccpg9.java:20: error: cannot find symbol\n        int acab =\
    \ ac-bab;\n                      ^\n  symbol:   variable bab\n  location: class\
    \ Problem\n/tmp/tmpqgoccpg9.java:21: error: cannot find symbol\n        int bcab\
    \ = bc-bab;\n                      ^\n  symbol:   variable bab\n  location: class\
    \ Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int a2 = a*a;\n        int\
    \ b2 = b*b;\n        int c2 = c*c;\n        long a3 = a2 + b2 + c2;\n        long\
    \ b3 = a2 + b2 + c2;\n        long c3 = a2 + b2 + c2;\n        long absA3 = Math.abs(a3);\n\
    \        long absB3 = Math.abs(b3);\n        long absC3 = Math.abs(c3);\n    \
    \    long a4 = a2 + b2;\n        long b4 = a2 + c2;\n        long c4 = a2 + c2;\n\
    \        long a5 = a2 + c2;\n        long b5 = a2 + b2;\n        long c5 = a2\
    \ + b2;\n        long a6 = a2 + c2;\n        long b6 = a2 + c2;\n        long\
    \ c6 = a2 + c2;\n        long a11 = a3 + b3 + c3;\n        long b11 = a3 + b3\
    \ + c3;\n        long c11 = a3 + b3 + c3;\n        long a12 = a3 + b3;\n     \
    \   long b12 = a3 + c3;\n        long c12 = a3 + c3;\n        long a13 = a3 +\
    \ c3;\n        long b13 = a3 + b3;\n        long c13 = a3 + b3;\n        long\
    \ a14 = a3 + c3;\n        long b14 = a3 + c3;\n        long c14 = a3 + c3;\n \
    \       long a15 = a3 + c3;\n        long b15 = a3 + b3;\n        long c15 = a3\
    \ + b3;\n        long a16 = a3 + c3;\n        long b16 = a3 + c3;\n        long\
    \ c16 = a3 + c3;\n        long a17 = a3 + c3;\n        long b17 = a3 + b3;\n \
    \       long c17 = a3 + b3;\n        long a18 = a3 + b3;\n        long b18 = a3\
    \ + c3;\n        long c18 = a3 + c3;\n        long a19 = a3 + c3;\n        long\
    \ b19 = a3 + b3;\n        long c19 = a3 + b3;\n        long a20 = a3 + b3;\n \
    \       long b20 = a3 + c3;\n        long c20 = a3 + c3;\n        long a21 = a3\
    \ + b3;\n        long b21 = a3 + c3;\n        long c21 = a3 + c3;\n        long\
    \ a22 = a3 + c3;\n        long b22 = a3 + b3;\n        long c22 = a3 + b3;\n \
    \       long a23 = a3 + b3;\n        long b23 = a3 + c3;\n        long c23 = a3\
    \ + c\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa846k7ux.java:73: error: ';' expected\n        long c23 = a3 +\
    \ c\n                         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((a + b > c) && (a\
    \ + c > b) && (b + c > a));\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvg0ib6re.java:23)\n"
  stdout: ''
  timestamp: 1660011263
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean check = true;\n \
    \       if (Math.acos((b*b + c*c-a*a) / (2*b*c)) == -1) {\n            check =\
    \ false;\n        }\n        return check;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj7pwbk07.java:25)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean bIsSameSide = (b\
    \ == c) || ((b != 0) && (b == a || b == c - 1));\n        boolean aIsSameSide\
    \ = (a, b, c) != (a < 0 || b < 0 || c < 0);\n        boolean cIsSameSide = (b,\
    \ c, a) != (a < 0 || b < 0 || c < 0);\n        return bIsSameSide && aIsSameSide\
    \ && cIsSameSide;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp244vfurw.java:18: error: -> expected\n        boolean aIsSameSide\
    \ = (a, b, c) != (a < 0 || b < 0 || c < 0);\n                                \
    \       ^\n/tmp/tmp244vfurw.java:18: error: illegal start of expression\n    \
    \    boolean aIsSameSide = (a, b, c) != (a < 0 || b < 0 || c < 0);\n         \
    \                               ^\n/tmp/tmp244vfurw.java:19: error: -> expected\n\
    \        boolean cIsSameSide = (b, c, a) != (a < 0 || b < 0 || c < 0);\n     \
    \                                  ^\n/tmp/tmp244vfurw.java:19: error: illegal\
    \ start of expression\n        boolean cIsSameSide = (b, c, a) != (a < 0 || b\
    \ < 0 || c < 0);\n                                        ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return a * a + b * b == c\
    \ * c;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptbmjuvcg.java:22)\n"
  stdout: ''
  timestamp: 1660011095
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        \n        if ((a + b > c)\
    \ || (c > a) || (b + c > a)) {\n            return false;\n        }\n       \
    \ \n        return true;\n}\n    public static void main(String[] args) {\n  \
    \  assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyxt1zbh0.java:25)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int sum = 0;\n        sum+=b;\n\
    \        sum+=c;\n        sum+=a;\n        return sum==0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmoe4p2q.java:24)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean result = false;\n\
    \n        int[] arr = new int[3];\n        arr[0] = a;\n        arr[1] = b;\n\
    \        arr[2] = c;\n\n        if (b > 0 && c > 0 && a > b) {\n            if\
    \ (arr[1] >= arr[0] && arr[2] >= arr[0]) {\n                result = (arr[0] -\
    \ arr[1]) == (arr[2] - arr[1]);\n            }\n        }\n\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppjjwpzp_.java:33)\n"
  stdout: ''
  timestamp: 1660011268
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((a * b + c) * (a\
    \ + b + c)) % 180 == 0;\n}\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0evycxo0.java:20)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean result = false;\n\
    \        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n            result\
    \ = true;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprofuzi2z.java:27)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // write your logic\n   \
    \     boolean ret = false;\n        if ((b * b) - (4 * a * c) == 0) {\n      \
    \      if ((-b) / Math.sqrt(Math.pow(b ,2)+Math.pow(c, 2)) == 0) {\n         \
    \       if (a <= b) {\n                    if (a <= c) {\n                   \
    \     ret = true;\n                    }\n                } else {\n         \
    \           if (c <= b) {\n                        ret = true;\n             \
    \       }\n                }\n            }\n        }\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphx8r4lhr.java:35)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if(a==0 || b==0 || c==0)\
    \ {\n            return false;\n        }\n        if(a>=b+c) {\n            return\
    \ false;\n        }\n        if(a>=c-b) {\n            return false;\n       \
    \ }\n        if(a>=b+c) {\n            return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpisvkhx_o.java:32)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your logic here\n\
    \        return ((a + b > c) || (a + c > b) || (b + c > a));\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcogderei.java:22)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (((a + b) > c && (b\
    \ + c) > a && (c + a) > b) || ((b + c) > a && (c + a) > b && (a + b) > c));\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcoyth3d_.java:23)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (Math.abs(a - b) > Math.abs(a\
    \ - c) || Math.abs(b - c) > Math.abs(b - a)) {\n            return false;\n  \
    \      }\n        double area_triangle = Math.abs((a * a + b * b - c * c) /\n\
    \            Math.pow((a + b + c), 2));\n        return area_triangle > 0;\n}\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkl2rtifg.java:25)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here\n\
    \        if(a*a + b*b == c*c)\n        {\n            return true;\n        }\n\
    \        else\n        {\n            return false;\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw0ecxok0.java:30)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a == b)\n           \
    \ return a == c;\n\n        if (a == c)\n            return b == c;\n\n      \
    \  if (b == c)\n            return false;\n\n        if (Math.abs(b - a) > Math.abs(c\
    \ - a)) {\n            double angle = (Math.atan2(b, a) + Math.PI) % (2 * Math.PI);\n\
    \            if (Math.abs(angle - Math.PI) < 1e-10)\n                return true;\n\
    \            return false;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfh31ovfz.java:35)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // write your code here\n\
    \        if ((Math.abs (a) + Math.abs (b) + Math.abs (c)) % 2 != 0) {\n      \
    \      return false;\n        }\n        return true;\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpydx4ecq1.java:25)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // write your code in Java\
    \ SE 8\n        return (b==a || b==c || c==a || c==c);\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6w34_8uh.java:22)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here\n\
    \        double triangle_length_side1=Math.sqrt(a*a+b*b);\n        double triangle_length_side2=Math.sqrt(c*c+b*b);\n\
    \        double triangle_length_side3=Math.sqrt(a*a+c*c);\n        return Math.abs(triangle_length_side1-triangle_length_side2)==0.0\
    \ && \n                Math.abs(triangle_length_side2-triangle_length_side3)==0.0\
    \ && \n                Math.abs(triangle_length_side3-triangle_length_side1)==0.0;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpehj3dtob.java:26)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((Math.sqrt(a * a\
    \ + b * b) == (a + b + c)) || (Math.sqrt(a * a + c * c) == (a + c + b)));\n}\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4gb3rjp.java:20)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double l = (Math.sqrt(Math.pow(b,\
    \ 2)) + Math.sqrt(Math.pow(c, 2)) - (a * Math.sqrt(Math.pow(a, 2)) - b * Math.sqrt(Math.pow(b,\
    \ 2))));\n        double u = (Math.sqrt(Math.pow(c, 2)) + Math.sqrt(Math.pow(a,\
    \ 2)) - (b * Math.sqrt(Math.pow(b, 2)) - a * Math.sqrt(Math.pow(c, 2))));\n  \
    \      if(l != 0)\n            return true;\n        else if((Math.abs(u) == Math.sqrt(Math.pow(a,\
    \ 2)) + Math.sqrt(Math.pow(b, 2)))) \n            return true;\n        else{\n\
    \            return false;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqadcq6b.java:29)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int abSq = a*a + b*b;\n \
    \       int acSq = a*c + b*b;\n        int bcSq = b*c + a*a;\n        return abSq\
    \ + acSq + bcSq == acSq;\n}\n    public static void main(String[] args) {\n  \
    \  assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpntntnysm.java:23)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean rightAngle;\n   \
    \     double abc = ((b * b) + (a * c));\n        double abcSqr = abc * abc;\n\
    \        double acbc = (a * c) - (b * b);\n        double acbcSqr = acbc / abcSqr;\
    \ // sqrt of the difference of abc and acbc\n        rightAngle = (Math.sqrt(abcSqr\
    \ - acbcSqr) == 1) ? true : false;\n        return rightAngle;\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm9k6rv31.java:26)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a == 0)\n           \
    \ return (a > b && a > c) || (a < b && a < c);\n        else if (b == 0)\n   \
    \         return (b > a && b > c) || (b < a && b < c);\n        else\n       \
    \     return (c > a && c > b) || (c < a && c < b);\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8gv8m7ox.java:26)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // If the two sides are equal,\
    \ the angle is 0 degree\n        if (a * b == c) {\n            return true;\n\
    \        }\n        int angle = Math.abs(90 - Math.acos((a * b + c) / (2.0 * (a\
    \ * b))));\n        // If the angle is greater than 180, return False\n      \
    \  if (angle > 180) {\n            return false;\n        }\n        // If the\
    \ two sides are equal, the angle is 0 degree\n        if (a == b) {\n        \
    \    return true;\n        }\n        // If the two sides are equal, the angle\
    \ is 0 degree\n        if (a == c) {\n            return true;\n        }\n  \
    \      // If the two sides are equal, the angle is 0 degree\n        if (b ==\
    \ c) {\n            return true;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprrpvykp9.java:21: error: incompatible types: possible lossy conversion\
    \ from double to int\n        int angle = Math.abs(90 - Math.acos((a * b + c)\
    \ / (2.0 * (a * b))));\n                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if ((a + b > c) && (a + c\
    \ > b) && (b + c > a)) return true;\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuhwaykze.java:24)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean flag = true;\n  \
    \      double area;\n        if( a > b + c || a > c + b )\n        {\n       \
    \     flag = false;\n        }\n        else if(b > a + c || b > c + a )\n   \
    \     {\n            flag = false;\n        }\n        else\n        {\n     \
    \       area = (a*b + b*c + c*a) / 2.0;\n        }\n        return flag;\n}\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp76ph8_wc.java:35)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int aSideLength, aAngle,\
    \ aAngleDiff, aAngleSum;\n        int bSideLength, bAngle, bAngleDiff, bAngleSum;\n\
    \        int cSideLength, cAngle, cAngleDiff, cAngleSum;\n        aSideLength\
    \ = a;\n        bSideLength = b;\n        cSideLength  = c;\n        /*\n    \
    \    Calculate the angles of the sides\n        */\n        aAngle = Math.toRadians(360/(aSideLength/2));\n\
    \        bAngle = Math.toRadians(360/(bSideLength/2));\n        cAngle = Math.toRadians(360/(cSideLength/2));\n\
    \        aAngleDiff = aAngle - bAngle;\n        bAngleDiff = bAngle - cAngle;\n\
    \        cAngleDiff = cAngle - aAngle;\n        /*\n        Calculate the sum\
    \ of angles of the sides\n        */\n        aAngleSum = aAngle + bAngle + cAngle;\n\
    \        bAngleSum = bAngle + cAngle + aAngle;\n        cAngleSum = cAngle + aAngle\
    \ + bAngle;\n        /*\n        Check if sum of angles is equal to the difference\
    \ between sum and difference\n        */\n        /*\n        Check if sum of\
    \ angles is equal to difference of sum and difference of sum\n        */\n   \
    \     if(aAngleSum == aAngleDiff && aAngleSum == bAngleDiff && aAngleSum == cAngleDiff){\n\
    \            return true;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_xbp7bww.java:26: error: incompatible types: possible lossy conversion\
    \ from double to int\n        aAngle = Math.toRadians(360/(aSideLength/2));\n\
    \                               ^\n/tmp/tmp_xbp7bww.java:27: error: incompatible\
    \ types: possible lossy conversion from double to int\n        bAngle = Math.toRadians(360/(bSideLength/2));\n\
    \                               ^\n/tmp/tmp_xbp7bww.java:28: error: incompatible\
    \ types: possible lossy conversion from double to int\n        cAngle = Math.toRadians(360/(cSideLength/2));\n\
    \                               ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int side1 = Math.sqrt(a *\
    \ a + b * b);\n        int side2 = Math.sqrt(c * c + a * a);\n        return side1\
    \ == side2 || side1 == side2 || side1 == side2 || side1 == side2 && side1 != side2;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmrrgacbc.java:17: error: incompatible types: possible lossy conversion\
    \ from double to int\n        int side1 = Math.sqrt(a * a + b * b);\n        \
    \                     ^\n/tmp/tmpmrrgacbc.java:18: error: incompatible types:\
    \ possible lossy conversion from double to int\n        int side2 = Math.sqrt(c\
    \ * c + a * a);\n                             ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int ab = a - b;\n       \
    \ int ac = c - a;\n        int bc = b - c;\n        int acb = ac * bc;\n     \
    \   int abc = ab * bc;\n        if (acb > abc)\n            return true;\n   \
    \     else\n            return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4pixazf.java:28)\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int[] a1 = new int[a];\n\
    \        int[] b1 = new int[b];\n        int[] c1 = new int[c];\n        for (int\
    \ i = 0; i < a1.length; i++) {\n            System.out.println(i + \" \" + a[i]);\n\
    \        }\n        for (int i = 0; i < b1.length; i++) {\n            System.out.println(i\
    \ + \" \" + b[i]);\n        }\n        for (int i = 0; i < c1.length; i++) {\n\
    \            System.out.println(i + \" \" + c[i]);\n        }\n        if (a1\
    \ == b1 || a1 == c1 || b1 == c1) {\n            System.out.println(\"a1 == b1\"\
    );\n        }\n        if (a1 == b1 || b1 == c1 || a1 == c1) {\n            System.out.println(\"\
    a1 == b1\");\n        }\n        if (a1 == b1 || a1 == c1 || b1 == c1) {\n   \
    \         System.out.println(\"a1 == b1\");\n        }\n        if (a == b &&\
    \ b == c || a == c && b == c) {\n            System.out.println(\"a == b\");\n\
    \        }\n        if (a == b || a == c || b == c) {\n            System.out.println(\"\
    a == b\");\n        }\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa92im1bo.java:21: error: array required, but int found\n      \
    \      System.out.println(i + \" \" + a[i]);\n                               \
    \           ^\n/tmp/tmpa92im1bo.java:24: error: array required, but int found\n\
    \            System.out.println(i + \" \" + b[i]);\n                         \
    \                 ^\n/tmp/tmpa92im1bo.java:27: error: array required, but int\
    \ found\n            System.out.println(i + \" \" + c[i]);\n                 \
    \                         ^\n/tmp/tmpa92im1bo.java:44: error: incompatible types:\
    \ int cannot be converted to boolean\n        return 0;\n               ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int ad = (b * b) - (4 * a\
    \ * c);\n        int ac = (2 * a * c) - (a * b);\n        if (ad < 0 && ac < 0)\
    \ {\n            return true;\n        } else if (ad > 0 && ac > 0) {\n      \
    \      return false;\n        } else if (ad > 0 && ac < 0) {\n            return\
    \ false;\n        } else if (ad < 0 && ac > 0) {\n            return true;\n \
    \       }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4g43ac_b.java:32)\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return b * b == c * c &&\
    \ b * a == c * c / 2;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4wrqn5kk.java:20)\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if ((b < 0) || (c < 0))\n\
    \            return false;\n        if ((b - c) < 0)\n            return true;\n\
    \        double sum = (a + b + c) * Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n\
    \        double angle = Math.atan2(sum, (b * b) - (c * c));\n        if ((angle\
    \ >= 0) && (angle <= Math.PI))\n            return true;\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivyguxsn.java:29)\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean isRightAngled = false;\n\
    \        if ((a == 0 && b == 0) || (b == 0 && c == 0) || (a == 0 && c == 0)) {\n\
    \            isRightAngled = false;\n        } else if ((a + b > c && c != 0)\
    \ || (b + c > a && a != 0) || (c + a > b && b != 0)) {\n            isRightAngled\
    \ = true;\n        } else {\n            isRightAngled = false;\n        }\n \
    \       return isRightAngled;\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3u22t8tw.java:29)\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean result = false;\n\
    \        if (Math.abs(a) > (Math.abs(b) + Math.abs(c))) {\n            result\
    \ = true;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg73chwrh.java:24)\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a>0 && b>0 && c>0) {\n\
    \            int l1=Math.min(a, b);\n            int l2=Math.min(c, b);\n    \
    \        int l3=Math.min(a, c);\n            return (l1>l2 && l1==l3);\n     \
    \   }\n        else {\n            return false;\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ghbwpyq.java:28)\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int side1 = Math.sqrt(a*a\
    \ + b*b);\n        int side2 = Math.sqrt(c*c + a*a);\n        if (side1==side2)\
    \ {\n            return true;\n        }\n        else {\n            return false;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppwvigqgi.java:17: error: incompatible types: possible lossy conversion\
    \ from double to int\n        int side1 = Math.sqrt(a*a + b*b);\n            \
    \                 ^\n/tmp/tmppwvigqgi.java:18: error: incompatible types: possible\
    \ lossy conversion from double to int\n        int side2 = Math.sqrt(c*c + a*a);\n\
    \                             ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (b - a) * (b - c)\
    \ <= 0;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2q8_k52.java:21)\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int de = a + b + c;\n   \
    \     return a >= b >= c && b >= a >= c && c >= a >= b;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp87ynbyqh.java:18: error: bad operand types for binary operator\
    \ '>='\n        return a >= b >= c && b >= a >= c && c >= a >= b;\n          \
    \            ^\n  first type:  boolean\n  second type: int\n/tmp/tmp87ynbyqh.java:18:\
    \ error: bad operand types for binary operator '>='\n        return a >= b >=\
    \ c && b >= a >= c && c >= a >= b;\n                                     ^\n \
    \ first type:  boolean\n  second type: int\n/tmp/tmp87ynbyqh.java:18: error: bad\
    \ operand types for binary operator '>='\n        return a >= b >= c && b >= a\
    \ >= c && c >= a >= b;\n                                                    ^\n\
    \  first type:  boolean\n  second type: int\n3 errors\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        Triangle triangle = new Triangle(a,\
    \ b, c);\n        boolean isRightAngle = false;\n        // Check if any angle\
    \ is 90 degree\n        if(triangle != null)\n            isRightAngle = triangle.getAngle()\
    \ == 90;\n        return isRightAngle;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzq_wf0u9.java:17: error: cannot find symbol\n        Triangle triangle\
    \ = new Triangle(a, b, c);\n        ^\n  symbol:   class Triangle\n  location:\
    \ class Problem\n/tmp/tmpzq_wf0u9.java:17: error: cannot find symbol\n       \
    \ Triangle triangle = new Triangle(a, b, c);\n                               \
    \ ^\n  symbol:   class Triangle\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean bIsRightAngle = (a\
    \ + b >= c);\n        boolean cIsRightAngle = (a + c >= b);\n        boolean aIsRightAngle\
    \ = (b + c >= a);\n        return (bIsRightAngle || cIsRightAngle || aIsRightAngle);\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeyihy9jw.java:24)\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n      double sum = a+b+c;\n     \
    \ if (sum < 0) return false;\n      return ((Math.sqrt(Math.pow(b, 2)-Math.pow(c,\
    \ 2))==(Math.pow(a, 2)+Math.pow(c, 2))) && (Math.sqrt(Math.pow(b, 2)+Math.pow(c,\
    \ 2))==(Math.pow(a, 2)-Math.pow(c, 2))));\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmz8czq5t.java:22)\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        final int AB = a - b;\n \
    \       final int BC = b - c;\n        final int AC = a - c;\n\n        return\
    \ ( (AB >= 0 && BC >= 0) || (AC >= 0 && BC < 0));\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4kojml5b.java:24)\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Create arrays for sides\n\
    \        int[] side1 = new int[2];\n        int[] side2 = new int[2];\n      \
    \  int[] side3 = new int[2];\n        side1[0] = a;\n        side1[1] = b;\n \
    \       side2[0] = c;\n        side2[1] = a;\n        side3[0] = a;\n        side3[1]\
    \ = c;\n\n        // Sort sides\n        Arrays.sort(side1);\n        Arrays.sort(side2);\n\
    \        Arrays.sort(side3);\n\n        // Find if all sides are equal\n     \
    \   if (side1[0] == side2[0] && side1[1] == side2[1] && side1[0] == side3[0] &&\
    \ side1[1] == side3[1]) {\n            return true;\n        }\n        else {\n\
    \            return false;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6t0yi1w.java:42)\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a == b) {\n         \
    \   return c == 0;\n        } else if (a < b) {\n            return c > b || c\
    \ > (a + b) //(a > b && (c > (a + b))\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf4etir5v.java:20: error: ';' expected\n            return c > b\
    \ || c > (a + b) //(a > b && (c > (a + b))\n                                 \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n       int s = (a+b+c)/2;\n     \
    \  return Math.sqrt(s*(s-a)*(s-b)*(s-c)) == Math.abs(a+b+c-s);\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gq__1i_.java:23)\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int angle = (int)Math.toDegrees(Math.acos((a\
    \ * b * c) / ((a * a) + (b * b) + (c * c))));\n        return angle >= 90 && angle\
    \ <= 270;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5b6klep.java:21)\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(c, 2)) == Math.pow(a, 2)) {\n            return true;\n      \
    \  }\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplmwb604r.java:23)\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int sideA = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n        int sideB = Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n        int sideC = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n    \
    \    double sideAB = Math.pow(sideA, 2);\n        double sideBC = Math.pow(sideB,\
    \ 2);\n        double sideAC = Math.pow(sideC, 2);\n        double acosine = Math.acos((sideAB\
    \ / sideBC + sideAC / sideAC) / 2.0);\n        if (acosine == -1) {\n        \
    \    return false;\n        }\n        if (acosine == 1) {\n            return\
    \ true;\n        }\n        if (acosine > 1) {\n            return false;\n  \
    \      }\n        double angle = Math.atan2(b - c, a - c) * 180 / Math.PI;\n \
    \       if (angle > 90) {\n            return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp55i88oux.java:17: error: incompatible types: possible lossy conversion\
    \ from double to int\n        int sideA = Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2));\n                             ^\n/tmp/tmp55i88oux.java:18: error: incompatible\
    \ types: possible lossy conversion from double to int\n        int sideB = Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n                             ^\n/tmp/tmp55i88oux.java:19:\
    \ error: incompatible types: possible lossy conversion from double to int\n  \
    \      int sideC = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n             \
    \                ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here.\n\
    \        double sideOne = a / 2;\n        double sideTwo = c / 2;\n        double\
    \ sideThree = b / 2;\n        double sideTotal = sideOne + sideTwo + sideThree;\n\
    \        boolean result = true;\n        if (sideOne > 0 && sideTwo > 0 && sideThree\
    \ > 0)\n        {\n            if (sideTotal == sideOne + sideTwo)\n         \
    \       result = true;\n            else if (sideTotal == sideOne + sideTwo +\
    \ sideThree)\n                result = true;\n            else if (sideTotal ==\
    \ sideOne + sideTwo + sideThree + sideFour)\n                result = true;\n\
    \            else\n                result = false;\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyiccednd.java:29: error: cannot find symbol\n            else if\
    \ (sideTotal == sideOne + sideTwo + sideThree + sideFour)\n                  \
    \                                                ^\n  symbol:   variable sideFour\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if ((b * b) - (4 * a * c)\
    \ == 0) {\n            return true;\n        }\n        else if ((b * b) - (4\
    \ * a * c) > 0) {\n            return false;\n        }\n        else {\n    \
    \        // Calculate the third angle.\n            double theta = Math.abs(Math.tan((b\
    \ - c) / (2 * a)));\n\n            double third = (a + b + c) * Math.sqrt(3) /\
    \ 2 / a;\n\n            double thirdAngle = Math.acos(third);\n\n            if\
    \ (Math.acos((b - c) / (2 * a)) < 0) {\n                thirdAngle = thirdAngle\
    \ + 2 * Math.PI;\n            }\n            if (thirdAngle > theta) {\n     \
    \           return false;\n            }\n            else if (thirdAngle <= theta)\
    \ {\n                return true;\n            }\n            else {\n       \
    \         return false;\n            }\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7gl8bfe.java:46)\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (Math.sqrt((a*a + b*b))\
    \ < (a*a + c*c)) {\n            return false;\n        } else {\n            double\
    \ angle1 = Math.acos((b*b + c*c - a*a)/(-2*a*a));\n            double angle2 =\
    \ Math.acos((b*b + c*c - a*a)/(2*a*a));\n            double angle3 = Math.acos((b*b\
    \ - c*c + a*a)/(2*a*a));\n            return (angle1 > angle2 || angle2 > angle3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nnki03y.java:27)\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your code here.\n\
    \        double x1 = Math.pow(b, 2);\n        double y1 = Math.pow(a, 2);\n  \
    \      double z1 = Math.pow(c, 2);\n        double x2 = Math.pow(c, 2);\n    \
    \    double y2 = Math.pow(a, 2);\n        double z2 = Math.pow(b, 2);\n      \
    \  double x3 = Math.pow(a, 2);\n        double y3 = Math.pow(c, 2);\n        double\
    \ z3 = Math.pow(b, 2);\n        double x4 = Math.pow(a, 2);\n        double y4\
    \ = Math.pow(b, 2);\n        double z4 = Math.pow(a, 2);\n        double x1 =\
    \ Math.pow(b, 2);\n        double y1 = Math.pow(a, 2);\n        double z1 = Math.pow(c,\
    \ 2);\n        double x2 = Math.pow(c, 2);\n        double y2 = Math.pow(a, 2);\n\
    \        double z2 = Math.pow(b, 2);\n        double x3 = Math.pow(a, 2);\n  \
    \      double y3 = Math.pow(c, 2);\n        double z3 = Math.pow(b, 2);\n    \
    \    double x4 = Math.pow(a, 2);\n        double y4 = Math.pow(b, 2);\n      \
    \  double z4 = Math.pow(a, 2);\n        double x1 = Math.pow(b, 2);\n        double\
    \ y1 = Math.pow(a, 2);\n        double z1 = Math.pow(c, 2);\n        double x2\
    \ = Math.pow(c, 2);\n        double y2 = Math.pow(a, 2);\n        double z2 =\
    \ Math.pow(b, 2);\n        double x3 = Math.pow(a, 2);\n        double y3 = Math.pow(c,\
    \ 2);\n        double z3 = Math.pow(b, 2);\n        double x4 = Math.pow(a, 2);\n\
    \        double y4 = Math.pow(b, 2);\n        double z4 = Math.pow(a, 2);\n  \
    \      double x1 = Math.pow(b, 2);\n        double y1 = Math.pow(a, 2);\n    \
    \    double z1 = Math.pow(c, 2);\n        double x2 = Math.pow(c, 2);\n      \
    \  double y2 = Math.pow(a, 2);\n        double z2 = Math.pow(b, 2);\n        double\
    \ x3 = Math.pow(a, 2);\n        double y3 = Math.pow(c, 2);\n        double z3\
    \ = Math.pow(b, 2);\n        double x4 = Math.pow(a, 2);\n        double y4 =\
    \ Math.pow(b, 2);\n        double z4 = Math.pow(a, 2);\n        double x1 = Math.pow(b,\
    \ 2);\n        double y1 = Math.pow(a, 2);\n        double z1 = Math.pow(c, 2);\n\
    \        double x2 = Math.pow(c, 2);\n        double y2 = Math.pow(a, 2);\n  \
    \      double z2 = Math.pow(b, 2);\n        double x3 = Math.pow(a, 2);\n    \
    \    double y3 = Math.pow(c, 2);\n        double z3 = Math.pow(b, 2);\n      \
    \  double x4 = Math.pow(a, 2);\n        double y4 = Math.pow(b, 2);\n        \n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp9vsvm5o.java:30: error: variable x1 is already defined in method\
    \ rightAngleTriangle(int,int,int)\n        double x1 = Math.pow(b, 2);\n     \
    \          ^\n/tmp/tmpp9vsvm5o.java:31: error: variable y1 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double y1 = Math.pow(a, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:32: error: variable z1 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double z1 = Math.pow(c, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:33: error: variable x2 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double x2 = Math.pow(c, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:34: error: variable y2 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double y2 = Math.pow(a, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:35: error: variable z2 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double z2 = Math.pow(b, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:36: error: variable x3 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double x3 = Math.pow(a, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:37: error: variable y3 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double y3 = Math.pow(c, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:38: error: variable z3 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double z3 = Math.pow(b, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:39: error: variable x4 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double x4 = Math.pow(a, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:40: error: variable y4 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double y4 = Math.pow(b, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:41: error: variable z4 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double z4 = Math.pow(a, 2);\n\
    \               ^\n/tmp/tmpp9vsvm5o.java:42: error: variable x1 is already defined\
    \ in method rightAngleTriangle(int,int,int)\n        double x1 = Math.pow(b, 2)"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean result = false;\n\
    \        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n            result\
    \ = true;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprofuzi2z.java:27)\n"
  stdout: ''
  timestamp: 1660011269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int rads = Math.toDegrees(Math.atan2(b,\
    \ a));\n        int degs = Math.toDegrees(rads);\n        boolean rt = true;\n\
    \        if ((degs >= 0 && degs < 91) || (degs < -91 && degs >= -90)) {\n    \
    \        rt = false;\n        }\n        return rt && a == c && b == c;\n}\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlunol_o.java:17: error: incompatible types: possible lossy conversion\
    \ from double to int\n        int rads = Math.toDegrees(Math.atan2(b, a));\n \
    \                                ^\n/tmp/tmpwlunol_o.java:18: error: incompatible\
    \ types: possible lossy conversion from double to int\n        int degs = Math.toDegrees(rads);\n\
    \                                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return ((b*b - a*a) > (b*c\
    \ - a*b));\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxammp5dg.java:20)\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return a + b > c || a + c\
    \ > b || b + c > a;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcnpz8hnl.java:21)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a==b && b==c) return\
    \ true;\n        if (a==c && c==b) return true;\n        if (a==c && c==a) return\
    \ true;\n        double d = Math.toDegrees(Math.acos((b * b + c * c - a * a)/Math.sqrt(b\
    \ * b + c * c)));\n        return (d >= 0 && d <= 180);\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplzkgzuxz.java:24)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double ad = Math.sqrt((b*b)-(4*a*c));\n\
    \        double bc = Math.sqrt((b*b)-(4*a*a));\n        if (ad >= bc) {\n    \
    \        return true;\n        } else {\n            return false;\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm0206fgr.java:26)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2)) == Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2)) && Math.pow(a,\
    \ 2) + Math.pow(b, 2) == Math.pow(c, 2))\n            return true;\n        else\n\
    \            return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfy5k2m5x.java:23)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        System.out.println(\"a: \"\
    \ + a + \", b: \" + b + \", c: \" + c);\n        if (a == 0 || b == 0 || c ==\
    \ 0) {\n            return false;\n        }\n        if ((a + b > c) || (a +\
    \ c > b) || (b + c > a)) {\n            return false;\n        }\n        System.out.println(\"\
    a: \" + ((a + b > c) * (a + c > b) * (b + c > a)));\n        System.out.println(\"\
    b: \" + ((a + b > c) * (a + c > b) * (b + c > a)));\n        System.out.println(\"\
    c: \" + ((a + b > c) * (a + c > b) * (b + c > a)));\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb4tja51v.java:24: error: bad operand types for binary operator\
    \ '*'\n        System.out.println(\"a: \" + ((a + b > c) * (a + c > b) * (b +\
    \ c > a)));\n                                                ^\n  first type:\
    \  boolean\n  second type: boolean\n/tmp/tmpb4tja51v.java:25: error: bad operand\
    \ types for binary operator '*'\n        System.out.println(\"b: \" + ((a + b\
    \ > c) * (a + c > b) * (b + c > a)));\n                                      \
    \          ^\n  first type:  boolean\n  second type: boolean\n/tmp/tmpb4tja51v.java:26:\
    \ error: bad operand types for binary operator '*'\n        System.out.println(\"\
    c: \" + ((a + b > c) * (a + c > b) * (b + c > a)));\n                        \
    \                        ^\n  first type:  boolean\n  second type: boolean\n3\
    \ errors\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        int ab = a - b;\n       \
    \ int bc = b - c;\n        int ac = a - c;\n        int abc = (ab * b) + (bc *\
    \ c);\n        if (abc >= 0) {\n            return true;\n        } else {\n \
    \           return false;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9cwz2uqa.java:28)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a == 0 || b == 0 || c\
    \ == 0 || a + b > c || a + c > b || b + c > a) return true;\n        \n      \
    \  boolean right = a > b && b > c && a > c && b > a;\n        boolean left = a\
    \ > b && b > c && a > c && c > b;\n        boolean up  = a > b && c > b && b >\
    \ c && c > a;\n        boolean down = a > b && c > b && b > c && a > a;\n    \
    \    return right && left && up && down;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppdzjed30.java:27)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double side1 = Math.sqrt((Math.pow(a,\
    \ 2) + Math.pow(b, 2)));\n        double side2 = Math.sqrt((Math.pow(c, 2) + Math.pow(b,\
    \ 2)));\n        double side3 = Math.sqrt((Math.pow(a, 2) + Math.pow(c, 2)));\n\
    \n        if(side1 == side2 && side1 == side3) {\n            return true;\n \
    \       } else if(side1 == side2 && side3 > side1) {\n            return true;\n\
    \        } else if(side1 == side2 && side3 < side1) {\n            return false;\n\
    \        } else if(side1 == side3 && side2 > side1) {\n            return false;\n\
    \        } else if(side1 == side3 && side2 < side1) {\n            return true;\n\
    \        } else if(side1 == side3 && side3 > side1) {\n            return true;\n\
    \        } else {\n            return false;\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6b1a0brs.java:38)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // write your code in Java\
    \ 7\n        // The return statement must be in the form of:\n        // return\
    \ boolean_expression;\n        // The variable expressions must be in the form\
    \ of:\n        // variable_name = expression;\n        // The following variables\
    \ must be in the form of:\n        // double_expression = expression;\n      \
    \  // The expressions must use assignment statements.\n        // Variables in\
    \ assignment statements must start with the letter \"double\".\n        // The\
    \ return statement must be in the form of:\n        // return expression;\n\n\
    \        int ab = abc = ac = a + b + c;\n        int bcd = b * c + d * c;\n  \
    \      int bca = b * c - a * c;\n        int aba = a * b - a * c;\n        int\
    \ acb = a * c - b * c;\n\n        if ((a >= b) && (a >= c)) {\n            if\
    \ ((b > c) || (b == c)) {\n                System.out.print(\"True\");\n     \
    \           return true;\n            }\n            System.out.print(\"False\"\
    );\n            return false;\n        } else if ((b >= a) && (b >= c)) {\n  \
    \          if ((a > c) || (a == c)) {\n                System.out.print(\"True\"\
    );\n                return true;\n            }\n            System.out.print(\"\
    False\");\n            return false;\n        } else if ((c >= a) && (c >= b))\
    \ {\n            if ((a > b) || (a == b)) {\n                System.out.print(\"\
    True\");\n                return true;\n            }\n            System.out.print(\"\
    False\");\n            return false;\n        } else {\n            System.out.print(\"\
    False\");\n            return false;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjmdr8cxq.java:29: error: cannot find symbol\n        int ab = abc\
    \ = ac = a + b + c;\n                 ^\n  symbol:   variable abc\n  location:\
    \ class Problem\n/tmp/tmpjmdr8cxq.java:29: error: cannot find symbol\n       \
    \ int ab = abc = ac = a + b + c;\n                       ^\n  symbol:   variable\
    \ ac\n  location: class Problem\n/tmp/tmpjmdr8cxq.java:30: error: cannot find\
    \ symbol\n        int bcd = b * c + d * c;\n                          ^\n  symbol:\
    \   variable d\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return a * a + b * b - c\
    \ * c > 0;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6_ooxlr.java:20)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return (((a + b) > c) &&\
    \ ((a + c) > b) && ((b + c) > a));\n}\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8sknms_l.java:23)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // write your solution here\n\
    \        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n            return\
    \ true;\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw29airg7.java:27)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean result = false;\n\
    \        // Calculate the area of the triangle\n        double s = (a + b + c)\
    \ / 2;\n        \n        // Calculate discriminant (a square of the side length)\n\
    \        double disc = (Math.pow(s, 2) - (Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
    \ 2)));\n        // If discriminant is greater than zero\n        if (disc > 0)\
    \ {\n            // Calculate discriminant squared\n            double disc2 =\
    \ disc;\n            // If discriminant squared is greater than zero\n       \
    \     if (disc2 > 0) {\n                // Calculate area of the triangle\n  \
    \              double area = Math.sqrt(disc2);\n                // Calculate area\
    \ of the triangle - area\n                double area2 = area - a;\n         \
    \       // Calculate area of the triangle - area squared\n                double\
    \ area3 = area2 - area;\n                // If area is greater than zero\n   \
    \             if (area3 > 0) {\n                    // Calculate circumference\
    \ of the triangle\n                    double circumference = Math.sqrt(Math.pow(a\
    \ + b, 2) + Math.pow(c, 2));\n                    // Calculate circumference of\
    \ the triangle - circumference\n                    double circumference2 = circumference\
    \ - s;\n                    // Calculate circumference of the triangle - circumference\
    \ squared\n                    double circumference3 = circumference2 - circumference;\n\
    \                    // If circumference is greater than zero\n              \
    \      if (circumference3 > 0) {\n                        // Calculate area of\
    \ the right angled triangle\n                        double area1 = (Math.pow(c,\
    \ 2) - Math.pow(b, 2) - Math.pow(a, 2)) / 2;\n                        // Calculate\
    \ area of the right angled triangle - area 1\n                        double area1Squared\
    \ = area1 - s;\n                        // Calculate area of the right angled\
    \ triangle - area 1 squared\n                        double area1Squared2 = area1Squared\
    \ - a;\n                        // If area 1 is greater than zero\n          \
    \              if (area1Squared2 > 0) {\n                            // Calculate\
    \ area of the right angled triangle\n                            double area4\
    \ = (Math.pow(c, 2) - Math.pow(a, 2) - Math.pow(b, 2)) / 2;\n                \
    \            // Calculate area of the right angled triangle - area 4\n       \
    \                     double area4Squared = area4 - s;\n                     \
    \       // Calculate area of the right angled triangle - area 4 squared\n    \
    \                        double area4Squared2 = area4Squared - a;\n          \
    \                  // If area 4 is greater than zero\n                       \
    \     if (area4Squared2 > 0) {\n                                // Calculate area\
    \ of the right angled triangle\n                                double area5 =\
    \ (Math.pow(a, 2) - Math.pow(b, 2) - Math.pow(c, 2)) / 2;\n                  \
    \              // Calculate area of the right angled triangle - area 5\n     \
    \                           double area5Squared = area5 - s;\n               \
    \                 // Calculate area of the right angled triangle - area 5 \n}\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa_333p89.java:67: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double d0 = Math.abs(b *\
    \ b - a * c);\n        double d1 = Math.abs(c * c - a * b);\n        return (d0\
    \ >= d1);\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr7_yh4ev.java:22)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        System.out.println(\"Inside\
    \ rightAngleTriangle()\");\n        // Define a Triple object\n        Triple<Integer,\
    \ Integer, Integer> t = new Triple<>(a, b, c);\n        System.out.println(\"\
    Triple: \" + t);\n        System.out.println(\"Value of t.left: \" + t.left);\n\
    \        System.out.println(\"Value of t.right: \" + t.right);\n        System.out.println(\"\
    Value of t.length: \" + t.length);\n        // Calculate Area of Triangle\n  \
    \      double s = (a + b + c) / 2;\n        System.out.println(\"Area: \" + s);\n\
    \        double area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        System.out.println(\"\
    Area: \" + area);\n        // Calculate Perimeter of Triangle\n        double\
    \ perim = (a + b + c) / 2;\n        System.out.println(\"Perimeter: \" + perim);\n\
    \        System.out.println(\"Area of triangle is \" + area);\n        System.out.println(\"\
    Perimeter of triangle is \" + perim);\n        // Check if three sides of triangle\
    \ are equal\n        double a1 = Math.sqrt((a + b) * (a + b));\n        double\
    \ a2 = Math.sqrt((a + c) * (a + c));\n        double a3 = Math.sqrt((b + c) *\
    \ (b + c));\n        System.out.println(\"a1: \" + a1);\n        System.out.println(\"\
    a2: \" + a2);\n        System.out.println(\"a2: \" + a3);\n        if (t == new\
    \ Triple<>(a1, a2, a3))\n            System.out.println(\"Inside if statement\"\
    );\n        else\n            System.out.println(\"Inside else statement\");\n\
    \        System.out.println(\"Outside if statement\");\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuhp9zf57.java:19: error: cannot find symbol\n        Triple<Integer,\
    \ Integer, Integer> t = new Triple<>(a, b, c);\n        ^\n  symbol:   class Triple\n\
    \  location: class Problem\n/tmp/tmpuhp9zf57.java:19: error: cannot find symbol\n\
    \        Triple<Integer, Integer, Integer> t = new Triple<>(a, b, c);\n      \
    \                                            ^\n  symbol:   class Triple\n  location:\
    \ class Problem\n/tmp/tmpuhp9zf57.java:41: error: cannot find symbol\n       \
    \ if (t == new Triple<>(a1, a2, a3))\n                     ^\n  symbol:   class\
    \ Triple\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        List<Integer> list = new\
    \ ArrayList<Integer>();\n        list.add(0);\n        for (int i = 0; i < 3;\
    \ i++) {\n            list.add(a + i);\n            list.add(b + i);\n       \
    \     list.add(c + i);\n        }\n        list.sort(Comparator.naturalOrder());\n\
    \n        for (int i = 0; i < list.size(); i++) {\n            for (int j = i\
    \ + 1; j < list.size(); j++) {\n                if (list.get(i) < list.get(j))\
    \ {\n                    int swap = list.get(i);\n                    list.set(i,\
    \ list.get(j));\n                    list.set(j, swap);\n                }\n \
    \           }\n        }\n\n        if (list.get(list.size() - 1) != c || list.get(list.size()\
    \ - 2) != b || list.get(list.size() - 3) != a) {\n            return false;\n\
    \        }\n        else {\n            return true;\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5))\
    \ == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n   \
    \ assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr8zgwgp1.java:44)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return Math.abs((a * a +\
    \ b * b - c * c)) % 1 == 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0j_8ilp.java:21)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (((b == Math.sqrt(a *\
    \ b + c)) || (b == 0 && (a == 0 || c == 0))) && \n             ((a == Math.sqrt(a\
    \ * b + c)) || (a == 0 && (b == 0 || c == 0))) && \n             ((a == Math.sqrt(a\
    \ * b + c)) || (a == 0 && (b == 0 || c == 0))) && (b != 0)) {\n            return\
    \ true;\n        }\n        else {\n            return false;\n        }\n}\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpku9fae6b.java:27)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if (a == 0 || b == 0 || c\
    \ == 0) return false;\n        // a must be greater than or equal to b and less\
    \ than or equal to c.\n        if (a > b and a > c) return true;\n        if (b\
    \ > a and b > c) return true;\n        if (c> a and c > b) return true;\n    \
    \    // a must be greater than or equal to c but less than b\n        if (a >\
    \ c and a> b) return true;\n        if (c > a and c > b) return true;\n      \
    \  // a must be greater than or equal to b but less than c\n        if (a > b\
    \ and a > c) return true;\n        if (b > a and b > c) return true;\n       \
    \ if (c> a and c > b) return true;\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgvy36qpz.java:19: error: ')' expected\n        if (a > b and a\
    \ > c) return true;\n                 ^\n/tmp/tmpgvy36qpz.java:19: error: ';'\
    \ expected\n        if (a > b and a > c) return true;\n                      \
    \ ^\n/tmp/tmpgvy36qpz.java:19: error: variable declaration not allowed here\n\
    \        if (a > b and a > c) return true;\n                      ^\n/tmp/tmpgvy36qpz.java:19:\
    \ error: not a statement\n        if (a > b and a > c) return true;\n        \
    \                  ^\n/tmp/tmpgvy36qpz.java:19: error: ';' expected\n        if\
    \ (a > b and a > c) return true;\n                           ^\n/tmp/tmpgvy36qpz.java:20:\
    \ error: ')' expected\n        if (b > a and b > c) return true;\n           \
    \      ^\n/tmp/tmpgvy36qpz.java:20: error: ';' expected\n        if (b > a and\
    \ b > c) return true;\n                       ^\n/tmp/tmpgvy36qpz.java:20: error:\
    \ variable declaration not allowed here\n        if (b > a and b > c) return true;\n\
    \                      ^\n/tmp/tmpgvy36qpz.java:20: error: not a statement\n \
    \       if (b > a and b > c) return true;\n                          ^\n/tmp/tmpgvy36qpz.java:20:\
    \ error: ';' expected\n        if (b > a and b > c) return true;\n           \
    \                ^\n/tmp/tmpgvy36qpz.java:21: error: ')' expected\n        if\
    \ (c> a and c > b) return true;\n                ^\n/tmp/tmpgvy36qpz.java:21:\
    \ error: ';' expected\n        if (c> a and c > b) return true;\n            \
    \          ^\n/tmp/tmpgvy36qpz.java:21: error: variable declaration not allowed\
    \ here\n        if (c> a and c > b) return true;\n                     ^\n/tmp/tmpgvy36qpz.java:21:\
    \ error: not a statement\n        if (c> a and c > b) return true;\n         \
    \                ^\n/tmp/tmpgvy36qpz.java:21: error: ';' expected\n        if\
    \ (c> a and c > b) return true;\n                          ^\n/tmp/tmpgvy36qpz.java:23:\
    \ error: ')' expected\n        if (a > c and a> b) return true;\n            \
    \     ^\n/tmp/tmpgvy36qpz.java:23: error: ';' expected\n        if (a > c and\
    \ a> b) return true;\n                       ^\n/tmp/tmpgvy36qpz.java:23: error:\
    \ variable declaration not all"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return a + b > c && a + c\
    \ > b && b + c > a;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpip0tys4a.java:23)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // write your code\n    \
    \    double triangleSide1 = Math.sqrt(a * b + c * c);\n        double triangleSide2\
    \ = Math.sqrt(a * a + c * c);\n        double triangleSide3 = Math.sqrt(b * b\
    \ + c * c);\n\n        if (triangleSide1 == triangleSide2 || triangleSide1 ==\
    \ triangleSide3) {\n            if (triangleSide1 == triangleSide3)\n        \
    \        return false;\n            else {\n                return (((b * b) -\
    \ (a * a)) / (triangleSide1 * triangleSide3) > 0.0);\n            }\n        }\
    \ else {\n            return false;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3yhivlln.java:33)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean a = Math.sqrt(a *\
    \ b == Math.sqrt(a * b * c));\n        boolean b = Math.sqrt(c * a * b == Math.sqrt(c\
    \ * a * b * c));\n        boolean c = Math.sqrt(a * b * c == Math.sqrt(a * b *\
    \ c * c));\n        boolean not = (a * a + b * b + c * c) == 0;\n        return\
    \ (a * a + b * b + c * c) != 0 || (not && a == b != c);\n}\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) ==\
    \ (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp54mcdxs7.java:17: error: variable a is already defined in method\
    \ rightAngleTriangle(int,int,int)\n        boolean a = Math.sqrt(a * b == Math.sqrt(a\
    \ * b * c));\n                ^\n/tmp/tmp54mcdxs7.java:17: error: bad operand\
    \ types for binary operator '*'\n        boolean a = Math.sqrt(a * b == Math.sqrt(a\
    \ * b * c));\n                                ^\n  first type:  boolean\n  second\
    \ type: int\n/tmp/tmp54mcdxs7.java:17: error: bad operand types for binary operator\
    \ '*'\n        boolean a = Math.sqrt(a * b == Math.sqrt(a * b * c));\n       \
    \                                            ^\n  first type:  boolean\n  second\
    \ type: int\n/tmp/tmp54mcdxs7.java:18: error: variable b is already defined in\
    \ method rightAngleTriangle(int,int,int)\n        boolean b = Math.sqrt(c * a\
    \ * b == Math.sqrt(c * a * b * c));\n                ^\n/tmp/tmp54mcdxs7.java:18:\
    \ error: bad operand types for binary operator '*'\n        boolean b = Math.sqrt(c\
    \ * a * b == Math.sqrt(c * a * b * c));\n                                ^\n \
    \ first type:  int\n  second type: boolean\n/tmp/tmp54mcdxs7.java:18: error: bad\
    \ operand types for binary operator '*'\n        boolean b = Math.sqrt(c * a *\
    \ b == Math.sqrt(c * a * b * c));\n                                          \
    \             ^\n  first type:  int\n  second type: boolean\n/tmp/tmp54mcdxs7.java:19:\
    \ error: variable c is already defined in method rightAngleTriangle(int,int,int)\n\
    \        boolean c = Math.sqrt(a * b * c == Math.sqrt(a * b * c * c));\n     \
    \           ^\n/tmp/tmp54mcdxs7.java:19: error: bad operand types for binary operator\
    \ '*'\n        boolean c = Math.sqrt(a * b * c == Math.sqrt(a * b * c * c));\n\
    \                                ^\n  first type:  boolean\n  second type: boolean\n\
    /tmp/tmp54mcdxs7.java:19: error: bad operand types for binary operator '*'\n \
    \       boolean c = Math.sqrt(a * b * c == Math.sqrt(a * b * c * c));\n      \
    \                                                 ^\n  first type:  boolean\n\
    \  second type: boolean\n/tmp/tmp54mcdxs7.java:20: error: bad operand types for\
    \ binary operator '*'\n        boolean not"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        Triple<Integer, Integer,\
    \ Integer> p1 = Triple(a, b, c);\n        Triple<Integer, Integer, Integer> p2\
    \ = Triple(a, c, b);\n        Triple<Integer, Integer, Integer> p3 = Triple(b,\
    \ a, c);\n        Triple<Integer, Integer, Integer> p4 = Triple(b, c);\n     \
    \   boolean res = p1.getFirst() == p2.getFirst() && p1.getSecond() == p3.getSecond()\
    \ &&\n                p1.getThird() == p4.getFirst();\n        return res;\n}\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps7cukudt.java:17: error: cannot find symbol\n        Triple<Integer,\
    \ Integer, Integer> p1 = Triple(a, b, c);\n        ^\n  symbol:   class Triple\n\
    \  location: class Problem\n/tmp/tmps7cukudt.java:17: error: cannot find symbol\n\
    \        Triple<Integer, Integer, Integer> p1 = Triple(a, b, c);\n           \
    \                                    ^\n  symbol:   method Triple(int,int,int)\n\
    \  location: class Problem\n/tmp/tmps7cukudt.java:18: error: cannot find symbol\n\
    \        Triple<Integer, Integer, Integer> p2 = Triple(a, c, b);\n        ^\n\
    \  symbol:   class Triple\n  location: class Problem\n/tmp/tmps7cukudt.java:18:\
    \ error: cannot find symbol\n        Triple<Integer, Integer, Integer> p2 = Triple(a,\
    \ c, b);\n                                               ^\n  symbol:   method\
    \ Triple(int,int,int)\n  location: class Problem\n/tmp/tmps7cukudt.java:19: error:\
    \ cannot find symbol\n        Triple<Integer, Integer, Integer> p3 = Triple(b,\
    \ a, c);\n        ^\n  symbol:   class Triple\n  location: class Problem\n/tmp/tmps7cukudt.java:19:\
    \ error: cannot find symbol\n        Triple<Integer, Integer, Integer> p3 = Triple(b,\
    \ a, c);\n                                               ^\n  symbol:   method\
    \ Triple(int,int,int)\n  location: class Problem\n/tmp/tmps7cukudt.java:20: error:\
    \ cannot find symbol\n        Triple<Integer, Integer, Integer> p4 = Triple(b,\
    \ c);\n        ^\n  symbol:   class Triple\n  location: class Problem\n/tmp/tmps7cukudt.java:20:\
    \ error: cannot find symbol\n        Triple<Integer, Integer, Integer> p4 = Triple(b,\
    \ c);\n                                               ^\n  symbol:   method Triple(int,int)\n\
    \  location: class Problem\n8 errors\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean ans = true;\n   \
    \     \n        if (Math.min(a, b, c) > Math.max(a, b, c)) {\n            ans\
    \ = false;\n        }\n        \n        if (Math.max(a, b, c) > Math.min(a, b,\
    \ c)) {\n            ans = false;\n        }\n        \n        if (Math.max(a,\
    \ b, c) > Math.max(Math.min(a, b, c), Math.max(a, b, c))) {\n            ans =\
    \ false;\n        }\n        \n        if (Math.max(a, b, c) > Math.max(Math.max(a,\
    \ b, c), Math.min(a, b, c))) {\n            ans = false;\n        }\n        \n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5i0_m9va.java:19: error: no suitable method found for min(int,int,int)\n\
    \        if (Math.min(a, b, c) > Math.max(a, b, c)) {\n                ^\n   \
    \ method Math.min(int,int) is not applicable\n      (actual and formal argument\
    \ lists differ in length)\n    method Math.min(long,long) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method Math.min(float,float)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.min(double,double) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n/tmp/tmp5i0_m9va.java:19: error: no suitable\
    \ method found for max(int,int,int)\n        if (Math.min(a, b, c) > Math.max(a,\
    \ b, c)) {\n                                    ^\n    method Math.max(int,int)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.max(long,long) is not applicable\n      (actual and formal argument\
    \ lists differ in length)\n    method Math.max(float,float) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method Math.max(double,double)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    /tmp/tmp5i0_m9va.java:23: error: no suitable method found for max(int,int,int)\n\
    \        if (Math.max(a, b, c) > Math.min(a, b, c)) {\n                ^\n   \
    \ method Math.max(int,int) is not applicable\n      (actual and formal argument\
    \ lists differ in length)\n    method Math.max(long,long) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method Math.max(float,float)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.max(double,double) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n/tmp/tmp5i0_m9va.java:23: error: no suitable\
    \ method found for min(int,int,int)\n        if (Math.max(a, b, c) > Math.min(a,\
    \ b, c)) {\n                                    ^\n    method Math.min(int,int)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    met"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        return b * b > a * c;\n}\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppaa0kebo.java:21)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Write your logic here\n\
    \        if ((a+b)>(c+a))\n            return false;\n        else if ( (c+a)>(b+c)\
    \ )\n            return false;\n        else\n            return true;\n}\n  \
    \  public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7xcz6kkt.java:27)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double a1 = Math.sqrt(Math.pow(a,\
    \ 2));\n        double b1 = Math.sqrt(Math.pow(b, 2));\n        double c1 = Math.sqrt(Math.pow(c,\
    \ 2));\n        double a2 = Math.sqrt(Math.pow(a1, 2));\n        double b2 = Math.sqrt(Math.pow(b1,\
    \ 2));\n        double c2 = Math.sqrt(Math.pow(c1, 2));\n        double angle1\
    \ = Math.acos((a * a1 + b * b1 + c * c1) / (a1 * b1 + a1 * c1 + b1 * c1));\n \
    \       double angle2 = Math.acos((a * a2 + b * b2 + c * c2) / (a2 * b2 + a2 *\
    \ c2 + b2 * c2));\n        double angleDiff = Math.abs(angle1 - angle2);\n   \
    \     if (angleDiff > 180) {\n            angleDiff = 180 - angleDiff;\n     \
    \   }\n        return angleDiff <= 90;\n}\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphzsstysz.java:32)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        if ((Math.sqrt(a * a + b\
    \ * b) == c && b * b == a && a * a == c) || (b * b == c && a * a == b)) {\n  \
    \          return true;\n        } else {\n            return false;\n       \
    \ }\n}\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3),\
    \ (4), (5)) == (true));\n    assert(rightAngleTriangle((1), (2), (3)) == (false));\n\
    \    assert(rightAngleTriangle((10), (6), (8)) == (true));\n    assert(rightAngleTriangle((2),\
    \ (2), (2)) == (false));\n    assert(rightAngleTriangle((7), (24), (25)) == (true));\n\
    \    assert(rightAngleTriangle((10), (5), (7)) == (false));\n    assert(rightAngleTriangle((5),\
    \ (12), (13)) == (true));\n    assert(rightAngleTriangle((15), (8), (17)) == (true));\n\
    \    assert(rightAngleTriangle((48), (55), (73)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (1), (1)) == (false));\n    assert(rightAngleTriangle((2), (2), (10)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptvwsjrm7.java:24)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        // Define the right angled\
    \ triangle angle ABC\n        if ((b * b) - 4 * (a * a) == 0) {\n            if\
    \ (b != c) {\n                // This is not a right angle triangle - not true\n\
    \                return false;\n            }\n            // Triangle is right\
    \ angle triangle\n            return true;\n        }\n        // Not right angle\
    \ triangle\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n    assert(rightAngleTriangle((1),\
    \ (2), (3)) == (false));\n    assert(rightAngleTriangle((10), (6), (8)) == (true));\n\
    \    assert(rightAngleTriangle((2), (2), (2)) == (false));\n    assert(rightAngleTriangle((7),\
    \ (24), (25)) == (true));\n    assert(rightAngleTriangle((10), (5), (7)) == (false));\n\
    \    assert(rightAngleTriangle((5), (12), (13)) == (true));\n    assert(rightAngleTriangle((15),\
    \ (8), (17)) == (true));\n    assert(rightAngleTriangle((48), (55), (73)) == (true));\n\
    \    assert(rightAngleTriangle((1), (1), (1)) == (false));\n    assert(rightAngleTriangle((2),\
    \ (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8f8ed1bn.java:30)\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        double a1 = Math.sqrt(a *\
    \ a);\n        double b1 = Math.sqrt(b * b);\n        double c1 = Math.sqrt(c\
    \ * c);\n        double d = a1 * b1 + a1 * c1 + b1 * c1;\n        double da =\
    \ a1 * a + b1 * b + c1 * c;\n        double db = a1 * b - b1 * a + c1 * c;\n \
    \       double dc = a1 * c - b1 * b + c1 * a;\n        double de = Math.sqrt(da\
    \ * da + db * db + dc * dc);\n        double ac = Math.sqrt(ac * ac - db * db\
    \ + dc * dc);\n        double ad = Math.sqrt(ad * ad + db * db - dc * dc);\n \
    \       if (de == 0) {\n            return false;\n        }\n        if (db *\
    \ dc >= 0) {\n            return false;\n        }\n        if (da * c1 >= 0)\
    \ {\n            return false;\n        }\n        if (ad * b1 >= 0) {\n     \
    \       return false;\n        }\n        if (Math.abs(ac) > de) {\n         \
    \   return false;\n        }\n        return true;\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt06hf1j0.java:25: error: variable ac might not have been initialized\n\
    \        double ac = Math.sqrt(ac * ac - db * db + dc * dc);\n               \
    \               ^\n/tmp/tmpt06hf1j0.java:26: error: variable ad might not have\
    \ been initialized\n        double ad = Math.sqrt(ad * ad + db * db - dc * dc);\n\
    \                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5)\
    \ == True\n    // right_angle_triangle(1, 2, 3) == False\n    public static boolean\
    \ rightAngleTriangle(int a, int b, int c) {\n        boolean are = (a + b > c)\
    \ && (a + c > b) && (b + c > a);\n        return are;\n}\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3), (4), (5)) == (true));\n\
    \    assert(rightAngleTriangle((1), (2), (3)) == (false));\n    assert(rightAngleTriangle((10),\
    \ (6), (8)) == (true));\n    assert(rightAngleTriangle((2), (2), (2)) == (false));\n\
    \    assert(rightAngleTriangle((7), (24), (25)) == (true));\n    assert(rightAngleTriangle((10),\
    \ (5), (7)) == (false));\n    assert(rightAngleTriangle((5), (12), (13)) == (true));\n\
    \    assert(rightAngleTriangle((15), (8), (17)) == (true));\n    assert(rightAngleTriangle((48),\
    \ (55), (73)) == (true));\n    assert(rightAngleTriangle((1), (1), (1)) == (false));\n\
    \    assert(rightAngleTriangle((2), (2), (10)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp51gxgy1s.java:24)\n"
  stdout: ''
  timestamp: 1660011273

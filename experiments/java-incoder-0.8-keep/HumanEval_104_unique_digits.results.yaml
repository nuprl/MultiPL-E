language: java
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> l = new ArrayList<>();\n        for(Integer\
    \ i:x) {\n            if(i%10==0) {\n                l.add(i);\n            }\n\
    \        }\n        Collections.sort(l);\n        return l;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc69a5uik.java:28)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Initialize a new ArrayList\n        ArrayList<Integer> result\
    \ = new ArrayList<Integer>();\n        // Check each element of x\n        for\
    \ (Integer element : x) {\n            // If it has no even digit\n          \
    \  if (!(element % 2)) {\n                // Add it to result\n              \
    \  result.add(element);\n            }\n        }\n        // Sort result\n  \
    \      Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp39j3pk4i.java:23: error: bad operand type int for unary operator\
    \ '!'\n            if (!(element % 2)) {\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int val : x) {\n            if (val % 2 != 0) {\n                ans.add(val);\n\
    \            }\n        }\n        return ans;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgmskc5e5.java:27)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        // sort\
    \ the array\n        Collections.sort(x);\n        \n        for(int i : x){\n\
    \            if(i % 2 == 0){\n                result.add(i);\n            }\n\
    \        }\n        \n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1eqsf9hl.java:31)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> unique = new ArrayList<Integer>();\n      \
    \  Set<Integer> set = new HashSet<Integer>();\n        for (Integer i : x) {\n\
    \            boolean b = false;\n            for (Integer j : set) {\n       \
    \         if (i.compareTo(j) < 0)\n                    b = true;\n           \
    \ }\n            if (!b)\n                set.add(i);\n        }\n        for\
    \ (int i : set) {\n            unique.add(i);\n        }\n        return unique;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi2d1j4i7.java:35)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for(int d\
    \ : x) {\n            if(d.intValue() % 2 == 0) {\n                res.add(d);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkeizim08.java:20: error: int cannot be dereferenced\n         \
    \   if(d.intValue() % 2 == 0) {\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // write your code here\n        ArrayList<Integer> ans = new\
    \ ArrayList<Integer>();\n        for(int i = 0 ; i < x.size() ; i++)\n       \
    \ {\n            int nxt = x.remove(i);\n            String str = nxt.toString();\n\
    \            boolean found = false;\n            for(int j = 0 ; j < str.length()\
    \ ; j++)\n            {\n                if(str.charAt(j)%2 == 0)\n          \
    \      {\n                    found = true;\n                    break;\n    \
    \            }\n            }\n            if(!found)\n            {\n       \
    \         ans.add(nxt);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuu1950mx.java:23: error: int cannot be dereferenced\n         \
    \   String str = nxt.toString();\n                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        x.stream().sorted().distinct().collect(Collectors.toList());\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp894ei_je.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // write your code here\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp88rikgn5.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        \n\
    \        ArrayList<Integer> evenDigits = new ArrayList<Integer>();\n        \n\
    \        for (int i : x) {\n            if (i % 2 == 0) {\n                evenDigits.add(i);\n\
    \            } else {\n                // check each odd digit to see if it's\
    \ repeated\n                for (int j = 0; j < evenDigits.size(); j++) {\n  \
    \                  if (evenDigits.get(j) == i) {\n                        continue;\n\
    \                    }\n                    if (evenDigits.get(j) > i) {\n   \
    \                     // if we already have an odd digit for this even digit\n\
    \                        // stop adding this digit\n                        break;\n\
    \                    }\n                    // else add this digit\n         \
    \           res.add(i);\n                }\n                evenDigits.clear();\n\
    \            }\n        }\n        \n        // add all even digits except the\
    \ last\n        for (int i = 0; i < evenDigits.size(); i++) {\n            if\
    \ (evenDigits.get(i) < res.size()) {\n                res.add(evenDigits.get(i));\n\
    \            }\n        }\n        \n        return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp44f_8fy8.java:53)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ num : x) {\n            if (num % 2 == 0) {\n                result.add(num);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20t246yq.java:27)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  // Step 1: sort the list.\n        Collections.sort(x);\n        // Step 2:\
    \ loop through the sorted list and check each element \n        // if it has an\
    \ even digit or not\n        for(int i=0; i<x.size(); i++) {\n            int\
    \ num = x.get(i);\n            String s = Integer.toString(num);\n           \
    \ boolean even = false;\n            for(int j=0; j<s.length(); j++) {\n     \
    \           char c = s.charAt(j);\n                if(c < '0' || c > '9') {\n\
    \                    throw new IllegalArgumentException(\"Invalid argument: Only\
    \ positive integers are accepted\");\n                }\n                if(Character.getNumericValue(c)\
    \ % 2 != 0) {\n                    even = true;\n                    break;\n\
    \                }\n            }\n            if(!even) {\n                result.add(num);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz82smb5j.java:44)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        int N\
    \ = x.size();\n        for(int i = 0; i < N; ++i) {\n            int m = x.get(i);\n\
    \            boolean found = false;\n            for(int j = i+1; j < N; ++j)\
    \ {\n                if(m % 10 == 0) {\n                    found = true;\n  \
    \                  break;\n                }\n                m = x.get(j);\n\
    \            }\n            if(!found) {\n                result.add(m);\n   \
    \         }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymq990pd.java:38)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write your code here\n        int len = x.size();\n       \
    \ int even_count = 0;\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < len; i++)\n        {\n            int digit = x.get(i);\n\
    \            if((x % 10) == 0)\n            {\n                even_count++;\n\
    \            }\n            if(even_count == 1)\n            {\n             \
    \   result.add(digit);\n            }\n        }\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptuk8l9jq.java:25: error: bad operand types for binary operator\
    \ '%'\n            if((x % 10) == 0)\n                  ^\n  first type:  ArrayList<Integer>\n\
    \  second type: int\n1 error\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        Set<Integer>\
    \ set = new HashSet<Integer>();\n        for (Integer x : x)\n            list.add(x);\n\
    \        for (Integer x : list)\n            if (!set.contains(x))\n         \
    \       set.add(x);\n        Collections.sort(list);\n        return list;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpduqvfbfl.java:20: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n        for (Integer x : x)\n            \
    \         ^\n/tmp/tmpduqvfbfl.java:22: error: variable x is already defined in\
    \ method uniqueDigits(ArrayList<Integer>)\n        for (Integer x : list)\n  \
    \                   ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        int size = x.size();\n        ArrayList<Integer> ret = new ArrayList<>();\n\
    \        for(int i=0; i<size; i++) {\n            for(int j=i+1; j<size; j++)\
    \ {\n                String tmpStr = x.toString().substring(i, j);\n         \
    \       if(!tmpStr.matches(\"\\\\D\")) {\n                    ret.add(x.get(j));\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return ret;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2hkb1xfv.java:32)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> odds = new ArrayList<Integer>();\n        x.stream().forEach(i\
    \ -> {\n            int tempNum = i;\n            if (tempNum % 2 == 0) {\n  \
    \              odds.add(i);\n            }\n        });\n        odds.addAll(x);\n\
    \        result.addAll(odds);\n        result.sort(Comparator.naturalOrder());\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4z_d7v3w.java:32)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Arrays.sort(x);\n        ArrayList<Integer> y = new ArrayList<Integer>(x);\n\
    \        for(int i=0; i<y.size(); i++) {\n            boolean flag = false;\n\
    \            for(int j=i+1; j<y.size(); j++) {\n                if(y[i] % y[j]\
    \ == 0) {\n                    flag = true;\n                    break;\n    \
    \            }\n            }\n            if(!flag) {\n                y.remove(y[i]);\n\
    \            }\n        }\n        return y;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp96kvux20.java:18: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmp96kvux20.java:23: error: array required, but ArrayList<Integer>\
    \ found\n                if(y[i] % y[j] == 0) {\n                    ^\n/tmp/tmp96kvux20.java:23:\
    \ error: array required, but ArrayList<Integer> found\n                if(y[i]\
    \ % y[j] == 0) {\n                           ^\n/tmp/tmp96kvux20.java:29: error:\
    \ array required, b"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Set<Integer> set = new TreeSet<>();\n        for(int a: x){\n\
    \            while(a != 0){\n                if(!set.contains(a % 10)) set.add(a%10);\n\
    \                a = a / 10;\n            }\n        }\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        for(int a: set){\n            result.add(a);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3sxtdz5.java:32)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Map<Integer, Integer> map = new HashMap<>();\n        for(Integer\
    \ key : x) {\n            Integer value = map.getOrDefault(key, 0);\n        \
    \    map.put(key, value + 1);\n        }\n\n        List<Integer> result = new\
    \ ArrayList<>();\n        for(Map.Entry<Integer, Integer> entry : map.entrySet())\
    \ {\n            if (entry.getValue() % 2 == 0) {\n                continue;\n\
    \            }\n            result.add(entry.getKey());\n        }\n\n       \
    \ Collections.sort(result);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgfuoc69c.java:33: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        int len = x.size();\n        List<Integer> result = new ArrayList<Integer>();\n\
    \        Set<Integer> set = new HashSet<Integer>();\n        for(int i = 0; i\
    \ < len; i++) {\n            if (set.contains(x.get(i))) {\n                continue;\n\
    \            }\n            else {\n                if(x.get(i) % 2 == 0) {\n\
    \                    set.add(x.get(i));\n                }\n                else\
    \ {\n                    result.add(x.get(i));\n                }\n          \
    \  }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyuyuhxxq.java:34: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<>();\n\n        for (Integer\
    \ i : x) {\n            String s = String.valueOf(i);\n            int length\
    \ = s.length();\n            int digit = 0;\n            int cnt = 0;\n      \
    \      boolean found = false;\n\n            while (s.length() > 0) {\n      \
    \          digit = Character.getNumericValue(s.charAt(0));\n                cnt\
    \ += digit;\n                s = s.substring(1);\n\n                if (cnt %\
    \ 2 == 0) {\n                    found = true;\n                    break;\n \
    \               }\n            }\n            boolean included = ((length <= 1)\
    \ || (cnt % 2 == 0));\n            if (!found) {\n                if (included)\
    \ {\n                    res.add(i);\n                }\n            }\n     \
    \   }\n\n        return res;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzt8ty3di.java:48)\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Set<Integer> set = new HashSet<Integer>();\n        x.stream().forEach(v\
    \ -> set.add(v));\n        ArrayList<Integer> y = new ArrayList<Integer>(set);\n\
    \        y.sort(Comparator.naturalOrder());\n        Set<Integer> result = new\
    \ HashSet<Integer>();\n        y.forEach(x -> {\n            while (true) {\n\
    \                boolean found = false;\n                for (int v : x) {\n \
    \                   if (v %2 == 0 && result.add(v)) {\n                      \
    \  found = true;\n                        break;\n                    }\n    \
    \            }\n                if (!found) {\n                    break;\n  \
    \              }\n            }\n        });\n        ArrayList<Integer> ans =\
    \ new ArrayList<Integer>(result);\n        ans.sort(Comparator.naturalOrder());\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcwmu3ey0.java:23: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n        y.forEach(x -> {\n               \
    \   ^\n/tmp/tmpcwmu3ey0.java:26: error: for-each not applicable to expression\
    \ type\n                for (int v : x) {\n                             ^\n  required:\
    \ array or java.lang.Iterable\n  found:    Integer\n2 errors\n"
  stdout: ''
  timestamp: 1660010953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(Integer\
    \ x : x){\n            if(checkIfUnique(x)) result.add(x);\n        }\n      \
    \  Collections.sort(result);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl1fwusrj.java:19: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n        for(Integer x : x){\n            \
    \        ^\n/tmp/tmpl1fwusrj.java:20: error: cannot find symbol\n            if(checkIfUnique(x))\
    \ result.add(x);\n               ^\n  symbol:   method checkIfUnique(Integer)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Set<Integer> set = new HashSet<Integer>();\n        boolean flag\
    \ = false;\n        for (int i = 0; i < x.size(); i++) {\n            int a =\
    \ x[i];\n            int digits = Math.abs(a) / 10;\n            int remainder\
    \ = a % 10;\n            if (set.contains(digits)) {\n                if (set.size()\
    \ == 1 && flag) {\n                    flag = false;\n                }\n    \
    \            else {\n                    flag = true;\n                }\n   \
    \         }\n            else {\n                set.add((int) digits);\n    \
    \        }\n            if (remainder != 0) {\n                if (!set.contains(remainder))\
    \ {\n                    set.add((int) remainder);\n                }\n      \
    \      }\n        }\n        return new ArrayList<>(set);\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp77vzlfc2.java:21: error: array required, but ArrayList<Integer>\
    \ found\n            int a = x[i];\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        int n = x.size();\n        ArrayList<Integer> y = new ArrayList<>();\n\
    \        for(int i : x){\n            while(x.contains(i) && i%10 != 0){\n   \
    \             x.remove(i);\n                y = new ArrayList<>(y);\n        \
    \    }\n            y.add(i);\n        }\n        return y;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 15 out of bounds for length 4\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.remove(ArrayList.java:504)\n\
    \tat Problem.uniqueDigits(tmpbclt3jja.java:22)\n\tat Problem.main(tmpbclt3jja.java:30)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n        for\
    \ (int i = 0; i < x.size(); ++i) {\n            int nr = x.get(i);\n         \
    \   Integer e = map.get(nr);\n            if (e == null) {\n                map.put(nr,\
    \ 1);\n            } else {\n                map.put(nr, e + 1);\n           \
    \ }\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet())\
    \ {\n            if (entry.getValue() > 1) {\n                result.add(entry.getKey());\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwrupruy.java:37)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        \n        int len = x.size();\n        ArrayList<Integer> out\
    \ = new ArrayList<Integer>();\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        for(int i : x){\n            if(hs.contains(i)) continue;\n         \
    \   hs.add(i);\n            if((len = hs.size())>0) out.add(i);\n        }\n \
    \       return out;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0b0w6cob.java:30)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream().filter(e -> {\n            boolean even = true;\n\
    \            for (int i = 0; i < x.size(); i++) {\n                if(i == x.size()-1)\n\
    \                    return false;\n                if(e%2 == 0)\n           \
    \         even = false;\n                e = e*10;\n            }\n          \
    \  return even;\n        }).distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphyn6ir9e.java:31)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> list = new ArrayList<>();\n        Integer\
    \ digit = null;\n        for(Integer i : x) {\n            digit = i;\n      \
    \      while(digit != 0) {\n                list.add((int)Math.floor(Math.pow(digit,\
    \ 2)));\n                digit = digit/10;\n            }\n        }\n       \
    \ Collections.sort(list);\n        if(list.isEmpty()) return new ArrayList<>();\n\
    \        return list;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9mn2ax3m.java:32)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write your code here\n        ArrayList<Integer> result = new\
    \ ArrayList<>();\n        for(int i : x) {\n            String s = Integer.toString(i);\n\
    \            for(int j = 0; j < s.length(); j++) {\n                if(Integer.parseInt(s.substring(j,\
    \ j + 1))%2 != 0)\n                    result.add(i);\n            }\n       \
    \ }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qbf42ku.java:30)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < x.size(); i++){\n            int number = x[i];\n            while(number\
    \ / 10 != 0){\n                number /= 10;\n                result.add(number);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk1211w_k.java:20: error: array required, but ArrayList<Integer>\
    \ found\n            int number = x[i];\n                          ^\n1 error\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        int result = 0;\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n\
    \        for(int i : x)\n        {\n            if (i % 2 == 0) {\n          \
    \      result += i;\n                ans.add(i);\n            }\n        }\n \
    \       for(int i = 1; i <= result && i <= 10000; i++) {\n            boolean\
    \ flag = false;\n            for (int j : ans) {\n                if(i * j ==\
    \ i) {\n                    flag = true;\n                }\n            }\n \
    \           if(!flag) {\n                ans.add(i);\n            }\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbxsw253f.java:41)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> temp = new ArrayList<Integer>(x);\n       \
    \ Collections.sort(temp);\n        List<Integer> even = temp\n               \
    \ .stream()\n                .filter(x -> x % 2 != 0)\n                .collect(Collectors.toList());\n\
    \        List<Integer> odd = temp\n                .stream()\n               \
    \ .filter(x -> x % 2 == 0)\n                .collect(Collectors.toList());\n \
    \       Collections.sort(even);\n        Collections.sort(odd);\n        odd.addAll(even);\n\
    \        return odd;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpev621s_u.java:22: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n                .filter(x -> x % 2 != 0)\n\
    \                        ^\n/tmp/tmpev621s_u.java:26: error: variable x is already\
    \ defined in method uniqueDigits(ArrayList<Integer>)\n                .filter(x\
    \ -> x % 2 == 0)\n                        ^\n/tmp/tmpev621s_u.java:31: error:\
    \ incompatible types: List<Integer> cannot be converted to ArrayList<Integer>\n\
    \        return odd;\n               ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i : x) {\n            boolean found = false;\n            boolean noEvenDigit\
    \ = true;\n            for (int j = 0; j < result.size(); j++) {\n           \
    \     if (i % 10 == 0) {\n                    noEvenDigit = false;\n         \
    \           break;\n                }\n            }\n            if (noEvenDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnt1cbe7.java:35)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Set<Integer> digits = new HashSet<>();\n        for( int i : x\
    \ )\n            digits.add(i);\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        for( int i : digits )\n            if( x.indexOf(i) < x.indexOf( x.stream().filter(i\
    \ -> i % 2 == 0).count() ) )\n                result.add(i);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9vla0bkr.java:23: error: variable i is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n            if( x.indexOf(i) < x.indexOf(\
    \ x.stream().filter(i -> i % 2 == 0).count() ) )\n                           \
    \                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for(int\
    \ i = 0; i < x.size(); i++) {\n            String s = Integer.toString(x.get(i));\n\
    \            for(int j = 0; j < s.length(); j++) {\n                char c = s.charAt(j);\n\
    \                if(Character.isDigit(c)) {\n                    int n = Integer.parseInt(String.valueOf(c));\n\
    \                    if(n % 2 == 0) {\n                        ans.add(n);\n \
    \                   }\n                }\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82ijx_9j.java:35)\n"
  stdout: ''
  timestamp: 1660010955
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i : x) {\n            if (i % 2 == 0) {\n                res.add(i);\n     \
    \       }\n        }\n        Collections.sort(res);\n        return res;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbvfgfcwu.java:28)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        for\
    \ (Integer val : x) {\n            int cnt = 0;\n            for (int i = 1; i\
    \ <= val / 2; i++) {\n                if (val % i == 0) {\n                  \
    \  cnt++;\n                }\n            }\n            if (cnt == 0) {\n   \
    \             ret.add(val);\n            }\n        }\n        return ret;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacqd9ebw.java:33)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        for(int\
    \ i=1;i<=10;i++) {\n            if(i%2==0) {\n                boolean found =\
    \ false;\n                for(Integer item: ret) {\n                    if(item==i)\
    \ {\n                        found = true;\n                        break;\n \
    \                   }\n                }\n                if(!found) {\n     \
    \               ret.add(i);\n                }\n            }\n        }\n   \
    \     return ret;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqng6o4ld.java:36)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  // Iterate over x\n        for (int i : x) {\n            // Iterate over all\
    \ even digits of x\n            for (int d = 1; d < 10; d += 2) {\n          \
    \      // If the digit is in result array, remove it\n                if (result.contains(d))\
    \ {\n                    result.remove(d);\n                }\n              \
    \  // If x doesn't have any even digit, add it\n                if (!x.contains(i\
    \ % d)) {\n                    result.add(i);\n                }\n           \
    \ }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppxu3ch8b.java:36)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // use set to remove duplicated elements\n        Set<Integer>\
    \ set = new HashSet<Integer>();\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (Integer y : x) {\n            if (set.contains(y))\n           \
    \     continue;\n            set.add(y);\n            result.add(y);\n       \
    \ }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9h84g9rk.java:30)\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        Arrays.sort(x);\n\
    \        for(int i=0; i<x.size(); i++) {\n            int d = (int) x[i];\n  \
    \          if(!ret.contains(d)) {\n                ret.add(d);\n            }\n\
    \        }\n        return ret;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd9_nyqx0.java:19: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmpd9_nyqx0.java:21: error: array required, but ArrayList<Integer>\
    \ found\n            int d = (int) x[i];\n                           ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n2 errors\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashSet<Integer> h = new HashSet<Integer>();\n        ArrayList<Integer>\
    \ r = new ArrayList<Integer>();\n        for (int i : x) {\n            h.add(i\
    \ % 10);\n            r.add(i / 10);\n        }\n        List<Integer> l = Arrays.stream(h).filter(i\
    \ -> i % 2 == 0).collect(Collectors.toList());\n        r.addAll(l);\n       \
    \ return r;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpss4dl5jz.java:24: error: no suitable method found for stream(HashSet<Integer>)\n\
    \        List<Integer> l = Arrays.stream(h).filter(i -> i % 2 == 0).collect(Collectors.toList());\n\
    \                                ^\n    method Arrays.<T#1>stream(T#1[]) is not\
    \ applicable\n      (cannot infer type-variable(s) T#1\n        (argument mismatch;\
    \ HashSet<Integer> cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; HashSet<Integer> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; HashSet<Integer> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; HashSet<Integer> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(Integer\
    \ i : x){\n            if(!result.get(i/10)){\n                result.add(i);\n\
    \            }\n        }\n        result.sort(Comparator.naturalOrder());\n \
    \       return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0vmv2law.java:20: error: bad operand type Integer for unary operator\
    \ '!'\n            if(!result.get(i/10)){\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        int n = x.size();\n        List<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < n; i++){\n            Integer value = x.get(i);\n\
    \            int count = 0;\n            while(value != 0){\n                count\
    \ += value % 10;\n                value /= 10;\n            }\n            if(!result.contains(count\
    \ / 2)){\n                result.add(count / 2);\n            }\n        }\n \
    \       Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmiri5eza.java:32: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write your code in Java 7 or lower.\n        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        for(int i=0;i<x.size();i++){\n    \
    \        int digit = x.get(i);\n            while(digit!=0){\n               \
    \ if(digit%2==0){\n                    res.add(digit);\n                }\n  \
    \              digit = digit/2;\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzroxt1j_.java:32)\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        Integer\
    \ zero = new Integer(0);\n        Integer two = new Integer(2);\n        Integer\
    \ three = new Integer(3);\n        Integer four = new Integer(4);\n        Integer\
    \ five = new Integer(5);\n        Integer six = new Integer(6);\n        Integer\
    \ seven = new Integer(7);\n        Integer eight = new Integer(8);\n        Integer\
    \ nine = new Integer(9);\n        Integer ten = new Integer(10);\n        Integer\
    \ eleven = new Integer(11);\n        Integer twelve = new Integer(12);\n     \
    \   Integer thirteen = new Integer(13);\n        Integer fourteen = new Integer(14);\n\
    \        Integer fifteen = new Integer(15);\n        Integer sixteen = new Integer(16);\n\
    \        Integer seventeen = new Integer(17);\n        Integer eighteen = new\
    \ Integer(18);\n        Integer nineteen = new Integer(19);\n        Integer twenty\
    \ = new Integer(20);\n        Integer thirty = new Integer(30);\n        Integer\
    \ fourty = new Integer(40);\n        Integer fifty = new Integer(50);\n      \
    \  Integer sixty = new Integer(60);\n        Integer seventy = new Integer(70);\n\
    \        Integer eighty = new Integer(80);\n        Integer ninety = new Integer(90);\n\
    \        Integer hundred = new Integer(100);\n        Integer thousand = new Integer(1000);\n\
    \n        for(int i:x) {\n            if(i%2 == 0) {\n                if(result.contains(zero))\
    \ {\n                    x.remove(i);\n                } else {\n            \
    \        result.add(i);\n                }\n            } else if(i%10 == 0) {\n\
    \                if(result.contains(ten)) {\n                    x.remove(i);\n\
    \                } else {\n                    result.add(i);\n              \
    \  }\n            } else if(i%100 == 0) {\n                if(result.contains(hundred))\
    \ {\n                    x.remove(i);\n                } else {\n            \
    \        result.add(i);\n                }\n            } else if(i%1000 == 0)\
    \ {\n                if(result.contains(thousand)) {\n                    x.remove(i);\n\
    \                } else {\n                    result.add(i);\n              \
    \  }\n            } else if(i%10000 == 0) {\n                if(result.contains(eleven))\
    \ {\n                    x.remove(i);\n                } else {\n            \
    \        result.add(i);\n                }\n            } else if(i%100000 ==\
    \ 0) {\n                if(result.contains(twelve)) {\n                    x.remove(i);\n\
    \                } else {\n                    result.add(i);\n              \
    \  }\n            } else if(i%1000000 == 0) {\n                if(result.contains(thirteen))\
    \ {\n                    x.remove(i);\n                } else {\n            \
    \        result.add(i);\n                }\n            } else if(i%10000000 ==\
    \ 0) {\n                if(result.contains(fourteen)) {\n                    x.remove(i);\n\
    \                } else {\n                    result.add(i);\n              \
    \  }\n            } else if(i%10000000 ==0) {\n                if(result.contains(fifteen))\
    \ {\n                    x.remove(i);\n                } else {\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzmrlge39.java:103: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010955
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        ArrayList<Integer>\
    \ evenDigit_List = new ArrayList<>();\n        for(int i : x) {\n            if(i\
    \ % 10 == 0) {\n                evenDigit_List.add(i);\n            }\n      \
    \  }\n        for(int i : evenDigit_List) {\n            for(int j : x) {\n  \
    \              if(i == j) {\n                    result = result.add(j);\n   \
    \                 break;\n                }\n            }\n        }\n      \
    \  return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplexu9qxl.java:28: error: incompatible types: boolean cannot be\
    \ converted to ArrayList<Integer>\n                    result = result.add(j);\n\
    \                                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660010955
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  // Write your code here\n        for(Integer i : x){\n            String digit\
    \ = Integer.toString(i);\n            int num = Integer.parseInt(digit);\n   \
    \         for(int j=(int)Math.pow(10,digit.length())-1;j>=0;j--){\n          \
    \      if(num%j == 0){\n                    break;\n                }\n      \
    \      }\n            if(j==0){\n                result.add(i);\n            }\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeq8bpqkb.java:28: error: cannot find symbol\n            if(j==0){\n\
    \               ^\n  symbol:   variable j\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010955
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        Collections.sort(x);\n\
    \        boolean changed = false;\n        for (int i : x) {\n            if (i\
    \ %2 == 0) {\n                changed = true;\n            }\n            else\
    \ {\n                ans.add(i);\n            }\n        }\n        if (changed)\
    \ {\n            Collections.sort(ans);\n        }\n        return ans;\n}\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcnhmlyky.java:36)\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Set<Integer> uniqueDigits = new HashSet<Integer>();\n        \n\
    \        for(int x : x) {\n            int digit = x / 10;\n            int remainder\
    \ = x % 10;\n            \n            if(remainder % 2 == 0) {\n            \
    \    uniqueDigits.add(digit);\n            }\n        }\n        \n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        \n        for(Integer digit : uniqueDigits)\
    \ {\n            for(Integer x : x) {\n                int remainder = x % 10;\n\
    \                \n                if(digit == remainder) {\n                \
    \    result.add(digit);\n                }\n            }\n        }\n       \
    \ \n        result.sort(Comparator.naturalOrder());\n        \n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2yntogd.java:20: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n        for(int x : x) {\n               \
    \ ^\n/tmp/tmpk2yntogd.java:32: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n            for(Integer x : x) {\n       \
    \                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010955
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for(Integer\
    \ i : x)\n            if(!(i%2)) y.add(i);\n        Collections.sort(y);\n   \
    \     return y;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo840bqc8.java:20: error: bad operand type int for unary operator\
    \ '!'\n            if(!(i%2)) y.add(i);\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010955
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for(int\
    \ i = 0; i < x.size(); i++) {\n            int k = x.get(i);\n            int\
    \ temp = k / 10;\n            if(k % 10 == 0) {\n                y.add(temp);\n\
    \            }\n        }\n        System.out.println(y);\n        return y;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr7nuvyq5.java:30)\n"
  stdout: '[]

    '
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write your code here\n        ArrayList<Integer> ret = new\
    \ ArrayList<Integer>();\n        Set<Integer> set = x.stream().map(String::valueOf).collect(Collectors.toSet());\n\
    \        Set<Integer> even = set.stream().filter(i -> i%2 == 0).collect(Collectors.toSet());\n\
    \        set.retainAll(even);\n        \n        if(set.size() > 0){\n       \
    \     for(int i : set){\n                ret.add(i);\n            }\n        }\n\
    \        \n        Collections.sort(ret);\n        \n        return ret;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8uigw5tj.java:20: error: incompatible types: inference variable\
    \ T has incompatible bounds\n        Set<Integer> set = x.stream().map(String::valueOf).collect(Collectors.toSet());\n\
    \                                                                  ^\n    equality\
    \ constraints: Integer\n    lower bounds: String\n  where T is a type-variable:\n\
    \    T extends Object declared in method <T>toSet()\n1 error\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> digits = new ArrayList<Integer>();\n      \
    \  for (Integer i : x) {\n            while (Character.getNumericValue(i.charAt(0))\
    \ % 2 != 0) {\n                digits.add(i%10);\n                i /= 10;\n \
    \           }\n        }\n        digits.sort(Comparator.naturalOrder());\n  \
    \      ArrayList<Integer> returnList = new ArrayList<Integer>();\n        for\
    \ (Integer i : digits) {\n            if (!returnList.contains(i)) {\n       \
    \         returnList.add(i);\n            }\n        }\n        return returnList;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpooh9hrs7.java:20: error: cannot find symbol\n            while\
    \ (Character.getNumericValue(i.charAt(0)) % 2 != 0) {\n                      \
    \                        ^\n  symbol:   method charAt(int)\n  location: variable\
    \ i of type Integer\n1 error\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Arrays.sort(x);\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        for (int i = 0; i < x.size(); i++) {\n            String str = String.valueOf(x.get(i));\n\
    \            Set<Character> evenDigit = new HashSet<Character>();\n          \
    \  for (int j = 0; j < str.length(); j++) {\n                if (str.charAt(j)\
    \ % 2 != 0) {\n                    evenDigit.add(str.charAt(j));\n           \
    \     }\n            }\n            if (!evenDigit.isEmpty()) {\n            \
    \    result.add(x.remove(i));\n            }\n        }\n        result.addAll(x);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0rjv52qr.java:18: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write your code here\n        ArrayList<Integer> y = new ArrayList<>();\n\
    \        x.forEach(item -> {\n            while (item > 0) {\n               \
    \ if (item % 2 == 0) {\n                    y.add(item);\n                   \
    \ item /= 2;\n                }\n            }\n        });\n        return y;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(Integer\
    \ i : x) {\n            for(Integer j : x) {\n                if(i != j && j %\
    \ 2 == 0) {\n                    result.add(i);\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3fylq4vl.java:30)\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 0; i < x.size(); i++) {\n            if (isEven(x.get(i))) {\n         \
    \       continue;\n            }\n            result.add(x.get(i));\n        }\n\
    \        return result.stream().sorted().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr7hvcba6.java:20: error: cannot find symbol\n            if (isEven(x.get(i)))\
    \ {\n                ^\n  symbol:   method isEven(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for(int\
    \ i=0; i<x.size(); ++i) {\n            for(int j=i+1; j<x.size(); ++j) {\n   \
    \             if(x.get(i).equals(x.get(i) + x.get(j)))\n                    res.add(x.get(i));\n\
    \            }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi7_hg9vb.java:28)\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        List<Integer> result = new ArrayList<>();\n        boolean flag\
    \ = false;\n        for(int i=0; i<x.size(); i++) {\n            int currentDigit\
    \ = x.get(i);\n            for(int j=0; j<i; j++) {\n                if(currentDigit\
    \ == x.get(j)) {\n                    flag = true;\n                    break;\n\
    \                }\n            }\n            if(!flag)\n                result.add(currentDigit);\n\
    \            flag = false;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk6lgf_ps.java:32: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(int\
    \ i : x) {\n            if(i%2 == 0) result.add(i);\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgouhjn37.java:25)\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        if (x.isEmpty()) return new ArrayList<>();\n        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        int maxNum = max(x); // finds the largest\
    \ number in the Array\n        Collections.sort(x);\n        for(int i : x) {\n\
    \            if(i % 2 == 0) {\n                if(!res.contains(maxNum - i)) {\n\
    \                    res.add(maxNum - i);\n                }\n            } else\
    \ {\n                if(!res.contains(i)) {\n                    res.add(i);\n\
    \                }\n            }\n        }\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp26rmrd8u.java:20: error: cannot find symbol\n        int maxNum\
    \ = max(x); // finds the largest number in the Array\n                     ^\n\
    \  symbol:   method max(ArrayList<Integer>)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> l = new ArrayList<>();\n        for(int i=0;\
    \ i<x.size(); i++) {\n            int x = x.get(i);\n            String s = Integer.toString(x);\n\
    \            Set<Integer> set = new HashSet<>();\n            for(char c : s.toCharArray())\
    \ {\n                if(Character.isDigit(c)) {\n                    set.add(Integer.valueOf(c));\n\
    \                }\n            }\n            if(!set.isEmpty()) {\n        \
    \        l.addAll((List<Integer>) set);\n            }\n        }\n        l.sort(null);\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqj_j_fcl.java:20: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n            int x = x.get(i);\n          \
    \      ^\n/tmp/tmpqj_j_fcl.java:20: error: int cannot be dereferenced\n      \
    \      int x = x.get(i);\n                     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  Map<Integer, Integer> map = new HashMap<>();\n        for (Integer x : x) {\n\
    \            if (map.get(x) == null) {\n                result.add(x);\n     \
    \           map.put(x, 1);\n            } else {\n                map.put(x, map.get(x)\
    \ + 1);\n            }\n        }\n        boolean unique = true;\n        for\
    \ (int i = 0; i < result.size(); i++) {\n            if (map.get(result.get(i))\
    \ != map.get(result.get(i - 1))) {\n                unique = false;\n        \
    \        break;\n            }\n        }\n        return unique ? result : new\
    \ ArrayList<Integer>();\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmperg7hb_3.java:20: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n        for (Integer x : x) {\n          \
    \           ^\n1 error\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        int sum\
    \ = 0;\n        for (int i = 0; i < x.size(); i++) {\n            int digit =\
    \ x.get(i) % 10;\n            if (digit != 0) {\n                sum += digit;\n\
    \            } else {\n                if (sum == 0) // if no digit, can skip\
    \ it\n                    result.add(x.get(i));\n                sum = 0;\n  \
    \          }\n        }\n        if (sum != 0) // if all digits are zero, can\
    \ skip it.\n            result.add(x.get(x.getSize() - 1));\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf4qyhmwz.java:31: error: cannot find symbol\n            result.add(x.get(x.getSize()\
    \ - 1));\n                              ^\n  symbol:   method getSize()\n  location:\
    \ variable x of type ArrayList<Integer>\n1 error\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y= new ArrayList<Integer>();\n        for (Integer\
    \ i: x)\n            if (i%10 == 0)\n                y.add(i);\n        Collections.sort(y);\n\
    \        return y;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp94ymwj9.java:26)\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n\n        // O(n)\
    \ time, O(1) space\n        for (Integer i : x)\n            if (!isEvenDigit(i))\n\
    \                result.add(i);\n\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm1axkolt.java:22: error: cannot find symbol\n            if (!isEvenDigit(i))\n\
    \                 ^\n  symbol:   method isEvenDigit(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        \n        for(int i=0; i<x.size(); i++)\n        {\n         \
    \   int y = (int)x.get(i);\n            int counter = 0;\n            \n     \
    \       for(int j=0; j<x.size(); j++)\n            {\n                int z =\
    \ (int)x.get(j);\n                if(y == z)\n                {\n            \
    \        counter++;\n                    break;\n                }\n         \
    \   }\n            \n            if(counter%2 == 0)\n            {\n         \
    \       x.remove(x);\n                x.add(y);\n            }\n        }\n  \
    \      \n        return x;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qhjw79c.java:44)\n"
  stdout: ''
  timestamp: 1660010956
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Set<Integer> s = new HashSet<>();\n        for(Integer i : x)\n\
    \            if(i.intValue() % 2 == 0) s.add(i);\n        List<Integer> r = new\
    \ ArrayList<>(s);\n        Collections.sort(r);\n        return r;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmponn5pz2j.java:23: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return r;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i=0; i < x.size(); i++) {\n            if (i % 2 == 0) {\n       \
    \         result.add(x.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplioxhjut.java:28)\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for(int i=0;\
    \ i<x.size(); ++i) {\n            String str = x.toString().replaceAll(\"\\\\\
    [\", \"\").replaceAll(\"\\\\]\", \"\");\n            for(int j=0; j<str.length();\
    \ ++j) {\n                if(str.charAt(j)%2 == 0) {\n                    if(!ret.contains(str.charAt(j)))\
    \ {\n                        ret.add(str.charAt(j));\n                    }\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return ret;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx77xyklq.java:24: error: incompatible types: char cannot be converted\
    \ to Integer\n                        ret.add(str.charAt(j));\n              \
    \                            ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream().map(String::valueOf).sorted().distinct()\n \
    \               .filter(n -> n.length() % 2 == 0)\n                .collect(Collectors.toList());\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ovq9ue4.java:20: error: incompatible types: inference variable\
    \ R has incompatible bounds\n                .collect(Collectors.toList());\n\
    \                        ^\n    equality constraints: List<T#2>\n    lower bounds:\
    \ ArrayList<Integer>,Object\n  where R,A,T#1,T#2 are type-variables:\n    R extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    A extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    T#1\
    \ extends Object declared in interface Stream\n    T#2 extends Object declared\
    \ in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        //Arrays.sort(x);\n        Set<Integer> set = new HashSet<>();\n\
    \        for (Integer i : x) {\n            if (!set.contains(i%10))\n       \
    \         set.add(i%10);\n        }\n        return new ArrayList<>(set);\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9b6jhijo.java:27)\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        if(x.size() == 0) return new ArrayList<>();\n        int[] digits\
    \ = new int[x.size()];\n        for(int i = 0; i < x.size(); i++) {\n        \
    \    digits[i] = x.get(i).intValue() % 10;\n        }\n        Arrays.sort(digits);\n\
    \        ArrayList<Integer> result = new ArrayList<>();\n        for(int i = 0;\
    \ i < digits.length; i++){\n            int j = digits[i];\n            while(j\
    \ > 0){\n                j -= 10;\n                if(!result.contains(j)){\n\
    \                    result.add(j);\n                }\n            }\n      \
    \  }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2qpa9y03.java:37)\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<>();\n        Set<Integer>\
    \ set = new HashSet<>();\n        \n        x.stream().map(s -> Integer.parseInt(s.toString())).forEach(s\
    \ -> set.add(s));\n        x.stream().filter(s -> set.contains(Integer.parseInt(s.toString()))).forEach(s\
    \ -> res.add(s));\n        \n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvkkzprsq.java:27)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Set<Integer> set = new HashSet<>();\n        for(Integer i: x)\n\
    \            if(!set.add(i))\n                while(set.contains((i / 10) % 10))\
    \ {\n                    set.remove((i / 10) % 10);\n                }\n     \
    \   return x.stream().sorted().filter(a -> !set.contains(a)).collect(Collectors.toList());\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoj07w4zo.java:24: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return x.stream().sorted().filter(a -> !set.contains(a)).collect(Collectors.toList());\n\
    \                                                                        ^\n \
    \   equality constraints: List<T#2>\n    lower bounds: ArrayList<Integer>,Object\n\
    \  where R,A,T#1,T#2 are type-variables:\n    R extends Object declared in method\
    \ <R,A>collect(Collector<? super T#1,A,R>)\n    A extends Object declared in method\
    \ <R,A>collect(Collector<? super T#1,A,R>)\n    T#1 extends Object declared in\
    \ interface Stream\n    T#2 extends Object declared in method <T#2>toList()\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        x.stream().forEach(element\
    \ -> {\n            String s = Integer.toString(element);\n            int len\
    \ = s.length();\n            for(int i = 0; i < len; i++) {\n                int\
    \ digit = s.charAt(i);\n                if(Character.isDigit(digit)) {\n     \
    \               boolean digitFound = false;\n                    int counter =\
    \ 0;\n                    for(int j = 0; j < len; j++) {\n                   \
    \     int charAt = s.charAt(j);\n                        if(Character.isDigit(charAt))\
    \ {\n                            int digitAt = Character.digit(charAt, 10);\n\
    \                            if(digitAt == digit) {\n                        \
    \        counter++;\n                                digitFound = true;\n    \
    \                            break;\n                            }\n         \
    \               }\n                    }\n                    if(digitFound ==\
    \ false) {\n                        y.add(element);\n                    }\n \
    \                   break;\n                }\n            }\n        });\n  \
    \      Collections.sort(y);\n        return y;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplo8l_ah6.java:49)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // write your code here\n        ArrayList<Integer> result = new\
    \ ArrayList<Integer>();\n        int sum = 0;\n        for(int n: x) {\n     \
    \       sum += n;\n        }\n        for(int i = 1; i < sum / 10; i++) {\n  \
    \          int count = 0;\n            for(int j : x) {\n                if(j\
    \ % 10 == i) {\n                    count += 1;\n                }\n         \
    \   }\n            if(count > 0) {\n                result.add(i);\n         \
    \   }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw9ld2981.java:38)\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // write your code in Java 7\n        if(x.isEmpty()) return x;\n\
    \        \n        ArrayList<Integer> result = new ArrayList<>();\n        \n\
    \        for(int i = 0; i < x.size(); ++i) {\n            int val = x.get(i);\n\
    \            while(val % 2 == 0) {\n                val = val / 10;\n        \
    \    }\n            \n            result.add(val);\n        }\n        \n    \
    \    return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgw4jp0br.java:35)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> list = new ArrayList<>();\n        for(int\
    \ i:x) {\n            if(i%2 == 0) {\n                list.add(i);\n         \
    \   }\n        }\n        Collections.sort(list);\n        return list;\n}\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfjxod_cp.java:28)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashMap<Integer,Integer> map = new HashMap<>();\n        for (int\
    \ x : x) {\n            if (!map.containsKey(x)) {\n                map.put(x,\
    \ 1);\n            } else {\n                map.put(x, map.get(x) + 1);\n   \
    \         }\n        }\n        List<Integer> l = new ArrayList<Integer>();\n\
    \        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n        \
    \    if (entry.getValue() == 1) {\n                l.add(entry.getKey());\n  \
    \          }\n        }\n        Collections.sort(l);\n        return l;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf_mewgu3.java:19: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n        for (int x : x) {\n              \
    \   ^\n/tmp/tmpf_mewgu3.java:33: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return l;\n               ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        // write\
    \ your logic here\n        List<Integer> copy = new ArrayList<Integer>(x);\n \
    \       Collections.sort(copy);\n        int start = 0;\n        int end = copy.size();\n\
    \        int count = 0;\n        while(start <= end) {\n            int middle\
    \ = (start + end)/2;\n            int sum = 0;\n            for(int i = start;\
    \ i <= middle; i++) {\n                sum += copy.get(i);\n                if(sum%10\
    \ != 0) {\n                    result.add(copy.get(i));\n                    count\
    \ = count + 1;\n                }\n            }\n            start = middle+1;\n\
    \            end = middle - 1;\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy3d1983p.java:42)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // TODO Auto-generated method stub\n        ArrayList<Integer>\
    \ uniqueArrayList = new ArrayList<>();\n\n        // find all x that doesn't have\
    \ any even digit\n        for (int i=0; i<x.size(); i++) {\n            int count\
    \ = 0;\n            while (count <= x.size() % 2) {\n                count +=\
    \ 1;\n            }\n            if (count != 0) {\n                uniqueArrayList.add(x.get(i));\n\
    \            }\n        }\n\n        return uniqueArrayList;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2fnvr88.java:35)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result=new ArrayList<>();\n        for(Integer\
    \ i:x) {\n            if(i%2==0) result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp37youf_t.java:26)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Map<Integer, Integer> map = new HashMap<Integer, Integer>();\n\
    \        for(Integer i: x) {\n            if(!map.containsKey(i)) {\n        \
    \        map.put(i, 1);\n            } else {\n                map.put(i, map.get(i)\
    \ + 1);\n            }\n        }\n        List<Integer> list = new ArrayList<Integer>();\n\
    \        for(Integer i: map.keySet()) {\n            if(map.get(i) % 2 != 0) {\n\
    \                list.add(i);\n            }\n        }\n        Collections.sort(list);\n\
    \        return list;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1j5qb238.java:33: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return list;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // write your code in Java SE 8\n        ArrayList<Integer> ret\
    \ = new ArrayList<Integer>();\n        List<Integer> list = x.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList());\n\
    \        list.stream().filter(c -> c%2 == 0).forEach(ret::add);\n        return\
    \ ret;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr8g08ka9.java:25)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        List<Integer> result = new ArrayList<>();\n        for(Integer\
    \ i : x) {\n            int count = 0;\n            while(i != 0) {\n        \
    \        if((i & 1) == 0)\n                    result.add(i);\n              \
    \  i = i >> 1;\n                ++count;\n            }\n            for(int j\
    \ = 0; j < count; ++j)\n                result.add(0);\n        }\n        result.sort(Integer::compareTo);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoyngg75z.java:31: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010957
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        HashSet<Integer>\
    \ set = new HashSet<>();\n        for(Integer i : x){\n            if(set.contains(i))\n\
    \                continue;\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8uusll96.java:29)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for(int i=0;\
    \ i<x.size(); i++) {\n            String s = Integer.toString(x.get(i));\n   \
    \         String str = s.replaceAll(\"\\\\D\",\"\");\n            if(str.length()\
    \ == 0 || str.matches(\"[01]+\")) {\n                ret.add(x.get(i));\n    \
    \        }\n        }\n        Collections.sort(ret);\n        return ret;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdgpy2x3u.java:30)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        if (x.isEmpty())\n            return x;\n        ArrayList<Integer>\
    \ list = new ArrayList<Integer>();\n        int i = 0;\n        while (i<x.size())\
    \ {\n            boolean flag = false;\n            int xx = x.get(i);\n     \
    \       int yx = 1;\n            int yy = 1;\n            while (i<x.size() &&\
    \ x!=null && xx!=0) {\n                flag = true;\n                if (xx.equals(x))\
    \ {\n                    yx += 1;\n                    yy += 1;\n            \
    \    } else {\n                    if (x%10 == 0) yy += 1;\n                 \
    \   if (yy > 2) flag = false;\n                    yx = 1;\n                }\n\
    \                i += 1;\n                xx = x.get(i);\n            }\n    \
    \        if (flag == false) list.add(yy);\n            i += 1;\n        }\n  \
    \      Collections.sort(list);\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        int y = 0;\n        while (y < list.size()) {\n            res.add(list.get(y));\n\
    \            y += 1;\n        }\n        return res;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe7_a_nay.java:29: error: int cannot be dereferenced\n         \
    \       if (xx.equals(x)) {\n                      ^\n/tmp/tmpe7_a_nay.java:33:\
    \ error: bad operand types for binary operator '%'\n                    if (x%10\
    \ == 0) yy += 1;\n                         ^\n  first type:  ArrayList<Integer>\n\
    \  second type: int\n2 errors\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 0; i < x.size(); i++) {\n            int digit = Integer.toString(i).length();\n\
    \            if (x.size() == i || x[i - 1] / 10 != i % 10) {\n               \
    \ for (int j = 0; j < digit; j++) {\n                    if (x[i - 1] / 10 * 10\
    \ == j / 10) {\n                        digit = digit - 1;\n                 \
    \       break;\n                    }\n                }\n            }\n    \
    \        for (int j = 0; j < digit; j++) {\n                for (int k = j; k\
    \ < digit; k++) {\n                    int product = x[i - 1] / 10 * 10 + k /\
    \ 10;\n                    if (product % 2 == 0) {\n                        result.add(product);\n\
    \                    }\n                }\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo7htfmkr.java:21: error: array required, but ArrayList<Integer>\
    \ found\n            if (x.size() == i || x[i - 1] / 10 != i % 10) {\n       \
    \                           ^\n/tmp/tmpo7htfmkr.java:23: error: array required,\
    \ but ArrayList<Integer> found\n                    if (x[i - 1] / 10 * 10 ==\
    \ j / 10) {\n                         ^\n/tmp/tmpo7htfmkr.java:31: error: array\
    \ required, but ArrayList<Integer> found\n                    int product = x[i\
    \ - 1] / 10 * 10 + k / 10;\n                                   ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> digits = new ArrayList<Integer>();\n        for(int n :\
    \ x) \n            digits.addInt(n);\n\n        Arrays.sort(digits);\n       \
    \ for(int i = 0; i < digits.size(); i++) {\n            int d = digits.get(i);\n\
    \            if(d % 2 == 0)\n                result.add(d);\n        }\n     \
    \   Arrays.sort(result);\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr44vt2o5.java:21: error: cannot find symbol\n            digits.addInt(n);\n\
    \                  ^\n  symbol:   method addInt(int)\n  location: variable digits\
    \ of type ArrayList<Integer>\n/tmp/tmpr44vt2o5.java:23: error: no suitable method\
    \ found for sort(ArrayList<Integer>)\n        Arrays.sort(digits);\n         \
    \     ^\n    method Arrays.sort(int[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Integer> cannot be converted to int[])\n    method Arrays.sort(long[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to long[])\n    method Arrays.sort(short[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to short[])\n    method Arrays.sort(char[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to char[])\n    method Arrays.sort(byte[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to byte[])\n    method Arrays.sort(float[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to float[])\n    method Arrays.sort(double[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to double[])\n    method Arrays.sort(Object[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<? super T#1>) is\
    \ not applicable\n      (cannot infer type-variable(s) T#1\n        (actual and\
    \ formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmpr44vt2o5.java:29: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(result);\n              ^\n    method"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        // return\
    \ an empty list when x has no digits\n        if (x.isEmpty()) return result;\n\
    \n        // find all even digits in x\n        int len = x.size();\n        for\
    \ (int i = 0; i < len; i = i + 2) {\n            Integer num = x.get(0);\n   \
    \         while (num != 0) {\n                result.add(num % 10);\n        \
    \        num = num >> 1;\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaw2mm7at.java:35)\n"
  stdout: ''
  timestamp: 1660010958
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashSet<Integer> noEvenDigit = new HashSet<>();\n        for (Integer\
    \ i : x) {\n            while (i > 9 && i % 10 == 0) {\n                noEvenDigit.add(i);\n\
    \                i /= 10;\n            }\n        }\n        ArrayList<Integer>\
    \ ret = new ArrayList<>();\n        for (Integer i : noEvenDigit) {\n        \
    \    while (i > 0) {\n                ret.add(i % 10);\n                i /= 10;\n\
    \            }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqxdxk8wf.java:35)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        List<Integer> res = new ArrayList<>();\n        Set<Integer> set\
    \ = new HashSet<>();\n        for (Integer t : x) {\n            if (set.contains(t))\
    \ {\n                continue;\n            }\n            int cnt = 0;\n    \
    \        while (t > 0) {\n                cnt += t % 10;\n                t /=\
    \ 10;\n            }\n            if (cnt % 2 == 0) {\n                res.add(t);\n\
    \                set.add(t);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgz9htcw3.java:34: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return res;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\n       \
    \ List<Integer> arr = new ArrayList<Integer>(x);\n        Collections.sort(arr);\n\
    \n        // Remove all odd numbers from list.\n        for(int i = arr.size()-1;\
    \ i >= 0; i--) {\n            if(arr.get(i) % 2 != 0)\n                arr.remove(i);\n\
    \        }\n\n        for(int i : arr) {\n            if(!ret.contains(i)) {\n\
    \                ret.add(i);\n            }\n        }\n\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxtuujioe.java:38)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        int digit = 0;\n        boolean evenDigit = false;\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        \n        for(int i : x) {\n            digit = i % 10;\n           \
    \ evenDigit = (digit % 2) == 0;\n            if(!set.contains(i) && evenDigit)\
    \ {\n                res.add(i);\n                set.add(i);\n            }\n\
    \        }\n        \n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl6nog7nf.java:35)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashSet<Integer> seen = new HashSet<>();\n        ArrayList<Integer>\
    \ ret = new ArrayList<>();\n        for (Integer i : x){\n            if (seen.add(i)){\n\
    \                ret.add(i);\n            }\n        }\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnf71zu1.java:28)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> a = new ArrayList<Integer>(); \n        for(Integer\
    \ x:x) \n            if (x % 10 != 0) \n                a.add(x);\n        return\
    \ a;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbwr1keuj.java:19: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n        for(Integer x:x) \n              \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashSet<Integer> hashSet = new HashSet<Integer>();\n        x.forEach(x\
    \ -> {\n            if (hashSet.contains(x)) {\n                return;\n    \
    \        }\n            hashSet.add(x);\n        });\n        return new ArrayList<Integer>(hashSet);\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2k070kt7.java:19: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n        x.forEach(x -> {\n               \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // TODO: fill this in\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp69jsz5j1.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // 1.\n        ArrayList<Integer> y = new ArrayList<>();\n   \
    \     // 2.\n        for (int i = 0; i < x.size(); i++) {\n            String\
    \ str = x.toString();\n            // 3.\n            int count = 0;\n       \
    \     // 4.\n            while (str.contains(\"0\")) {\n                // 5.\n\
    \                str = str.replaceFirst(\"0\", \"\");\n                count++;\n\
    \            }\n            // 6.\n            String s = String.valueOf(str);\n\
    \            String str = s.replaceAll(\"[0-9]\", \"\");\n            // 7.\n\
    \            if (str.equalsIgnoreCase(s)) {\n                // 8.\n         \
    \       y.add(x.get(i));\n            }\n        }\n        // 9.\n        Collections.sort(y);\n\
    \        // 10.\n        return y;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmrcoat7.java:33: error: variable str is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n            String str = s.replaceAll(\"[0-9]\"\
    , \"\");\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            if (x.get(i % x.size()) %\
    \ 2 == 0) {\n                result.add(x.remove(i));\n            }\n       \
    \ }\n        Collections.sort(result);\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxx4tiggi.java:28)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your code here\n        int[] even = new int[x.length];\n \
    \       for(int i = 0; i<x.length; i++){\n            even[i] = x[i]%10;\n   \
    \     }\n        Arrays.sort(even);\n        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for(int i = 0; i<x.length; i++){\n            if(!even[i]){\n       \
    \         res.add(x[i]);\n            }\n        }\n        return res;\n}\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppbhyi46n.java:19: error: cannot find symbol\n        int[] even\
    \ = new int[x.length];\n                              ^\n  symbol:   variable\
    \ length\n  location: variable x of type ArrayList<Integer>\n/tmp/tmppbhyi46n.java:20:\
    \ error: cannot find symbol\n        for(int i = 0; i<x.length; i++){\n      \
    \                    ^\n  symbol:   variable length\n  location: variable x of\
    \ type ArrayList<Integer>\n/tmp/tmppbhyi46n.java:21: error: array required, but\
    \ ArrayList<Integer> found\n            even[i] = x[i]%10;\n                 \
    \      ^\n/tmp/tmppbhyi46n.java:25: error: cannot find symbol\n        for(int\
    \ i = 0; i<x.length; i++){\n                          ^\n  symbol:   variable\
    \ length\n  location: variable x of type ArrayList<Integer>\n/tmp/tmppbhyi46n.java:26:\
    \ error: bad operand type int for unary operator '!'\n            if(!even[i]){\n\
    \               ^\n/tmp/tmppbhyi46n.java:27: error: array required, but ArrayList<Integer>\
    \ found\n                res.add(x[i]);\n                         ^\n6 errors\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 0; i < x.size(); i++) {\n            int num = (int) x.get(i);\n       \
    \     while (num > 9) {\n                if (num % 10 == 0) {\n              \
    \      res.add(num);\n                    break;\n                }\n        \
    \        num = (int) (num / 10);\n            }\n        }\n        \n       \
    \ return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj344yba5.java:33)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        Integer\
    \ temp;\n        int n = x.size();\n        int evenCount = 0;\n        for(int\
    \ i : x) {\n            temp = i;\n            while(temp / 10 != 0) {\n     \
    \           temp/=10;\n            }\n            if(i % 2 == 0) {\n         \
    \       evenCount++;\n            }\n            if(!result.contains(temp)) {\n\
    \                result.add(temp);\n            }\n        }\n        if(result.size()\
    \ == 0 || evenCount == x.size()) {\n            return result;\n        }\n  \
    \      Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpihqsq13u.java:41)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        int counter = 0;\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(Integer y: x) {\n            while(counter < 10) {\n            \
    \    if(y % 10 == 0) {\n                    result.add(y);\n                 \
    \   counter += 1;\n                    break;\n                }\n           \
    \     y += 10;\n                counter += 1;\n            }\n        }\n    \
    \    return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_90f0zw2.java:34)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write your code here\n        ArrayList<Integer> y = new ArrayList<Integer>();\n\
    \        for(int i : x){\n            for(int j = 2; j < Math.log10(i); j++){\n\
    \                if(i % j == 0){\n                    y.add(i);\n            \
    \    }\n            }\n        }\n        return y;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpak4w1wjc.java:30)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(Integer\
    \ y : x){\n            for(int i = 0; i < 10; i++){\n                if(y % i\
    \ == 0){\n                    result.add(y);\n                    break;\n   \
    \             }\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.uniqueDigits(tmpthrhxjn7.java:21)\n\tat Problem.main(tmpthrhxjn7.java:30)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<>();\n        int n = x.size();\n\
    \        for(int i = 0 ; i < n ; i++){\n            int c = x.get(i);\n      \
    \      for(int j = 0 ; j < n ; j++){\n                if(c == x.get(j)){\n   \
    \                 res.add(c);\n                }\n            }\n        }\n \
    \       return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdjg6lkc.java:31)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        List<Integer> list = new ArrayList<Integer>();\n        for(Integer\
    \ i : x){\n            if(i%2==0)\n                list.add(i);\n        }\n \
    \       Collections.sort(list);\n        ArrayList<Integer> newList = new ArrayList<Integer>();\n\
    \        for(int i : list){\n            if(!newList.contains(i))\n          \
    \      newList.add(i);\n        }\n        return newList;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkbbwfqd3.java:32)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for(int i : x){\n            int rem = i % 10;\n            if(rem == 0){\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_2q8n2r.java:29)\n"
  stdout: ''
  timestamp: 1660010960
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        \n   \
    \     for(Integer i:x)\n        {\n            Integer digit;\n            \n\
    \            while(i>0)\n            {\n                digit = i/10;\n      \
    \          \n                if(i%10 == 0)\n                {\n              \
    \      result.add(digit);\n                    break;\n                }\n   \
    \             \n                i = i/10;\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd0f6kxgq.java:40)\n"
  stdout: ''
  timestamp: 1660010959
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> results = new ArrayList<>();\n        // First\
    \ add all even numbers\n        for (Integer e : x) {\n            if (e % 2 ==\
    \ 0)\n                results.add(e);\n        }\n        // Then for each even\
    \ number x, find if it is included in the \n        // list of all even numbers\n\
    \        for (Integer e : x) {\n            if (!results.contains(e))\n      \
    \          results.add(e);\n        }\n        // Finally sort the list\n    \
    \    Collections.sort(results);\n        return results;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqqft43gp.java:35)\n"
  stdout: ''
  timestamp: 1660010960
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // write your code here\n        x.stream().map(i -> (i%10)==0)\n\
    \                .distinct().collect(Collectors.toList());\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp5w_67vvw.java:21: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010960
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Arrays.sort(x);\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        // Find all elements that not has even digits\n        for (Integer x\
    \ : x) {\n            if (x.toString().length() % 2 == 0) continue;\n        \
    \    int digit = Integer.parseInt(x.toString());\n            if (result.contains(digit))\
    \ continue;\n            result.add(digit);\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu8_x85av.java:18: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmpu8_x85av.java:21: error: variable x is already defined\
    \ in method uniqueDigits(ArrayList<Integer>)\n        for (Integer x : x) {\n\
    \                     ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010960
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < x.size(); i++) {\n            int digit = x.get(i);\n           \
    \ if(digit % 2 == 0) {\n                if(!result.contains(x.get(i - 1))) {\n\
    \                    result.add(x.get(i - 1));\n                }\n          \
    \  }\n        }\n        Collections.sort(result);\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps1tdf0kc.java:31)\n"
  stdout: ''
  timestamp: 1660010960
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (Integer i : x) {\n            Collections.sort(i);\n            boolean flag\
    \ = false;\n            for (int j : i) {\n                if (j % 2 != 0) {\n\
    \                    flag = true;\n                    break;\n              \
    \  }\n            }\n            if (!flag) {\n                res.add(i);\n \
    \           }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6x9jdtld.java:20: error: no suitable method found for sort(Integer)\n\
    \            Collections.sort(i);\n                       ^\n    method Collections.<T#1>sort(List<T#1>)\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; Integer cannot be converted to List<T#1>))\n    method Collections.<T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Comparable<? super T#1> declared in method\
    \ <T#1>sort(List<T#1>)\n    T#2 extends Object declared in method <T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>)\n/tmp/tmp6x9jdtld.java:22: error: for-each not applicable to expression\
    \ type\n            for (int j : i) {\n                         ^\n  required:\
    \ array or java.lang.Iterable\n  found:    Integer\n2 errors\n"
  stdout: ''
  timestamp: 1660010960
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n        for(Integer\
    \ i: x) {\n            if(i.intValue()%2 == 0) {\n                a.add(i);\n\
    \            }\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobgmk_7o.java:27)\n"
  stdout: ''
  timestamp: 1660010960
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<>();\n        for(int i :\
    \ x) {\n            int a = i;\n            boolean b = false;\n            for(int\
    \ j : y) {\n                if(j <= 0) {\n                    b = true;\n    \
    \                break;\n                }\n                if(a % j == 0) {\n\
    \                    b = true;\n                    break;\n                }\n\
    \            }\n            if(!b) {\n                y.add(i);\n            }\n\
    \        }\n        System.out.println(y);\n        return y;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq61n2k56.java:40)\n"
  stdout: '[15, 33, 1422, 1]

    '
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // copy list to prevent changing original list\n        ArrayList<Integer>\
    \ list = new ArrayList<>(x);\n        Arrays.sort(list);\n\n        Set<Integer>\
    \ set = new HashSet<>();\n\n        for(int i : list) {\n            // check\
    \ if list element has any even digit\n            if(i % 2 == 0)\n           \
    \     set.add(Integer.valueOf(i));\n        }\n\n        // remove any even digit\
    \ \n        list.removeAll(set);\n\n        // copy list to prevent changing original\
    \ list\n        list = new ArrayList<>(set);\n        Collections.sort(list);\n\
    \        return list;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2th2wml3.java:20: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(list);\n              ^\n    method Arrays.sort(int[]) is\
    \ not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010960
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        List<Integer> result = new ArrayList<>();\n        if (x != null)\
    \ {\n            x.stream().sorted().forEach(i -> {\n                if (Integer.parseInt(String.valueOf(i))\
    \ % 2 == 0) {\n                    result.add(i);\n                }\n       \
    \     });\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5jxugzu9.java:26: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010960
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        boolean\
    \ flag = false;\n        for (Integer n : x) {\n            if (n % 2 == 0) {\n\
    \                if (!flag) {\n                    result.add(n);\n          \
    \          flag = true;\n                }\n            } else {\n           \
    \     flag = false;\n            }\n        }\n        return result;\n}\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp11tt4w95.java:33)\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        \n        //Your code here\n        ArrayList<Integer> res= new\
    \ ArrayList<>();\n        HashMap<Integer, Integer> map = new HashMap<>();\n \
    \       for (int i : x)\n        {\n            if (map.containsKey(i))\n    \
    \        {\n                int temp=map.get(i);\n                map.put(i, temp+1);\n\
    \            }\n            else\n                map.put(i, 1);\n        }\n\
    \        \n        Set<Integer> keys = new HashSet<>(map.keySet());\n        for\
    \ (Integer key : keys)\n        {\n            if (map.get(key)==0)\n        \
    \    {\n                res.add(key);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdjs3gt6a.java:45)\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        \n   \
    \     boolean isEven = true;\n        \n        // find all the elements which\
    \ is evenly divisible by 2\n        for (int i = 0; i < x.size(); i++) {\n   \
    \         int digit = x.get(i);\n            if (digit % 2 == 0) {\n         \
    \       isEven = false;\n                break;\n            }\n        }\n  \
    \      \n        if (isEven) {\n            for (int i = 0; i < x.size(); i++)\
    \ {\n                int digit = x.get(i);\n                if (digit % 2 == 0)\
    \ {\n                    result.add(digit);\n                }\n            }\n\
    \        } else {\n            for (int i = 0; i < x.size(); i++) {\n        \
    \        int digit = x.get(i);\n                result.add(digit);\n         \
    \   }\n        }\n        \n        Collections.sort(result);\n        \n    \
    \    return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3mdwief2.java:50)\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Map<Integer,Integer> map = new HashMap<>();\n        for(int i\
    \ : x) map.put(i, map.getOrDefault(i, 0) + 1);\n        for(Integer i : map.keySet())\
    \ if(i%2 != 0) map.remove(i);\n        return Collections.unmodifiableList(new\
    \ ArrayList<>(map.values())).stream().sorted().collect(Collectors.toList());\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbll0ftc9.java:21: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return Collections.unmodifiableList(new ArrayList<>(map.values())).stream().sorted().collect(Collectors.toList());\n\
    \                                                                            \
    \                        ^\n    equality constraints: List<T#2>\n    lower bounds:\
    \ ArrayList<Integer>,Object\n  where R,A,T#1,T#2 are type-variables:\n    R extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    A extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    T#1\
    \ extends Object declared in interface Stream\n    T#2 extends Object declared\
    \ in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < x.size(); i++) {\n            int d = x.get(i);\n            while(d\
    \ > 0) {\n                while(d % 2 == 0) {\n                    d /= 2;\n \
    \               }\n                result.add(d);\n            }\n        }\n\
    \        result.sort();\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps32d79d4.java:28: error: method sort in class ArrayList<E> cannot\
    \ be applied to given types;\n        result.sort();\n              ^\n  required:\
    \ Comparator<? super Integer>\n  found:    no arguments\n  reason: actual and\
    \ formal argument lists differ in length\n  where E is a type-variable:\n    E\
    \ extends Object declared in class ArrayList\n1 error\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result=new ArrayList<Integer>();\n        HashMap<Integer,Integer>\
    \ map = new HashMap<Integer,Integer>();\n        for(int i=0;i<x.size();i++) {\n\
    \            int digit=x.get(i);\n            int count=map.get(digit);\n    \
    \        if(count==null) \n                map.put(digit, 1);\n            else\
    \ \n                map.put(digit, count+1);\n        }\n        int num=0;\n\
    \        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n        \
    \    if (entry.getValue() == 1)\n                result.add(num);\n          \
    \  num++;\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp68d8kk6j.java:23: error: bad operand types for binary operator\
    \ '=='\n            if(count==null) \n                    ^\n  first type:  int\n\
    \  second type: <null>\n1 error\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> even = new ArrayList<>();\n        ArrayList<Integer>\
    \ odd = new ArrayList<>();\n        for(Integer i: x) {\n            int digit\
    \ = i % 10;\n            if(digit != 0) {\n                odd.add(i);\n     \
    \       } else {\n                even.add(i);\n            }\n        }\n   \
    \     Collections.sort(even);\n        Collections.sort(odd);\n        odd.addAll(even);\n\
    \        return odd;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkznbkg5x.java:34)\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        Integer\
    \ num = new Integer(0);\n        // traverse the list\n        for (Integer i\
    \ : x) {\n            if (i.toString().length() == 1) {\n                num =\
    \ 0;\n            } else {\n                num = i;\n            }\n        \
    \    // only keep those which hasn't any even digit\n            if (num.toString().length()\
    \ % 2 == 0) {\n                result.add(i);\n            }\n        }\n    \
    \    return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvxihbjwo.java:35)\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        int count = 0;\n        Set<Integer> s = new HashSet<>();\n  \
    \      for (Integer y : x) {\n            if (y.getValue() % 2 == 0) {\n     \
    \           count++;\n                s.add(y);\n            }\n        }\n  \
    \      ArrayList<Integer> result = new ArrayList<>(s.size());\n        for (Integer\
    \ y : s) {\n            result.add(y);\n        }\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp1eo898b.java:21: error: cannot find symbol\n            if (y.getValue()\
    \ % 2 == 0) {\n                 ^\n  symbol:   method getValue()\n  location:\
    \ variable y of type Integer\n1 error\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        // add\
    \ all non even digits into a list\n        for (Integer i : x) {\n           \
    \ if (i % 2 == 0) {\n                result.add(i);\n            }\n        }\n\
    \        Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpure8164_.java:29)\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // write your code here\n        \n        HashMap<Integer, Integer>\
    \ hMap = new HashMap<Integer, Integer>();\n        ArrayList<Integer> l = new\
    \ ArrayList<Integer>();\n        for(int i = 0; i < x.size(); i++){\n        \
    \    if(!hMap.containsKey(x.get(i))){\n                l.add(x.get(i));\n    \
    \            hMap.put(x.get(i), 1);\n            }else{\n                hMap.put(x.get(i),\
    \ hMap.get(x.get(i)) + 1);\n            }\n        }\n        \n        for(int\
    \ i : l){\n            if(hMap.get(i) % 2 == 0){\n                l.add(i);\n\
    \                hMap.put(i, 0);\n            }\n        }\n        return l;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3qopb8bt.java:40)\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        if (x.isEmpty())\n            return x;\n\n        ArrayList<Integer>\
    \ ret = new ArrayList<>();\n\n        HashSet<Integer> tmp = new HashSet<>();\n\
    \        tmp = x.stream().filter(i -> {\n            if (isEven(i))\n        \
    \        return true;\n            else\n                return false;\n     \
    \   }).collect(Collectors.toCollection(HashSet::new));\n        tmp.forEach(i\
    \ -> ret.add(i));\n\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpad6dh8yh.java:25: error: cannot find symbol\n            if (isEven(i))\n\
    \                ^\n  symbol:   method isEven(Integer)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(Integer\
    \ integer : x) {\n            Collections.sort(result);\n            int d = integer;\n\
    \            while (d > 0) {\n                if (d % 2 != 0) {\n            \
    \        result.add(integer);\n                    break;\n                }\n\
    \                d /= 10;\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7u6f9842.java:34)\n"
  stdout: ''
  timestamp: 1660010961
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        // return\
    \ an empty list if the list contains no even digit.\n        if (x.isEmpty() ||\
    \ !x.stream().allMatch(i -> i % 2 == 0))\n            return result;\n       \
    \ \n        // For every two digit number\n        for (int i = 0; i < x.size()\
    \ - 1; i++) {\n            int currentDigit = x.get(i);\n            int nextDigit\
    \ = x.get(i + 1);\n            \n            // If the current digit is not divisible\
    \ by 2\n            if (currentDigit % 2 != 0)\n                continue;\n  \
    \          \n            // If the next digit is not divisible by 2\n        \
    \    if (nextDigit % 2 != 0)\n                continue;\n            \n      \
    \      // If the next digit is not the same as current digit\n            if (currentDigit\
    \ != nextDigit)\n                result.add(currentDigit);\n        }\n      \
    \  return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8dvgtjzw.java:43)\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        HashMap<Integer,\
    \ Integer> map = new HashMap<>();\n        for (Integer i : x) {\n           \
    \ if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n   \
    \         } else {\n                map.put(i, 1);\n            }\n        }\n\
    \        Iterator<Integer> keys = map.keySet().iterator();\n        while (keys.hasNext())\
    \ {\n            Integer k = keys.next();\n            if (map.get(k) % 2 == 0)\
    \ {\n                result.add(k);\n            }\n        }\n        result.sort(Comparator.naturalOrder());\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9wsfmfb.java:38)\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // TODO Auto-generated method stub\n        int n=x.size();\n\
    \        Set<Integer> set=new HashSet<Integer>();\n        Arrays.sort(x);\n \
    \       for(int i=0;i<n;i++)\n        {\n            if(x[i]%2!=0)\n         \
    \   {\n                if(set.contains(x[i]))\n                    set.remove(x[i]);\n\
    \                else\n                    set.add(x[i]);\n            }\n   \
    \     }\n        ArrayList<Integer> result=new ArrayList<Integer>();\n       \
    \ for(Integer i:set)\n            result.add(i);\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph5wf9t58.java:21: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmph5wf9t58.java:24: error: array required, but ArrayList<Integer>\
    \ found\n            if(x[i]%2!=0)\n                ^\n/tmp/tmph5wf9t58.java:26:\
    \ error: array required, but ArrayList<Integer> found\n                if(set.contains(x[i]))\n\
    \                                 ^\n/tmp/tmph5wf9t58.java:27: error: array required,\
    \ but ArrayLis"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ hs = new HashSet<Integer>();\n        for (Integer i : x) {\n            hs.add(i);\n\
    \        }\n        for (Integer i : hs) {\n            list.add(i);\n       \
    \ }\n        return list;\n}\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphd7vxjzd.java:29)\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for(int\
    \ i=0; i<x.size(); i++){\n            int num = x.get(i);\n            String\
    \ s = Integer.toString(num);\n            char[] digits = s.toCharArray();\n \
    \           Set<Character> d = new HashSet<Character>(Arrays.asList(digits));\n\
    \            if(!d.isEmpty() && d.size() >= 1){\n                if(!res.contains(Integer.parseInt(s)))\
    \ {\n                    res.add(num);\n                }\n            }\n   \
    \     }\n        return res;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmw5iex3k.java:23: error: no suitable constructor found for HashSet(List<char[]>)\n\
    \            Set<Character> d = new HashSet<Character>(Arrays.asList(digits));\n\
    \                               ^\n    constructor HashSet.HashSet(Collection<?\
    \ extends Character>) is not applicable\n      (argument mismatch; inference variable\
    \ T has incompatible bounds\n          lower bounds: Character,Object\n      \
    \    lower bounds: char[])\n    constructor HashSet.HashSet(int) is not applicable\n\
    \      (argument mismatch; no instance(s) of type variable(s) T exist so that\
    \ List<T> conforms to int)\n  where T is a type-variable:\n    T extends Object\
    \ declared in method <T>asList(T...)\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        IntStream\n\
    \            .range(1, x.size()) // To get the index\n            .filter(i->!x[i].equals(0))\
    \ // To filter out zero elements\n            .filter(x -> x.intValue()%2 == 0)\
    \ // To filter out even elements\n            .boxed() // To convert Integer to\
    \ Integer\n            .sorted() // To sort them in increasing order\n       \
    \     .forEach(result::add); // To add them to the result\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp868vzvql.java:21: error: array required, but ArrayList<Integer>\
    \ found\n            .filter(i->!x[i].equals(0)) // To filter out zero elements\n\
    \                         ^\n/tmp/tmp868vzvql.java:22: error: variable x is already\
    \ defined in method uniqueDigits(ArrayList<Integer>)\n            .filter(x ->\
    \ x.intValue()%2 == 0) // To filter out even elements\n                    ^\n\
    /tmp/tmp868vzvql.java:22: error: int cannot be dereferenced\n            .filter(x\
    \ -> x.intValue()%2 == 0) // To filter out even elements\n                   \
    \       ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        if (x.isEmpty()) return new ArrayList<>();\n        ArrayList<Integer>\
    \ unique = new ArrayList<>();\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        ArrayList<Integer> evenDigit = new ArrayList<>();\n        // create\
    \ all even digit and unique list\n        for (Integer i : x) {\n            String\
    \ s = Integer.toString(i);\n            int evenDigitDigit = s.charAt(0) - '0';\n\
    \            if (evenDigit.contains(evenDigitDigit)) continue;\n            evenDigit.add(evenDigitDigit);\n\
    \            if (s.charAt(0) % 2 == 0) {\n                unique.add(i);\n   \
    \         }\n        }\n        // remove all even digit from unique list then\
    \ \n        // remove duplicate\n        for (int i = 0; i < unique.size(); i++)\
    \ {\n            Integer j = unique.get(i);\n            String s = Integer.toString(j);\n\
    \            int k = Integer.parseInt(s.substring(1));\n            if (s.charAt(0)\
    \ % 2 == 0) {\n                unique.remove(i);\n            }\n        }\n \
    \       for (Integer i : unique) {\n            result.add(i);\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdqbfwbfg.java:48)\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        ArrayList<Integer>\
    \ digit = new ArrayList<>();\n\n        for (Integer element : x) {\n        \
    \    digit.add(element);\n        }\n\n        for (int i = 0; i < digit.size();\
    \ i++) {\n            for (int j = 0; j < digit.size(); j++) {\n             \
    \   if (digit.get(i) % digit.get(j) == 0) {\n                    digit.remove(i);\n\
    \                }\n            }\n        }\n        result.addAll(digit);\n\
    \        result.sort(null);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr7ncck26.java:37)\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        int\
    \ sum = 0;\n        for (int num : x)\n            sum += num;\n        for (int\
    \ num : x) {\n            if (num >> 4)\n                res.add(num);\n     \
    \   }\n        \n        for(int i=0;i<sum;i++){\n            if(res.get(i)%2==0)\n\
    \                res.remove(i);\n        }\n        \n        return res;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkbt7zooz.java:23: error: incompatible types: int cannot be converted\
    \ to boolean\n            if (num >> 4)\n                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        List<Integer> y = new ArrayList<>();\n        for (Integer i :\
    \ x) {\n            if (i%2 != 0) {\n                y.add(i);\n            }\n\
    \        }\n        return y;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52ve6jw3.java:24: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return y;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<>();\n        int temp\
    \ = 0;\n        for (int i = 0; i < x.size(); i++) {\n            int sum = 0;\n\
    \            while (i < x.size() && x[i] > 0)\n                sum += x[i++];\n\
    \            if (sum % 2 == 0)\n                res.add(x[i]);\n        }\n  \
    \      Collections.sort(res);\n        return res;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjpkhl18g.java:22: error: array required, but ArrayList<Integer>\
    \ found\n            while (i < x.size() && x[i] > 0)\n                      \
    \              ^\n/tmp/tmpjpkhl18g.java:23: error: array required, but ArrayList<Integer>\
    \ found\n                sum += x[i++];\n                        ^\n/tmp/tmpjpkhl18g.java:25:\
    \ error: array required, but ArrayList<Integer> found\n                res.add(x[i]);\n\
    \                         ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Map<Integer, Integer> map = new HashMap<>();\n        for( int\
    \ i = 0; i < x.size(); i++ ){\n            int key = x[i];\n            if( map.containsKey(\
    \ key ) ) {\n                int val = map.get( key );\n                if( val\
    \ != 0 ) {\n                    int temp = ( val + key ) % 10;\n             \
    \       map.put( temp, val );\n                    map.put( key, val );\n    \
    \            } else {\n                    map.put( key, key );\n            \
    \    }\n            } else {\n                map.put( key, key );\n         \
    \   }\n        }\n        ArrayList<Integer> ret = new ArrayList<>();\n      \
    \  for( int key : map.keySet() ){\n            if( map.get( key ) % 2 == 0 ){\n\
    \                ret.add( key );\n            }\n        }\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_oxvw2gn.java:20: error: array required, but ArrayList<Integer>\
    \ found\n            int key = x[i];\n                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (Integer\
    \ integer : x) {\n            int temp = integer;\n            while (temp / 10\
    \ % 2 == 0) {\n                temp = temp / 10;\n            }\n            if\
    \ (integer % 10 == temp) {\n                result.add(integer);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010967
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashSet<Integer> tmpSet = new HashSet<Integer>();\n        ArrayList<Integer>\
    \ tmpList = new ArrayList<Integer>();\n\n        for(int i : x){\n           \
    \ tmpSet.add(i);\n        }\n\n        for(int i : tmpSet){\n            if((i\
    \ / 10) % 2 == 0){\n                tmpList.add(i);\n            }\n        }\n\
    \        Collections.sort(tmpList);\n        return tmpList;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptwlmeudh.java:34)\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  int sum = 0;\n        for(Integer n : x) {\n            sum += n;\n       \
    \ }\n        for(int i = 0; i <= sum; i++) {\n            int count = 0;\n   \
    \         for(int j = 0; j < x.size(); j++) {\n                if(i % x.get(j)\
    \ == 0) {\n                    count++;\n                    x.remove(j);\n  \
    \              }\n            }\n            if(count == 0)\n                result.add(i);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1obsr4sj.java:37)\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        \n   \
    \     for (Integer num : x) {\n            int numDigit = num % 10;\n        \
    \    if (numDigit % 2 == 0) {\n                result.add(num);\n            }\n\
    \        }\n        \n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpghoxaixz.java:30)\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        Set<Integer>\
    \ set = new HashSet<>(x);\n        result.addAll(set);\n        Collections.sort(result);\n\
    \        ArrayList<Integer> tmp = new ArrayList<>(result);\n        tmp.stream().filter(i\
    \ -> Integer.valueOf(i) % 2 == 0).forEach(i -> {\n            result.remove(i);\n\
    \        });\n        Collections.sort(result);\n        return result;\n}\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9uo8fbi0.java:31)\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for(int i\
    \ = 0; i < x.size(); i++) {\n            int count = 0;\n            int temp\
    \ = x.get(i);\n            while(temp > 0) {\n                temp/=10;\n    \
    \            count++;\n            }\n            boolean hasEven = false;\n \
    \           for(int j=0; j<count; j++) {\n                if(x.contains(temp%10))\
    \ {\n                    hasEven = true;\n                    break;\n       \
    \         }\n            }\n            if(!hasEven) ret.add(temp);\n        }\n\
    \        Collections.sort(ret);\n        return ret;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_d5of8t8.java:39)\n"
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        // write\
    \ your code here\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpd5mtws7s.java:20: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010962
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (Integer\
    \ i : x) {\n            Integer digit = i % 10;\n            if (!result.contains(digit))\n\
    \                result.add(digit);\n        }\n        return result;\n}\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpguhnkmn6.java:27)\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result=new ArrayList<Integer>();\n        Set<Integer>\
    \ set=new HashSet<Integer>();\n        for(int i=0;i<x.size();i++) {\n       \
    \     int num=x.get(i);\n            int digit=0;\n            while(num>=10)\
    \ {\n                num=num/10;\n                digit++;\n            }\n  \
    \          if(set.contains(num)) {\n                continue;\n            }\n\
    \            if(digit==0) {\n                continue;\n            }\n      \
    \      result.add(num);\n            set.add(num);\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3njzrush.java:39)\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for(int i\
    \ : x)\n            if(!ret.remove(i))\n                ret.add(i);\n        return\
    \ ret;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8y9dle97.java:20: error: bad operand type Integer for unary operator\
    \ '!'\n            if(!ret.remove(i))\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i : x) {\n            while (x.size() > 1 && x.get(0).intValue() % 10 == x.get(1).intValue())\
    \ {\n                x.remove(0);\n                x.remove(1);\n            }\n\
    \            if (x.size() > 0) {\n                result.add(i);\n           \
    \     x.remove(0);\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.uniqueDigits(tmpuizhch3k.java:19)\n\
    \tat Problem.main(tmpuizhch3k.java:32)\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for(int\
    \ i = 0; i < x.size(); i++) {\n            int z = 0;\n            while (!(z\
    \ = (x.get(i) % 10)) > 0);\n            if(z < 2) {\n                y.add(x.get(i));\n\
    \            }\n        }\n        return y;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxvga66m_.java:21: error: bad operand type int for unary operator\
    \ '!'\n            while (!(z = (x.get(i) % 10)) > 0);\n                   ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashSet<Integer> set = new HashSet<Integer>();\n        ArrayList<Integer>\
    \ ret = new ArrayList<>();\n        for (Integer i : x){\n            if (set.contains(i))\
    \ continue;\n            boolean contains = false;\n            for (Integer o\
    \ : ret){\n                if (o.equals(i)) contains = true;\n            }\n\
    \            if (contains) continue;\n            set.add(i);\n            ret.add(i);\n\
    \        }\n        return ret;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptd75jkxe.java:33)\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Step 1: find the even digits in a list\n        // Step 2:\
    \ find the odd digits in a list\n        // Step 3: find the intersection of these\
    \ two lists.\n        // Step 4: sort it.\n        return x.stream().map(Integer::toString).map(Integer::valueOf).filter(i\
    \ -> i%2==0).collect(Collectors.toList());\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkmwsz0e1.java:22: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        return x.stream().map(Integer::toString).map(Integer::valueOf).filter(i\
    \ -> i%2==0).collect(Collectors.toList());\n                             ^\n \
    \   (argument mismatch; invalid method reference\n      reference to toString\
    \ is ambiguous\n        both method toString(int) in Integer and method toString()\
    \ in Integer match)\n  where R,T are type-variables:\n    R extends Object declared\
    \ in method <R>map(Function<? super T,? extends R>)\n    T extends Object declared\
    \ in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        List<Integer> sortedList = x.stream().sorted().collect(Collectors.toList());\n\
    \        List<Integer> result = new ArrayList<Integer>();\n        for(int i :\
    \ sortedList) {\n            if(i%2 == 0) {\n                continue;\n     \
    \       }\n            boolean found = false;\n            for(int j : result)\
    \ {\n                if(j == i) {\n                    found = true;\n       \
    \             break;\n                }\n            }\n            if(!found)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkmr63w1t.java:35: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  List<Integer> copy = new ArrayList<Integer>(x);\n        Integer odd = null;\n\
    \        Integer odd_even = null;\n        // sort all odd digits\n        for(int\
    \ i = 0; i < copy.size(); i++) {\n            if (copy.get(i) % 2 == 0) {\n  \
    \              result.add(copy.get(i));\n            }\n        }\n        //\
    \ sort even digits\n        for(int i = 0; i < copy.size(); i++) {\n         \
    \   Integer x = copy.get(i);\n            if((x % 2 == 0) || ((x % 2 == 1) &&\
    \ x != odd_even)) {\n                result.add(copy.get(i));\n            }\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5cpgmnya.java:30: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n            Integer x = copy.get(i);\n   \
    \                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        Set<Integer>\
    \ set = new HashSet<Integer>();\n        for(Integer i : x){\n            int\
    \ temp = i;\n            while(temp > 0){\n                if(set.contains(temp%10)){\n\
    \                    break;\n                }else{\n                    set.add(temp%10);\n\
    \                    list.add(temp);\n                }\n                temp\
    \ = temp/10;\n            }\n        }\n        Collections.sort(list);\n    \
    \    System.out.println(list);\n        return list;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_38c6vt.java:37)\n"
  stdout: '[1, 15, 33, 1422]

    '
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        // using\
    \ set with lambda function\n        // and collect method from stream\n      \
    \  Set<Integer> set = new HashSet<>((o1, o2) -> Integer.compare(o2, o1));\n  \
    \      result.addAll(x.stream().filter(set::contains).sorted().distinct().collect(toList()));\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptlx4bu8y.java:21: error: cannot infer type arguments for HashSet<>\n\
    \        Set<Integer> set = new HashSet<>((o1, o2) -> Integer.compare(o2, o1));\n\
    \                           ^\n/tmp/tmptlx4bu8y.java:22: error: cannot find symbol\n\
    \        result.addAll(x.stream().filter(set::contains).sorted().distinct().collect(toList()));\n\
    \                                                                            \
    \       ^\n  symbol:   method toList()\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        //your code goes here\n        Arrays.sort(x);\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        Set<Integer> set = new HashSet<>();\n \
    \       for(int num: x){\n            int d = 0;\n            for(int i = 1; i\
    \ < num; i++){\n                d += num % 10;\n            }\n            if(!set.add(num)\
    \ && d % 2 == 0){\n                result.add(num);\n            }\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9x2mp_jx.java:19: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashSet<Integer> set = new HashSet<>();\n        for (Integer\
    \ e : x) {\n            set.remove(e);\n            set.add(e);\n        }\n \
    \       return set.stream().sorted().distinct().collect(Collectors.toList());\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7bwbm6gl.java:23: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return set.stream().sorted().distinct().collect(Collectors.toList());\n\
    \                                                       ^\n    equality constraints:\
    \ List<T#2>\n    lower bounds: ArrayList<Integer>,Object\n  where R,A,T#1,T#2\
    \ are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    T#1 extends Object declared in interface Stream\n    T#2\
    \ extends Object declared in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1660010963
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        Integer\
    \ temp = new Integer(0);\n        for (Integer num : x) {\n            while (num.intValue()\
    \ > 0) {\n                temp = temp * 10 + (num.intValue() % 10);\n        \
    \        num = num.intValue() / 10;\n            }\n            if (temp.intValue()\
    \ % 2 != 0) {\n                result.add(num);\n            }\n            temp\
    \ = new Integer(0);\n        }\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk9ulhc2j.java:33)\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        x.stream().filter(e\
    \ -> {\n            boolean hasEven = false;\n            String str = e.toString();\n\
    \            for (int i=0; i<str.length(); i++) {\n                if ((str.charAt(i))\
    \ % 2 == 0) {\n                    hasEven = true;\n                }\n      \
    \      }\n            if (!hasEven) {\n                y.add(e);\n           \
    \ }\n            return hasEven;\n        }).sorted(Comparator.naturalOrder()).collect(Collectors.toList());\n\
    \        return y;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpme3_7clb.java:35)\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Set<Integer> set = new HashSet<>(x);\n        ArrayList<Integer>\
    \ y = new ArrayList<>();\n        for(Integer i : set) {\n            Integer\
    \ temp = i;\n            while(temp != 0) {\n                if(temp % 2 == 0)\
    \ {\n                    temp = Math.abs(temp) / 2;\n                    y.add(temp);\n\
    \                    break;\n                }\n                temp = Math.abs(temp)\
    \ / 2;\n            }\n        }\n        return y;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqf8rta3e.java:34)\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        if (x.isEmpty())\n            return new ArrayList<Integer>();\n\
    \        int[] digits = new int[x.size()];\n        x.forEach((x) -> digits[x\
    \ % 10] = 1);\n        Arrays.sort(digits);\n        ArrayList<Integer> result\
    \ = new ArrayList<Integer>();\n        for (int i = 0; i < digits.length; i++)\n\
    \            if (digits[i] != 0)\n                result.add(x.size() - i);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4k4cpd9c.java:21: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n        x.forEach((x) -> digits[x % 10] =\
    \ 1);\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // TODO: Write your code here\n        return null;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpu9j837h5.java:22)\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        Set<Integer> s = new HashSet<Integer>();\n        for(Integer\
    \ i : x) {\n            if(i%10 != 0) {\n                s.add(i);\n         \
    \   }\n        }\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n\
    \        Iterator<Integer> it = s.iterator();\n        while(it.hasNext()) {\n\
    \            Integer i = it.next();\n            if(!ans.contains(i)) {\n    \
    \            ans.add(i);\n            }\n        }\n        return ans;\n}\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpga4695ar.java:35)\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  Set<Integer> set = new HashSet<Integer>();\n        for (int ele : x) {\n \
    \           set.add(ele);\n        }\n        \n        ArrayList<Integer> newSet\
    \ = new ArrayList<Integer>();\n        for(int ele:set){\n            if(set.contains(ele%10)){\n\
    \                if(!result.contains(ele)){\n                    result.add(ele);\n\
    \                }\n            }\n            else{\n                newSet.add(ele);\n\
    \            }\n        }\n        result.addAll(newSet);\n        \n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfwuflxmk.java:40)\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> digit = new ArrayList<>();\n        Set<Integer>\
    \ set = new HashSet<>();\n        for (Integer integer : x) {\n            digit.add(integer);\n\
    \            if (set.contains(integer % 10)) {\n                digit.remove(integer\
    \ % 10);\n            } else {\n                set.add((int) integer % 10);\n\
    \            }\n        }\n        return digit;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0frkthxf.java:31)\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        \n        \n        \n        \n        \n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpvewjj1ih.java:23: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        List<Integer> list = x.stream().filter(i -> Integer.parseInt(String.valueOf(i))%2==0).sorted().collect(Collectors.toList());\n\
    \        List<Integer> results = new ArrayList<Integer>();\n        for(Integer\
    \ i:list){\n            if(!results.contains(i))\n                results.add(i);\n\
    \        }\n        return results;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu2y58vav.java:24: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return results;\n              \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for(int i\
    \ : x) {\n            for(int j = 1; j < i/2; j++) {\n                if(i % j\
    \ == 0)\n                    break;\n            }\n            if(i/2 != 0)\n\
    \                ans.add(i);\n        }\n        return ans;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_trchpks.java:30)\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n        for(Integer\
    \ i: x) {\n            hs.add(i, 0);\n        }\n        ArrayList<Integer> res\
    \ = new ArrayList<Integer>();\n        for(Integer i: hs) {\n            if(i.%2\
    \ == 0) {\n                res.add(i);\n            }\n        }\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp3gogjek.java:24: error: <identifier> expected\n            if(i.%2\
    \ == 0) {\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  int size = x.size();\n        // Traverse through all the elements of the list.\n\
    \        for (int i = 0; i < size; i++) {\n            int digit = 0;\n      \
    \      // Get the digit at i-th index.\n            digit = x.get(i);\n      \
    \      \n            // For even digits, check it against the current number till\
    \ the end\n            if (digit % 2 == 0) {\n                for (int j = i;\
    \ j < size; j++) {\n                    digit = x.get(j);\n                  \
    \  \n                    // If the digit is not even, add it to the result list.\n\
    \                    // Else break the loop.\n                    if (digit %\
    \ 2 != 0) {\n                        result.add(digit);\n                    \
    \    break;\n                    }\n                }\n            }\n       \
    \ }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphftupfcy.java:43)\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        Set<Integer>\
    \ set = new HashSet<Integer>();\n        x.forEach(y -> set.add(y));\n       \
    \ Set<Integer> set1 = new HashSet<Integer>();\n        set1.addAll(set);\n   \
    \     for (Integer i : set1) {\n            while (true) {\n                if\
    \ (set1.contains(i)) {\n                    set1.remove(i);\n                }\
    \ else {\n                    set.add(i);\n                    break;\n      \
    \          }\n            }\n        }\n        System.out.println(set);\n   \
    \     System.out.println(set1);\n        return set;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx4d_jfh5.java:20: error: variable y is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n        x.forEach(y -> set.add(y));\n    \
    \              ^\n/tmp/tmpx4d_jfh5.java:35: error: incompatible types: Set<Integer>\
    \ cannot be converted to ArrayList<Integer>\n        return set;\n           \
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010964
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n\
    \        for (int i = 0; i < x.size(); i++) {\n            Integer key = x[i];\n\
    \            if (map.containsKey(key)) {\n                map[key] = map.get(key)\
    \ + 1;\n            } else {\n                map.put(key, 1);\n            }\n\
    \        }\n        ArrayList<Integer> result = new ArrayList<Integer>();\n  \
    \      for (Integer key : map.keySet()) {\n            if (map.get(key) % 2 ==\
    \ 0) {\n                result.add(key);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo2dxznvm.java:20: error: array required, but ArrayList<Integer>\
    \ found\n            Integer key = x[i];\n                           ^\n/tmp/tmpo2dxznvm.java:22:\
    \ error: array required, but HashMap<Integer,Integer> found\n                map[key]\
    \ = map.get(key) + 1;\n                   ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashMap<Integer, Integer> map = new HashMap<>();\n        for(int\
    \ i = 0; i < x.size(); i++) {\n            int value = x.get(i);\n           \
    \ if(map.containsKey(value)) {\n                map.put(value);\n            }\
    \ else {\n                map.put(value, 1);\n            }\n        }\n     \
    \   ArrayList<Integer> list = new ArrayList<>();\n        for(Integer key : map.keySet())\
    \ {\n            int value = map.get(key);\n            if(value % 2 == 0) {\n\
    \                list.add(x);\n            }\n        }\n        return list;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzp1whx8e.java:22: error: method put in class HashMap<K,V> cannot\
    \ be applied to given types;\n                map.put(value);\n              \
    \     ^\n  required: Integer,Integer\n  found:    int\n  reason: actual and formal\
    \ argument lists differ in length\n  where K,V are type-variables:\n    K extends\
    \ Object declared in class HashMap\n    V extends Object declared in class HashMap\n\
    /tmp/tmpzp1whx8e.java:31: error: incompatible types: ArrayList<Integer> cannot\
    \ be converted to Integer\n                list.add(x);\n                    \
    \     ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();\n\
    \        for(int i : x){\n            if(map.get(i) == null){\n              \
    \  map.put(i, 1);\n            }else{\n                map.put(i, map.get(i) +\
    \ 1);\n            }\n        }\n\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        Set<Integer> set = new HashSet<Integer>();\n        for(Integer i : map.keySet()){\n\
    \            if(set.contains(i)){\n                map.remove(i);\n          \
    \  }else{\n                res.add(i);\n                set.add(i);\n        \
    \    }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzn20lxia.java:40)\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  Set<Integer> set = new HashSet<Integer>();\n        for(int i : x)\n      \
    \      if(!set.add(i))\n                result.add(i);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoivt6zfr.java:26)\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        //  \n        ArrayList<Integer> y = new ArrayList<>();\n    \
    \    for(int i=0; i< x.size(); i++){\n            if(x.contains(x.get(i % x.size())))\
    \ continue;\n            Integer z = x.get(i % x.size());\n            int d =\
    \ z.intValue() % 10;\n            while(y.contains(z)){\n                z = z*10\
    \ + d;\n                d = d % 10;\n            }\n            y.add(z);\n  \
    \      }\n        return y;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjm215d3l.java:33)\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        \n   \
    \     for(Integer n : x) {\n            if((n%10)%2 == 0) {\n                result.add(n);\n\
    \            }\n        }\n        \n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfhife557.java:29)\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // sort and return a list of non-unique elements\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        int digit = Integer.MIN_VALUE;\n      \
    \  for (Integer i : x) {\n            if (i < 10) {\n                digit = i;\n\
    \            } else if (digit != i) {\n                result.add(i);\n      \
    \          digit = i;\n            }\n        }\n        return result;\n}\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk78b3no7.java:32)\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int digit = x.get(i);\n \
    \           if (!((digit % 2) == 0))\n                result.add(digit);\n   \
    \     }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyptrml29.java:27)\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(Integer\
    \ i : x){\n            Integer digit = getDigit(i);\n            if(digit==0){\n\
    \                result.add(i);\n            }\n        }\n        Arrays.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe7e5b_yt.java:20: error: cannot find symbol\n            Integer\
    \ digit = getDigit(i);\n                            ^\n  symbol:   method getDigit(Integer)\n\
    \  location: class Problem\n/tmp/tmpe7e5b_yt.java:25: error: no suitable method\
    \ found for sort(ArrayList<Integer>)\n        Arrays.sort(result);\n         \
    \     ^\n    method Arrays.sort(int[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Integer> cannot be converted to int[])\n    method Arrays.sort(long[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to long[])\n    method Arrays.sort(short[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to short[])\n    method Arrays.sort(char[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to char[])\n    method Arrays.sort(byte[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to byte[])\n    method Arrays.sort(float[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to float[])\n    method Arrays.sort(double[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to double[])\n    method Arrays.sort(Object[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<? super T#1>) is\
    \ not applicable\n      (cannot infer type-variable(s) T#1\n        (actual and\
    \ formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // sort all digits in each element\n        x.sort(Comparator.naturalOrder());\n\
    \        // remove all digits with even digits\n        ArrayList<Integer> y =\
    \ x.stream()\n            .map(x -> Integer.toString(x, 2))\n            .filter(x\
    \ -> x.length() % 2 == 0)\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    \        // remove all duplicates\n        y.sort(Comparator.naturalOrder());\n\
    \        return new ArrayList<>(y);\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpit2monqt.java:22: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Integer>)\n            .map(x -> Integer.toString(x,\
    \ 2))\n                 ^\n/tmp/tmpit2monqt.java:23: error: variable x is already\
    \ defined in method uniqueDigits(ArrayList<Integer>)\n            .filter(x ->\
    \ x.length() % 2 == 0)\n                    ^\n/tmp/tmpit2monqt.java:24: error:\
    \ incompatible types: inference variable E has incompatible bounds\n         \
    \   .collect(Collectors.toCollection(ArrayList::new));\n                    ^\n\
    \    equality constraints: Integer,T\n    lower bounds: String\n  where E,T,C\
    \ are type-variables:\n    E extends Object declared in class ArrayList\n    T\
    \ extends Object declared in method <T,C>toCollection(Supplier<C>)\n    C extends\
    \ Collection<T> declared in method <T,C>toCollection(Supplier<C>)\n3 errors\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<>();\n        ArrayList<Integer>\
    \ a = new ArrayList<>();\n        for (Integer i : x) {\n            while (a\
    \ != null && a.get(a.size() - 1) == i) {\n                a.remove(a.size() -\
    \ 1);\n            }\n            if (a.isEmpty()) {\n                result.add(i);\n\
    \            }\n            else {\n                a.add(i);\n            }\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ -1 out of bounds for length 0\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.uniqueDigits(tmplu53b87m.java:21)\n\tat Problem.main(tmplu53b87m.java:34)\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write your code here\n        ArrayList<Integer> result = new\
    \ ArrayList<Integer>();\n        boolean flag = true;\n        for(Integer i :\
    \ x){\n            if(i%2 != 0){\n                result.add(i);\n           \
    \ }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl_jqpz3x.java:29)\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> a = new ArrayList<>();\n        int n = x.size();\n\
    \        for(int i = 0; i < n; i++) {\n            for(int j = i; j < n; j++)\
    \ {\n                if(x.contains(x[j])) {\n                    for (int k =\
    \ j; k >= i; k--) {\n                        if(x.contains(x[k])) {\n        \
    \                    a.remove(x[k]);\n                            a.add(x[j]);\n\
    \                            break;\n                        }\n             \
    \       }\n                }\n            }\n        }\n        return a;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3suaaxzl.java:22: error: array required, but ArrayList<Integer>\
    \ found\n                if(x.contains(x[j])) {\n                            \
    \   ^\n/tmp/tmp3suaaxzl.java:24: error: array required, but ArrayList<Integer>\
    \ found\n                        if(x.contains(x[k])) {\n                    \
    \                   ^\n/tmp/tmp3suaaxzl.java:25: error: array required, but ArrayList<Integer>\
    \ found\n                            a.remove(x[k]);\n                       \
    \               ^\n/tmp/tmp3suaaxzl.java:26: error: array required, but ArrayList<Integer>\
    \ found\n                            a.add(x[j]);\n                          \
    \         ^\n4 errors\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for(int i=0; i<x.size(); i++) {\n            while(checkIfDigit(x.get(i)) ==\
    \ true) {\n                if(i>0) {\n                    x.remove(i-1);\n   \
    \                 i--;\n                }\n                else {\n          \
    \          result.add(x.remove(i));\n                }\n            }\n      \
    \  }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0obwgab.java:20: error: cannot find symbol\n            while(checkIfDigit(x.get(i))\
    \ == true) {\n                  ^\n  symbol:   method checkIfDigit(Integer)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        if(x.isEmpty()){\n            return x;\n        }\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for(int i = 0; i < x.size(); i++){\n\
    \            for(int j = i + 1; j < x.size(); j++){\n                if(isEven(x.get(i)\
    \ + x.get(j))){\n                    x = removeEven(x);\n                }\n \
    \           }\n            result.add(x.get(i));\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp76r0ctiv.java:24: error: cannot find symbol\n                if(isEven(x.get(i)\
    \ + x.get(j))){\n                   ^\n  symbol:   method isEven(int)\n  location:\
    \ class Problem\n/tmp/tmp76r0ctiv.java:25: error: cannot find symbol\n       \
    \             x = removeEven(x);\n                        ^\n  symbol:   method\
    \ removeEven(ArrayList<Integer>)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        \n        ArrayList<Integer> list = new ArrayList<>();\n     \
    \   \n        // Using Stream to sort the list.\n        \n        x.sort(Comparator.naturalOrder());\n\
    \n        for(Integer num : x){\n            \n            // Using IntStream\
    \ to find even digit.\n            \n            int evenDigit = num % 10;\n \
    \           if(evenDigit % 2 == 0){\n                list.add(num);\n        \
    \    }\n            \n        }\n        \n        return list;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuatehsa_.java:39)\n"
  stdout: ''
  timestamp: 1660010965
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        for(int\
    \ i : x) {\n            boolean found = false;\n            for(int j : ret) {\n\
    \                if((i%j) == 0) {\n                    found = true;\n       \
    \             break;\n                }\n            }\n            if(!found)\
    \ {\n                ret.add(i);\n            }\n        }\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpytzs7yah.java:34)\n"
  stdout: ''
  timestamp: 1660010965

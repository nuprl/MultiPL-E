name: HumanEval_29_filter_by_prefix
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb4l88ha8.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n\n\
    \        strings.stream().filter(s -> s.startsWith(prefix)).forEachOrdered(s ->\
    \ result.add(s));\n\n        return result;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy59rlud8.java:20: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return filter(strings, x -> x.startsWith(prefix));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplqggbcfz.java:15: error: cannot find symbol\n        return filter(strings,\
    \ x -> x.startsWith(prefix));\n               ^\n  symbol:   method filter(ArrayList<String>,(x)->x.sta[...]efix))\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ret = new ArrayList<String>();\n\
    \        for (int i = 0; i < strings.size(); i++) {\n            if (strings.get(i).startsWith(prefix))\
    \ {\n                ret.add(strings.get(i));\n            }\n        }\n    \
    \    return ret;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu1470d_0.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpli3996r1.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || strings.length == 0) {\n  \
    \          return new ArrayList<String>();\n        }\n\n        ArrayList<String>\
    \ newList = new ArrayList<String>();\n\n        for (String s : strings) {\n \
    \           if (s.startsWith(prefix)) {\n                newList.add(s);\n   \
    \         }\n        }\n\n        return newList;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_xm9yv92.java:15: error: cannot find symbol\n        if (strings\
    \ == null || strings.length == 0) {\n                                      ^\n\
    \  symbol:   variable length\n  location: variable strings of type ArrayList<String>\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      // For each element of the list\n        for (String string : strings)\
    \ {\n            // If it starts with the prefix\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        //\
    \ Return the result\n        return result;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp97pyxsq_.java:25: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkpy0gr19.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(String s : strings) {\n            if(s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnwlg4i7y.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6bl8scb2.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      if (strings == null) {\n            return result;\n        }\n       \
    \ for (String s : strings) {\n            if (s.startsWith(prefix)) {\n      \
    \          result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv0ivfl7m.java:25: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n            .filter(s ->\
    \ s.startsWith(prefix))\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp29xihn5m.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(str\
    \ -> str.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpql7i11oy.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Create a lambda expression that checks if the first\
    \ element of the input string is prefix\n        // >>> f = lambda s: s.startsWith(prefix)\n\
    \        // >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n      \
    \  // ['abc', 'array']\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdz0wbmt1.java:20: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for(String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                filtered.add(str);\n            }\n        }\n        return\
    \ filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsgdtkad9.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(string\
    \ -> string.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmy701luk.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6xpc9u7r.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s : strings) {\n            if(s.startsWith(prefix)) {\n   \
    \             result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0e4e83bw.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || prefix.length() == 0) return\
    \ strings;\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp60dahvev.java:17: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList<String>::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8qgz3ena.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ku4totg.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(str\
    \ -> str.startsWith(prefix))\n                .collect(toList());\nreturn new\
    \ ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn1dvs9p2.java:17: error: cannot find symbol\n                .collect(toList());\n\
    \                         ^\n  symbol:   method toList()\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ret = new ArrayList<String>();\n\
    \        strings.stream().filter(s -> s.startsWith(prefix)).forEach(s -> ret.add(s));\n\
    \        return ret; \nreturn new ArrayList<String>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9wjmk75e.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplzxxi0nx.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter((s) -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptkxzzgxv.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxb_923ug.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        List<String> result = new ArrayList<String>();\n \
    \       for(String string : strings) {\n            if(string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprnnefm0l.java:21: error: incompatible types: List<String> cannot\
    \ be converted to ArrayList<String>\n        return result;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5a65smy7.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix))\n   \
    \             result.add(s);\n        }\n        return result;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz0i426ii.java:21: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf3r0eptf.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgpx78bbs.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9ypxu0an.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4sjub4tc.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings\n            .stream()\n          \
    \  .filter(s -> s.startsWith(prefix))\n            .collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpggdt7mic.java:18: error: incompatible types: inference variable\
    \ R has incompatible bounds\n            .collect(Collectors.toList());\n    \
    \                ^\n    equality constraints: List<String>\n    upper bounds:\
    \ ArrayList<String>,Object\n  where R,A,T are type-variables:\n    R extends Object\
    \ declared in method <R,A>collect(Collector<? super T,A,R>)\n    A extends Object\
    \ declared in method <R,A>collect(Collector<? super T,A,R>)\n    T extends Object\
    \ declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0yhdcq7y.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix))\n\
    \            .collect(Collectors.toList());\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg73ujwi3.java:16: error: incompatible types: inference variable\
    \ R has incompatible bounds\n            .collect(Collectors.toList());\n    \
    \                ^\n    equality constraints: List<String>\n    upper bounds:\
    \ ArrayList<String>,Object\n  where R,A,T are type-variables:\n    R extends Object\
    \ declared in method <R,A>collect(Collector<? super T,A,R>)\n    A extends Object\
    \ declared in method <R,A>collect(Collector<? super T,A,R>)\n    T extends Object\
    \ declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmbn1yk_g.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp10ea_7h6.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || strings.size() == 0)\n    \
    \        return null;\n        if (prefix != null && prefix.length() > 0) {\n\
    \            ArrayList<String> results = new ArrayList<>();\n            for (String\
    \ s : strings) {\n                if (s.startsWith(prefix))\n                \
    \    results.add(s);\n            }\n            return results;\n        }\n\
    \        return null;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3z83br7j.java:26: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings == null || prefix.length() == 0 ? null\
    \ : new ArrayList<>(\n                strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList()));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzmaxysmm.java:17: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return Arrays.stream(strings).filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppfjp5yrk.java:15: error: no suitable method found for stream(ArrayList<String>)\n\
    \        return Arrays.stream(strings).filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \                     ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n\
    \      (cannot infer type-variable(s) T#1\n        (argument mismatch; ArrayList<String>\
    \ cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || prefix == null) return null;\n\
    \        ArrayList<String> filtered = new ArrayList<>();\n        for (String\
    \ string : strings) {\n            if (string.startsWith(prefix))\n          \
    \      filtered.add(string);\n        }\n        return filtered;\nreturn new\
    \ ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjq0vfxzd.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return Arrays.asList(strings).stream().filter(s ->\
    \ s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\nreturn\
    \ new ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw49ya3x1.java:15: error: cannot find symbol\n        return Arrays.asList(strings).stream().filter(s\
    \ -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \                                                            ^\n  symbol:   method\
    \ startsWith(String)\n  location: variable s of type ArrayList<String>\n/tmp/tmpw49ya3x1.java:15:\
    \ error: incompatible types: inference variable T has incompatible bounds\n  \
    \      return Arrays.asList(strings).stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \                                                                            \
    \            ^\n    equality constraints: String,E\n    lower bounds: ArrayList<String>\n\
    \  where T,C,E are type-variables:\n    T extends Object declared in method <T,C>toCollection(Supplier<C>)\n\
    \    C extends Collection<T> declared in method <T,C>toCollection(Supplier<C>)\n\
    \    E extends Object declared in class ArrayList\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwb78j623.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8dj1qzya.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(e\
    \ -> e.startsWith(prefix))\n                .collect(toList());\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcu89qwro.java:17: error: cannot find symbol\n                .collect(toList());\n\
    \                         ^\n  symbol:   method toList()\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n            .filter(s ->\
    \ s.startsWith(prefix))\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoign7g4_.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix))\n\
    \                .collect(Collectors.toCollection(ArrayList::new));\nreturn new\
    \ ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbw9y4b3x.java:17: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\n\
    \                result.add(string);\n        }\n        return result;\nreturn\
    \ new ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkx3hd3hv.java:21: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3czjmo_o.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx4wfs3hw.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo6jdr49d.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp88eyc4_q.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings == null || strings.isEmpty() ? Collections.emptyList()\
    \ : strings.stream()\n                .filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpauqubghk.java:15: error: incompatible types: bad type in conditional\
    \ expression\n        return strings == null || strings.isEmpty() ? Collections.emptyList()\
    \ : strings.stream()\n                                                       \
    \                    ^\n    no instance(s) of type variable(s) T exist so that\
    \ List<T> conforms to ArrayList<String>\n  where T is a type-variable:\n    T\
    \ extends Object declared in method <T>emptyList()\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix))\n\
    \            .collect(Collectors.toCollection(ArrayList::new));\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsxhncb1e.java:17: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s: strings)\n            if (s.startsWith(prefix))\n    \
    \            filtered.add(s);\n        return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphsobtwwv.java:20: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        strings.stream().filter(str -> str.startsWith(prefix))\n            \
    \    .forEach(s -> filtered.add(s));\n        return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvluzst12.java:19: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp85365hri.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return Arrays.stream(strings)\n            .filter(s\
    \ -> s.startsWith(prefix))\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnmev2wor.java:15: error: no suitable method found for stream(ArrayList<String>)\n\
    \        return Arrays.stream(strings)\n                     ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; ArrayList<String> cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2s125ze6.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> results = new ArrayList<>();\n \
    \       for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                results.add(s);\n            }\n        }\n        return results;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppxwh334f.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null) {\n            return null;\n\
    \        }\n        ArrayList<String> result = new ArrayList<>();\n        for\
    \ (String str : strings) {\n            if (str.startsWith(prefix)) {\n      \
    \          result.add(str);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp73dtpy98.java:25: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk_u7n8ga.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0dgy0ih_.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for(String s: strings) {\n            if(s.startsWith(prefix)) {\n  \
    \              filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp113jr88b.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n\n\
    \        for(String s: strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfdk8qnqj.java:24: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp71c4kub0.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxzgaaixc.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Your code here\n        ArrayList<String> result\
    \ = new ArrayList<String>();\n        if (strings == null || strings.size() ==\
    \ 0) {\n            return result;\n        }\n        ArrayList prefixes = new\
    \ ArrayList();\n        for (String s : strings) {\n            if (s.startsWith(prefix))\
    \ {\n                prefixes.add(s);\n            }\n        }\n        if (prefixes.size()\
    \ == 0) {\n            return result;\n        }\n        for (String s : prefixes)\
    \ {\n            result.add(s);\n        }\n        return result;\nreturn new\
    \ ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkcomfra4.java:29: error: incompatible types: Object cannot be converted\
    \ to String\n        for (String s : prefixes) {\n                        ^\n\
    Note: /tmp/tmpkcomfra4.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp9ai556f.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfhs22jcm.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(toList());\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4pe9u1td.java:17: error: cannot find symbol\n                .collect(toList());\n\
    \                         ^\n  symbol:   method toList()\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return IntStream.range(0, strings.size()).boxed().filter(i->prefix.equalsIgnoreCase(strings.get(i))).toArrayList(()->new\
    \ ArrayList<>());\nreturn new ArrayList<String>(Arrays.asList());\n    }\n   \
    \ public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpllt_u54w.java:15: error: cannot find symbol\n        return IntStream.range(0,\
    \ strings.size()).boxed().filter(i->prefix.equalsIgnoreCase(strings.get(i))).toArrayList(()->new\
    \ ArrayList<>());\n                                                          \
    \                                                  ^\n  symbol:   method toArrayList(()->new\
    \ Ar[...]t<>())\n  location: interface Stream<Integer>\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6smzbky5.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n            .filter(s ->\
    \ s.startsWith(prefix))\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5dihqeik.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> results = new ArrayList<>();\n \
    \       for(String string : strings) {\n            if(string.startsWith(prefix))\
    \ {\n                results.add(string);\n            }\n        }\n        return\
    \ results;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4fjnp481.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s: strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp__c0eb69.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        String lowPrefix = prefix.toLowerCase();\n       \
    \ ArrayList<String> out = new ArrayList<>();\n        for(String s: strings) {\n\
    \            if (s.toLowerCase().startsWith(lowPrefix)) {\n                out.add(s);\n\
    \            }\n        }\n        return out;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk_vy8sqo.java:23: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1cptw_0n.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp43eqhbv3.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7b83qmhd.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return IntStream.range(0, strings.size())\n      \
    \          .filter(i -> strings.get(i).startsWith(prefix))\n                .boxed()\n\
    \                .collect(toCollection(ArrayList::new));\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpptk0buo0.java:18: error: cannot find symbol\n                .collect(toCollection(ArrayList::new));\n\
    \                         ^\n  symbol:   method toCollection(ArrayList::new)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < strings.size(); i++) {\n            if (strings.get(i).startsWith(prefix))\
    \ {\n                result.add(strings.get(i));\n            }\n        }\n \
    \       return result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq0fb4r8d.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdffn7_t5.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpskdzy14x.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter((x) -> x.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsscpd6g2.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix))\n   \
    \             result.add(s);\n        }\n        return result;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7r9hq4fi.java:21: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s : strings) {\n            if(s.startsWith(prefix)) result.add(s);\n\
    \        }\n        return result;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd5k_53l7.java:20: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0abbl8tz.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                res.add(string);\n            }\n        }\n        return\
    \ res;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphjltg8sk.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpee33u7_v.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdelpd65e.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Write your code here.\n        ArrayList<String>\
    \ filtered = new ArrayList<String>();\n        for (String s : strings) {\n  \
    \          if (s.startsWith(prefix)) {\n                filtered.add(s);\n   \
    \         }\n        }\n        return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzeu45mtv.java:23: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(int i=0; i < strings.size(); i++) {\n            if(!strings.get(i).startsWith(prefix))\
    \ result.add(strings.get(i));\n        }\n        return result;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjgdt24px.java:20: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Write your code here\n        ArrayList<String>\
    \ newStrings = new ArrayList<String>();\n        if(strings.isEmpty() || prefix\
    \ == null || prefix.length() == 0){\n            return newStrings;\n        }\n\
    \        for (String s : strings) {\n            if(s.startsWith(prefix)){\n \
    \               newStrings.add(s);\n            }\n        }\n        return newStrings;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz5vpnh15.java:26: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s: strings) {\n            if(s.startsWith(prefix)) {\n    \
    \            result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq6wlzhnn.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \n        for (int i = 0; i < strings.size(); i++) {\n            if (strings.get(i).startsWith(prefix))\
    \ {\n                filtered.add(strings.get(i));\n            }\n        }\n\
    \n        return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n \
    \   }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpojr9f7al.java:24: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || strings.length() == 0 || prefix\
    \ == null || prefix.length() == 0) return new ArrayList<String>();\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (String s : strings) {\n    \
    \        if (s.startsWith(prefix)) {\n                result.add(s);\n       \
    \     }\n        }\n        return result;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6n0rvguh.java:15: error: cannot find symbol\n        if (strings\
    \ == null || strings.length() == 0 || prefix == null || prefix.length() == 0)\
    \ return new ArrayList<String>();\n                                      ^\n \
    \ symbol:   method length()\n  location: variable strings of type ArrayList<String>\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String string : strings)\n            if(!string.startsWith(prefix))\n\
    \                result.add(string);\n        return result;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgwnpralx.java:20: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return filterByPrefix(strings, prefix, null);\nreturn\
    \ new ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj0x5fhh9.java:15: error: method filterByPrefix in class Problem\
    \ cannot be applied to given types;\n        return filterByPrefix(strings, prefix,\
    \ null);\n               ^\n  required: ArrayList<String>,String\n  found: ArrayList<String>,String,<null>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s: strings) {\n            if (s.startsWith(prefix)) {\n   \
    \             result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi5jhzv4c.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(String s : strings) {\n            if(s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjp5uy89v.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe4145dhd.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n            .filter(str ->\
    \ str.startsWith(prefix))\n            .collect(Collectors.toList());\nreturn\
    \ new ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqbuij2m4.java:17: error: incompatible types: inference variable\
    \ R has incompatible bounds\n            .collect(Collectors.toList());\n    \
    \                ^\n    equality constraints: List<String>\n    upper bounds:\
    \ ArrayList<String>,Object\n  where R,A,T are type-variables:\n    R extends Object\
    \ declared in method <R,A>collect(Collector<? super T,A,R>)\n    A extends Object\
    \ declared in method <R,A>collect(Collector<? super T,A,R>)\n    T extends Object\
    \ declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(toList());\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwzvxb80z.java:17: error: cannot find symbol\n                .collect(toList());\n\
    \                         ^\n  symbol:   method toList()\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(str -> str.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9nl3qn59.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprqzlgkjj.java:15: error: cannot find symbol\n        return strings.stream().filter(s\
    \ -> s.startsWith(prefix)).collect(toList());\n                              \
    \                                            ^\n  symbol:   method toList()\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0k9e738t.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> results = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix))\n \
    \               results.add(s);\n        }\n        return results;\nreturn new\
    \ ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp78m6s316.java:21: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb_481bp4.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp4i17mgz.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        String prefix = prefix.toLowerCase();\n        return\
    \ strings.stream().filter(s -> s.toLowerCase().startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv9krz2qz.java:15: error: variable prefix is already defined in\
    \ method filterByPrefix(ArrayList<String>,String)\n        String prefix = prefix.toLowerCase();\n\
    \               ^\n/tmp/tmpv9krz2qz.java:16: error: incompatible types: inference\
    \ variable R has incompatible bounds\n        return strings.stream().filter(s\
    \ -> s.toLowerCase().startsWith(prefix)).collect(Collectors.toList());\n     \
    \                                                                            \
    \      ^\n    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp61zfg2z3.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return filters.filter(strings -> strings.startsWith(prefix));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmjkq4dcp.java:15: error: cannot find symbol\n        return filters.filter(strings\
    \ -> strings.startsWith(prefix));\n               ^\n  symbol:   variable filters\n\
    \  location: class Problem\n/tmp/tmpmjkq4dcp.java:15: error: variable strings\
    \ is already defined in method filterByPrefix(ArrayList<String>,String)\n    \
    \    return filters.filter(strings -> strings.startsWith(prefix));\n         \
    \                     ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ret = new ArrayList<>();\n     \
    \   if (strings != null) {\n            for (String string : strings) {\n    \
    \            if (string.startsWith(prefix)) {\n                    ret.add(string);\n\
    \                }\n            }\n        }\n        return ret;\nreturn new\
    \ ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmm8s2rtj.java:24: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(String s:strings) {\n            if(s.startsWith(prefix)) {\n   \
    \             result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2n8uw98j.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuu2swr2z.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfiiihclg.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Create a stream of strings and filter only the\
    \ ones that start with the\n        // prefix to return.\n        List<String>\
    \ filteredStream = strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    \        // Return an empty array if the prefix is not present in the list.\n\
    \        if (filteredStream.size() == 0) return new ArrayList<>();\n        //\
    \ Return the filtered list.\n        return filteredStream;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoanf7w9x.java:21: error: incompatible types: List<String> cannot\
    \ be converted to ArrayList<String>\n        return filteredStream;\n        \
    \       ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || strings.size() == 0)\n    \
    \        return null;\n        ArrayList<String> results = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix))\n \
    \               results.add(s);\n        }\n        return results;\nreturn new\
    \ ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3yk46nah.java:23: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        List<String> filtered = new ArrayList<>();\n     \
    \   for (String s : strings) {\n            if (s.startsWith(prefix)) {\n    \
    \            filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi96wbkvw.java:21: error: incompatible types: List<String> cannot\
    \ be converted to ArrayList<String>\n        return filtered;\n              \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return IntStream.range(0, strings.size())\n      \
    \      .filter(i -> strings.contains(prefix, i, prefix.length()))\n          \
    \  .map(i -> strings.remove(i))\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1jpp_5rm.java:16: error: no suitable method found for contains(String,int,int)\n\
    \            .filter(i -> strings.contains(prefix, i, prefix.length()))\n    \
    \                            ^\n    method Collection.contains(Object) is not\
    \ applicable\n      (actual and formal argument lists differ in length)\n    method\
    \ List.contains(Object) is not applicable\n      (actual and formal argument lists\
    \ differ in length)\n    method AbstractCollection.contains(Object) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method ArrayList.contains(Object)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    /tmp/tmp1jpp_5rm.java:17: error: incompatible types: bad return type in lambda\
    \ expression\n            .map(i -> strings.remove(i))\n                     \
    \               ^\n    String cannot be converted to int\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Create a stream for our prefix and filter that\
    \ stream of strings.\n        List<String> prefixStream = strings.stream()\n \
    \               .filter(x -> x.startsWith(prefix))\n                .collect(Collectors.toList());\n\
    \        // Return the list of prefix-filtered strings.\n        return prefixStream;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpktfqvbp3.java:20: error: incompatible types: List<String> cannot\
    \ be converted to ArrayList<String>\n        return prefixStream;\n          \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      strings.stream().filter(s -> s.startsWith(prefix)).forEach(s -> result.add(s));\n\
    \        return result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp592egpy.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(x -> x.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc1cnfjha.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter(x -> x.startsWith(prefix)).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjnjhaebn.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings.isEmpty())\n            return strings;\n\
    \n        // Create a stream of strings that matches the prefix and collect them.\n\
    \        Stream<String> stream = strings.stream().filter(s -> s.startsWith(prefix));\n\
    \n        // Collect the strings that match prefix and return the result as a\
    \ list.\n        return stream.collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9vfno2ou.java:23: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filteredList = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filteredList.add(string);\n            }\n        }\n   \
    \     return filteredList;\nreturn new ArrayList<String>(Arrays.asList());\n \
    \   }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpckzfy8l9.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(str\
    \ -> str.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl90cuxnj.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || strings.size() == 0 || prefix\
    \ == null) {\n            return strings;\n        }\n        ArrayList<String>\
    \ list = new ArrayList<>();\n        for (int i = 0; i < strings.size(); i++)\
    \ {\n            if (strings.get(i).startsWith(prefix)) {\n                list.add(strings.get(i));\n\
    \            }\n        }\n        return list;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4wc00lpg.java:25: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        if (strings == null || prefix == null) {\n            return filtered;\n\
    \        }\n        if (strings.isEmpty() || prefix.isEmpty()) {\n           \
    \ return filtered;\n        }\n        for (String s : strings) {\n          \
    \  if (s.startsWith(prefix)) {\n                filtered.add(s);\n           \
    \ }\n        }\n        return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprv8xkl0r.java:28: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter((s) -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_0qm7vb7.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter((s) -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    \                                                                           ^\n\
    \    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || prefix.length() == 0)\n   \
    \         return new ArrayList<>();\n\n        // Copy strings to a new ArrayList\
    \ so that we can modify it without affecting the\n        // original list.\n\
    \        ArrayList<String> filtered = new ArrayList<>(strings);\n\n        //\
    \ Remove strings that do not start with the given prefix.\n        filtered.removeIf(x\
    \ -> !x.startsWith(prefix));\n\n        return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb8kx6waj.java:26: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplmusbxtf.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(string -> string.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfcseds97.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter(string ->\
    \ string.startsWith(prefix)).collect(Collectors.toList());\n                 \
    \                                                                  ^\n    equality\
    \ constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n  where\
    \ R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s: strings) {\n            if(s.startsWith(prefix)) {\n    \
    \            result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplwxvzyq8.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8j88mlnr.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return filterByPrefix(strings, prefix, new ArrayList<>());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2eh600u8.java:15: error: method filterByPrefix in class Problem\
    \ cannot be applied to given types;\n        return filterByPrefix(strings, prefix,\
    \ new ArrayList<>());\n               ^\n  required: ArrayList<String>,String\n\
    \  found: ArrayList<String>,String,ArrayList<Object>\n  reason: actual and formal\
    \ argument lists differ in length\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                       .filter(s\
    \ -> s.startsWith(prefix))\n                       .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp43sju0ob.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpen_l4mzb.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8mgivu9y.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return Stream.of(strings).filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk4r8g8ux.java:15: error: cannot find symbol\n        return Stream.of(strings).filter(s\
    \ -> s.startsWith(prefix)).collect(Collectors.toList());\n                   \
    \                            ^\n  symbol:   method startsWith(String)\n  location:\
    \ variable s of type ArrayList<String>\n/tmp/tmpk4r8g8ux.java:15: error: incompatible\
    \ types: inference variable R has incompatible bounds\n        return Stream.of(strings).filter(s\
    \ -> s.startsWith(prefix)).collect(Collectors.toList());\n                   \
    \                                                        ^\n    equality constraints:\
    \ List<ArrayList<String>>\n    upper bounds: ArrayList<String>,Object\n  where\
    \ R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return Arrays.stream(strings)\n            .filter(s\
    \ -> s.startsWith(prefix))\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi1a7xnem.java:15: error: no suitable method found for stream(ArrayList<String>)\n\
    \        return Arrays.stream(strings)\n                     ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; ArrayList<String> cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return Arrays.stream(strings)\n                .filter(x\
    \ -> x.startsWith(prefix))\n                .collect(Collectors.toList());\nreturn\
    \ new ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1_c1zz6k.java:15: error: no suitable method found for stream(ArrayList<String>)\n\
    \        return Arrays.stream(strings)\n                     ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; ArrayList<String> cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ret = new ArrayList<String>();\n\
    \        for(String s: strings) {\n            if(s.startsWith(prefix)) {\n  \
    \              ret.add(s);\n            }\n        }\n        return ret;\nreturn\
    \ new ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf1lxz_qy.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s: strings) {\n            if (s.startsWith(prefix)) {\n  \
    \              result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyo_qq8km.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s: strings) {\n            if(s.startsWith(prefix))\n      \
    \          result.add(s);\n        }\n        return result;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqh9739t3.java:21: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        // filter() is an instance of Predicate defined above.\n        strings.stream().filter(filterByPrefix(prefix)).collect(Collectors.toList()).forEach(result::add);\n\
    \        return result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjvk4eexp.java:17: error: method filterByPrefix in class Problem\
    \ cannot be applied to given types;\n        strings.stream().filter(filterByPrefix(prefix)).collect(Collectors.toList()).forEach(result::add);\n\
    \                                ^\n  required: ArrayList<String>,String\n  found:\
    \ String\n  reason: actual and formal argument lists differ in length\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphiqn3fke.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for(String str : strings) {\n            if(str.startsWith(prefix)) {\n\
    \                result.add(str);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3530iqf6.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpesoxsb_s.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        if (strings == null || strings.size() == 0) {\n            return filtered;\n\
    \        }\n        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4k9gymkj.java:25: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        List<String> filtered = new ArrayList<>();\n     \
    \   for (String string : strings) {\n            if (string.startsWith(prefix))\n\
    \                filtered.add(string);\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3pojty8h.java:20: error: incompatible types: List<String> cannot\
    \ be converted to ArrayList<String>\n        return filtered;\n              \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings\n                .stream()\n      \
    \          .filter(s -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt65jrtjp.java:19: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnltbt45q.java:15: error: cannot find symbol\n        return strings.stream().filter(s\
    \ -> s.startsWith(prefix)).collect(toList());\n                              \
    \                                            ^\n  symbol:   method toList()\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (strings == null || prefix.length() == 0) {\n            return result;\n\
    \        }\n        for (String s: strings) {\n            if (s.startsWith(prefix))\
    \ {\n                result.add(s);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxipi92xe.java:25: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String item : strings) {\n            if (item.startsWith(prefix))\
    \ {\n                result.add(item);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp35fbyy5u.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn7l9u_s9.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8kt85dra.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return Arrays.stream(strings).filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf7s4ja35.java:15: error: no suitable method found for stream(ArrayList<String>)\n\
    \        return Arrays.stream(strings).filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \                     ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n\
    \      (cannot infer type-variable(s) T#1\n        (argument mismatch; ArrayList<String>\
    \ cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || strings.size() == 0) return\
    \ new ArrayList<>();\n        if (strings.size() == 1) return strings;\n     \
    \   ArrayList<String> result = new ArrayList<>();\n        for (String s : strings)\
    \ {\n            if (s.startsWith(prefix)) result.add(s);\n        }\n       \
    \ return result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7wraaqv8.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s: strings) {\n            if(s.startsWith(prefix)) {\n    \
    \            result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvb9pghfn.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn39hjnu8.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi1cojd9m.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return IntStream.range(0, strings.size())\n      \
    \          .filter(i -> strings.get(i).startsWith(prefix))\n                .mapToObj(i\
    \ -> strings.get(i))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp24fy2v3w.java:19: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s: strings) {\n            if (s.startsWith(prefix)) {\n  \
    \              result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfwx6yw9e.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsbff1jab.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Write your code here\n        ArrayList<String>\
    \ filtered = new ArrayList<>();\n        for(String str : strings){\n        \
    \    if(str.startsWith(prefix)){\n                filtered.add(str);\n       \
    \     }\n        }\n        return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpihimw0g7.java:23: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy5bxfuf1.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7gg7b996.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(str\
    \ -> str.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvyxew5gf.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpszh3dxzi.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s: strings) {\n            if (s.startsWith(prefix))\n  \
    \              filtered.add(s);\n        }\n        return filtered;\nreturn new\
    \ ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8spigaj3.java:21: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpouiud2m0.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    equality constraints: List<String>\n    upper bounds: ArrayList<String>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter((string -> string.startsWith(prefix))).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps1l4sn5e.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzzw6lhqd.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6jah00ot.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu_bm31pd.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprlk2xa3z.java:16: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                filtered.add(str);\n            }\n        }\n        return\
    \ filtered;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph96iz16l.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n\n\
    \        // Step 1: Create a stream of the list.\n        Stream<String> stream\
    \ = strings.stream();\n\n        // Step 2: Find all matching elements in the\
    \ stream.\n        Stream<String> matchingElements = stream.filter(element ->\
    \ element.startsWith(prefix));\n\n        // Step 3: Collect the matches in a\
    \ list\n        matchingElements.forEach(element -> result.add(element));\n\n\
    \        return result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5ncidr39.java:27: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfnju0m7g.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || prefix == null) return strings;\n\
    \        ArrayList<String> filtered = new ArrayList<>();\n        for (String\
    \ s : strings) {\n            if (s.startsWith(prefix)) {\n                filtered.add(s);\n\
    \            }\n        }\n        return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2sn6q6kd.java:23: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return filterByPrefix(strings, prefix, new ArrayList<>());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr4m4ayt7.java:15: error: method filterByPrefix in class Problem\
    \ cannot be applied to given types;\n        return filterByPrefix(strings, prefix,\
    \ new ArrayList<>());\n               ^\n  required: ArrayList<String>,String\n\
    \  found: ArrayList<String>,String,ArrayList<Object>\n  reason: actual and formal\
    \ argument lists differ in length\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        // Loop over each string in the input list.\n        for (String s :\
    \ strings) {\n            // Check whether the string starts with the prefix.\n\
    \            if (s.startsWith(prefix)) {\n                // Add the string to\
    \ the filtered list.\n                filtered.add(s);\n            }\n      \
    \  }\n        // Return the filtered list.\n        return filtered;\nreturn new\
    \ ArrayList<String>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9vja4we4.java:26: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\n\
    \        for (int i = 0; i < strings.size(); i++) {\n            if (strings.get(i).startsWith(prefix))\
    \ {\n                filtered.add(strings.get(i));\n            }\n        }\n\
    \n        return filtered;\nreturn new ArrayList<String>(Arrays.asList());\n \
    \   }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4vm9v3lc.java:24: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(toList());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp01nie24z.java:15: error: cannot find symbol\n        return strings.stream().filter(s\
    \ -> s.startsWith(prefix)).collect(toList());\n                              \
    \                                            ^\n  symbol:   method toList()\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppsmz3n_w.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null || prefix.length() == 0) {\n \
    \           return strings;\n        }\n        if (strings.isEmpty()) {\n   \
    \         return new ArrayList<String>();\n        }\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        boolean found = false;\n        for (String\
    \ string : strings) {\n            if (string.startsWith(prefix)) {\n        \
    \        result.add(string);\n                found = true;\n            }\n \
    \       }\n        if (!found) {\n            result.add(strings.get(0));\n  \
    \      }\n        return result;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptqvghltp.java:33: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s: strings) {\n            if(s.startsWith(prefix)) {\n    \
    \            result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx3xap0ch.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ret = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix))\n \
    \               ret.add(s);\n        }\n        return ret;\nreturn new ArrayList<String>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkq1xn0mg.java:21: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> list = new ArrayList<>(strings);\n\
    \        return list.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd9od2o5m.java:17: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n            .filter(str ->\
    \ str.startsWith(prefix))\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeebko02r.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnmpabjd1.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkog8vybr.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp5lk41o5.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp93f33_f4.java:18: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return filterByPrefix(strings, prefix, new ArrayList<>());\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxx8tde2f.java:15: error: method filterByPrefix in class Problem\
    \ cannot be applied to given types;\n        return filterByPrefix(strings, prefix,\
    \ new ArrayList<>());\n               ^\n  required: ArrayList<String>,String\n\
    \  found: ArrayList<String>,String,ArrayList<Object>\n  reason: actual and formal\
    \ argument lists differ in length\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\nreturn new ArrayList<String>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph71uo3vh.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_nr4uek6.java:22: error: unreachable statement\nreturn new ArrayList<String>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError

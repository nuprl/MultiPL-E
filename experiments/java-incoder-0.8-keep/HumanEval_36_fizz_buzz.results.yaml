name: HumanEval_36_fizz_buzz
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n < 10) return 0;\n    \
    \    int count = 0;\n        for (Integer i : IntStream.range(2, n).filter(i ->\
    \ i % 11 == 0 || i % 13 == 0).boxed().collect(Collectors.toList())) {\n      \
    \      int c = fizzBuzz(i) * fizzBuzz(n - i);\n            count += c;\n     \
    \   }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5vj83ncu.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.rangeClosed(1,\
    \ n)\n                .filter(i -> i % 11 == 0 || i % 13 == 0)\n             \
    \   .filter(i -> n % i == 0)\n                .filter(i -> i * i % 13 == 0)\n\
    \                .filter(i -> i * i % 11 == 0)\n                .count();\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpydck21zh.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n                .count();\n                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (Integer n : Arrays.asList(new int[] {1, 7, 13, 17, 19, 29})) {\n          \
    \  if (n % 11 == 0 || n % 13 == 0) {\n                count += 1;\n          \
    \  }\n        }\n        return count;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2p5eldzp.java:18: error: variable n is already defined in method\
    \ fizzBuzz(int)\n        for (Integer n : Arrays.asList(new int[] {1, 7, 13, 17,\
    \ 19, 29})) {\n                     ^\n/tmp/tmp2p5eldzp.java:18: error: incompatible\
    \ types: int[] cannot be converted to Integer\n        for (Integer n : Arrays.asList(new\
    \ int[] {1, 7, 13, 17, 19, 29})) {\n                                      ^\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ % 11 == 0)\n            count = count + 1;\n        if (n % 13 == 0)\n     \
    \       count = count + 1;\n        return count;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc40ebf6a.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n >= 100 && n <= 999) {\n\
    \            if (n % 11 == 0 || n % 13 == 0) {\n                return (n / 11)\
    \ * 13 + n / 13;\n            } else {\n                return (n / 11) * 11 +\
    \ n / 11;\n            }\n        }\n        return 0;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuckl0kq7.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 0; i < n; i++) {\n            String str = String.valueOf(i);\n   \
    \         int digit = Integer.parseInt(str.substring(0, str.length() - 1));\n\
    \            if (digit == 7 || digit == 11 || digit == 13) {\n               \
    \ count++;\n            }\n        }\n        return count;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwm6ymd05.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        switch (n) {\n            case\
    \ 0:\n                return 0;\n            case 1:\n            case 2:\n  \
    \          case 3:\n            case 4:\n            case 5:\n            case\
    \ 6:\n            case 7:\n            case 8:\n            case 9:\n        \
    \    case 10:\n                return 1;\n            case 11:\n            case\
    \ 12:\n            case 13:\n                return 2;\n            case 14:\n\
    \            case 15:\n                return 3;\n            case 16:\n     \
    \       case 17:\n            case 18:\n            case 19:\n            case\
    \ 20:\n            case 21:\n            case 22:\n            case 23:\n    \
    \            return 4;\n            case 24:\n            case 25:\n         \
    \   case 26:\n            case 27:\n            case 28:\n            case 29:\n\
    \            case 30:\n            case 31:\n            case 32:\n          \
    \  case 33:\n            case 34:\n            case 35:\n            case 36:\n\
    \            case 37:\n            case 38:\n            case 39:\n          \
    \  case 40:\n            case 41:\n            case 42:\n            case 43:\n\
    \            case 44:\n            case 45:\n            case 46:\n          \
    \  case 47:\n            case 48:\n            case 49:\n                return\
    \ 5;\n            case 50:\n            case 51:\n            case 52:\n     \
    \       case 53:\n            case 54:\n            case 55:\n            case\
    \ 56:\n            case 57:\n            case 58:\n            case 59:\n    \
    \        case 60:\n            case 61:\n            case 62:\n            case\
    \ 63:\n            case 64:\n            case 65:\n            case 66:\n    \
    \        case 67:\n            case 68:\n            case 69:\n            case\
    \ 70:\n            case 71:\n            case 72:\n            case 73:\n    \
    \        case 74:\n            case 75:\n            case 76:\n            case\
    \ 77:\n            case 78:\n            case 79:\n            case 80:\n    \
    \        case 81:\n            case 82:\n            case 83:\n            case\
    \ 84:\n            case 85:\n            case 86:\n            case 87:\n    \
    \        case 88:\n            case 89:\n            case 90:\n            case\
    \ 91:\n            case 92:\n            case 93:\n            case 94:\n    \
    \        case 95:\n            case 96:\n            case 97:\n            case\
    \ 98:\n            case 99:\n            case 100:\n            case 101:\n  \
    \          case 102:\n            case 103:\n            case 104:\n         \
    \   case 105:\n            case 106:\n            case 107:\n            case\
    \ 108:\n            case 109:\n            case 110:\n            case 111:\n\
    \            case 112:\n            case 113:\n            case 114:\n       \
    \     case 115:\n            case 116:\n            case 117:\n            case\
    \ 118:\n            case 119:\n            case 120:\n            case 121:\n\
    \            case 122:\n            case 123:\n            case 124:\n       \
    \     case 125:\n            case 126:\n            case 127:\n              \
    \  return 6;\n            case 128:\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeh1rt7cu.java:156: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpeh1rt7cu.java:156: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \           ^\n/tmp/tmpeh1rt7cu.java:156: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpeh1rt7cu.java:156: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpeh1rt7cu.java:156: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpeh1rt7cu.java:167: error: reached end of file while parsing\n\
    }\n ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        List<Integer>\
    \ nums = IntStream.range(0,n).boxed().collect(Collectors.toList());\n        for\
    \ (int num : nums) {\n            String s = Integer.toString(num);\n        \
    \    if (s.equals(\"7\")) {\n                if (Integer.toString(num).equals(\"\
    7\")) {\n                    count++;\n                }\n            }\n    \
    \        if (s.equals(\"11\") || s.equals(\"13\")) {\n                count++;\n\
    \            }\n        }\n        return count;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxgsrs92s.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n == 0) return 0;\n    \
    \    else if (n % 11 == 0 || n % 13 == 0) return 1;\n        else return fizzBuzz(n\
    \ / 11) + fizzBuzz(n / 13);\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuv8vwzkh.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) count++;\n\
    \        }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi5r0e4ty.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for(int\
    \ i = 1 ; i <= n; i++) {\n            if(i%3 == 0 && i%11 == 0 || i%13 == 0) {\n\
    \                count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzm_g1p_j.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n < 10)\n            return\
    \ n;\n\n        int counter = 0;\n        while (n >= 11 || n >= 13)\n       \
    \ {\n            if (n % 11 == 0)\n                counter++;\n            n /=\
    \ 11;\n        }\n\n        while (n % 13 == 0)\n            counter++;\n\n  \
    \      return counter;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnzc7iazi.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.rangeClosed(1,\
    \ n).filter(n -> n % 11 == 0 || n % 13 == 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo71vb88r.java:17: error: variable n is already defined in method\
    \ fizzBuzz(int)\n        return IntStream.rangeClosed(1, n).filter(n -> n % 11\
    \ == 0 || n % 13 == 0).count();\n                                            \
    \      ^\n/tmp/tmpo71vb88r.java:17: error: incompatible types: possible lossy\
    \ conversion from long to int\n        return IntStream.rangeClosed(1, n).filter(n\
    \ -> n % 11 == 0 || n % 13 == 0).count();\n                                  \
    \                                                      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        Map<String, Integer> digits\
    \ = new HashMap<>();\n        boolean divisibleBy11 = true;\n        boolean divisibleBy13\
    \ = true;\n        while (n > 0) {\n            String s = String.valueOf(n);\n\
    \            if (digits.get(s) == null) {\n                digits.put(s, 1);\n\
    \            } else {\n                int v = digits.get(s);\n              \
    \  v += 1;\n                digits.put(s, v);\n            }\n            n =\
    \ (n - 1) % 10;\n        }\n        if (divisibleBy11 && divisibleBy13) {\n  \
    \          return 0;\n        }\n        int count = 0;\n        for (Map.Entry<String,\
    \ Integer> entry : digits.entrySet()) {\n            String key = entry.getKey();\n\
    \            if (key.equals(\"7\")) {\n                count += entry.getValue();\n\
    \            }\n        }\n        return count;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc0maqgb6.java:42: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        List<Integer> numbers = Arrays.asList(n,\
    \ n / 11, n / 13, n / 19, n / 21, n / 23, n / 29, n / 31, n / 37, n / 39, n /\
    \ 41);\n        return numbers.stream().filter(i -> i % 11 == 0 || i % 13 == 0).count();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgwx1u4h2.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return numbers.stream().filter(i -> i % 11 == 0 ||\
    \ i % 13 == 0).count();\n                                                    \
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int fz = 0;\n        int fb\
    \ = 0;\n        while (n > 0) {\n            int d = n % 10;\n            if (d\
    \ == 7 || (d > 9 && d < 11) || (d > 13)) {\n                fz++;\n          \
    \  }\n            n /= 10;\n        }\n        return (fz * fb);\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy1ga0w59.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for(int\
    \ i = 0; i <= n; i++){\n            String s = Integer.toString(i);\n        \
    \    if(s.contains(\"7\") && s.contains(\"3\") && s.contains(\"5\") && s.contains(\"\
    9\")){\n                count++;\n            }\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8ss4xdp0.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n >= 10) {\n           \
    \ int count = 0;\n            if (n % 10 == 7)\n                count += 1;\n\
    \            if (n % 10 == 3)\n                count += 1;\n            return\
    \ count;\n        }\n        if (n >= 3) {\n            int count = 0;\n     \
    \       if (n % 3 == 0)\n                count += 1;\n            if (n % 3 ==\
    \ 1)\n                count += 1;\n            return count;\n        }\n    \
    \    return 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4oskyxtl.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n>=1 && n<1000) {\n            if (n%11==0) {\n                ++count;\n \
    \           }\n            else if (n%13==0) {\n                ++count;\n   \
    \         }\n            else {\n                n = n/10;\n            }\n  \
    \      }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplk4wq5w1.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int n1 = n / 11;\n        int\
    \ n2 = n % 11;\n        if ((n2 == 7) || (n1 == 7 && n2 != 7)) {\n           \
    \ return 1;\n        } else {\n            return fizzBuzz(n1) + fizzBuzz(n2);\n\
    \        }\nreturn 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwuth58ya.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for(int\
    \ i = 0; i <= n; i++) {\n            if((i % 11) == 0 || (i % 13) == 0) {\n  \
    \              if(i % 11 == 0) {\n                    count += 1;\n          \
    \      } else if(i % 13 == 0) {\n                    count += 2;\n           \
    \     }\n            }\n        }\n        return count;\nreturn 0;\n    }\n \
    \   public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwfmkff3k.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = n; i >= 10; i--) {\n            if (i%11 == 0 && i%13 == 0) {\n   \
    \             count++;\n            }\n            if (i%11 == 0) {\n        \
    \        count++;\n            }\n            if (i%13 == 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\nreturn 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50)) ==\
    \ (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkgwvt_08.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n < 10 && n % 11 == 0 ||\
    \ n < 13 && n % 13 == 0)\n            return n;\n        return fizzBuzz(n / 11)\
    \ + fizzBuzz(n / 13) + 1;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8r2cbj9_.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n > 2) {\n            if (n % 11 == 0 || n % 13 == 0) {\n                count++;\n\
    \            }\n            n = (n / 10) * 10;\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmiqy8u52.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n < 10) return 0;\n    \
    \    if (n >= 10 && (n % 10 == 7 || n % 10 == 11 || n % 10 == 13)) return 1;\n\
    \        int count2 = fizzBuzz(n / 10);\n        if (n % 10 == 7 && count2 ==\
    \ 1) return count2 + 1;\n        if (n % 10 == 11 && count2 == 1) return count2\
    \ + 1;\n        if (n % 10 == 13 && count2 == 1) return count2 + 1;\n        return\
    \ count2;\nreturn 0;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpibcp9gde.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int counter = 0;\n        int\
    \ x = n;\n        while (x>0) {\n            String s = Integer.toString(x);\n\
    \            if (s.matches(\"\\\\d*7\")) {\n                counter++;\n     \
    \       }\n            if (x%11==0 & x%13==0) {\n                counter++;\n\
    \            }\n            x/=11;\n            x/=13;\n        }\n        return\
    \ counter;\nreturn 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpejwq23h6.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int result = 0;\n        while\
    \ (n > 0) {\n            int remainder = (int) Math.remainder(n, 11);\n      \
    \      n -= remainder;\n            if (remainder == 0 || remainder == 7) {\n\
    \                result++;\n            }\n        }\n        return result;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_vntm4t0.java:19: error: cannot find symbol\n            int remainder\
    \ = (int) Math.remainder(n, 11);\n                                      ^\n  symbol:\
    \   method remainder(int,int)\n  location: class Math\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        int res = 0;\n        int div = n / 11;\n        while\
    \ (div != 0) {\n            if (n % div == 0)\n                res += div;\n \
    \           div = div / 13;\n        }\n        return res;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp57fglu93.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n \
    \               count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpno5l4jxj.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n % 11 == 0 || n % 13 ==\
    \ 0)\n            n /= 11;\n        if (n % 11 == 0)\n            return n % 11;\n\
    \        if (n % 13 == 0)\n            return n % 13;\n        return n;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcsp7gta6.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int n1 = n / 100;\n        int\
    \ n2 = n % 100;\n        int n3 = n1 / 10;\n        int n4 = n1 % 10;\n\n    \
    \    if (n3 == 7 || n4 == 7) {\n            return 2;\n        } else if (n3 ==\
    \ 3 || n4 == 3) {\n            return 3;\n        } else {\n            return\
    \ 1;\n        }\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp71rddzja.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        long res = 0;\n        for (int\
    \ i = 1; i <= n; i++) {\n            if (i % 11 == 0 || (i % 13 == 0)) {\n   \
    \             res = i;\n                break;\n            }\n        }\n   \
    \     return (int) res;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr5bz6rs9.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n >= 0 && n <= 100000000)\n\
    \            return fizzBuzz(n);\n        else if (n > 100000000 || n < 0)\n \
    \           return 0;\n\n        return fizzBuzz(n / 11) * 11 + fizzBuzz(n / 13)\
    \ * 13;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu4h1mn1i.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n!=0) {\n            if (n%11==7) {\n                count++;\n           \
    \ }\n            if (n%13==7) {\n                count++;\n            }\n   \
    \         n/=11;\n            n/=13;\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphcz36xg1.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for(int\
    \ i = 1; i * i <= n; i++){\n            if((n % i) == 0){\n                if(i\
    \ % 11 == 0){\n                    count++;\n                }\n             \
    \   if(i % 13 == 0){\n                    count++;\n                }\n      \
    \      }\n        }\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgemwqxet.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        int\
    \ nDigit = Integer.toString(n).length();\n        if (nDigit > 0)\n        {\n\
    \            boolean isDivisibleBy11Or13 = isDivisibleBy11Or13(n);\n         \
    \   if (isDivisibleBy11Or13)\n            {\n                for (int i = 1; i\
    \ <= n; i+=11)\n                {\n                    for (int j = 1; j <= n;\
    \ j+=13)\n                    {\n                        count++;\n          \
    \          }\n                }\n            }\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgipypduz.java:21: error: cannot find symbol\n            boolean\
    \ isDivisibleBy11Or13 = isDivisibleBy11Or13(n);\n                            \
    \              ^\n  symbol:   method isDivisibleBy11Or13(int)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if(n%11\
    \ == 0){\n            count++;\n        }\n        if(n%13 == 0){\n          \
    \  count++;\n        }\n        if(count != 0){\n            return count;\n \
    \       }\n        else {\n            int i = 1;\n            while(i < n){\n\
    \                if(i%11 == 0){\n                    count++;\n              \
    \  }\n                if(i%13 == 0){\n                    count++;\n         \
    \       }\n                i++;\n            }\n            return count;\n  \
    \      }\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_4eyko1k.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n == 0) return 0;\n    \
    \    if (n % 11 == 0 && n % 13 == 0) {\n            return 1;\n        }\n   \
    \     return fizzBuzz(n / 11);\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwog2wgfe.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        List<Integer> counts = new ArrayList<>();\n\
    \        if (n <= 0) return 0;\n        if (n % 11 == 0) counts.add(1);\n    \
    \    if (n % 13 == 0) counts.add(1);\n        if (n % 3 == 0) counts.add(1);\n\
    \        if (n % 5 == 0) counts.add(1);\n        if (n % 7 == 0) counts.add(1);\n\
    \        if (n % 9 == 0) counts.add(1);\n        if (n % 11 == 0 && n % 13 ==\
    \ 0) counts.add(1);\n        if (n % 3 == 0 && n % 5 == 0 && n % 7 == 0) counts.add(1);\n\
    \        if (n % 9 == 0 && n % 11 == 0 && n % 13 == 0) counts.add(1);\n      \
    \  if (n % 9 == 0 && n % 11 == 0 && n % 13 == 0) counts.add(1);\n        if (n\
    \ % 9 == 0 && n % 11 == 0 && n % 13 == 0) counts.add(1);\n        return counts.stream().filter(i\
    \ -> i == 7).count();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp159l__vb.java:30: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return counts.stream().filter(i -> i == 7).count();\n\
    \                                                        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n % 11 == 0) {\n       \
    \     int count = 2;\n            while (n % 11 != 0) {\n                n /=\
    \ 11;\n                ++count;\n            }\n            return count;\n  \
    \      } else if (n % 13 == 0) {\n            int count = 3;\n            while\
    \ (n % 13 != 0) {\n                n /= 13;\n                ++count;\n      \
    \      }\n            return count;\n        } else {\n            return 0;\n\
    \        }\nreturn 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyjt7dn_4.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        if (n % 11 == 0 || n % 13 == 0) {\n            return\
    \ 1;\n        }\n        return fizzBuzz(n / 11) + fizzBuzz(n / 13);\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_y9v7poo.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.range(1,n).filter(x\
    \ -> x%11==0 || x%13==0).count();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyh1z_m66.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1,n).filter(x -> x%11==0 ||\
    \ x%13==0).count();\n                                                        \
    \                 ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        String strNum = Integer.toString(n);\n\
    \        return strNum.chars().filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).count()\
    \ - strNum.chars().filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).count()\
    \ * strNum.chars().filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).count()\
    \ / 11 + strNum.chars().filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa3t6dbrr.java:18: error: <identifier> expected\n        return\
    \ strNum.chars().filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).count()\
    \ - strNum.chars().filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).count()\
    \ * strNum.chars().filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).count()\
    \ / 11 + strNum.chars().filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::isDigit).filter(Character::is"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n > 0) {\n            if (n % 11 == 0 && n % 13 == 0) {\n                count++;\n\
    \            }\n            n = n / 11;\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7qct1j5j.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ % 11 == 0)\n            count++;\n        if (n % 13 == 0)\n            count++;\n\
    \        if (n % 11 != 0 && n % 13 != 0)\n            count++;\n        return\
    \ count;\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjkardbsc.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        if (n % 11 == 0 && n % 13 == 0) {\n            return\
    \ 2;\n        }\n        if (n % 11 == 0) {\n            return 1;\n        }\n\
    \        if (n % 13 == 0) {\n            return 3;\n        }\n        return\
    \ fizzBuzz(n / 11);\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3kua1yd4.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.rangeClosed(1,\
    \ n).filter(i -> (i % 11) == (i % 13)).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpctiwf3pv.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).filter(i -> (i\
    \ % 11) == (i % 13)).count();\n                                              \
    \                                    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n < 10) {\n            return\
    \ n;\n        }\n        List<Integer> result = new ArrayList<>();\n        for\
    \ (int i = 1; i < n; i++) {\n            if (i % 11 == 0) {\n                result.add(i);\n\
    \            }\n            if (i % 13 == 0) {\n                result.add(i);\n\
    \            }\n        }\n        result.stream().filter(v -> v % 11 != 0 ||\
    \ v % 13 != 0).forEach(v -> result.add(v));\n        return result.size();\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwgmy8ul1.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        do {\n\
    \            boolean isFizz = true;\n            for (int i = 0; i < 3; i++) {\n\
    \                if ((n % 11 == 0 || n % 13 == 0) && n % i == 0) {\n         \
    \           isFizz = false;\n                    break;\n                }\n \
    \           }\n            if (isFizz) {\n                count++;\n         \
    \   }\n        } while (n);\n        return count;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp017ex8sd.java:29: error: incompatible types: int cannot be converted\
    \ to boolean\n        } while (n);\n                 ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int fizz = 0;\n        int buzz\
    \ = 0;\n        int counter = 1;\n        while (counter <= n) {\n           \
    \ if ((n % 10) == 7) {\n                fizz++;\n                buzz++;\n   \
    \         } else {\n                fizz++;\n            }\n            counter++;\n\
    \            if ((n % 10) == 7 || (n % 10) == 9) {\n                buzz++;\n\
    \            } else {\n                buzz++;\n            }\n        }\n   \
    \     return fizz + buzz;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcz08jmqn.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        Map<Character, Integer> digitCounts\
    \ = IntStream.range(0,10).boxed().collect(Collectors.groupingBy(x -> {\n     \
    \       try {\n                return Character.valueOf((char) x);\n         \
    \   } catch (Exception e) {\n                return null;\n            }\n   \
    \     }));\n\n        return IntStream.range(0, n).filter(x -> {\n           \
    \ try {\n                return (x % 11 == 0) && (x % 13 == 0);\n            }\
    \ catch (Exception e) {\n                return false;\n            }\n      \
    \  }).filter(x -> {\n            try {\n                return digitCounts.get(((char)\
    \ x).toString()).equals(7) || digitCounts.get(((char) x).toString()).equals(8);\n\
    \            } catch (Exception e) {\n                return false;\n        \
    \    }\n        }).count();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi6p45yqk.java:19: error: incompatible types: Integer cannot be\
    \ converted to char\n                return Character.valueOf((char) x);\n   \
    \                                             ^\n/tmp/tmpi6p45yqk.java:17: error:\
    \ incompatible types: inference variable R has incompatible bounds\n        Map<Character,\
    \ Integer> digitCounts = IntStream.range(0,10).boxed().collect(Collectors.groupingBy(x\
    \ -> {\n                                                                     \
    \              ^\n    equality constraints: Map<Character,List<Integer>>\n   \
    \ upper bounds: Map<Character,Integer>,Object\n  where R,A,T are type-variables:\n\
    \    R extends Object declared in method <R,A>collect(Collector<? super T,A,R>)\n\
    \    A extends Object declared in method <R,A>collect(Collector<? super T,A,R>)\n\
    \    T extends Object declared in interface Stream\n/tmp/tmpi6p45yqk.java:33:\
    \ error: char cannot be dereferenced\n                return digitCounts.get(((char)\
    \ x).toString()).equals(7) || digitCounts.get(((char) x).toString()).equals(8);\n\
    \                                                 ^\n/tmp/tmpi6p45yqk.java:33:\
    \ error: char cannot be dereferenced\n                return digitCounts.get(((char)\
    \ x).toString()).equals(7) || digitCounts.get(((char) x).toString()).equals(8);\n\
    \                                                                            \
    \                         ^\n/tmp/tmpi6p45yqk.java:37: error: incompatible types:\
    \ possible lossy conversion from long to int\n        }).count();\n          \
    \      ^\n5 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ ( n-- > 0 ) {\n            if ( n % 11 == 0 ) count += 1;\n            else\
    \ if ( n % 13 == 0 ) count += 2;\n            else if ( n % 17 == 0 ) count +=\
    \ 3;\n            else if ( n % 19 == 0 ) count += 4;\n            else if ( n\
    \ % 21 == 0 ) count += 5;\n            else if ( n % 23 == 0 ) count += 6;\n \
    \           else if ( n % 29 == 0 ) count += 7;\n            else if ( n % 31\
    \ == 0 ) count += 8;\n            else if ( n % 37 == 0 ) count += 9;\n      \
    \      else if ( n % 41 == 0 ) count += 10;\n            else if ( n % 43 == 0\
    \ ) count += 11;\n            else if ( n % 47 == 0 ) count += 12;\n         \
    \   else if ( n % 53 == 0 ) count += 13;\n            else if ( n % 59 == 0 )\
    \ count += 14;\n            else if ( n % 61 == 0 ) count += 15;\n           \
    \ else if ( n % 67 == 0 ) count += 16;\n            else if ( n % 71 == 0 ) count\
    \ += 17;\n            else if ( n % 73 == 0 ) count += 18;\n            else if\
    \ ( n % 79 == 0 ) count += 19;\n            else if ( n % 83 == 0 ) count += 20;\n\
    \            else if ( n % 89 == 0 ) count += 21;\n            else if ( n % 91\
    \ == 0 ) count += 22;\n            else if ( n % 97 == 0 ) count += 23;\n    \
    \        else if ( n % 101 == 0 ) count += 24;\n            else if ( n % 103\
    \ == 0 ) count += 25;\n            else if ( n % 107 == 0 ) count += 26;\n   \
    \         else if ( n % 111 == 0 ) count += 27;\n            else if ( n % 115\
    \ == 0 ) count += 28;\n            else if ( n % 117 == 0 ) count += 29;\n   \
    \         else if ( n % 121 == 0 ) count += 30;\n            else if ( n % 123\
    \ == 0 ) count += 31;\n            else if ( n % 127 == 0 ) count += 32;\n   \
    \         else if ( n % 131 == 0 ) count += 33;\n            else if ( n % 135\
    \ == 0 ) count += 34;\n            else if ( n % 137 == 0 ) count += 35;\n   \
    \         else if ( n % 141 == 0 ) count += 36;\n            else if ( n % 145\
    \ == 0 ) count += 37;\n            else if ( n % 147 == 0 ) count += 38;\n   \
    \         else if ( n % 151 == 0 ) count += 39;\n            else if ( n % 155\
    \ == 0 ) count += 40;\n            \nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2tofdrqt.java:62: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2tofdrqt.java:62: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp2tofdrqt.java:62: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp2tofdrqt.java:62: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp2tofdrqt.java:62: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp2tofdrqt.java:73:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int) IntStream.rangeClosed(1,\
    \ n).filter(i -> n % 11 == 0 || n % 13 == 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8q4fthx8.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 0; i <= n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                if (i != 7) {\n                    count++;\n               \
    \ }\n            }\n        }\n        return count;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps02mnq1_.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n / 11 > 1 && n / 13 > 1)\
    \ {\n            return 2;\n        }\n        if (n / 11 > 1) {\n           \
    \ return 1;\n        }\n        if (n / 13 > 1) {\n            return 1;\n   \
    \     }\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmporhqklnl.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 1; i <= n; i++) {\n            if ((i % 11) == 7 || (i % 13) == 7)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplxqfwuh0.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int) (Math.log10(n)+0.1);\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3osmhzod.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int) Math.floor(n/3\
    \ * (Math.ceil(Math.sqrt(n)/10)+Math.ceil(Math.sqrt(n)/10)));\nreturn 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50)) ==\
    \ (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbg7i5lex.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // Write your code here.\n \
    \       return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprz1r1g7s.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int) Math.ceil(Math.log10(n)\
    \ / Math.log10(10));\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx62hrfnd.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.range(0, n).filter(i\
    \ -> i % 11 == 0 || i % 13 == 0).count();\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph1y7a3ql.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(0, n).filter(i -> i % 11 ==\
    \ 0 || i % 13 == 0).count();\n                                               \
    \                                   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0; // Count how\
    \ many times 7 is in integers less than n\n        for (int i = 0; i <= n; i++)\
    \ {\n            if (i % 11 == 0) // If i divided by 11\n                count++;\n\
    \            if (i % 13 == 0) // If i divided by 13\n                count++;\n\
    \        }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3djvbh_5.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ ( n < 100 && n >= 100 && (n % 11 == 0 || n % 13 == 0) ) {\n            count++;\n\
    \            n /= 100;\n        }\n        return count;\nreturn 0;\n    }\n \
    \   public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjeg2qntf.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        Set<Integer> numbersLessThanFive\
    \ = IntStream.range(1, n).filter(i -> i % 11 == 0 || i % 13 == 0).boxed().collect(Collectors.toSet());\n\
    \        return numbersLessThanFive.stream().filter(number -> number % 7 == 0).count();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1295lslc.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return numbersLessThanFive.stream().filter(number\
    \ -> number % 7 == 0).count();\n                                             \
    \                                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int result = 0;\n        while\
    \ (n >= 10) {\n            if (n % 10 == 7) {\n                result++;\n   \
    \         }\n            n /= 10;\n        }\n        while (n >= 5) {\n     \
    \       if (n % 5 == 1) {\n                result++;\n            }\n        \
    \    n /= 5;\n        }\n        while (n >= 1) {\n            if (n % 1 == 1)\
    \ {\n                result++;\n            }\n            n /= 1;\n        }\n\
    \        return result;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvjtsrxlg.java:37: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        long\
    \ div = 11L * 13L;\n        long val = n;\n        if (val == 1) return 1;\n \
    \       if (val == 2) return 1;\n        while (val >= div) {\n            count++;\n\
    \            val = val / div;\n        }\n        return (int) Math.ceil(count\
    \ / 3.0f);\nreturn 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr9oij3sh.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        int\
    \ d = 7;\n        while (n > 0) {\n            n /= 10;\n            count++;\n\
    \            if (n % 11 == d || n % 13 == d) {\n                count++;\n   \
    \         }\n        }\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph0fjx54k.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int) Math.ceil((Math.log10(n)\
    \ + 1) * (Math.log10(n / 11) + 1) * (Math.log10(n / 13) + 1));\nreturn 0;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1zmheddw.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n % 11 == 0) return fizz(n\
    \ - 1);\n        if (n % 13 == 0) return buzz(n - 1);\n        return fizz(n -\
    \ 1) + buzz(n - 1);\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpptg281ej.java:17: error: cannot find symbol\n        if (n % 11\
    \ == 0) return fizz(n - 1);\n                                ^\n  symbol:   method\
    \ fizz(int)\n  location: class Problem\n/tmp/tmpptg281ej.java:18: error: cannot\
    \ find symbol\n        if (n % 13 == 0) return buzz(n - 1);\n                \
    \                ^\n  symbol:   method buzz(int)\n  location: class Problem\n\
    /tmp/tmpptg281ej.java:19: error: cannot find symbol\n        return fizz(n - 1)\
    \ + buzz(n - 1);\n               ^\n  symbol:   method fizz(int)\n  location:\
    \ class Problem\n/tmp/tmpptg281ej.java:19: error: cannot find symbol\n       \
    \ return fizz(n - 1) + buzz(n - 1);\n                             ^\n  symbol:\
    \   method buzz(int)\n  location: class Problem\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        IntStream.range(1,n).filter(i\
    \ -> i % 11 == 0 || i % 13 == 0).forEach(i -> System.out.print(i+\" \"));\n  \
    \      System.out.println();\n        return IntStream.range(1,n).filter(i ->\
    \ i % 11 == 0 || i % 13 == 0).count();\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsikah7ky.java:19: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1,n).filter(i -> i % 11 ==\
    \ 0 || i % 13 == 0).count();\n                                               \
    \                                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        int\
    \ multiple = (int) Math.sqrt(n) + 1;\n\n        for (int i = 1; i <= multiple;\
    \ i++) {\n            if (n % i == 0) {\n                if (i == multiple) {\n\
    \                    if (n % 11 == 0)\n                        count++;\n    \
    \                else if (n % 13 == 0)\n                        count++;\n   \
    \             }\n                else if (i % 11 == 0 || i % 13 == 0) {\n    \
    \                count++;\n                }\n            }\n        }\n     \
    \   return count;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeevojyh9.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int fCount = 0;\n        final\
    \ int[] fCountList = new int[10];\n        int divBy11 = n % 11;\n        if (divBy11\
    \ == 0)\n            divBy11 = 1;\n        int divBy13 = n % 13;\n        if (divBy13\
    \ == 0)\n            divBy13 = 1;\n        for (int i = 1; i < n; i += 2) {\n\
    \            if (i % 11 == 0)\n                fCountList[fCount++] = i;\n   \
    \         else if (i % 13 == 0)\n                fCountList[fCount++] = i;\n \
    \           else if (i % 11 != 0 && i % 13 != 0)\n                fCountList[fCount++]\
    \ = i;\n        }\n        return fCount;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprtor6er7.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.range(1,n)\n\
    \            .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i ->\
    \ i % 11 != 0 && i % 13 != 0)\n            .filter(i -> Integer.toString(i, 10).contains(\"\
    7\"))\n            .count();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptjuohqqf.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            .count();\n                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for(int\
    \ i : new int[]{0,1,2,3,4,5,6,7,8,9,10,11,12}) {\n            count += (n%11 ==\
    \ 0 || n%13 == 0) ? 1 : 0;\n            n /= 11;\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz_qi0z5v.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        } else if (n % 11 == 0 || n % 13 == 0) {\n            return 1;\n\
    \        }\n        return fizzBuzz(n - 1);\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9yazmb99.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int)Math.floor(n/11)%3\
    \ + ((int)Math.floor(n/13)%3 > 0);\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpespsa0d3.java:17: error: bad operand types for binary operator\
    \ '+'\n        return (int)Math.floor(n/11)%3 + ((int)Math.floor(n/13)%3 > 0);\n\
    \                                       ^\n  first type:  int\n  second type:\
    \ boolean\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int) Math.ceil(n/Math.log10(11.0)\
    \ + n/Math.log10(13.0))*(11.0 + 13.0/11.0) / 11.0;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb8xg_uzu.java:17: error: incompatible types: possible lossy conversion\
    \ from double to int\n        return (int) Math.ceil(n/Math.log10(11.0) + n/Math.log10(13.0))*(11.0\
    \ + 13.0/11.0) / 11.0;\n                                                     \
    \                                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 0; i < n; i = i + 11) {\n            if (i % 11 == 0) count += 1;\n\
    \            if (i % 13 == 0) count += 1;\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2xari_34.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // Complete the code.\n    \
    \    return 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbhynhk3e.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        List<Integer> fizz = new ArrayList<>();\n\
    \        List<Integer> buzz = new ArrayList<>();\n        while (!fizz.isEmpty()\
    \ && !buzz.isEmpty()) {\n            int a = fizz.remove(0);\n            int\
    \ b = buzz.remove(0);\n            if ((a % 11 == 0) || (b % 13 == 0)) {\n   \
    \             fizz.add(b);\n                buzz.add(a);\n            } else {\n\
    \                fizz.add(a);\n                buzz.add(b);\n            }\n \
    \       }\n        return fizz.size() + buzz.size();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpftcopsws.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int result = 0;\n        if\
    \ (n >= 11) {\n            if (n >= 13) {\n                for (int i = 11; i\
    \ < 13; i++) {\n                    if (n % i == 0) {\n                      \
    \  result += 1;\n                    }\n                }\n            } else\
    \ {\n                result = 1;\n            }\n        }\n        return result;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfugcvdmu.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // YOUR CODE HERE\n        \n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbsib1cvk.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        int count = 0;\n        int divCount = 0, modCount =\
    \ 1;\n        for (int i = n; i > 0; i /= 10) {\n            int remainder = i\
    \ % 10;\n            count += (remainder == 7 ? 1 : 0);\n            divCount\
    \ += (remainder == 7 ? 2 : 0);\n            modCount += (remainder == 7 ? 3 :\
    \ 0);\n        }\n        return count + (divCount == modCount ? divCount : modCount);\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvtuahenx.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.rangeClosed(1,\
    \ n).filter(i -> i % 11 == 0 || i % 13 == 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy8dhm4el.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).filter(i -> i %\
    \ 11 == 0 || i % 13 == 0).count();\n                                         \
    \                                               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        int count = 0;\n        \n        if (n % 11 == 0) {\n\
    \            count++;\n        }\n        \n        if (n % 13 == 0) {\n     \
    \       count++;\n        }\n        \n        if (n % 7 == 0) {\n           \
    \ count++;\n        }\n        \n        return count;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsb9guhvb.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.range(0,n).filter(i\
    \ -> i%11==0 || i%13==0).count(i -> i==7);\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprioc5b00.java:17: error: method count in interface IntStream cannot\
    \ be applied to given types;\n        return IntStream.range(0,n).filter(i ->\
    \ i%11==0 || i%13==0).count(i -> i==7);\n                                    \
    \                               ^\n  required: no arguments\n  found: (i)->i ==\
    \ 7\n  reason: actual and formal argument lists differ in length\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n < 11) {\n            return\
    \ fizz_buzz(n);\n        }\n        if (n < 13) {\n            return fizz_buzz(n\
    \ - 11);\n        }\n        if (n < 17) {\n            return fizz_buzz(n - 13);\n\
    \        }\n        if (n < 19) {\n            return fizz_buzz(n - 17);\n   \
    \     }\n        if (n < 23) {\n            return fizz_buzz(n - 19);\n      \
    \  }\n        if (n < 27) {\n            return fizz_buzz(n - 23);\n        }\n\
    \        if (n < 31) {\n            return fizz_buzz(n - 27);\n        }\n   \
    \     if (n < 37) {\n            return fizz_buzz(n - 31);\n        }\n      \
    \  if (n < 41) {\n            return fizz_buzz(n - 37);\n        }\n        if\
    \ (n < 45) {\n            return fizz_buzz(n - 41);\n        }\n        if (n\
    \ < 49) {\n            return fizz_buzz(n - 45);\n        }\n        return fizz_buzz(n\
    \ - 49);\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp38ckd54i.java:18: error: cannot find symbol\n            return\
    \ fizz_buzz(n);\n                   ^\n  symbol:   method fizz_buzz(int)\n  location:\
    \ class Problem\n/tmp/tmp38ckd54i.java:21: error: cannot find symbol\n       \
    \     return fizz_buzz(n - 11);\n                   ^\n  symbol:   method fizz_buzz(int)\n\
    \  location: class Problem\n/tmp/tmp38ckd54i.java:24: error: cannot find symbol\n\
    \            return fizz_buzz(n - 13);\n                   ^\n  symbol:   method\
    \ fizz_buzz(int)\n  location: class Problem\n/tmp/tmp38ckd54i.java:27: error:\
    \ cannot find symbol\n            return fizz_buzz(n - 17);\n                \
    \   ^\n  symbol:   method fizz_buzz(int)\n  location: class Problem\n/tmp/tmp38ckd54i.java:30:\
    \ error: cannot find symbol\n            return fizz_buzz(n - 19);\n         \
    \          ^\n  symbol:   method fizz_buzz(int)\n  location: class Problem\n/tmp/tmp38ckd54i.java:33:\
    \ error: cannot find symbol\n            return fizz_buzz(n - 23);\n         \
    \          ^\n  symbol:   method fizz_buzz(int)\n  location: class Problem\n/tmp/tmp38ckd54i.java:36:\
    \ error: cannot find symbol\n            return fizz_buzz(n - 27);\n         \
    \          ^\n  symbol:   method fizz_buzz(int)\n  location: class Problem\n/tmp/tmp38ckd54i.java:39:\
    \ error: cannot find symbol\n            return fizz_buzz(n - 31);\n         \
    \          ^\n  symbol:   method fizz_buzz(int)\n  location: class Problem\n/tmp/tmp38ckd54i.java:42:\
    \ error: cannot find symbol\n            return fizz_buzz(n - 37);\n         \
    \          ^\n  symbol:   method fizz_buzz(int)\n  location: class Problem\n/tmp/tmp38ckd54i.java:45:\
    \ error: cannot find symbol\n            return fizz_buzz(n - 41);\n         \
    \          ^\n  symbol:   method fizz_buzz(int)\n  location: class Problem\n/tmp/tmp38ckd54i.java:48:\
    \ error: cannot find symbol\n            return fizz_buzz(n - 45);\n         \
    \          ^\n  symbol:   method fizz_buzz(int)\n  location: class Problem\n/tmp/tmp38ckd54i.java:50:\
    \ error: cannot find symbol\n        return fizz_buzz(n - 49);\n             \
    \  ^\n  symbol:   method fizz_buzz(int)\n  location: class Problem\n12 errors"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int)Math.ceil(Math.log10(n)/Math.log10(11));\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1er7i5ys.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        Set<Integer>\
    \ set = new HashSet<>();\n        for (int i = 0; i <= n; i++) {\n           \
    \ if (i % 11 == 0 || i % 13 == 0) {\n                count++;\n            }\n\
    \            set.add(String.valueOf(i));\n        }\n        count = set.stream().filter(s\
    \ -> s.contains(\"7\")).count();\n        return count;\nreturn 0;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmllk0w1c.java:23: error: no suitable method found for add(String)\n\
    \            set.add(String.valueOf(i));\n               ^\n    method Collection.add(Integer)\
    \ is not applicable\n      (argument mismatch; String cannot be converted to Integer)\n\
    \    method Set.add(Integer) is not applicable\n      (argument mismatch; String\
    \ cannot be converted to Integer)\n/tmp/tmpmllk0w1c.java:25: error: cannot find\
    \ symbol\n        count = set.stream().filter(s -> s.contains(\"7\")).count();\n\
    \                                          ^\n  symbol:   method contains(String)\n\
    \  location: variable s of type Integer\n/tmp/tmpmllk0w1c.java:25: error: incompatible\
    \ types: possible lossy conversion from long to int\n        count = set.stream().filter(s\
    \ -> s.contains(\"7\")).count();\n                                           \
    \                    ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int fizz = 0;\n        int buzz\
    \ = 0;\n        int counter = 0;\n        if (n / 11 % 10 != 0) {\n          \
    \  fizz += 1;\n        }\n        if (n / 13 % 10 != 0) {\n            buzz +=\
    \ 1;\n        }\n        for (; n > 0; n /= 10) {\n            if (n % 10 == 7)\
    \ {\n                counter++;\n            }\n        }\n        return fizz\
    \ + buzz + counter;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7_wry72g.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for(int\
    \ i=1; i<=n; i++) {\n            if((n%10) == 7 && (i%11) == 0 || i%13 == 0) {\n\
    \                count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfx0s6htx.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int ndigits = Integer.toString(n).length();\n\
    \        if (ndigits > 13) throw new IllegalArgumentException();\n        int\
    \ counter = 0;\n        for (int i = 1; i <= n; i++) {\n            String s =\
    \ Integer.toString(i);\n            if (s.charAt(ndigits-7) == '7') {\n      \
    \          counter++;\n            }\n            if (i % 11 == 0 || i % 13 ==\
    \ 0) {\n                counter++;\n            }\n        }\n        return counter;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx0zkleak.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ >= 0 && n < 10000) {\n            count = (int) (Math.log10(n) / Math.log10(11)\
    \ + 1);\n            n = n / Math.pow(11, count);\n        }\n        if (n >=\
    \ 10000 && n < 10000000) {\n            count = (int) (Math.log10(n) / Math.log10(13)\
    \ + 1);\n            n = n / Math.pow(13, count);\n        }\n        if (n >=\
    \ 10000000 && n < 1000000000) {\n            count = (int) (Math.log10(n) / Math.log10(21));\n\
    \            n = n / Math.pow(2, count);\n        }\n        if (n >= 1000000000\
    \ && n < 10000000000) {\n            count = (int) (Math.log10(n) / Math.log10(23)\
    \ + 1);\n            n = n / Math.pow(23, count);\n        }\n        if (n >=\
    \ 10000000000 && n < 100000000000) {\n            count = (int) (Math.log10(n)\
    \ / Math.log10(29) + 1);\n            n = n / Math.pow(29, count);\n        }\n\
    \        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp197o6c8s.java:30: error: integer number too large: 10000000000\n\
    \        if (n >= 1000000000 && n < 10000000000) {\n                         \
    \          ^\n/tmp/tmp197o6c8s.java:34: error: integer number too large: 10000000000\n\
    \        if (n >= 10000000000 && n < 100000000000) {\n                 ^\n/tmp/tmp197o6c8s.java:34:\
    \ error: integer number too large: 100000000000\n        if (n >= 10000000000\
    \ && n < 100000000000) {\n                                    ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // Write your code here\n  \
    \      int count = 0;\n        for (int i = 0; i < n; i++ ) {\n            if\
    \ ( i % 11 == 0 || i % 13 == 0) {\n                count++;\n            }\n \
    \       }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_dqk015b.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 1000000000; i <= n; i++) {\n            if (i % 11 == 0 || i % 13 ==\
    \ 0) {\n                if (i % 11 == 0 && i % 13 == 0) {\n                  \
    \  count++;\n                }\n                else if (i % 11 == 0) {\n    \
    \                count++;\n                }\n                else if (i % 13\
    \ == 0) {\n                    count++;\n                }\n            }\n  \
    \      }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5atn7io8.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        List<Integer> li = new ArrayList<>();\n\
    \        while(n != 0){\n            li.add(n % 10);\n            n = n / 10;\n\
    \        }\n        int count = 0;\n        for(Integer n : li){\n           \
    \ if(n % 3 == 0 || n % 5 == 0){\n                count++;\n            }\n   \
    \     }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9nldci2e.java:23: error: variable n is already defined in method\
    \ fizzBuzz(int)\n        for(Integer n : li){\n                    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        int\
    \ count = 0;\n        for (int x = 10; x != n; x += 10) {\n            if (n %\
    \ x == 0) {\n                count++;\n            }\n        }\n        return\
    \ count;\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_2ztfrka.java:18: error: variable count is already defined in method\
    \ fizzBuzz(int)\n        int count = 0;\n            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 1; i <= n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8irkdmdd.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n % 11 == 0)\n         \
    \   return 3;\n        if (n % 13 == 0)\n            return 2;\n        return\
    \ 1;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo_c454zg.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        Set<Integer> divisibleBy11 =\
    \ new HashSet<>();\n        Set<Integer> divisibleBy13 = new HashSet<>();\n  \
    \      int count = 0;\n        while ((n % 10) == 7) {\n            divisibleBy11.add(n\
    \ % 11);\n            divisibleBy13.add(n % 13);\n            n = n / 10;\n  \
    \          count++;\n        }\n        divisibleBy11.retainAll(n);\n        divisibleBy13.retainAll(n);\n\
    \        if (divisibleBy11.size() > divisibleBy13.size()) {\n            return\
    \ count + 1;\n        }\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg84tvxe4.java:26: error: no suitable method found for retainAll(int)\n\
    \        divisibleBy11.retainAll(n);\n                     ^\n    method Collection.retainAll(Collection<?>)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Collection<?>)\n\
    \    method Set.retainAll(Collection<?>) is not applicable\n      (argument mismatch;\
    \ int cannot be converted to Collection<?>)\n/tmp/tmpg84tvxe4.java:27: error:\
    \ no suitable method found for retainAll(int)\n        divisibleBy13.retainAll(n);\n\
    \                     ^\n    method Collection.retainAll(Collection<?>) is not\
    \ applicable\n      (argument mismatch; int cannot be converted to Collection<?>)\n\
    \    method Set.retainAll(Collection<?>) is not applicable\n      (argument mismatch;\
    \ int cannot be converted to Collection<?>)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // your code\n        if (n%11==0\
    \ || n%13==0) {\n            return 0;\n        }\n        return 1+fizzBuzz(n/11);\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph9ho6vvl.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ < 1000) return count;\n        if ((n % 11) == 0) count++;\n        if ((n %\
    \ 13) == 0) count++;\n        if (n < 1000 && n / 10 == 0) count++;\n        return\
    \ count;\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa_k0ijxr.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        String s = Integer.toString(n);\n\
    \        int count = 0;\n        if (s.matches(\"^(0|[1-9][0-9]*)$\")) {\n   \
    \         count++;\n        }\n        if (s.matches(\"^(1|2[0-9]*)$\")) {\n \
    \           count++;\n        }\n        if (s.matches(\"^(3|4[0-9]*)$\")) {\n\
    \            count++;\n        }\n        if (s.matches(\"^(5|6[0-9]*)$\")) {\n\
    \            count++;\n        }\n        if (s.matches(\"^(7|8[0-9]*)$\")) {\n\
    \            count++;\n        }\n        if (s.matches(\"^(9[0-9]*)$\")) {\n\
    \            count++;\n        }\n        return count;\nreturn 0;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2k5djwct.java:38: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int) Stream.iterate(n,\
    \ (n) -> n % 10 == 0 ? 1 : 0)\n                .takeWhile(i -> i % 11 == 0 ||\
    \ i % 13 == 0)\n                .count();\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0gfhdpsr.java:17: error: variable n is already defined in method\
    \ fizzBuzz(int)\n        return (int) Stream.iterate(n, (n) -> n % 10 == 0 ? 1\
    \ : 0)\n                                        ^\n/tmp/tmp0gfhdpsr.java:18: error:\
    \ cannot find symbol\n                .takeWhile(i -> i % 11 == 0 || i % 13 ==\
    \ 0)\n                ^\n  symbol:   method takeWhile((i)->i % 1[...] == 0)\n\
    \  location: interface Stream<Integer>\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n <= 0) return 0;\n    \
    \    if (n % 11 == 0 || n % 13 == 0) return 0;\n        int count = 0;\n     \
    \   for (int i = 1; i <= n; i++) {\n            if (i % 11 == 0 && i % 13 == 0)\
    \ {\n                count++;\n            } else {\n                if (i % 11\
    \ == 0) count++;\n                if (i % 13 == 0) count++;\n            }\n \
    \       }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnw970z9u.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // TODO Auto-generated method\
    \ stub\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyvn0_rmj.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n > 0 && n <= 100) {\n            count++;\n            n /= 11;\n        }\n\
    \        while (n > 0 && n <= 100) {\n            count++;\n            n /= 13;\n\
    \        }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv2scn8t6.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int counter = 0;\n        if\
    \ (n == 0)\n            return 0;\n        if (n % 11 == 0 || (n % 13 == 0 &&\
    \ n % 11 != 0))\n            counter++;\n        return fizzBuzz(n - 1) % counter;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd8iaxs69.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n > 0 && n % 10 == 7) {\n            count++;\n            n /= 10;\n     \
    \   }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgkalb_r5.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        int\
    \ x = n / 11;\n        int y = n / 13;\n        if (x == 0 || y == 0 || x == y\
    \ || y == x) {\n            count += 0;\n        }\n        x = n / 7;\n     \
    \   y = n % 7;\n        if (y == 0 || y == x || y == x + 1 || y == x - 1) {\n\
    \            count += 2;\n        }\n        return count;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3q75cr2d.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        Set<Integer> set = new HashSet<>();\n\
    \        for (; n > 0; n /= 10) {\n            int digit = n % 10;\n         \
    \   if (digit != 7) {\n                set.add(digit);\n            }\n      \
    \  }\n        return set.stream().filter(n -> n % 11 == 0 || n % 13 == 0).count();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbq2jx_48.java:24: error: variable n is already defined in method\
    \ fizzBuzz(int)\n        return set.stream().filter(n -> n % 11 == 0 || n % 13\
    \ == 0).count();\n                                   ^\n/tmp/tmpbq2jx_48.java:24:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \    return set.stream().filter(n -> n % 11 == 0 || n % 13 == 0).count();\n  \
    \                                                                       ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n != 0) {\n            while (n % 11 == 0) n /= 11;\n            while (n %\
    \ 13 == 0) n /= 13;\n            if (n == 1) count++;\n            n = Math.round(n);\n\
    \        }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp918fm0zb.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int a=0;\n        for(int i=n;i<=n-1;i++){\n\
    \            a+=(i%11==7||i%13==7)?0:1;\n        }\n        return a;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_ih8xyi1.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 0; i < n; ++i) {\n            if (i % 11 == 0 || (i % 13 == 0)) {\n\
    \                ++count;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp976hufys.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ < 10) return count++;\n        if (n % 10 == 1) return count++;\n        if\
    \ (n % 10 == 2) return count++;\n        if (n % 10 == 3) return count++;\n  \
    \      if (n % 10 == 4) return count++;\n        if (n % 10 == 5) return count++;\n\
    \        if (n % 10 == 6) return count++;\n        if (n % 10 == 7) return count++;\n\
    \        if (n % 10 == 8) return count++;\n        if (n % 10 == 9) return count++;\n\
    \        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjczq2r4j.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n \
    \               count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphjc6vo32.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n < 10) return n;\n    \
    \    if (n % 10 == 7) return fizzBuzz(n / 10);\n        if (n % 11 == 0) return\
    \ fizzBuzz(n / 11);\n        if (n % 13 == 0) return fizzBuzz(n / 13);\n     \
    \   return 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9a_41d_g.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n%11 == 0) return 0;\n \
    \       if (n%13 == 0) return 0;\n        return Math.max(fizz(n), buzz(n));\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpni71929p.java:19: error: cannot find symbol\n        return Math.max(fizz(n),\
    \ buzz(n));\n                        ^\n  symbol:   method fizz(int)\n  location:\
    \ class Problem\n/tmp/tmpni71929p.java:19: error: cannot find symbol\n       \
    \ return Math.max(fizz(n), buzz(n));\n                                 ^\n  symbol:\
    \   method buzz(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int[] nums = new int[1000];\n\
    \        for (int i = 0; i < 1000; i++) {\n            int digit = i / 100;\n\
    \            int remainder = i % 100;\n            if ((digit == 7 && remainder\
    \ == 1) || (digit == 0 && remainder == 0)) {\n                nums[i] = 1;\n \
    \           }\n        }\n        return Collections.frequency(Arrays.asList(nums),\
    \ (n / 10) % 10);\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpox70iseo.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n==0)\n            return\
    \ 0;\n        if (n==1 || n==11)\n            return 1;\n        if (n==2 || n==13)\n\
    \            return 2;\n        if (n==3 || n==11)\n            return 3;\n  \
    \      if (n==4 || n==13)\n            return 4;\n        if (n==5 || n==11)\n\
    \            return 5;\n        if (n==6 || n==11)\n            return 6;\n  \
    \      if (n==7 || n==11)\n            return 7;\n        if (n==8 || n==11)\n\
    \            return 8;\n        if (n==9 || n==11)\n            return 9;\n  \
    \      if (n==10 || n==13)\n            return 10;\n        if (n==11 || n==13)\n\
    \            return 11;\n        if (n==12 || n==13)\n            return 12;\n\
    \        throw new RuntimeException(\"Problem fizz_buzz called with \"+n+\" which\
    \ is not valid for fizzBuzz\");\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphi8anlm8.java:44: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n > 0) {\n            int remainder = n % 10;\n            if (remainder ==\
    \ 7 || remainder == 11 || remainder == 13) {\n                count++;\n     \
    \       }\n            n = n / 10;\n        }\n        return count;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx9xlgnxg.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n < 10) return 0;\n    \
    \    if (n % 11 == 0 || n % 13 == 0) return (n / 11) + fizzBuzz((n / 13) - 1);\n\
    \        return (fizzBuzz(n / 10) + 1) * 10 + n % 10;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiva53zg8.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count=0;\n        if((n%11==0)&&(n%13==0))\n\
    \            count++;\n        if(n%11!=0)\n            count++;\n        if(n%13!=0)\n\
    \            count++;\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnyvsu4n7.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        Map<Boolean, Map<Integer, Integer>>\
    \ map = new HashMap<>();\n        int count = 0;\n        map\n              \
    \  .computeIfAbsent(n / 10, k -> new HashMap<>())\n                .computeIfAbsent(n\
    \ / 11, k -> new HashMap<>())\n                .computeIfAbsent(n / 13, k -> new\
    \ HashMap<>())\n                .computeIfAbsent(n % 10, k -> 0)\n           \
    \     .computeIfAbsent(n % 11, k -> 0)\n                .computeIfAbsent(n % 13,\
    \ k -> 0)\n                .getOrDefault(n / 10, 0)\n                .getOrDefault(n\
    \ / 11, 0)\n                .getOrDefault(n / 13, 0)\n                .getOrDefault(n\
    \ % 10, 0)\n                .getOrDefault(n % 11, 0)\n                .getOrDefault(n\
    \ % 13, 0)\n                .getOrDefault(n / 10, 0)\n                .getOrDefault(n\
    \ / 11, 0)\n                .getOrDefault(n / 13, 0)\n                .getOrDefault(n\
    \ % 10, 0)\n                .getOrDefault(n % 11, 0)\n                .getOrDefault(n\
    \ % 13, 0)\n                .getOrDefault(n / 10, 0)\n                .getOrDefault(n\
    \ / 11, 0)\n                .getOrDefault(n / 13, 0)\n                .getOrDefault(n\
    \ % 10, 0)\n                .getOrDefault(n % 11, 0)\n                .getOrDefault(n\
    \ % 13, 0)\n                .getOrDefault(n / 10, 0)\n                .getOrDefault(n\
    \ / 11, 0)\n                .getOrDefault(n / 13, 0)\n                .getOrDefault(n\
    \ % 10, 0)\n                .getOrDefault(n % 11, 0)\n                .getOrDefault(n\
    \ % 13, 0)\n                .getOrDefault(n / 10, 0)\n                .getOrDefault(n\
    \ / 11, 0)\n                .getOrDefault(n / 13, 0)\n                .getOrDefault(n\
    \ % 10, 0)\n                .getOrDefault(n % 11, 0)\n                .getOrDefault(n\
    \ % 13, 0)\n                .getOrDefault(n / 10, 0)\n                .getOrDefault(n\
    \ / 11, 0)\n                .getOrDefault(n / 13, 0)\n                .getOrDefault(n\
    \ % 10, 0)\n                .getOrDefault(n % 11, 0)\n                .getOrDefault(n\
    \ % 13, 0);\n        count = map.get(n);\n        return count;\nreturn 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj5r79eij.java:20: error: incompatible types: int cannot be converted\
    \ to Boolean\n                .computeIfAbsent(n / 10, k -> new HashMap<>())\n\
    \                                   ^\n/tmp/tmpj5r79eij.java:62: error: incompatible\
    \ types: Map<Integer,Integer> cannot be converted to int\n        count = map.get(n);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 1;\n        while\
    \ (n >= 10) {\n            count++;\n            n = n / 10;\n        }\n    \
    \    if (n == 0 || n == 1) return n;\n        if (n % 11 == 0 || n % 13 == 0)\
    \ count++;\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7gl_zi5g.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n > 10) {\n            count += fizzbuzz(n, 9);\n            n /= 10;\n   \
    \     }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprqjob7mo.java:19: error: cannot find symbol\n            count\
    \ += fizzbuzz(n, 9);\n                     ^\n  symbol:   method fizzbuzz(int,int)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.rangeClosed(0,\
    \ n).filter(i -> i % 11 == 0 || i % 13 == 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5g9mogxg.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(0, n).filter(i -> i %\
    \ 11 == 0 || i % 13 == 0).count();\n                                         \
    \                                               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int res = 0;\n        while\
    \ (n > 0) {\n            if (n % 11 == 0)\n                ++res;\n          \
    \  if (n % 13 == 0)\n                ++res;\n            n /= 10;\n        }\n\
    \        return res;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptnofu8k5.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        boolean is_divisible_by_11 =\
    \ false;\n        boolean is_divisible_by_13 = false;\n\n        for (int i =\
    \ 1; i < n; i++) {\n            if (i % 11 == 0)\n                is_divisible_by_11\
    \ = true;\n\n            if (i % 13 == 0)\n                is_divisible_by_13\
    \ = true;\n\n            if (is_divisible_by_11 && is_divisible_by_13)\n     \
    \           break;\n        }\n\n        return is_divisible_by_11 || is_divisible_by_13\
    \ ? 1 : 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp75xn_lx4.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n!=0){\n            if(n%11==0 || n%13==0){\n                count++;\n   \
    \         }\n            n=n/10;\n        }\n        return count;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyibiyhqw.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (; n >= 10; n /= 10) {\n            if (n % 11 == 0 || n % 13 == 0) {\n    \
    \            count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptnib7p8z.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ <= 0) return 0;\n        if (n <= 13) {\n            if (n % 11 == 0 && n %\
    \ 13 == 0) count++;\n        } else if (n > 13 && n < 2000) {\n            if\
    \ (n % 11 == 0 && n % 13 == 0) count++;\n            if (n % 13 == 0 && n % 11\
    \ == 0) count++;\n        } else if (n > 2000) {\n            int n1 = n / 11;\n\
    \            int n2 = n / 13;\n            if (n1 % 11 == 0 && n1 % 13 == 0) count++;\n\
    \            if (n2 % 11 == 0 && n2 % 13 == 0) count++;\n        }\n        return\
    \ count;\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcq9nhl_e.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // Write your code here\n  \
    \      if (n % 11 == 0 || n % 13 == 0) return 0;\n        return fizz_buzz(n/11)\
    \ + fizz_buzz(n/13);\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq7k8_y16.java:19: error: cannot find symbol\n        return fizz_buzz(n/11)\
    \ + fizz_buzz(n/13);\n               ^\n  symbol:   method fizz_buzz(int)\n  location:\
    \ class Problem\n/tmp/tmpq7k8_y16.java:19: error: cannot find symbol\n       \
    \ return fizz_buzz(n/11) + fizz_buzz(n/13);\n                                \
    \ ^\n  symbol:   method fizz_buzz(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // Write your code here.\n \
    \       int count=0;\n        for(int i=0;i<=n;i++)\n        {\n            if(i%11==0&&i%13==0)\n\
    \            {\n                count++;\n            }\n            if(i%11==0||i%13==0)\n\
    \            {\n                count++;\n            }\n        }\n        return\
    \ count;\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi1od8ao1.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 1; i <= n; i++) {\n            if ((i % 11) == 0 || i % 13 == 0) {\n\
    \                count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpedptt4h1.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        int\
    \ num = 1;\n        while (n > 0) {\n            if ((num % 11) == 0) {\n    \
    \            count++;\n            }\n            if ((num % 13) == 0) {\n   \
    \             count++;\n            }\n            num++;\n            n--;\n\
    \        }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0229t8ei.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n < 10) return n;\n    \
    \    else if (n % 11 == 0) return fizzBuzz(n / 11) + 1;\n        else if (n %\
    \ 13 == 0) return fizzBuzz(n / 13) + 1;\n        else return 0;\nreturn 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpie5wovo2.java:21: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ / 11 == n / 13) {\n            count += 1;\n        }\n        if (n / 11 %\
    \ 13 == 0) {\n            count += 1;\n        }\n        if (n / 13 % 11 == 0)\
    \ {\n            count += 1;\n        }\n        if (n / 13 % 11 == n / 11 % 13\
    \ == 0) {\n            count += 1;\n        }\n        return count;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp8u67hzz.java:27: error: incomparable types: boolean and int\n\
    \        if (n / 13 % 11 == n / 11 % 13 == 0) {\n                            \
    \           ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return Collections.frequency(Stream.iterate(0,\
    \ i -> i + 1).limit(n).filter(i -> i % 11 == 0 || i % 13 == 0).map(i -> String.format(\"\
    %02d\", i)).collect(Collectors.toList()), \"7\");\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxla17rqa.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        Set<Integer> numSet = new HashSet<>();\n\
    \        for (int i = 1; i <= n; i++) {\n            String s = String.valueOf(i);\n\
    \            if (!s.contains(\"7\")) {\n                numSet.add(i);\n     \
    \       }\n        }\n        return numSet.stream().filter(x -> x == 7 && x %\
    \ 11 == 0 || x == 7 && x % 13 == 0).count();\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzqw946ol.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return numSet.stream().filter(x -> x == 7 && x % 11\
    \ == 0 || x == 7 && x % 13 == 0).count();\n                                  \
    \                                                              ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        long counter = 0;\n        for\
    \ (int i = 0; i <= n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                counter++;\n            }\n        }\n        return (int) counter;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqblnfjo0.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        long sum = 0;\n        for(int\
    \ i = n; i >= 0; i--) {\n            sum = (sum + i) % 11L;\n        }\n     \
    \   return (int) Math.ceil(sum / 11) * 3;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm1ckt60l.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ < 0) throw new IllegalArgumentException(\"n must be greater than 0\");\n   \
    \     if (n % 11 == 0) count++;\n        if (n % 13 == 0) count++;\n        if\
    \ (n % 11 != 0 && n % 13 != 0) count++;\n        return count;\nreturn 0;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu0d6y127.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n >= 1000 || n <= 0) {\n\
    \            throw new IllegalArgumentException(\"Number must be between 1 and\
    \ 999\");\n        }\n        int count = 0;\n        for (int i = 0; i < n; i++)\
    \ {\n            int div = n % 11;\n            n /= 11;\n            if (div\
    \ == 0 || div == 13) {\n                count++;\n            }\n            div\
    \ = n % 13;\n            n /= 13;\n            if (div == 0 || div == 11) {\n\
    \                count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps9v5tbt0.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n < 0 || n > 1000) {\n \
    \           throw new IllegalArgumentException(\"Incorrect input\");\n       \
    \ }\n        int count = 0;\n        for(int i=0; i<n; i++) {\n            if(n%11==0\
    \ || n%13==0) {\n                count++;\n            }\n        }\n        return\
    \ count;\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkn44uz0n.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        Set<Integer> sevens = new TreeSet<>();\n\
    \        sevens.add(7);\n        sevens.add(8);\n        sevens.add(9);\n    \
    \    sevens.add(10);\n        sevens.add(11);\n        sevens.add(12);\n\n   \
    \     int count = 0;\n        while (n > 0) {\n            String str = String.valueOf(n);\n\
    \            int digit = str.charAt(0);\n            int mod = Integer.parseInt(str.substring(1));\n\
    \            if (mod == 7 || (mod == 11 & digit == 7) || (mod == 13 & digit ==\
    \ 7)) {\n                count++;\n            }\n            n = n - mod;\n \
    \       }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprm1gh6x6.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (; n < 10; ++n) {\n            if (n % 11 == 0 || n % 13 == 0) {\n         \
    \       ++count;\n            }\n        }\n        return count;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnbf0umse.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.rangeClosed(1,\
    \ n).filter(i -> i % 11 == 0 || i % 13 == 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiv0j5r84.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).filter(i -> i %\
    \ 11 == 0 || i % 13 == 0).count();\n                                         \
    \                                               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n >= 100) return -1;\n \
    \       int count = 0; // Number of times 7 appears in numbers less than n.\n\
    \        final int maxDigits = String.valueOf(n).length();\n        for (; n >=\
    \ 10; n /= 10) count++;\n        int digits = 0;\n        while (n > 0) {\n  \
    \          String s = String.valueOf(n);\n            for (int i = 0; i < maxDigits;\
    \ i++) {\n                if (s.charAt(i) == '7') {\n                    count++;\n\
    \                    if (count >= digits) {\n                        return count;\n\
    \                    }\n                    break;\n                }\n      \
    \      }\n            digits++;\n        }\n        return -1;\nreturn 0;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6rgtqxp0.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ % 11 == 0)\n            count += n / 11;\n        if (n % 13 == 0)\n       \
    \     count += n / 13;\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr5cl5z5v.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        int\
    \ fizz = n % 11;\n        int buzz = n % 13;\n        while (n >= 0) {\n     \
    \       if (fizz != 0 && buzz != 0) {\n                count++;\n            \
    \    fizz--;\n                buzz--;\n            } else if (fizz != 0) {\n \
    \               count++;\n                fizz--;\n            } else if (buzz\
    \ != 0) {\n                count++;\n                buzz--;\n            } else\
    \ {\n                count++;\n            }\n            n--;\n        }\n  \
    \      return count;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpibl2kc_q.java:37: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int fizzBuzzCount = 0;\n   \
    \     int remainder = n;\n        for(int i = 1; i < 10; i++) {\n            if(n\
    \ % i == 0 && remainder % i == 0) {\n                fizzBuzzCount++;\n      \
    \      }\n            remainder /= i;\n        }\n        return fizzBuzzCount;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphjcju5rb.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        \n        ArrayList<Integer>\
    \ numbers = new ArrayList<>();\n        for(int i = 1; i < n; i++) {\n       \
    \     if((i / 10) % 3 == 0) {\n                numbers.add(i);\n            }\
    \ else if((i / 10) % 5 == 0) {\n                numbers.add(i);\n            }\n\
    \        }\n        int count = 0;\n        \n        for( int i : numbers ) {\n\
    \            if(i == 7) {\n                count++;\n            }\n        }\n\
    \        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp489ogkko.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n <= 0) return 0;\n    \
    \    int count = 0;\n        int k = 7;\n        boolean flag = true;\n      \
    \  do {\n            int r = n / k;\n            if (r == 0 || r > 12 || flag)\
    \ {\n                if (r == 0 && flag) {\n                    if (r > 12) flag\
    \ = false;\n                } else if (r == 0 && flag) {\n                   \
    \ flag = true;\n                }\n                count++;\n                k++;\n\
    \            } else {\n                count++;\n                k = 1;\n    \
    \        }\n        } while (n != 0);\n        return count;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplctniksv.java:37: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        while\
    \ (n > 0) {\n            if (n / 11 % 11 == 0 || n / 13 % 13 == 0) {\n       \
    \         count++;\n            }\n            n--;\n        }\n        return\
    \ count;\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5i6lo8sq.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        List<Integer> list = IntStream.rangeClosed(1,\
    \ n).boxed().collect(Collectors.toList());\n        return list.stream().filter(i\
    \ -> i % 11 == 0 || i % 13 == 0).count();\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdqujwcxj.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return list.stream().filter(i -> i % 11 == 0 || i\
    \ % 13 == 0).count();\n                                                      \
    \                    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ >= 11 || n >= 13) {\n            count = fizzBuzzHelper(n);\n        }\n   \
    \     return count;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_n8ygkuq.java:19: error: cannot find symbol\n            count\
    \ = fizzBuzzHelper(n);\n                    ^\n  symbol:   method fizzBuzzHelper(int)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        int counter = 0;\n        if (n % 11 == 0) {\n      \
    \      counter++;\n        }\n        if (n % 13 == 0) {\n            counter++;\n\
    \        }\n        if (n % 7 == 0) {\n            counter++;\n        }\n   \
    \     return counter;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphirjm357.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        ArrayList <Integer> fizzBuzz\
    \ = new ArrayList <Integer> ();\n        for (int i = 2; i <= n; i++) {\n    \
    \        if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz.add(i);\n\
    \            }\n        }\n        int count = 0;\n        for (int i = 0; i <=\
    \ n; i++) {\n            if (fizzBuzz.contains(i)) {\n                count++;\n\
    \            }\n        }\n        return count;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9bzymjg5.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        if (n % 11 == 0 || n % 13 == 0) {\n            return\
    \ 1;\n        }\n        return fizzBuzz(n / 11) + fizzBuzz(n / 13);\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkkko7bk7.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return n < 10 ? n : n % 10 ==\
    \ 0 ? 0 : fizzBuzz(n / 10) + n % 10 == 0 ? 0 : fizzBuzz(n / 10) + 1;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzcusjtaq.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.rangeClosed(1,\
    \ n).filter(i -> i % 11 == 0 || i % 13 == 0).filter(i -> i % 7 == 0).count();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppsam4_cm.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).filter(i -> i %\
    \ 11 == 0 || i % 13 == 0).filter(i -> i % 7 == 0).count();\n                 \
    \                                                                            \
    \                   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n % 11 == 0) return n /\
    \ 11;\n        if (n % 13 == 0) return n / 13;\n        int count = 0;\n     \
    \   while (n >= 10) {\n            n = n % 10;\n            if (n % 11 == 0) n\
    \ /= 11;\n            if (n % 13 == 0) n /= 13;\n            count++;\n      \
    \  }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_j323mh9.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ < 0 || n % 11 == 0 || n % 13 == 0) {\n            count++;\n        }\n    \
    \    if (n < 1 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n      \
    \  }\n        if (n < 2 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 3 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 4 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 5 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 6 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 7 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 8 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 9 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 10 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 11 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 12 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        if (n < 13 || n % 11 != 0 || n % 13 != 0) {\n            count++;\n\
    \        }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyedenfic.java:61: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return 0;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpebz9e9b6.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.rangeClosed(0,\
    \ n).filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11\
    \ == 0)\n            .filter(i -> i % 13 == 0)\n            .filter(i -> Integer.toBinaryString(i).contains(\"\
    11\"))\n            .filter(i -> Integer.toBinaryString(i).contains(\"13\"))\n\
    \            .count();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq3i2ygpn.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n            .count();\n                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int) (Math.log10(n)\
    \ + 1).intValue();\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2_4l1yr3.java:17: error: double cannot be dereferenced\n      \
    \  return (int) (Math.log10(n) + 1).intValue();\n                            \
    \            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int) Math.ceil(Math.log10(n));\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp85nuhe53.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        String[] digits = {\"0\",\"\
    1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"};\n        return IntStream.range(0,n).filter(i\
    \ -> i % 11 == 0 || i % 13 == 0).count(i -> digits[i].equals(String.valueOf(i\
    \ % 11))));\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoy0lnrj7.java:18: error: ';' expected\n        return IntStream.range(0,n).filter(i\
    \ -> i % 11 == 0 || i % 13 == 0).count(i -> digits[i].equals(String.valueOf(i\
    \ % 11))));\n                                                                \
    \                                                                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 1; i < n; i++) {\n            if ((i % 11) == 0) {\n              \
    \  if (i % 13 == 0) {\n                    count++;\n                }\n     \
    \           else {\n                    if (i % 7 == 0) {\n                  \
    \      count++;\n                    }\n                }\n            }\n   \
    \     }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwde35qtw.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int cnt = 0;\n        for(int\
    \ i = 1; i <= n; i++) {\n            if(i % 11 == 0 || i % 13 == 0) {\n      \
    \          cnt++;\n            }\n        }\n        return cnt;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4f2orkj_.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = n; i > 0; i /= 11) {\n            for (int j = i; j > 0; j /= 13) {\n\
    \                if (i % 11 == 0 && j % 13 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxenqtw3u.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // write your code here\n  \
    \      int count = 0;\n        for(int i=1; i<=n/11; i++){\n            if(n%11\
    \ == 0){\n                count++;\n            }\n            if(n%13 == 0){\n\
    \                count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5521gwuo.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // write your code here\n  \
    \      int count = 0;\n        int div = 11;\n        while (n >= div) {\n   \
    \         if (n % div == 0)\n                count++;\n            div = div *\
    \ 10;\n        }\n        return count;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4uiqsv6c.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // The digit 7 can either appear\
    \ as divisible by 11 or 13.\n        \n        \n        if (n==7) {\n       \
    \     return 1;\n        }\n        int count = 0;\n        for (int i : Collections.nCopies(11,\
    \ n%11)) {\n            if (i % 11 == 0 && n % 11 != 0)\n                count++;\n\
    \        }\n        for (int j : Collections.nCopies(13, n%13)) {\n          \
    \  if (j % 13 == 0 && n % 13 != 0)\n                count++;\n        }\n    \
    \    \n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpshjk2qso.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        Stream<Integer> divisibleBy11\
    \ = IntStream.range(1, n).filter(e -> e % 11 == 0);\n        Stream<Integer> divisibleBy13\
    \ = IntStream.range(1, n).filter(e -> e % 13 == 0);\n        int divisibleBy11Count\
    \ = 0;\n        int divisibleBy13Count = 0;\n        int count = 0;\n        for\
    \ (Integer e : divisibleBy11) {\n            if (e == 7) {\n                divisibleBy11Count++;\n\
    \            }\n        }\n        for (Integer e : divisibleBy13) {\n       \
    \     if (e == 7) {\n                divisibleBy13Count++;\n            }\n  \
    \      }\n        if (divisibleBy11Count == divisibleBy13Count) {\n          \
    \  count = divisibleBy11Count + divisibleBy13Count;\n        }\n        if (divisibleBy11Count\
    \ + divisibleBy13Count > divisibleBy11Count + divisibleBy13Count) {\n        \
    \    count = divisibleBy11Count + divisibleBy13Count - divisibleBy11Count + divisibleBy13Count;\n\
    \        }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc8v1_i4z.java:17: error: incompatible types: IntStream cannot be\
    \ converted to Stream<Integer>\n        Stream<Integer> divisibleBy11 = IntStream.range(1,\
    \ n).filter(e -> e % 11 == 0);\n                                             \
    \                       ^\n/tmp/tmpc8v1_i4z.java:18: error: incompatible types:\
    \ IntStream cannot be converted to Stream<Integer>\n        Stream<Integer> divisibleBy13\
    \ = IntStream.range(1, n).filter(e -> e % 13 == 0);\n                        \
    \                                            ^\n/tmp/tmpc8v1_i4z.java:22: error:\
    \ for-each not applicable to expression type\n        for (Integer e : divisibleBy11)\
    \ {\n                         ^\n  required: array or java.lang.Iterable\n  found:\
    \    Stream<Integer>\n/tmp/tmpc8v1_i4z.java:27: error: for-each not applicable\
    \ to expression type\n        for (Integer e : divisibleBy13) {\n            \
    \             ^\n  required: array or java.lang.Iterable\n  found:    Stream<Integer>\n\
    4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return (int) Math.ceil((double)\
    \ n / 11.0);\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxxpn6wq4.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        if (n\
    \ <= 0) return 0;\n        for (int i = 1; i <= n; i++) {\n            if (i %\
    \ 11 == 0 || i % 13 == 0) {\n                count++;\n            }\n       \
    \ }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpix43gcgv.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int numDivisibleBy11 = 0;\n\
    \        int numDivisibleBy13 = 0;\n        int numDivisibleBy7 = 0;\n       \
    \ int numNotDivisibleBy7 = 0;\n        for (int i = 0; i <= n; ++i) {\n      \
    \      if (i % 11 == 0 || (i % 13 == 0)) {\n                numDivisibleBy11++;\n\
    \            } else if (i % 7 == 0) {\n                numDivisibleBy7++;\n  \
    \          } else {\n                numNotDivisibleBy7++;\n            }\n  \
    \      }\n        if (numNotDivisibleBy7 > 0) {\n            return numNotDivisibleBy7;\n\
    \        } else if (numDivisibleBy11 > 0 && numDivisibleBy7 == 0) {\n        \
    \    return numDivisibleBy11;\n        } else if (numDivisibleBy11 == 0 && numDivisibleBy7\
    \ == 0) {\n            return numDivisibleBy13;\n        } else {\n          \
    \  return numDivisibleBy13;\n        }\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj2deujv4.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        ArrayList results = new ArrayList();\n\
    \        for (int i = 0; i <= n; i++) {\n            if (i % 11 == 0 || i % 13\
    \ == 0) {\n                results.add(i);\n            }\n        }\n       \
    \ return (int) results.stream().filter(x -> x == 7).count();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb7bqetho.java:23: error: incomparable types: Object and int\n \
    \       return (int) results.stream().filter(x -> x == 7).count();\n         \
    \                                           ^\nNote: /tmp/tmpb7bqetho.java uses\
    \ unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if(n <= 0) {\n            return\
    \ 0;\n        }\n\n        double x = Math.ceil(Math.sqrt(n));\n        int count\
    \ = 0;\n        for(int i = 0; i < x; i++) {\n            if((n % 10) == 7 ||\
    \ (n % 10) == 9) {\n                count++;\n            }\n            n /=\
    \ 10;\n        }\n        return count;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzq2w1k_b.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for(int\
    \ i = 1; i < n; i++) {\n            if((i % 11 == 0 || i % 13 == 0) && i % 7 ==\
    \ 0) {\n                count++;\n            }\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5se30yd7.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if(n % 11 == 0 || n % 13 ==\
    \ 0) {\n            return 0;\n        }\n        return 1 + fizzBuzz(n / 11);\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp55igotia.java:21: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \        Integer counter = Stream.iterate(n / 11, n / 13 -> n / 13).filter(i ->\
    \ i % 11 == 0 || i % 13 == 0).count();\n        System.out.println(\"counter \"\
    \ + counter);\n        return counter;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0se4zyu_.java:18: error: ')' expected\n        Integer counter\
    \ = Stream.iterate(n / 11, n / 13 -> n / 13).filter(i -> i % 11 == 0 || i % 13\
    \ == 0).count();\n                                                       ^\n/tmp/tmp0se4zyu_.java:18:\
    \ error: not a statement\n        Integer counter = Stream.iterate(n / 11, n /\
    \ 13 -> n / 13).filter(i -> i % 11 == 0 || i % 13 == 0).count();\n           \
    \                                                  ^\n/tmp/tmp0se4zyu_.java:18:\
    \ error: ';' expected\n        Integer counter = Stream.iterate(n / 11, n / 13\
    \ -> n / 13).filter(i -> i % 11 == 0 || i % 13 == 0).count();\n              \
    \                                                   ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        ArrayList nums = Arrays.asList(n);\n\
    \        int count  = 0;\n        Arrays.stream(nums).filter(x -> x%11 == 0 ||\
    \ x%13 == 0).forEach((x) -> {\n            if(x % 11 == 0 || x % 13 == 0) {\n\
    \                if(x % 11 == 0){\n                    count = count + 1;\n  \
    \              }\n                else if(x % 13 == 0){\n                    count\
    \ = count + 1;\n                }\n            }\n        });\n        return\
    \ count;\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79))\
    \ == (3));\n    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) ==\
    \ (6));\n    assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000))\
    \ == (639));\n    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpttfliwbx.java:17: error: incompatible types: no instance(s) of\
    \ type variable(s) T exist so that List<T> conforms to ArrayList\n        ArrayList\
    \ nums = Arrays.asList(n);\n                                      ^\n  where T\
    \ is a type-variable:\n    T extends Object declared in method <T>asList(T...)\n\
    /tmp/tmpttfliwbx.java:19: error: no suitable method found for stream(ArrayList)\n\
    \        Arrays.stream(nums).filter(x -> x%11 == 0 || x%13 == 0).forEach((x) ->\
    \ {\n              ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n\
    \      (cannot infer type-variable(s) T#1\n        (argument mismatch; ArrayList\
    \ cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList cannot be converted to\
    \ int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList cannot be converted to\
    \ double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int[] ints = new int[n];\n \
    \       for (int i = 0; i < n; i++)\n            ints[i] = i;\n        Arrays.sort(ints);\n\
    \        int count = 0;\n        for (int i : ints) {\n            if (i % 11\
    \ == 0)\n                count++;\n            else if (i % 13 == 0)\n       \
    \         count++;\n            else\n                count++;\n        }\n  \
    \      return count;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpir7u9j5l.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        // Declare a variable that will\
    \ hold the number of times the digit 7 appears in integers\n        // less than\
    \ n which are divisible by 11 or 13.\n        int num = 0;\n        // Declare\
    \ an integer variable that will hold an individual integer from 0 to 9 that is\
    \ less than n that is\n        // divisible by 11 or 13.\n        int x = n /\
    \ 11;\n        // The remainder from dividing n by 11 is added to the num.\n \
    \       num = num + x;\n        // The remainder from dividing n by 13 is added\
    \ to the num.\n        x = n % 13;\n        num = num + x;\n        // Declare\
    \ an integer variable that will hold an individual integer from 0 to 9 that is\
    \ less than n that is\n        // divisible by 11 or 13.\n        x = (n - (x\
    \ * 11)) / 13;\n        num = num + x;\n        // Return the num.\n        return\
    \ num;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv2vd6ztj.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return IntStream.rangeClosed(1,\
    \ n).filter(i -> i % 11 == 0 || i % 13 == 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgi80ruk3.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).filter(i -> i %\
    \ 11 == 0 || i % 13 == 0).count();\n                                         \
    \                                               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        long counter = 0;\n        int[]\
    \ numbers = new int[n];\n        for (int i = 0; i < n; i++) {\n            numbers[i]\
    \ = (int) (Math.random() * 100) % 11;\n            if (numbers[i] < 11 && numbers[i]\
    \ % 11 == 0) {\n                counter++;\n            } else if (numbers[i]\
    \ > 11) {\n                if (numbers[i] % 13 == 0) {\n                    counter++;\n\
    \                } else {\n                    counter++;\n                }\n\
    \            } else {\n                counter++;\n            }\n        }\n\
    \        return counter;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkprmqmza.java:33: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return counter;\n               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        for\
    \ (int i = 0; i <= n; i++) {\n            String s = String.valueOf(i);\n    \
    \        String sevens = String.valueOf(n % 11);\n            String threes =\
    \ String.valueOf(n % 13);\n\n            if (s.equals(sevens) || s.equals(threes))\
    \ count++;\n        }\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp014ttjht.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        return Math.min(Math.max(1,\
    \ (int) (n / Math.sqrt(Math.pow(10, (int)Math.log10(Math.pow(n, -1))) + 1))),\
    \ (n/11) % 2 == 0 ? (n/13) % 2 == 0 ? 0 : 1 : 2);\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpek89fmnv.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        final List<Integer> results\
    \ = new ArrayList<>();\n        final boolean odds = n % 2 != 0;\n        for\
    \ (int i = 1; i < n; i++) {\n            if (odds && (i % 11 == 0 || i % 13 ==\
    \ 0)) {\n                results.add(i);\n            }\n            if (!odds\
    \ && (i % 11 == 0 || i % 13 == 0)) {\n                results.add(i);\n      \
    \      }\n            if (odds && (i % 5 == 0)) {\n                results.add(i);\n\
    \            }\n            if (!odds && (i % 5 == 0)) {\n                results.add(i);\n\
    \            }\n            if (odds && (i % 3 == 0)) {\n                results.add(i);\n\
    \            }\n            if (!odds && (i % 3 == 0)) {\n                results.add(i);\n\
    \            }\n            if (odds && (i % 7 == 0)) {\n                results.add(i);\n\
    \            }\n            if (!odds && (i % 7 == 0)) {\n                results.add(i);\n\
    \            }\n        }\n        return results.size();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpukwsz5yk.java:46: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n <= 0)\n            return\
    \ 0;\n        if (n <= 9) {\n            return 1;\n        }\n        if (n %\
    \ 11 == 0 || n % 13 == 0) {\n            return 1;\n        }\n        \n    \
    \    int count = 0;\n        for (int i = 1; i <= n; i++) {\n            if (i\
    \ % 11 == 0 && i % 13 == 0) {\n                return count;\n            }\n\
    \            if (i % 11 == 0 && i % 13 != 0) {\n                count++;\n   \
    \         }\n            if (i % 11 != 0 && i % 13 == 0) {\n                count++;\n\
    \            }\n            if (i % 11 != 0 && i % 13 != 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ks3dsgi.java:42: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n <= 0) {\n            throw\
    \ new IllegalArgumentException(\"Invalid input\");\n        }\n        int count\
    \ = 0;\n        int[] nums = new int[n];\n        for (int i = 0; i <= n; i++)\
    \ {\n            // Find factors\n            Collection<Integer> factors = Arrays.stream(nums).filter(i\
    \ -> i % 11 == 0 || i % 13 == 0).collect(Collectors.toSet());\n            //\
    \ If no factors, return count as zero\n            if (factors.isEmpty()) {\n\
    \                count++;\n            } else {\n                // Otherwise,\
    \ find number of 7's in divisors\n                int numOf7s = nums.stream().filter(i\
    \ -> i % 11 == 0 || i % 13 == 0).count() * 7;\n                // If no 7's, return\
    \ count as zero\n                if (numOf7s == 0) {\n                    count++;\n\
    \                } else {\n                    // If there's at least 1 7 in the\
    \ number, return count\n                    count += numOf7s > 0 ? numOf7s : nums.stream().filter(i\
    \ -> i % 11 == 0 || i % 13 == 0).count() - 1;\n                }\n           \
    \ }\n        }\n        return count;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78))\
    \ == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) ==\
    \ (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n\
    \    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptkf8abo0.java:24: error: variable i is already defined in method\
    \ fizzBuzz(int)\n            Collection<Integer> factors = Arrays.stream(nums).filter(i\
    \ -> i % 11 == 0 || i % 13 == 0).collect(Collectors.toSet());\n              \
    \                                                       ^\n/tmp/tmptkf8abo0.java:24:\
    \ error: method collect in interface IntStream cannot be applied to given types;\n\
    \            Collection<Integer> factors = Arrays.stream(nums).filter(i -> i %\
    \ 11 == 0 || i % 13 == 0).collect(Collectors.toSet());\n                     \
    \                                                                            \
    \    ^\n  required: Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>\n  found: Collector<Object,CAP#1,Set<Object>>\n\
    \  reason: cannot infer type-variable(s) R\n    (actual and formal argument lists\
    \ differ in length)\n  where R is a type-variable:\n    R extends Object declared\
    \ in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n  where\
    \ CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture of ?\n\
    /tmp/tmptkf8abo0.java:30: error: cannot find symbol\n                int numOf7s\
    \ = nums.stream().filter(i -> i % 11 == 0 || i % 13 == 0).count() * 7;\n     \
    \                             ^\n  symbol:   method stream()\n  location: variable\
    \ nums of type int[]\n/tmp/tmptkf8abo0.java:30: error: variable i is already defined\
    \ in method fizzBuzz(int)\n                int numOf7s = nums.stream().filter(i\
    \ -> i % 11 == 0 || i % 13 == 0).count() * 7;\n                              \
    \                     ^\n/tmp/tmptkf8abo0.java:36: error: cannot find symbol\n\
    \                    count += numOf7s > 0 ? numOf7s : nums.stream().filter(i ->\
    \ i % 11 == 0 || i % 13 == 0).count() - 1;\n                                 \
    \                        ^\n  symbol:   method stream()\n  location: variable\
    \ nums of type int[]\n/tmp/tmptkf8abo0.java:36: error: variable i is already defined\
    \ in method fizzBuzz(int)\n                    count += numOf7s > 0 ? numOf7s\
    \ : nums.stream().filter(i -> i % 11 == 0 || i % 13 == 0).count() - 1;\n     \
    \       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        double divisor = 0;\n      \
    \  int count = 0;\n\n        while (divisor <= n) {\n            divisor = checkDivisor(n,\
    \ divisor);\n\n            count++;\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy_yvmb2h.java:21: error: cannot find symbol\n            divisor\
    \ = checkDivisor(n, divisor);\n                      ^\n  symbol:   method checkDivisor(int,double)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int i = 0;\n        // Use a\
    \ for loop to add 1 to i at each step of the loop to count the occurrences of\
    \ 7 in n divisible by 11 or 13\n        for (; i <= n / 11; ++i) {\n         \
    \   if (n % 11 == 0 && n % 13 == 0) {\n                i += 1;\n            }\n\
    \        }\n\n        for (; i <= n / 13; ++i) {\n            if (n % 13 == 0)\
    \ {\n                i += 1;\n            }\n        }\n        return i;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3jjtads9.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        // The\
    \ number mod 10 will give us the last digit of the number\n        long remainder\
    \ = n % 10;\n        // Remainder is either 11 or 13, depending on whether the\
    \ last digit is 7 or 7.\n        // We only want to count fizz buzz numbers that\
    \ are divisible by 11 or 13, and only the first fizz buzz number.\n        if\
    \ (remainder == 11 || remainder == 13) {\n            count++;\n        }\n  \
    \      if (n % 11 == 0) {\n            count++;\n        }\n        if (n % 13\
    \ == 0) {\n            count++;\n        }\n        return count;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
    \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
    \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n  \
    \  assert(fizzBuzz((4000)) == (192));\n    assert(fizzBuzz((10000)) == (639));\n\
    \    assert(fizzBuzz((100000)) == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi1xop5td.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        if (n % 11 == 0 && n % 13 == 0) {\n            return\
    \ 2;\n        } else if (n % 11 == 0) {\n            return 1;\n        } else\
    \ if (n % 13 == 0) {\n            return 0;\n        } else {\n            int\
    \ count = 0;\n            for (int i = 1; i <= n; i++) {\n                if (i\
    \ % 11 == 0 && i % 13 == 0) {\n                    count++;\n                }\
    \ else if (i % 11 == 0) {\n                    count++;\n                } else\
    \ if (i % 13 == 0) {\n                    count++;\n                } else {\n\
    \                    continue;\n                }\n            }\n           \
    \ return count;\n        }\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp54bizib_.java:41: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        Set<Integer> s = new HashSet<>();\n\
    \        for(int i=n;i==0;i--)\n            s.add(i);\n        int count = 0;\n\
    \        for(Integer number : s){\n            if(number % 11 == 0)\n        \
    \        count++;\n            if(number % 13 == 0)\n                count++;\n\
    \        }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50)) == (0));\n    assert(fizzBuzz((78)) == (2));\n\
    \    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100)) == (3));\n   \
    \ assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) == (192));\n  \
    \  assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000)) == (8026));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp79ica2yx.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static int fizzBuzz(int n) {\n        int count = 0;\n        \n \
    \       // Iterate over all numbers from 1 to n\n        for (int i = 1; i <=\
    \ n; i++) {\n            // Check if the number is divisible by 11 or 13\n   \
    \         if (i % 11 == 0 || i % 13 == 0)\n                // Increment the counter\n\
    \                count++;\n        }\n        return count;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50)) == (0));\n\
    \    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n    assert(fizzBuzz((100))\
    \ == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000)) ==\
    \ (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
    \ == (8026));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8vy532cp.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError

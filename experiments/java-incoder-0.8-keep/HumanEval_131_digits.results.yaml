language: java
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n <= 0){\n            return\
    \ 0;\n        }\n        int product = 1;\n        for(int i = 1; i < n; i++){\n\
    \            int remainder = n % 10;\n            if(remainder % 2 == 1){\n  \
    \              product *= remainder;\n            }\n            n = n / 10;\n\
    \        }\n        if(n != 0){\n            product *= n;\n        }\n      \
    \  return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv0ssh58q.java:39)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = n;\n        while\
    \ (n != 0) {\n            int mod = n % 10;\n            n = n / 10;\n       \
    \     if (mod % 2 == 1) {\n                product *= mod;\n            }\n  \
    \      }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp217c2olr.java:27)\n"
  stdout: ''
  timestamp: 1660011578
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return Integer.parseInt(String.valueOf(n).replace(\"\
    0\", \"\").replace(\"1\", \"\"));\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkntwu3pu.java:20)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        if (n % 2 == 0) {\n            return 0;\n        }\n\
    \        int odd = 1;\n        while (n > 0) {\n            n = n / 10;\n    \
    \        odd *= n % 10;\n        }\n        return odd;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpetar7l49.java:30)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n > 0) {\n            int d\
    \ = 0, r = 1;\n            while (n > 0) {\n                d = n % 10;\n    \
    \            n = n / 10;\n                r *= d;\n            }\n           \
    \ return r;\n        }\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprthjgh16.java:29)\n"
  stdout: ''
  timestamp: 1660011578
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0)\n            return\
    \ 0;\n\n        List<Integer> digits = new ArrayList<Integer>();\n        while\
    \ (n > 1) {\n            digits.add(n % 10);\n            n /= 10;\n        }\n\
    \n        if (n == 0 && digits.size() >= 2)\n            return digits.get(1);\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppzgl_74h.java:30)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int result = 0;\n        while (n\
    \ > 0){\n            result += n % 10;\n            n = n / 10;\n        }\n \
    \       return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjz1u6rup.java:25)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0) return 0;\n        return\
    \ n % 2 == 0 ? n * digits(n/2) : digits(n/2);\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp86h3wc47.java:20)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n == 0) {\n            return\
    \ 1;\n        }\n        if(n/10 == 0)\n            return 0;\n        return\
    \ (n%10) * digits(n/10);\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo82l1fiq.java:24)\n"
  stdout: ''
  timestamp: 1660011578
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        String[] digits = String.valueOf(n).replaceFirst(\"\
    0*(\\\\d+)\", \"$1\").replaceAll(\"\\\\B\", \"\").split(\"\");\n        List<Integer>\
    \ list = new ArrayList<Integer>();\n        for(String d : digits) {\n       \
    \     list.add(Integer.parseInt(d));\n        }\n        Collections.sort(list);\n\
    \        \n        int result = 0;\n        for(Integer num : list) {\n      \
    \      result *= num;\n        }\n        \n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpovg_jjsm.java:31)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n<0)\n            return 0;\
    \ // 0 is even\n        int d1=0;\n        int d2=0;\n        int d3=0;\n    \
    \    while (n>0) {\n            d1=(n/10);\n            d2=(n/10)%10;\n      \
    \      d3=(n/10)%10;\n            if((d1>=2 && d1>=3) || (d1>=4 && d1>=5))\n \
    \               return 0;\n            n=n%10;\n        }\n        if (d3>2)\n\
    \            return 0;\n        return (d1*1*2)+(d2*1*3)+(d3*1);\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0 || n == 1)\n        \
    \    return 1;\n        int product = 1;\n        int d = n / 100;\n        for\
    \ (int i = 0; i < d; i++) {\n            product *= (n % 100);\n            n\
    \ /= 100;\n        }\n        return product * (n % 2);\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpccj_olm7.java:27)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        final int[] digits = new int[10];\n\
    \        int x = 0;\n        while (n > 0) {\n            digits[x++] = n % 10;\n\
    \            n = n / 10;\n        }\n        int product = 1;\n        for (int\
    \ d : digits) {\n            product *= d;\n        }\n        if (product % 2\
    \ == 0)\n            return 0;\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmcioy2q1.java:31)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        List<Integer> digits = new ArrayList<Integer>();\n\
    \        while (n/10 > 0) {\n            digits.add(n / 10);\n            n =\
    \ n % 10;\n        }\n        if (n%2==1) {\n            return 0;\n        }\n\
    \        int result = 1;\n        for (int i = 0; i < digits.size(); i++) {\n\
    \            result = result * digits.get(i) + digits.get(i);\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmlu4qx_l.java:31)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 1) {\n            return\
    \ 1;\n        }\n        List<Integer> digits = IntStream.rangeClosed(1, n).toList();\n\
    \        IntStream digitStream = digits.stream();\n        digitStream.filter(i\
    \ -> i % 2 == 1).forEach(i -> digitStream = digitStream.remove(i));\n        return\
    \ digitStream.reduce(1, (a, b) -> a * b) / digits.size();\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8yt6397b.java:19: error: cannot find symbol\n        List<Integer>\
    \ digits = IntStream.rangeClosed(1, n).toList();\n                           \
    \                               ^\n  symbol:   method toList()\n  location: interface\
    \ IntStream\n/tmp/tmp8yt6397b.java:20: error: incompatible types: Stream<Integer>\
    \ cannot be converted to IntStream\n        IntStream digitStream = digits.stream();\n\
    \                                             ^\n/tmp/tmp8yt6397b.java:21: error:\
    \ cannot find symbol\n        digitStream.filter(i -> i % 2 == 1).forEach(i ->\
    \ digitStream = digitStream.remove(i));\n                                    \
    \                                              ^\n  symbol:   method remove(int)\n\
    \  location: variable digitStream of type IntStream\n3 errors\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        \n        // Find all the odd digits\
    \ and multiply them together\n        int product = 0;\n        for(int i=1; i<=Math.sqrt(n);\
    \ i++) {\n            // If the i-th number has a digit, multiply it to product\n\
    \            if((n%10) % 2 == 1) \n                product += (n/10) * (i-1);\n\
    \            n = n / 10;\n        }\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqhi7dji3.java:28)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while\
    \ (n > 0)\n            product *= n % 10;\n        return product;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011584
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0) return 0;\n        return\
    \ n < 0 ? 0 : digits(n / 10) * (n % 10);\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptupdh6w2.java:20)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n <= 0) return 0;\n        int\
    \ result = 0;\n        int tens = 1;\n        for(int i = n; i > 0; i *= 10, tens\
    \ *= 10)\n            result += (i % 10) % 10;\n        for(int i = 0; i < n;\
    \ i++, result *= 10)\n            result += i % 10 - (int)Math.pow(10, n+1-i);\n\
    \        return result * tens;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwrpv2g0b.java:26)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0) {\n            throw\
    \ new IllegalArgumentException(\"negative numbers cannot be handled\");\n    \
    \    }\n        int product = 1;\n        while (n!=0) {\n            if (n %\
    \ 2 == 1) {\n                product *= 2;\n            }\n            n = n/2;\n\
    \        }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt2eey5p_.java:29)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n < 10)\n            return n;\n\
    \n        int res = 0;\n\n        while(n > 0) {\n            res *= (n%10);\n\
    \            n /= 10;\n        }\n\n        return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4fba60lu.java:30)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return n == 0 ? 0 : n % 2 == 0 ?\
    \ n * digits(n / 2) : digits(n / 2);\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeh0x6v8t.java:19)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        String s = String.valueOf(n);\n\
    \        long digits = Long.parseLong(s);\n        int product = 1;\n        while\
    \ (digits > 0) {\n            int digit = (int) Math.floor(digits / 10);\n   \
    \         digits %= 10;\n            product *= digit;\n        }\n        return\
    \ (int) product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011584
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n <= 0) return 0;\n        int\
    \ s = 0, p = 0, c = 1;\n        while (n != 0) {\n            s += n % 10;\n \
    \           n /= 10;\n            p *= c++;\n        }\n        return s;\n}\n\
    \    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp75n8dee3.java:27)\n"
  stdout: ''
  timestamp: 1660011580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // Only odd digits matter\n    \
    \    if(n % 2 == 0) {\n            // Get the remainder\n            int remainder;\n\
    \            // Multiply each digit by the number\n            int product = n;\n\
    \            while(product > 1) {\n                remainder = product % 10;\n\
    \                product = product / 10;\n                // If remainder is even\
    \ and odd, multiply by 2\n                // Otherwise, multiply by 3\n      \
    \          if((remainder % 2 == 0) && (remainder % 2 != 1)) {\n              \
    \      product *= 2;\n                } else {\n                    product *=\
    \ 3;\n                }\n            }\n            return product;\n        }\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpin8rvj2e.java:38)\n"
  stdout: ''
  timestamp: 1660011580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        int odd\
    \ = 1;\n        int x = n;\n        while(x!=0){\n            if(x % 2 == 1){\n\
    \                product *= odd;\n                odd = 1;\n            }\n  \
    \          else {\n                odd++;\n            }\n            x--;\n \
    \       }\n        if(product == 1){\n            return 0;\n        }\n     \
    \   return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxc80f__i.java:35)\n"
  stdout: ''
  timestamp: 1660011580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int[] arr = new int[10]; // Preallocate\
    \ array\n        for (int i = 1; i <= 9; i++) {\n            arr[i - 1] = n %\
    \ 10; // Store n's digit\n            n = n / 10; // Divide n by 10\n        }\n\
    \        // Check whether all digits are even\n        if (arr[0] != 0) return\
    \ 0;\n        int ans = 0;\n        for (int i = 0; i < 10; i++) {\n         \
    \   ans *= 10 + arr[i]; // Store ans * 10 + arr[i]\n        }\n        return\
    \ ans;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp946eszt4.java:30)\n"
  stdout: ''
  timestamp: 1660011580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        String[] digits = {\"1\",\"2\",\"\
    3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"};\n        int product = 1;\n \
    \       \n        for(int i=0; i<digits.length; i++){\n            if((n % Integer.parseInt(digits[i])\
    \ ) == 0){\n                product *= -1;\n            }\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08x0eimv.java:27)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        int i\
    \ = 2;\n        while (i < n) {\n            if (n % i == 0) {\n             \
    \   product *= i;\n            }\n            i += 2;\n        }\n        if (product\
    \ == 0) {\n            product = 1;\n        }\n        return product;\n}\n \
    \   public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9dxh5m5q.java:30)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int d = 0;\n        while (n>0)\
    \ {\n            d *= n % 10;\n            n /= 10;\n        }\n        return\
    \ d;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4nqthusd.java:24)\n"
  stdout: ''
  timestamp: 1660011580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        Integer result = n;\n        long\
    \ product = 1;\n        while (result.intValue() > 0) {\n            product *=\
    \ result.intValue();\n            result /= 10;\n        }\n        if (product\
    \ % 2 != 0) {\n            return 0;\n        }\n        return (int) (product);\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblbwlatk.java:28)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0) {\n            return\
    \ 0;\n        }\n        BigInteger d = new BigInteger(\"10\");\n        BigInteger\
    \ d3 = d.multiply(d.add(new BigInteger(String.valueOf(n))));\n        BigInteger\
    \ d1 = new BigInteger(String.valueOf(n));\n        BigInteger d2 = d1.divide(d3);\n\
    \        return ((d2.multiply(d3)).mod(d)).intValue();\n}\n    public static void\
    \ main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo08ytugq.java:26)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (n%2==0) ? 0 : digits(n/2);\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmea_rrs.java:19)\n"
  stdout: ''
  timestamp: 1660011580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (n == 0) ? 0 : (n%2 == 0\
    \ ? n*digits(n/2) : 0);\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy848mfxq.java:19)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int sum = 0;\n        for(int i\
    \ = 1; i <= n; i++ ){\n            int d = n % 10;\n            if( d % 2 == 0\
    \ ){\n                sum += d * 2;\n                n /= 10;\n            }\n\
    \        }\n        return sum;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps3zcjrdc.java:27)\n"
  stdout: ''
  timestamp: 1660011580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        if (n <= 9) {\n            return n * digits(n / 10);\n\
    \        }\n        return digits(n / 10) * 10 + (n % 10);\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalzi96pf.java:25)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n==0) return 0;\n        int\
    \ result=1;\n        while(n > 0) {\n            if(n%2 == 1) return 0;\n    \
    \        result*=10;\n            n/=10;\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4b0gz7d9.java:26)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return n < 10 ? n : digits(n/10)*10\
    \ + n % 10;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8kppq07u.java:20)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while\
    \ (n>0) {\n            int digit = n % 10;\n            product *= digit;\n  \
    \          n /= 10;\n        }\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp62fo10gm.java:26)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0)\n            return\
    \ 0;\n        if (n < 0)\n            return -1;\n        int val = 1;\n     \
    \   while ( n > 0) {\n            val *= n % 10;\n            n /= 10;\n     \
    \   }\n        return val;\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqp555742.java:29)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (n * 03040506090809L) % 1023;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpttnj8l29.java:16: error: ')' expected\n        return (n * 03040506090809L)\
    \ % 1023;\n                             ^\n1 error\n"
  stdout: ''
  timestamp: 1660011580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n==0)\n            return 0;\n\
    \        List<Integer> digits = new ArrayList<>();\n        for(int i=1; i<=n;\
    \ i++)\n        {\n            int d = i%10;\n            if(d%2==1)\n       \
    \     {\n                digits.add(d);\n            }\n        }\n        int\
    \ product = digits.get(0)*digits.get(1);\n        for(int j=2; j<digits.size();\
    \ j++)\n        {\n            product*=digits.get(j);\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9huyhpk7.java:35)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        \n        return (n>0)?n%2*digits(n/2):0;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9wj2yi1x.java:20)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while\
    \ (n > 0) {\n            if (n % 2 == 1) {\n                product = product\
    \ * n;\n            }\n            n = n / 2;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjtqjzfn9.java:27)\n"
  stdout: ''
  timestamp: 1660011582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 1) {\n            return\
    \ 1;\n        } else {\n            int sum = 0;\n            while (n > 0) {\n\
    \                sum = (n % 10) * sum;\n                n /= 10;\n           \
    \ }\n            return sum;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdff1fdi.java:28)\n"
  stdout: ''
  timestamp: 1660011582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        StringBuilder result = new StringBuilder();\n\
    \        int result = 1;\n        while (n > 0) {\n            if (n % 2 == 1)\
    \ {\n                result.append(\"1\");\n            }\n            else {\n\
    \                result.append(\"0\");\n            }\n            n /= 10;\n\
    \        }\n        return result.toString().length() <= 1 ? result.toString()\
    \ : Integer.parseInt(result.toString());\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt_ed0ru5.java:17: error: variable result is already defined in\
    \ method digits(int)\n        int result = 1;\n            ^\n/tmp/tmpt_ed0ru5.java:20:\
    \ error: int cannot be dereferenced\n                result.append(\"1\");\n \
    \                     ^\n/tmp/tmpt_ed0ru5.java:23: error: int cannot be dereferenced\n\
    \                result.append(\"0\");\n                      ^\n/tmp/tmpt_ed0ru5.java:27:\
    \ error: int cannot be dereferenced\n        return result.toString().length()\
    \ <= 1 ? result.toString() : Integer.parseInt(result.toString());\n          \
    \           ^\n/tmp/tmpt_ed0ru5.java:27: error: int cannot be dereferenced\n \
    \       return result.toString().length() <= 1 ? result.toString() : Integer.parseInt(result.toString());\n\
    \                                                       ^\n/tmp/tmpt_ed0ru5.java:27:\
    \ error: int cannot be dereferenced\n        return result.toString().length()\
    \ <= 1 ? result.toString() : Integer.parseInt(result.toString());\n          \
    \                                                                            \
    \      ^\n6 errors\n"
  stdout: ''
  timestamp: 1660011582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int digits = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            if (n % 10 == 1) {\n                digits++;\n\
    \            }\n            n = n / 10;\n        }\n        return digits;\n}\n\
    \    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdnmv514v.java:26)\n"
  stdout: ''
  timestamp: 1660011582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 10)\n            return\
    \ n;\n        int sum = 0;\n        for (int i = 9; i >= 0; i--) {\n         \
    \   int val = n / i;\n            sum += val * i;\n            n -= val;\n   \
    \     }\n        if (n % 2 == 1)\n            sum += 1;\n        return sum;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.digits(tmpb6qs7n2n.java:20)\n\tat Problem.main(tmpb6qs7n2n.java:30)\n"
  stdout: ''
  timestamp: 1660011582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        List<Integer> numbers = new ArrayList<>();\n\
    \        while(n > 0) {\n            numbers.add(n % 10);\n            n /= 10;\n\
    \        }\n        int product = 1;\n        for(int number : numbers) {\n  \
    \          if(number % 2 != 0) {\n                product *= number;\n       \
    \     }\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21w6nrxn.java:36)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n==0) return 0;\n        int\
    \ ans = 1;\n        while (n > 0) {\n            ans *= n % 10;\n            n\
    \ /= 10;\n        }\n        return ans;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqy3ovpl.java:26)\n"
  stdout: ''
  timestamp: 1660011582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while(n\
    \ > 0) {\n            int digit = n % 10;\n            if(digit % 2 != 0) {\n\
    \                product *= digit;\n            }\n            n /= 10;\n    \
    \    }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4n5g_k39.java:33)\n"
  stdout: ''
  timestamp: 1660011582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n<10) return 1;\n        if\
    \ (n<10*10*10*10) return 0;\n        if (n<10*10*10*10*10*10) return digits(n/10)\
    \ * digits(n/10*10) * digits(n/10*10*10) * digits(n/10*10*10*10);\n        if\
    \ (n<10*10*10*10*10*10*10*10*10) return digits(n/10*10*10*10*10*10*10*10*10*10)\
    \ * digits(n/10*10*10*10*10*10*10*10*10*10) * digits(n/10*10*10*10*10*10*10*10*10*10*10)\
    \ * digits(n/10*10*10*10*10*10*10*10*10*10*10*10*10) * digits(n/10*10*10*10*10*10*10*10*10*10*10*10*10*10)\
    \ * digits(n/10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*10*\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpa4trtmqb.java:20: error: illegal start of expression

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 0;\n        int divisor\
    \ = 2;\n        while (divisor <= n / 10) {\n            product *= n % 10;\n\
    \            divisor *= 10;\n            n = (n / 10) % 10;\n        }\n     \
    \   if (n == 0)\n            return 0;\n        return product;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuxtknfe2.java:28)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while\
    \ (n > 1) {\n            int rem = n % 10;\n            product = product * rem\
    \ + product * (n - rem);\n            n = n / 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0sz2cxt4.java:26)\n"
  stdout: ''
  timestamp: 1660011582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // Write your code here.\n     \
    \   int odd = 1;\n        int even = 1;\n        while (n>0) {\n            int\
    \ digit = n % 10;\n            if (digit % 2 == 0) {\n                even *=\
    \ digit;\n            } else {\n                odd *= digit;\n            }\n\
    \            n = (n - digit)/10;\n        }\n        return even > odd? even:odd;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnyze7z_.java:37)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 0;\n        while\
    \ (n!=0) {\n            int digit = n % 10;\n            product += digit;\n \
    \           n /= 10;\n        }\n        if (product % 2 != 0) {\n           \
    \ return 0;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0wcuj2vs.java:28)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        long product = 1;\n        while\
    \ (n>0) {\n            product *= n%10;\n            n /= 10;\n        }\n   \
    \     return (int) product;\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwy9x24a9.java:25)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 10) \n            return\
    \ 1;\n        int result = 0, lastDigit = 1;\n        for(int i = 2; i <= n; i++)\
    \ {\n            int digit = n % 10;\n            lastDigit = lastDigit * digit;\n\
    \            n = n / 10;\n            result = result + lastDigit;\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwjnfbh24.java:28)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int sum = 0;\n        while (n >\
    \ 0) {\n            sum = (sum + (n % 10)) % 10;\n            n = n / 10;\n  \
    \      }\n        if (sum % 2 == 0) return 0;\n        return sum;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoli5p4z1.java:26)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 0;\n        int counter\
    \ = 0;\n        int digit = 0;\n        while(n != 0) {\n            digit = n\
    \ % 10;\n            product += digit;\n            n /= 10;\n            counter\
    \ ++;\n        }\n        if(counter == 1) {\n            return product;\n  \
    \      }\n        if(counter == 2) {\n            return 0;\n        }\n     \
    \   return digits(product);\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw996qtel.java:35)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0) return 0;\n        return\
    \ Integer.parseInt(String.valueOf(n))\n                .stream()\n           \
    \     .filter(x -> x % 2 != 0)\n                .map(x -> x * 2)\n           \
    \     .sum();\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr7q3benm.java:18: error: int cannot be dereferenced\n         \
    \       .stream()\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        String str = Integer.toString(n);\n\
    \        return Integer.parseInt(str.substring(0, Math.min(str.length(), 9)))\
    \ * 2;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2oqo7trr.java:20)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n <= 0) return 0;\n        int\
    \ result = 1;\n        while(n > 0){\n            int digit = n % 10;\n      \
    \      n = n/10;\n            if(digit%2 == 1) {\n                result = result*digit;\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjm6uo5m9.java:34)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n <= 0) return 0;\n        \n\
    \        int digits = 0;\n        while (n > 10) {\n            digits = (int)\
    \ ((n % 10) * Math.pow(10, digits));\n            n /= 10;\n        }\n      \
    \  return (int) ((n % 1) * Math.pow(10, digits));\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpak63te8_.java:26)\n"
  stdout: ''
  timestamp: 1660011584
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n > 0) {\n            String\
    \ strn = Integer.toString(n);\n            ArrayList<Integer> digitsList = new\
    \ ArrayList<Integer>();\n            int length = strn.length();\n           \
    \ char c;\n            for (int i = 0; i < length; i++) {\n                c =\
    \ strn.charAt(i);\n                if (c >= '0' && c <= '9') {\n             \
    \       digitsList.add(c - '0');\n                }\n            }\n         \
    \   int result = 1;\n            int length = digitsList.length;\n           \
    \ for (int i = 0; i < length; i++) {\n                if (digitsList.get(i) %\
    \ 2 != 0) {\n                    result *= Math.pow(10, length);\n           \
    \     }\n            }\n            return result;\n        }\n        return\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7o3d8acm.java:28: error: variable length is already defined in\
    \ method digits(int)\n            int length = digitsList.length;\n          \
    \      ^\n/tmp/tmp7o3d8acm.java:28: error: cannot find symbol\n            int\
    \ length = digitsList.length;\n                                   ^\n  symbol:\
    \   variable length\n  location: variable digitsList of type ArrayList<Integer>\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011584
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n<1)\n            return 0;\n\
    \        int product=1;\n        for(int i=0;i<=n;i++)\n            if((n%i==0)&&(n%i!=1))\n\
    \                product*=(i+1);\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.digits(tmpog431ton.java:20)\n\tat Problem.main(tmpog431ton.java:25)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        Set<Integer> digits = new HashSet<>();\n\
    \        while (n) {\n            digits.add(n % 10);\n            n /= 10;\n\
    \        }\n        return digits.isEmpty() ? 0 :\n            digits.stream().map(Integer::intValue).filter((i)\
    \ -> i%2 != 0)\n                .map(i -> i * 2).reduce(1, Math::multiplyExact);\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfpk3xoh_.java:17: error: incompatible types: int cannot be converted\
    \ to boolean\n        while (n) {\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n <= 0)\n            return\
    \ 0;\n\n        if (n % 2 == 0)\n            return 0;\n\n        if (n == 1)\n\
    \            return 1;\n\n        int num = 0;\n        while (n!=0)\n       \
    \ {\n            int temp = n % 10;\n            num = num * 10 + temp;\n    \
    \        n = n / 10;\n        }\n\n        return num;\n}\n    public static void\
    \ main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1u5etd0.java:37)\n"
  stdout: ''
  timestamp: 1660011584
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        String[] digits = new String[n];\n\
    \        int sum = 0;\n        int i = 0;\n        int count = 1;\n        while\
    \ (n > 0) {\n            if (n % 10 != 0) {\n                digits[i] = String.valueOf((n\
    \ % 10));\n                sum += Integer.valueOf(digits[i]);\n              \
    \  count *= count++;\n            } else {\n                digits[i] = \"0\"\
    ;\n                sum += Integer.valueOf(digits[i]);\n            }\n       \
    \     i++;\n            n /= 10;\n        }\n        if (sum % 2 == 0) {\n   \
    \         return 0;\n        }\n        return sum * count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7e5q9l4h.java:39)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n <= 0) return 0;\n        if\
    \ (n == 1) return 1;\n        int result = 0;\n        while (n > 10) {\n    \
    \        int rem = n % 10;\n            result = (result * 10) + rem;\n      \
    \      n /= 10;\n        }\n        if (n % 2 == 1) return 0;\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppzxtqgwc.java:28)\n"
  stdout: ''
  timestamp: 1660011584
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0)\n            return 0;\n\
    \        int product = 0;\n        for (int i = 0; i < n; ++i) {\n           \
    \ if (n%2 == 1)\n                product += 1;\n            n /= 2;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpschpyucg.java:27)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (n%10*(n/10))%10;\n}\n  \
    \  public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpduygqjx9.java:19)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        \n        // Your code here\n  \
    \      if (n < 10)\n            return 0;\n        else if (n % 2 == 0)\n    \
    \        return 0;\n        else\n            return n *(digits(n/2)*3 + 1);\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp56qq1u5u.java:26)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int rem = n;\n        int prod =\
    \ 1;\n        while (rem > 0) {\n            prod *= (rem % 10);\n           \
    \ rem /= 10;\n        }\n        return prod;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3520g99_.java:26)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (n * 9) % 10;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnvwo77on.java:20)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int[] digits = IntStream.rangeClosed(1,\
    \ n).mapToObj(i -> (int) Math.pow(10, i)).filter(i -> i % 2 == 1).mapToObj(i ->\
    \ (int) Math.pow(10, i)).collect(Collectors.toList());\n        return digits.stream().reduce(1,\
    \ (x, y) -> x * y);\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpilzpkgoj.java:16: error: cannot find symbol\n        int[] digits\
    \ = IntStream.rangeClosed(1, n).mapToObj(i -> (int) Math.pow(10, i)).filter(i\
    \ -> i % 2 == 1).mapToObj(i -> (int) Math.pow(10, i)).collect(Collectors.toList());\n\
    \                                                                            \
    \                                   ^\n  symbol:   method mapToObj((i)->(int)[...]0,\
    \ i))\n  location: interface Stream<Integer>\n/tmp/tmpilzpkgoj.java:17: error:\
    \ cannot find symbol\n        return digits.stream().reduce(1, (x, y) -> x * y);\n\
    \                     ^\n  symbol:   method stream()\n  location: variable digits\
    \ of type int[]\n2 errors\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while\
    \ (n > 10) {\n            product *= n % 10;\n            n = n / 10;\n      \
    \  }\n        if (n % 2 != 0) {\n            product = 0;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiwcb0fxb.java:27)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        String str = n.toString();\n   \
    \     return Collections.max(str.chars().filter(e -> (e%2) == 1).mapToInt(x ->\
    \ {\n            try {\n                return Integer.parseInt(String.valueOf(x));\n\
    \            } catch (NumberFormatException ex) {\n                return 0;\n\
    \            }\n        }));\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpooq9tyh_.java:16: error: int cannot be dereferenced\n        String\
    \ str = n.toString();\n                      ^\n/tmp/tmpooq9tyh_.java:17: error:\
    \ cannot find symbol\n        return Collections.max(str.chars().filter(e -> (e%2)\
    \ == 1).mapToInt(x -> {\n                                                    \
    \              ^\n  symbol:   method mapToInt((x)->{ try[...]; } })\n  location:\
    \ interface IntStream\n2 errors\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n <= 0) return 0;\n        int\
    \ result = 0;\n        while (n > 0) {\n            if (n % 2 == 1) result +=\
    \ n % 10;\n            n /= 10;\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptawhbovm.java:28)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int[] digits = new int[n];\n   \
    \     int i = 0;\n        while (n > 0) {\n            digits[i] = n % 10;\n \
    \           n /= 10;\n            i++;\n        }\n        int sum = 0;\n    \
    \    for (int j : digits) {\n            if (j & 1) {\n                sum *=\
    \ 10;\n                sum += j;\n            }\n        }\n        return sum;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2xb2wb3x.java:25: error: incompatible types: int cannot be converted\
    \ to boolean\n            if (j & 1) {\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (n!=0){\n            if (n%2==0){\n                sb.append(n);\n\
    \            }\n            n/=2;\n        }\n        int n2 = Integer.valueOf(sb.toString());\n\
    \        return n2;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm90a7qti.java:27)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        int[] digits = new int[10];\n        int index = 0;\n\
    \        while (n != 0) {\n            int remainder = n % 10;\n            digits[index++]\
    \ = remainder;\n            n /= 10;\n        }\n        int result = 1;\n   \
    \     for (int i = 0; i < digits.length; i++) {\n            if (i % 2 == 0) {\n\
    \                result *= digits[i];\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf4mvhd5y.java:35)\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0)\n            return\
    \ 0;\n        String[] digits = n.toString().split(\"\");\n        int prod =\
    \ 1;\n        for (int i = 0; i < digits.length; ++i) {\n            if (digits[i]\
    \ % 2 != 0)\n                prod *= digits[i];\n        }\n        return prod;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1grczrwm.java:18: error: int cannot be dereferenced\n        String[]\
    \ digits = n.toString().split(\"\");\n                           ^\n/tmp/tmp1grczrwm.java:21:\
    \ error: bad operand types for binary operator '%'\n            if (digits[i]\
    \ % 2 != 0)\n                          ^\n  first type:  String\n  second type:\
    \ int\n/tmp/tmp1grczrwm.java:22: error: bad operand types for binary operator\
    \ '*'\n                prod *= digits[i];\n                     ^\n  first type:\
    \  int\n  second type: String\n3 errors\n"
  stdout: ''
  timestamp: 1660011585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 10)\n            return\
    \ 1;\n        // TODO: Optimization: check if a number has two consecutive odd\
    \ digits\n        // (hint: use division and modulo operators)\n        if (n\
    \ % 2 == 0)\n            return 0;\n        return n * digits(n / 10);\n}\n  \
    \  public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ej5i376.java:25)\n"
  stdout: ''
  timestamp: 1660011586
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0) {\n            throw\
    \ new IllegalArgumentException(\"n must be positive\");\n        }\n        int\
    \ prod = 0;\n        while (n > 0) {\n            if (n % 2 == 0) {\n        \
    \        prod *= n;\n            }\n            n /= 2;\n        }\n        return\
    \ prod;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7o2sr18z.java:29)\n"
  stdout: ''
  timestamp: 1660011586
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int sum = 0;\n        while (n >\
    \ 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        if\
    \ (sum % 2 != 0) {\n            return 0;\n        } else {\n            return\
    \ sum;\n        }\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk8z2kti.java:28)\n"
  stdout: ''
  timestamp: 1660011586
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        String str = Integer.toString(n);\n\
    \        StringBuilder sb = new StringBuilder(str);\n        for(int i=0;i<str.length();i++){\n\
    \            if(str.charAt(i)%2!=0){\n                sb.insert(i, \" \");\n \
    \           }\n        }\n        return sb.toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2nqe3hmd.java:23: error: incompatible types: String cannot be converted\
    \ to int\n        return sb.toString();\n                          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011586
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int x = 1;\n        while (x < (int)(Math.pow(n,\
    \ 0.5))) { //Math.pow(x, 0.5) is the same thing as x/x\n            x *= x;\n\
    \        }\n        if (n % 2 == 0) {\n            return x;\n        }\n    \
    \    return 0;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return n.toString().chars().filter(ch\
    \ -> ch % 2 == 1).reduce(1, (a, b) -> a * b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx9z286av.java:16: error: int cannot be dereferenced\n        return\
    \ n.toString().chars().filter(ch -> ch % 2 == 1).reduce(1, (a, b) -> a * b);\n\
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011586
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return n / 10 + (n & 10) * digits(n\
    \ / 10);\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.java:16)\n\tat Problem.digits(tmp86cbs6ex.java:16)\n\
    \tat Problem.digits(tmp86cbs6ex.j"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0) {\n            return\
    \ 0;\n        }\n        if (n <= 0) {\n            return 1;\n        }\n   \
    \     return (int) Math.ceil(Math.log10(n) / Math.log10(2));\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0srho7x3.java:25)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n == 0)\n            return 0;\n\
    \n        int digits = 1;\n        while (n > 0) {\n            digits *= n %\
    \ 10;\n            n /= 10;\n        }\n        return digits;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqdcwwy8n.java:28)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int total = 0;\n        while(n\
    \ > 0) {\n            total += (n % 10);\n            n /= 10;\n        }\n  \
    \      return total;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzb9mp7pq.java:25)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while(n\
    \ != 0) {\n            product = product * n % 10;\n            n = n / 10;\n\
    \        }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzb2s6ln8.java:25)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0) {\n            return\
    \ 0;\n        } else if (n == 0) {\n            return 1;\n        }\n       \
    \ int digit = 1;\n        for (int i = 0; i < n / 2; ++i) {\n            digit\
    \ *= 2;\n        }\n        return digit;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_deusyf3.java:28)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0)\n            return\
    \ 0;\n        if (n == 1)\n            return 1;\n        List<Integer> digits\
    \ = new ArrayList<Integer>();\n        while (n != 0) {\n            digits.add((int)\
    \ (n % 10));\n            n /= 10;\n        }\n        return digits.get(0) *\
    \ digits.get(1);\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.digits(tmpitzbru6a.java:25)\n\tat Problem.main(tmpitzbru6a.java:28)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // 1. Convert n to string\n    \
    \    String ns = Integer.toString(n);\n        // 2. Split into array by characters\n\
    \        String[] digits = ns.split(\"\");\n        // 3. Convert array into stream\
    \ of characters\n        Stream<String> stream = Arrays.stream(digits);\n    \
    \    // 4. Find odds\n        Optional<Integer> odds = stream.filter(s -> s.charAt(0)\
    \ != '0').filter(s -> s.charAt(0) % 2 != 0);\n        // 5. Return odd product\
    \ of strings\n        if (odds.isPresent()) {\n            return odds.map(Integer::valueOf).reduce(Integer::multiply).get();\n\
    \        } else {\n            return 0;\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpysh5dlop.java:23: error: incompatible types: Stream<String> cannot\
    \ be converted to Optional<Integer>\n        Optional<Integer> odds = stream.filter(s\
    \ -> s.charAt(0) != '0').filter(s -> s.charAt(0) % 2 != 0);\n                \
    \                                                              ^\n/tmp/tmpysh5dlop.java:26:\
    \ error: invalid method reference\n            return odds.map(Integer::valueOf).reduce(Integer::multiply).get();\n\
    \                                                     ^\n  cannot find symbol\n\
    \    symbol:   method multiply()\n    location: class Integer\n2 errors\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while\
    \ ( n > 0 )\n        {\n            int digit = n % 10;\n            product *=\
    \ digit;\n            n /= 10;\n        }\n        return product;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2t7e6v1j.java:27)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int result = 0;\n        while (n\
    \ != 0) {\n            result += (n % 10);\n            n /= 10;\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp05p3ks7p.java:25)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while\
    \ (n>0) {\n            int digit = n % 10;\n            product *= digit;\n  \
    \          n /= 10;\n        }\n        if (product>0) {\n            return product;\n\
    \        }\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_0zo595.java:29)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // write your code here\n      \
    \  int product = 1;\n        for (int i = 0; i < n; i++) {\n            if (n\
    \ % 10 == 1) {\n                product *= n / 10;\n            } else {\n   \
    \             product *= (n / 10) % 10;\n            }\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_h35jnh6.java:28)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n == 0) return 0;\n        if(n\
    \ == 1) return 1;\n        List<Integer> digits = IntStream.rangeClosed(2, n/10).map(i\
    \ -> n % 10).boxed().collect(Collectors.toList());\n        if(digits.stream().allMatch(i\
    \ -> i % 2 == 1)) {\n            return 0;\n        }\n        return digits.stream().reduce(1,\
    \ (x, y) -> x * y);\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppy19goib.java:25)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        for(int\
    \ i = 0; i <= n; i++){\n            product = product * i % 10;\n        }\n \
    \       return product % 10;\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4b7ue_2t.java:23)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        String str = Integer.toString(n);\n\
    \        str = str.substring(str.indexOf(\"1\") + 1, str.indexOf(\"9\"));\n  \
    \      if (str.indexOf(\"0\") == -1)\n            return Integer.parseInt(str);\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 1\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.digits(tmp5soilmb8.java:17)\n\
    \tat Problem.main(tmp5soilmb8.java:23)\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int sum = 0;\n        while (n >\
    \ 0)\n            sum += n % 10, n /= 10;\n        return sum % 2 == 0 ? sum :\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_2u0ycs.java:18: error: ';' expected\n            sum += n % 10,\
    \ n /= 10;\n                         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011586
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return n.toString().chars().filter(x\
    \ -> x % 2 == 1).reduce(1, (x, y) -> x * y);\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptyt_vlcv.java:16: error: int cannot be dereferenced\n        return\
    \ n.toString().chars().filter(x -> x % 2 == 1).reduce(1, (x, y) -> x * y);\n \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011587
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        BigInteger b = new BigInteger(String.valueOf(n));\n\
    \        if (b.mod(new BigInteger(\"2\")).equals(BigInteger.ZERO)) {\n       \
    \     return 0;\n        }\n        BigInteger p = new BigInteger(\"1\");\n  \
    \      b.divide(new BigInteger(\"10\"));\n        do {\n            b.divide(new\
    \ BigInteger(\"10\"));\n            p = p.multiply(b);\n        } while (b.compareTo(new\
    \ BigInteger(\"1\")) != 0);\n        return p.intValue();\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        List<Integer> digits = new ArrayList<>();\n\
    \        for (int i = 0; i < n; i++) digits.add(i);\n        for (int i = 0; i\
    \ < digits.size() - 1; i += 2) {\n            digits.set(i + 1, digits.get(i)\
    \ * 10);\n        }\n        IntTuple digitTuple = IntTuple.of(digits);\n    \
    \    return digitTuple.product().intValue();\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpapfahpdj.java:21: error: cannot find symbol\n        IntTuple digitTuple\
    \ = IntTuple.of(digits);\n        ^\n  symbol:   class IntTuple\n  location: class\
    \ Problem\n/tmp/tmpapfahpdj.java:21: error: cannot find symbol\n        IntTuple\
    \ digitTuple = IntTuple.of(digits);\n                              ^\n  symbol:\
    \   variable IntTuple\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011588
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int digit;\n        int product\
    \ = 1;\n        while (n > 0) {\n            digit = n % 10;\n            product\
    \ *= digit;\n            n /= 10;\n        }\n        return product;\n}\n   \
    \ public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv2ywhk19.java:27)\n"
  stdout: ''
  timestamp: 1660011588
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int ret = 0;\n        while (n >\
    \ 0) {\n            ret *= (n%10);\n            n /= 10;\n        }\n        return\
    \ ret;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsvbafv85.java:24)\n"
  stdout: ''
  timestamp: 1660011588
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int digit = 0;\n        while (n>0)\
    \ {\n            digit = n%10;\n            n = n/10;\n            if (digit%2\
    \ != 0)\n                return 0;\n        }\n        return digit;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmluhjh56.java:26)\n"
  stdout: ''
  timestamp: 1660011588
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        List<Integer> digits = getDigits(n);\n\
    \        if (digits.isEmpty()) {\n            return 0;\n        }\n        Collections.sort(digits);\n\
    \        int product = 1;\n        Integer first = digits.get(0);\n        for\
    \ (int i = 1; i < digits.size() && digits.get(i) != first; i++) {\n          \
    \  product *= digits.get(i);\n        }\n        return product;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcywl99p9.java:16: error: cannot find symbol\n        List<Integer>\
    \ digits = getDigits(n);\n                               ^\n  symbol:   method\
    \ getDigits(int)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011588
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // TODO: Write your answer in Java\n\
    \        int digit = 0;\n        while (n>0){\n            digit+=n%10;\n    \
    \        digit=digit/10;\n            n=n/10;\n        }\n        return digit;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprwn76qcn.java:26)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int oddDigits = 0;\n        for\
    \ (int i = 0; i < n; i++) {\n            int digit = n / 10;\n            int\
    \ remainder = n % 10;\n            if (remainder % 2 == 1) {\n               \
    \ oddDigits += digit;\n                n = remainder;\n            }\n       \
    \ }\n        if (n == 0) return 0;\n        return oddDigits;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3jobwjij.java:29)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (n * n) % 10;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5co6gemz.java:20)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int digit = 1;\n        while (n>0)\
    \ {\n            digit = digit*(n%10);\n            n = n/10;\n        }\n   \
    \     if (n<0) {\n            digit = digit*(-1);\n        }\n        return digit;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgdk1xglq.java:28)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int result = 1;\n        while (n\
    \ > 0) {\n            int digit = n % 10;\n            n /= 10;\n            result\
    \ *= digit;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjocatnpl.java:26)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n\n        int product = 1;\n\n        while (n > 0) {\n     \
    \       product *= n % 10;\n            n /= 10;\n        }\n\n        if (product\
    \ % 2 == 1) {\n            return product;\n        } else {\n            return\
    \ 0;\n        }\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgb5a1cvy.java:35)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n == 0)\n            return 0;\n\
    \n        int result = 0;\n        for(int i=0;i<=n/2;i++)\n            if(n%10%2\
    \ == 1)\n                result += n%10;\n\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2182unkb.java:27)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        do {\n            if (n % 10 != 0) {\n                sb.append(n % 10);\n\
    \            }\n            n /= 10;\n        } while (n != 0);\n        \n  \
    \      String str = sb.toString();\n        int result = 1;\n        for (int\
    \ i = 0; i < str.length(); i++) {\n            if (i % 2 == 1) {\n           \
    \     result *= Integer.parseInt(str.substring(i, i + 1));\n            }\n  \
    \      }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5g1a1qnf.java:34)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (int) Math.ceil(Math.log10(n)\
    \ / Math.log10(2));\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0136pxl.java:19)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int sum = 0;\n        while (n>0)\
    \ {\n            int digit = n % 10;\n            sum = sum*10 + digit;\n    \
    \        n = n/10;\n        }\n        if (sum%2 == 0) return sum;\n        else\
    \ return 0;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkewqaxep.java:26)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0)\n            return\
    \ 0;\n        List<Integer> digits = Arrays.asList(n);\n        List<Integer>\
    \ oddDigits = new ArrayList<>();\n        oddDigits.add(0);\n        for (int\
    \ d : digits) {\n            if (d % 2 != 0)\n                oddDigits.add(d);\n\
    \        }\n        return IntStream.range(oddDigits.get(1), oddDigits.get(oddDigits.size()\
    \ - 1))\n                .mapToInt(i -> i*oddDigits.get(i))\n                .sum();\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphuj5qsdy.java:26: error: cannot find symbol\n                .mapToInt(i\
    \ -> i*oddDigits.get(i))\n                ^\n  symbol:   method mapToInt((i)->i\
    \ * o[...]et(i))\n  location: interface IntStream\n1 error\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        List<Integer> result = new ArrayList<>();\n\
    \        while (n > 0) {\n            result.add(n % 10);\n            n = n /\
    \ 10;\n        }\n        IntStream.range(0, result.size()).forEach(i -> {\n \
    \           if (result.get(i) % 2 == 1) {\n                result.set(i, 0);\n\
    \            }\n        });\n        int prod = 0;\n        result.stream().mapToInt(Integer::intValue).forEach(prod\
    \ -> prod *= 2);\n        return prod;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjk5rjaol.java:27: error: variable prod is already defined in method\
    \ digits(int)\n        result.stream().mapToInt(Integer::intValue).forEach(prod\
    \ -> prod *= 2);\n                                                           \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while\
    \ (n) {\n            int digit = n % 10;\n            product *= (digit % 2 ==\
    \ 1 ? digit : 1);\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpclvplp00.java:17: error: incompatible types: int cannot be converted\
    \ to boolean\n        while (n) {\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 0;\n        int digit\
    \ = 0;\n        while (n > 0){\n            digit = (n % 10) % 2;\n          \
    \  product += digit;\n            n = n / 10;\n        }\n        if(product %\
    \ 2 == 0)\n            return product;\n        else\n            return 0;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsadirvpy.java:29)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // Return 0 if the number is 0\n\
    \        if (n == 0)\n            return 0;\n        int d = Integer.parseInt(Integer.toString(n).replaceAll(\"\
    \\\\D\", \"\")); // remove all non-digits\n        return (d & 1) == 1 ? 0 : 1;\
    \ // return 0 if the number is odd and 1 if the number is even\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0n7z6fwc.java:23)\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        BigInteger big = BigInteger.valueOf(n);\n\
    \        BigInteger product = big.pow(BigInteger.valueOf(2)).subtract(BigInteger.valueOf(BigInteger.ONE));\n\
    \        int remainder = product.mod(BigInteger.valueOf(10)).intValue();\n   \
    \     return remainder == 0 ? 0 : remainder;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfub1ftjq.java:17: error: incompatible types: BigInteger cannot\
    \ be converted to int\n        BigInteger product = big.pow(BigInteger.valueOf(2)).subtract(BigInteger.valueOf(BigInteger.ONE));\n\
    \                                                       ^\n/tmp/tmpfub1ftjq.java:17:\
    \ error: no suitable method found for valueOf(BigInteger)\n        BigInteger\
    \ product = big.pow(BigInteger.valueOf(2)).subtract(BigInteger.valueOf(BigInteger.ONE));\n\
    \                                                                            \
    \   ^\n    method BigInteger.valueOf(long) is not applicable\n      (argument\
    \ mismatch; BigInteger cannot be converted to long)\n    method BigInteger.valueOf(int[])\
    \ is not applicable\n      (argument mismatch; BigInteger cannot be converted\
    \ to int[])\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011589
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int odd = 1;\n        while (n>0)\
    \ {\n            if (n%2 != 0) odd = 0;\n            n = (n/2)*2; // Odd product\
    \ of even digits.\n        }\n        if (odd > 0) return 1;\n        else return\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int[] digits = n.toString().split(\"\
    \").map(x -> Integer.parseInt(x)).stream().mapToInt(Integer::intValue).toArray();\n\
    \        return Arrays.stream(digits).filter(x -> x % 2 != 0).reduce(0, Integer::multiply);\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph4ma6y_2.java:16: error: int cannot be dereferenced\n        int[]\
    \ digits = n.toString().split(\"\").map(x -> Integer.parseInt(x)).stream().mapToInt(Integer::intValue).toArray();\n\
    \                        ^\n/tmp/tmph4ma6y_2.java:17: error: invalid method reference\n\
    \        return Arrays.stream(digits).filter(x -> x % 2 != 0).reduce(0, Integer::multiply);\n\
    \                                                                       ^\n  cannot\
    \ find symbol\n    symbol:   method multiply(int,int)\n    location: class Integer\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011590
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 10)\n            return\
    \ 1;\n        int ret = 0;\n        while (n%2 == 0)\n            n /= 2;\n  \
    \      do {\n            ret *= 2;\n            n--;\n        } while (n>0);\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprnh2jrsv.java:28)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int prod = 1;\n        while(n >\
    \ 0){\n            prod *= n % 10;\n            n /= 10;\n        }\n        return\
    \ prod;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbwchbzp7.java:25)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int prod = 0;\n        while (n!=0){\n\
    \            prod *= (n%10);\n            n/=10;\n        }\n        return prod;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgdxc1tcu.java:24)\n"
  stdout: ''
  timestamp: 1660011590
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return n * n * (n-1);\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpftue9_v8.java:19)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int remainder = n % 10;\n      \
    \  n /= 10;\n        int result = 0;\n        if (n % 2 == 0) {\n            return\
    \ 0;\n        } else {\n            for (int i = n; i > 0; i /= 2) {\n       \
    \         result *= i % 2 == 0 ? i : 0;\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6w9f3m_v.java:29)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0) {\n            return\
    \ 0;\n        }\n\n        int product = 1;\n        while (n > 0) {\n       \
    \     int digit = n % 10;\n            product *= digit;\n            n /= 10;\n\
    \        }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp13mbhwzf.java:30)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 10)\n            return\
    \ n;\n        return n / 10 % 2 == 0 ? n*10 + digits(n / 10) : digits(n / 10)\
    \ * 10;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2aorzlql.java:22)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int sum = 0;\n        while (n >\
    \ 9) {\n            sum *= n % 10;\n            n /= 10;\n        }\n        if\
    \ (n > 0)\n            sum += n;\n        return sum;\n}\n    public static void\
    \ main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy1ubnbc8.java:30)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int sum = 0;\n        while ( n\
    \ != 0) {\n            int digit = (n % 10); // the integer value of the first\
    \ digit\n            sum += digit * Math.pow(10, (digit-1)); // sum of first digit\
    \ times 10\n            n /= 10; // move to the next digit\n        }\n      \
    \  return sum;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfrb6a41.java:25)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        int product = 0;\n        while (n > 0) {\n         \
    \   product += (n % 10) * (n % 10);\n            n /= 10;\n        }\n       \
    \ if (product % 2 == 1) {\n            return 0;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1iz9mnq.java:30)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // your code here\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpvrgrn7u8.java:17: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int digit = 0;\n        while (n\
    \ > 0) {\n            digit *= 10;\n            digit += n % 10;\n           \
    \ n /= 10;\n        }\n        if (digit == 0) return 0;\n        else return\
    \ digit;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1iist28m.java:27)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0) return 0;\n        long\
    \ result = 0;\n        while (n > 0) {\n            long tmp = n % 10;\n     \
    \       if (tmp % 2 == 1) {\n                result = result * 10 + tmp;\n   \
    \         }\n            n /= 10;\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5at2g5xj.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return result;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return Integer.parseInt(String.valueOf(n).replaceAll(\"\
    \\\\D\", \"\"));\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodbadfqp.java:20)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // base case: only odd numbers can\
    \ be multiplied\n        if (n <= 0) {\n            return 0;\n        }\n   \
    \     // recursive case: find first odd digit starting from 1\n        int result\
    \ = 1;\n        int currDigit = 0;\n        while (n > currDigit) {\n        \
    \    currDigit *= 10;\n            result += n % currDigit;\n            n /=\
    \ currDigit;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.digits(tmpam2piaeh.java:25)\n\tat Problem.main(tmpam2piaeh.java:31)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int digit = 0;\n        while (n\
    \ > 0) {\n            digit = n * 10;\n            n /= 10;\n            n %=\
    \ 10;\n        }\n        return digit;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwh8drccp.java:25)\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return IntStream.rangeClosed(1,\
    \ n).filter(n -> n % 2 == 1).reduce(1, Math::multiplyExact);\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphtwpc225.java:16: error: variable n is already defined in method\
    \ digits(int)\n        return IntStream.rangeClosed(1, n).filter(n -> n % 2 ==\
    \ 1).reduce(1, Math::multiplyExact);\n                                       \
    \           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011591
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return n < 10 ? 1 : digits(n/10)\
    \ * n % 10;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8zv1ue9.java:19)\n"
  stdout: ''
  timestamp: 1660011592
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (n%10) * digits(n/10);\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.java:16)\n\tat Problem.digits(tmph0_2r_m1.java:16)\n\
    \tat Problem.digits(tmph0_2r_m1.j"
  stdout: ''
  timestamp: 1660011592
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5zmn9o__.java:19)\n"
  stdout: ''
  timestamp: 1660011469
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0) return 0;\n        int\
    \ digit = 0;\n        while (n > 0) {\n            digit *= 10;\n            digit\
    \ += n % 10;\n            n /= 10;\n        }\n        if (digit % 2 != 0) return\
    \ 0;\n        return digit;\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpawomajfd.java:27)\n"
  stdout: ''
  timestamp: 1660011592
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0) {\n            throw\
    \ new java.lang.ArithmeticException(\"Number must be non-negative\");\n      \
    \  }\n        int digit = 0;\n        int mult = 1;\n        while (n != 0) {\n\
    \            digit = n & 1;\n            n /= 2;\n            mult = mult * digit;\n\
    \        }\n        if (mult > 0) {\n            return mult;\n        } else\
    \ {\n            return 0;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83zdtpbn.java:33)\n"
  stdout: ''
  timestamp: 1660011592
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int ret = 0;\n        for (int i\
    \ = 0; i < n; i++) {\n            ret *= 10 - (n % 10);\n            n /= 10;\n\
    \        }\n        return ret;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n9vvx_0.java:24)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return n / 2 * 2 + (n % 2 == 0 ?\
    \ 0 : 1);\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fh0mxqp.java:20)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n <= 0)\n            return\
    \ 0;\n        long temp;\n        int count = 1;\n        while ((temp = n % 10)\
    \ >= 10) {\n            temp = temp / 10;\n            count++;\n        }\n \
    \       if (temp % 2 != 0)\n            count--;\n        return (int) temp *\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpknb8io65.java:29)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // Your code here\n        double\
    \ ans=0;\n        ans=n*n/10;\n        ans=Math.round(ans);\n        int ans2=(int)\
    \ ans;\n        return ans2;\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphqnwa27j.java:24)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int oddDigits = 0;\n        int\
    \ i = 1;\n        while (n > i) {\n            oddDigits += n % 10; // even digits\
    \ add to oddDigits\n            n /= 10;\n        }\n        return oddDigits\
    \ * n;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoyzo74yb.java:25)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 10)\n            return\
    \ n;\n        return digits(n / 10) * 10 + (n % 10);\n}\n    public static void\
    \ main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbr5vt9q1.java:22)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0) throw new IllegalArgumentException();\n\
    \        if (n < 10) return n;\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) return product;\n\
    \            product *= digit;\n            n /= 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb252_pa1.java:29)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int prod = 1;\n        while (n\
    \ > 0) {\n            if (n % 2 != 0)\n                prod *= n;\n          \
    \  n /= 2;\n        }\n        return prod;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8v3pwein.java:26)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n <= 0) return 0;\n        return\
    \ Integer.valueOf(n.toString()).intValue() % 2 == 0 ? Integer.valueOf(n.toString()).intValue()*1\
    \ : digits(Integer.valueOf(n.toString()).intValue() / 2);\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp555jmyoj.java:17: error: int cannot be dereferenced\n        return\
    \ Integer.valueOf(n.toString()).intValue() % 2 == 0 ? Integer.valueOf(n.toString()).intValue()*1\
    \ : digits(Integer.valueOf(n.toString()).intValue() / 2);\n                  \
    \              ^\n/tmp/tmp555jmyoj.java:17: error: int cannot be dereferenced\n\
    \        return Integer.valueOf(n.toString()).intValue() % 2 == 0 ? Integer.valueOf(n.toString()).intValue()*1\
    \ : digits(Integer.valueOf(n.toString()).intValue() / 2);\n                  \
    \                                                                  ^\n/tmp/tmp555jmyoj.java:17:\
    \ error: int cannot be dereferenced\n        return Integer.valueOf(n.toString()).intValue()\
    \ % 2 == 0 ? Integer.valueOf(n.toString()).intValue()*1 : digits(Integer.valueOf(n.toString()).intValue()\
    \ / 2);\n                                                                    \
    \                                                                    ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n <= 0) return 0;\n        int\
    \ digit = 0;\n        while (n > 0)\n            digit = digit*10 + (n % 10);\n\
    \            n = n / 10;\n        return digit;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // TODO Auto-generated method stub\n\
    \        if (n == 0) {\n            return 0;\n        }\n        int temp = 0;\n\
    \        while (n > 1) {\n            temp += (n % 10);\n            n /= 10;\n\
    \        }\n        if (temp % 2 == 0) {\n            return temp;\n        }\
    \ else {\n            return 0;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwp5sy2hs.java:32)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (n * digits(n / 10)) % 10;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.java:16)\n\tat Problem.digits(tmp0g3ek2om.java:16)\n\
    \tat Problem.digits(tmp0g3ek2om.j"
  stdout: ''
  timestamp: 1660011594
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int odd = 0;\n        while (n>0)\
    \ {\n            int lastDigit = n % (int) Math.pow(10, 4);\n            int otherDigit\
    \ = n % (int) Math.pow(10, 3);\n            int sumOdd = lastDigit % 2;\n    \
    \        int sumOdd_otherDigit = otherDigit % 2;\n            int sum = sumOdd\
    \ + sumOdd_otherDigit;\n            n = n / 10;\n            odd = odd * 10 +\
    \ sum;\n        }\n        if (odd % 2 == 0) {\n            return odd;\n    \
    \    } else {\n            return 0;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppu87g1ts.java:33)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return n == 0 ? 0 : Stream.of(n)\n\
    \            .filter(x -> x % 2 == 1)\n            .map(x -> x / 2)\n        \
    \    .filter(x -> x % 2 == 0)\n            .mapToInt(x -> x)\n            .sum();\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwo_p1geq.java:24)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while\
    \ (n/2 > 0) {\n            product *= n%10;\n            n /= 10;\n        }\n\
    \        return product * Math.max(1,n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1z1m8v1.java:25)\n"
  stdout: ''
  timestamp: 1660011594
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (int) Math.ceil(Math.log10(n));\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa9ajli2c.java:19)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        String str = String.valueOf(n);\n\
    \        String[] array = str.split(\"(?<!^)(?!$)\");\n        int sum = 0;\n\
    \        for (String digit : array) {\n            if (!(digit.equals(\"0\")))\
    \ {\n                sum += Integer.valueOf(digit);\n            }\n        }\n\
    \        return sum;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4h9ttta6.java:28)\n"
  stdout: ''
  timestamp: 1660011593
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n<10){\n            return n;\n\
    \        }\n        int oddsum = 0;\n        int evensum = 0;\n        int cur\
    \ = 0;\n        for(int i=0;i<=n;i+=2){\n            oddsum+=i;\n        }\n \
    \       cur = n;\n        while(cur>0){\n            evensum += cur % 10;\n  \
    \          cur = cur / 10;\n        }\n        return oddsum*evensum;\n}\n   \
    \ public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr1lb8lbn.java:34)\n"
  stdout: ''
  timestamp: 1660011594
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n<0) {\n            return 0;\n\
    \        }\n        int sum = 0;\n        while (n != 0) {\n            sum +=\
    \ n % 10;\n            n /= 10;\n        }\n        if (sum == 0 && n != 0) {\n\
    \            return 0;\n        }\n        return sum;\n}\n    public static void\
    \ main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2y88vmnw.java:31)\n"
  stdout: ''
  timestamp: 1660011594
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n >= 10) {\n            int\
    \ prod = 1;\n            int digit = n / 10;\n            while (digit > 0) {\n\
    \                prod *= digit;\n                digit /= 10;\n            }\n\
    \            return prod;\n        }\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpha1wzey7.java:28)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if(n == 0) {\n            return\
    \ 0;\n        }\n\n        List<Integer> digits = new ArrayList<>(n);\n      \
    \  while(n > 0){\n            digits.add(n % 10);\n            n = n / 10;\n \
    \       }\n\n        int result = 0;\n        for(int i : digits){\n         \
    \   if(i%2 == 1){\n                result++;\n            }\n        }\n     \
    \   return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0154355v.java:35)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0)\n            throw new\
    \ RuntimeException(\"Not a valid value\");\n        int result = 1;\n        while\
    \ ((n /= 10) > 0) {\n            if ((n % 2) == 0) {\n                result *=\
    \ 10;\n            }\n            result *= n % 10;\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk65wm2s.java:28)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 0;\n        while\
    \ (n>0) {\n            int remainder = n % 10;\n            n = n / 10;\n    \
    \        if (remainder % 2 == 1)\n                product *= remainder;\n    \
    \    }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4z0nr4l_.java:26)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int result = 1;\n        while (n\
    \ > 0) {\n            int digit = n % 10;\n            if (digit % 2 != 0) {\n\
    \                result *= digit;\n            }\n            n /= 10;\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmsbruv5f.java:33)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0 || n == 1) {\n      \
    \      return 1;\n        }\n        return n * digits(n-1);\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5o5jpxwr.java:22)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int num = 0;\n        while (n >\
    \ 0) {\n            num = num * 10 + (n % 10);\n            n /= 10;\n       \
    \ }\n        if (num % 2 == 0) {\n            return 0;\n        }\n        return\
    \ num;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa5pxwmqc.java:28)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int res = 0;\n        while (n>0)\
    \ {\n            res*=n%10;\n            n/=10;\n        }\n        if (res==0)\
    \ return 0;\n        if (res%2==0) return res*2;\n        return res;\n}\n   \
    \ public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5hs_3f5q.java:26)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // Store the digits as Strings.\n\
    \        String[] digits = String.valueOf(n).split(\"\");\n        // Return 0\
    \ if all digits are even.\n        return digits.parallelStream().anyMatch(s ->\
    \ s.length() % 2 == 0);\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfhmdh26.java:19: error: cannot find symbol\n        return digits.parallelStream().anyMatch(s\
    \ -> s.length() % 2 == 0);\n                     ^\n  symbol:   method parallelStream()\n\
    \  location: variable digits of type String[]\n1 error\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int res = 0;\n        while (n >\
    \ 0) {\n            res = (res * 10 + n % 10) % 10;\n            n /= 10;\n  \
    \      }\n        return res == 0 ? 0 : res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclmfuksn.java:28)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 0) {\n            return\
    \ 0;\n        }\n        int res = 1;\n        while (n > 0) {\n            int\
    \ tmp = n % 10;\n            if (tmp % 2 == 0) {\n                res *= tmp;\n\
    \            }\n            n = n / 10;\n        }\n        return res;\n}\n \
    \   public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20t0ud7r.java:30)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int digits = 0;\n        while (n!=0){\n\
    \            if (n%2!=0) {\n                digits++;\n            }\n       \
    \     n=n/2;\n        }\n        return digits;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuhr666gu.java:26)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // Write your code here.\n     \
    \   return n;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdggym97d.java:21)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        int count = 0;\n        while (n % 10 != 0) {\n     \
    \       n /= 10;\n            count++;\n        }\n        if (n == 0) {\n   \
    \         return 0;\n        }\n        return n * digits(n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3xfq8sxq.java:30)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n<0) {\n            throw new\
    \ IllegalArgumentException(\"Value of n must be positive\");\n        }\n    \
    \    if (n==0) {\n            return 0;\n        }\n        int sum = 0;\n   \
    \     int limit = n/10;\n        while (limit > 0) {\n            sum *= 10;\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        return (n==0)\
    \ ? sum : sum;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22jszr_o.java:32)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return (n == 0) ? 1 : digits(n /\
    \ 10) * n % 10;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9r75j783.java:20)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int even = (n / 100) % 10;\n   \
    \     int odd = (n / 10) % 10;\n\n        return (even * odd);\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpci8b0_vq.java:22)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 0;\n        if (n\
    \ == 0)\n            return product;\n        if (n < 0) {\n            throw\
    \ new IllegalArgumentException();\n        }\n        while (n > 0) {\n      \
    \      product += (n % 10) * (n % 10) % 2;\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl9indxwf.java:29)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int result = 1;\n        while (n>0)\
    \ {\n            result *= n % 10;\n            n /= 10;\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqad58pyh.java:25)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        for (int\
    \ i = 0; i < n; i++){\n            product *= n % 10;\n            n = n / 10;\n\
    \        }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxee9cl_i.java:25)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        if (n\
    \ > 0) {\n            n = Math.max(n % 10, 1);\n            for (int i = 1; i\
    \ <= n / 10; i++) {\n                if (n % i == 0) {\n                    product\
    \ = product * i;\n                }\n            }\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgehij4f6.java:28)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqvumrvny.java:25)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        // write your code here\n      \
    \  if (n <= 0)\n            return 0;\n\n        int rem = n;\n        double\
    \ product = 1;\n        double result = 1;\n        for (int i = 2; i < 100; i\
    \ = (i + 2)) {\n            double temp = rem / i;\n            product *= temp;\n\
    \            rem %= i;\n        }\n        if (rem > 0) {\n            product\
    \ *= rem;\n        }\n        return (int) product;\n}\n    public static void\
    \ main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa4b_r9_k.java:34)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        return IntStream.range(0, Integer.parseInt(String.valueOf(n)).length())\n\
    \                .filter(i -> n % 2 == 1).mapToInt(i -> n % 10 * Integer.parseInt(String.valueOf(n)).get(i))\n\
    \                .reduce(1, Integer::sum);\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuzgq0zdz.java:16: error: int cannot be dereferenced\n        return\
    \ IntStream.range(0, Integer.parseInt(String.valueOf(n)).length())\n         \
    \                                                            ^\n/tmp/tmpuzgq0zdz.java:17:\
    \ error: int cannot be dereferenced\n                .filter(i -> n % 2 == 1).mapToInt(i\
    \ -> n % 10 * Integer.parseInt(String.valueOf(n)).get(i))\n                  \
    \                                                                            \
    \     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int product = 1;\n        \n   \
    \     // Get list of digits and multiply by 2 for each digit\n        List<Integer>\
    \ digits = IntStream.range(0, 9).map(i -> n % 10).collect(Collectors.toList());\n\
    \        \n        for( int digit : digits) {\n            product *= digit;\n\
    \            n /= 10;\n        }\n        \n        // Return product of odd digits\
    \ if all digits are even\n        return product % 2 == 0 ? 0 : product;\n}\n\
    \    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwq5hnnwq.java:19: error: method collect in interface IntStream\
    \ cannot be applied to given types;\n        List<Integer> digits = IntStream.range(0,\
    \ 9).map(i -> n % 10).collect(Collectors.toList());\n                        \
    \                                             ^\n  required: Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpwq5hnnwq.java:19: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        List<Integer> digits = IntStream.range(0, 9).map(i -> n % 10).collect(Collectors.toList());\n\
    \                                                                            \
    \ ^\n    (argument mismatch; no instance(s) of type variable(s) CAP#1,T exist\
    \ so that Collector<T,?,List<T>> conforms to Supplier<R>)\n  where R,T are type-variables:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int prod = 0;\n        for (int\
    \ i = 2; i <= Math.sqrt(n); i++) {\n            if ((n % i) == 0) {\n        \
    \        prod *= i;\n                n /= i;\n            }\n        }\n     \
    \   if (n > 0)\n            prod *= n;\n        return prod;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjpwnxyc2.java:28)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int sum = 0;\n        while (n >\
    \ 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return\
    \ sum % 2 ? sum : 0;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmf11j2io.java:21: error: incompatible types: int cannot be converted\
    \ to boolean\n        return sum % 2 ? sum : 0;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        if (n < 10 && n % 10 != 0)\n   \
    \         return 0;\n\n        int sum = 0;\n        while (n > 0) {\n       \
    \     sum = sum * 10 + n % 10;\n            n /= 10;\n        }\n\n        if\
    \ (sum % 2 == 0)\n            return 0;\n        return sum;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ye161pl.java:30)\n"
  stdout: ''
  timestamp: 1660011596
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static int digits(int n) {\n        int prod = 0;\n        while (n\
    \ > 0) {\n            prod = prod * 10 + (n % 10);\n            n = n / 10;\n\
    \        }\n        return prod;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeea8zb8m.java:25)\n"
  stdout: ''
  timestamp: 1660011596

language: java
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = 0.0;\n        if(a<b) if(a<c) s = (b-a)*(c-b)/2.0;\n\
    \        else if(b<c) s = (2*(b-c)-a-b)/2.0;\n        else s = (a+b+c-a)*(b-c-a)/2.0;\n\
    \        return Math.sqrt(s);\n}\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgebfqrhy.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float s = 0.0;\n                  ^\n/tmp/tmpgebfqrhy.java:19:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        if(a<b) if(a<c) s = (b-a)*(c-b)/2.0;\n                              \
    \         ^\n/tmp/tmpgebfqrhy.java:20: error: incompatible types: possible lossy\
    \ conversion from double to float\n        else if(b<c) s = (2*(b-c)-a-b)/2.0;\n\
    \                                      ^\n/tmp/tmpgebfqrhy.java:21: error: incompatible\
    \ types: possible lossy conversion from double to float\n        else s = (a+b+c-a)*(b-c-a)/2.0;\n\
    \                                  ^\n/tmp/tmpgebfqrhy.java:22: error: incompatible\
    \ types: possible lossy conversion from double to float\n        return Math.sqrt(s);\n\
    \                        ^\n5 errors\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float side = (float) Math.sqrt((a*a + b*b + c*c));\n  \
    \      if (side == 0) {\n            System.out.println(\"Can't be valid\");\n\
    \            return -1;\n        }\n        float area = Math.acos((a*a + b*b)\
    \ / (2.0f * side));\n        return Math.round(area / Math.PI * 100) / 100;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp26uhil6a.java:23: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = Math.acos((a*a + b*b) / (2.0f * side));\n\
    \                              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        if (a+b>c) {\n            area\
    \ = (a+b+c) * 0.5f;\n        }\n        else {\n            return -1;\n     \
    \   }\n        return Math.round(area * 100) / 100;\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpde5g7b16.java:30)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Check that the sum of the 3 sides is greater than (b\
    \ + c).\n        if (a + b > c) {\n            return -1;\n        }\n       \
    \ // Calculate the area of the triangle based on the area of the 3 sides. \n \
    \       // The area is 2a times the length of the hypotenuse of b. \n        float\
    \ area = (a * (b + c));\n        // If the area is a triangle then round the area\
    \ to 2 decimal points.\n        if (area > 0 && area <= (float) Math.pow(b, 2))\
    \ {\n            return (float) Math.round(area * 100) / 100;\n        }\n   \
    \     // Else the area is not a triangle so return -1.\n        return -1;\n}\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp__thi3by.java:33)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b > c) && ((a + c) > b) && ((b + c) > a)) {\n\
    \            return (a + b + c) / 2;\n        } else {\n            return -1;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4s5p3zew.java:27)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b) > c) return -1;\n        return a * b * 0.5f;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpphp0i0sv.java:22)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = (a + b + c) / 2.0f;\n        float area = s *\
    \ s;\n        return Math.sqrt(area);\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu879rnfk.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt(area);\n                    \
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a == 0 || b == 0 || c == 0) return -1;\n        if\
    \ (a + b > c) return -1;\n        if (a + c > b) return -1;\n        if (b + c\
    \ > a) return -1;\n        return (float)(a * b * c / ((a + b + c) * (a + b +\
    \ c)));\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx245hxs9.java:25)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b > c) || (a + c > b) || (b + c > a)) {\n    \
    \        return -1;\n        }\n        return (a * b * c) / (Math.sqrt(Math.pow(a\
    \ + b, 2) + Math.pow(a, 2) + Math.pow(b, 2)));\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu7dfftyt.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return (a * b * c) / (Math.sqrt(Math.pow(a + b,\
    \ 2) + Math.pow(a, 2) + Math.pow(b, 2)));\n                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        int s = a + b + c;\n        if(s > 0){\n            return\
    \ (s + ((s - a) - (s - b) - (s - c))) * 0.5;\n        } else {\n            return\
    \ -1;\n        }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmiznzhud.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return (s + ((s - a) - (s - b) - (s - c)))\
    \ * 0.5;\n                                                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        float a = Math.abs(a);\n     \
    \   float b = Math.abs(b);\n        float c = Math.abs(c);\n        float s =\
    \ (a + b + c) / 2;\n        float area1 = (a + b) * (s + c) / 2;\n        float\
    \ area2 = (a + c) * (s + b) / 2;\n        float area3 = (b + c) * (s + a) / 2;\n\
    \        area = (area1 < area2) ? area1 : (area2 < area3) ? area2 : (area3 > area)\
    \ ? area3 : -1;\n        return (area > 0) ? area : -1;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccniuvc4.java:19: error: variable a is already defined in method\
    \ triangleArea(int,int,int)\n        float a = Math.abs(a);\n              ^\n\
    /tmp/tmpccniuvc4.java:20: error: variable b is already defined in method triangleArea(int,int,int)\n\
    \        float b = Math.abs(b);\n              ^\n/tmp/tmpccniuvc4.java:21: error:\
    \ variable c is already defined in method triangleArea(int,int,int)\n        float\
    \ c = Math.abs(c);\n              ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b < c) || (b + c < a) || (a + c < b)) {\n    \
    \        return -1;\n        }\n        float s = (a + b) * (b + c) / (a + b +\
    \ c);\n        float t = (a * b) * (b + c) / (a + b + c);\n        return Math.sqrt(s\
    \ / (a + b + c));\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb2er61q7.java:23: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt(s / (a + b + c));\n         \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // TODO: \n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp2ekwkl2y.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        boolean isTriangle = true;\n        float area = 0;\n \
    \       if ((a + b > c) || (a + c > b) || (b + c > a)) {\n            isTriangle\
    \ = false;\n        }\n\n        if (isTriangle) {\n            float s = (a +\
    \ b + c) / 2;\n            area = Math.abs((a * s - b * c) / Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c)));\n        } else {\n            area = -1;\n    \
    \    }\n\n        return area;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3pwbyis8.java:26: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = Math.abs((a * s - b * c) / Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)));\n                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Write your code here\n        if (a+b+c >= b)\n    \
    \        return 0;\n        else \n            return (float)(a+b+c)/2;\n}\n \
    \   public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3o5hmagb.java:25)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float triSum = (float) (a * b * c) / 3;\n        if (a\
    \ >= b && a >= c && b >= c) {\n            return triSum;\n        }\n       \
    \ if (a >= b && a >= c && c >= b) {\n            return triSum - triSum * b;\n\
    \        }\n        if (a >= b && a >= c && b >= c) {\n            return triSum\
    \ - triSum * c;\n        }\n        return -1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgrar_qfx.java:31)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float result = -1;\n        if (a == 0 && b == 0 && c ==\
    \ 0)\n            return result;\n        if (a * b > c) {\n            result\
    \ = (a * c + b * c);\n        }\n        if (b * c > a) {\n            result\
    \ = (a * b + b * c);\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnpzvzopg.java:30)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a == 0 || b == 0 || c == 0)\n            return -1;\n\
    \        if (a + b + c <= 0)\n            return -1;\n        float s = 0.0f;\n\
    \        float area = 0.0f;\n        // calculate area based on formula from Wikipedia\n\
    \        if ((a + b > c) || (b + c > a) || (a + c > b))\n            return -1;\n\
    \        else {\n            s = a + b + c;\n            area = (float) s * (s\
    \ - a) * (s - b) * (s - c) / 2f;\n        }\n        return Math.round(area *\
    \ 100) / 100;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv1w9pm2e.java:34)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return (a + b > c) ? triangleArea(a, b, c - ((a + b) >\
    \ c)) : triangleArea(a, b - 1, c);\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6k4agluc.java:18: error: bad operand types for binary operator\
    \ '-'\n        return (a + b > c) ? triangleArea(a, b, c - ((a + b) > c)) : triangleArea(a,\
    \ b - 1, c);\n                                                  ^\n  first type:\
    \  int\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if(a+b+c >= b) {\n            return (float)Math.sqrt((a*a)+(b*b)+(c*c));\n\
    \        }\n        else if(a+b+c <= b) {\n            return (float)Math.sqrt((a*a)+(b*b)+(c*c));\n\
    \        }\n        else if(a+b+c <= b) {\n            return (float)Math.sqrt((a*a)+(b*b)+(c*c));\n\
    \        }\n        return -1;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp333byds7.java:30)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area_of_triangle = (float) 0;\n        // check that\
    \ the three sides form a triangle\n        if ((a + b > c) && (a + c > b) && (b\
    \ + c > a)) {\n            // sum up all sides\n            float s = a + b +\
    \ c;\n            // find the third side\n            float x = (a * b) + (b *\
    \ c);\n            // check if third side is greater than sum of sides\n     \
    \       if (x > s) {\n                // add third side to sum \n            \
    \    s = s + c;\n                // calculate the area and round to 2 decimal\
    \ places\n                area_of_triangle = (float) ((s * (s - a) * (s - b) *\
    \ (s - c)) / (4.0 * Math.pow(s, 1.0)));\n            }\n        }\n        //\
    \ return -1 if triangle doesn't form a triangle\n        return area_of_triangle;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5m941nm6.java:37)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b > c) && ((a + c) > b) && ((b + c) > a)) {\n\
    \            return (float)(a * b * c);\n        } else {\n            return\
    \ (float)(-1);\n        }\n}\n    public static void main(String[] args) {\n \
    \   assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf83g5yeo.java:25)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = (a+b+c)/2;\n        if (a+b > c) {\n     \
    \       area = (a+b+c)/2;\n        } else if (a+c > b) {\n            area = (a+c+b)/2;\n\
    \        } else {\n            area = (a+c+b)/2;\n        }\n        return area;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwlbys_0u.java:30)\n"
  stdout: ''
  timestamp: 1660011903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a > b && b > c) {\n            return (float)(a * c)/2;\n\
    \        }\n        else if (a > c && c > b) {\n            return (float)(b *\
    \ c)/2;\n        }\n        else if (b > a && a > c) {\n            return (float)(a\
    \ * b)/2;\n        }\n        else if (b > c && c > a) {\n            return (float)(b\
    \ * a)/2;\n        }\n        else {\n            return -1;\n        }\n}\n \
    \   public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqq88p2wd.java:35)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a + b > c) {\n            return Float.parseFloat(String.valueOf((float)\
    \ (a * b)) / 2);\n        } else {\n            return -1;\n        }\n}\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7fac2jbg.java:19: error: bad operand types for binary operator\
    \ '/'\n            return Float.parseFloat(String.valueOf((float) (a * b)) / 2);\n\
    \                                                                    ^\n  first\
    \ type:  String\n  second type: int\n1 error\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return (a+b+c==Math.min(a,b,c))?(float)(a*b*(c-b)-a*(c-b)+a*(2*b-2*c))/2:-1;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3kmt5b_1.java:18: error: no suitable method found for min(int,int,int)\n\
    \        return (a+b+c==Math.min(a,b,c))?(float)(a*b*(c-b)-a*(c-b)+a*(2*b-2*c))/2:-1;\n\
    \                           ^\n    method Math.min(int,int) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method Math.min(long,long)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.min(float,float) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n    method Math.min(double,double) is not\
    \ applicable\n      (actual and formal argument lists differ in length)\n1 error\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = -1f;\n        if ((a + b + c) < (a + b)) {\n\
    \            area = (a * b) / c;\n        }\n        return Math.round(area *\
    \ 100) / 100;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk692cia2.java:25)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Write your code here\n        float side1, side2, side3;\n\
    \        side1 = (float) Math.sqrt((Math.pow(a, 2))+(Math.pow(b, 2))+(Math.pow(c,\
    \ 2)));\n        side2 = (float) Math.sqrt((Math.pow(a, 2))+(Math.pow(b, 2))-(Math.pow(c,\
    \ 2)));\n        side3 = (float) Math.sqrt((Math.pow(a, 2))-(Math.pow(b, 2))-(Math.pow(c,\
    \ 2)));\n        float area;\n        area = (float) (side1 + side2 + side3)/2;\n\
    \        if (area > side1 && area > side2 && area > side3) return (float) area;\n\
    \        else return -1;\n}\n    public static void main(String[] args) {\n  \
    \  assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1dutfy_j.java:29)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b > c) || (b + c > a) || (a + c > b)) {\n    \
    \        return -1;\n        }\n        return (float) ((a + b + c) / 2);\n}\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjmm_112k.java:24)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s;\n        if (Math.pow(a, 2) + Math.pow(b, 2) >\
    \ Math.pow(c, 2)) {\n            s = 0;\n        } else if (Math.pow(a, 2) + Math.pow(b,\
    \ 2) == Math.pow(c, 2)) {\n            s = (a * b) / 2;\n        } else {\n  \
    \          s = -1f;\n        }\n        return Math.round(s * 100.0) / 100.0f;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgikc5r86.java:31)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n      final float width = (float) (a+b+c)/2;\n      final float\
    \ area = (float) ((a*b+c*b)/2);\n      if (a + b > c && a*b > c*a) {\n       \
    \ return roundFloat(width*(area/b), 2);\n      } \n      else {\n        return\
    \ -1;\n      }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9tzyaba8.java:21: error: cannot find symbol\n        return roundFloat(width*(area/b),\
    \ 2);\n               ^\n  symbol:   method roundFloat(float,int)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return Math.sqrt( (b*b) + (a*c) - (b*a) );\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn3qi4sfm.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt( (b*b) + (a*c) - (b*a) );\n \
    \                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        if((a + b >= c) && (a + c >= b)\
    \ && (b + c >= a)) {\n            area = (float) Math.sqrt(a * b * c);\n     \
    \       area = Math.round(area * 100.0) / 100.0;\n        }\n        return area;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpts8hmobm.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = Math.round(area * 100.0) / 100.0;\n\
    \                                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0.0f;\n\n        // Check all 3 sides for\
    \ a possible triangle\n        // if all sides have a positive length\n      \
    \  if ((a >= 0) && (b >= 0) && (c >= 0)) {\n            area = (a * b) / c;\n\
    \            if ((a * b) > c) {\n                area = -1f;\n            }\n\
    \        }\n        return Math.round(area * 100.0) / 100.0f;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcfj3eeye.java:31)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area;\n        if(a+b>c) {\n            area=(a+b+c)/2;\n\
    \        }\n        else {\n            area=-1;\n        }\n        return area;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphxtit7o4.java:30)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        int s0 = Math.max(a, b);\n        int s1 = Math.max(b,\
    \ c);\n        int s2 = Math.max(c, c);\n        int s3 = Math.max(s0, s1);\n\
    \        return Math.abs(s1 * s2 - s1 * s3 + s2 * a) / 2;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk0asesy.java:25)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = a*b*c;\n        if((a==0 && b==0 && c==0)\
    \ || (a==0 && b==c && c==0) || (a==c && b==0 && c==0) || (a==c && b==c && c==0)){\n\
    \            return 0.0f;\n        }\n        else if(a <= b && b <= c){\n   \
    \         return area;\n        }\n        else if(a <= c && c <= b){\n      \
    \      return -area;\n        }\n        else if(a <= b && c <= b){\n        \
    \    return -area;\n        }\n        else if(a <= c && b <= c){\n          \
    \  return -area;\n        }\n        else{\n            return -1.0f;\n      \
    \  }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp48b_f5oz.java:39)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a+b>c) {\n            return -1;\n        }\n     \
    \   if (a==0) {\n            if (b==0) {\n                return c;\n        \
    \    }\n            else {\n                return 0;\n            }\n       \
    \ }\n        if (b==0) {\n            return 0;\n        }\n        if (c==0)\
    \ {\n            return 0;\n        }\n        if (Math.abs(a-b) < Math.abs(a-c))\
    \ {\n            return triangleArea(b,c,a);\n        }\n        if (Math.abs(c-a)\
    \ < Math.abs(c-b)) {\n            return triangleArea(a,b,c);\n        }\n   \
    \     else {\n            return triangleArea(a,c,b);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmbgklnc_.java:46)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        if (a + b > c && b + c > a &&\
    \ c + a > b) {\n            area = (a * c + b * a + c * b) / 2;\n        } else\
    \ if (a + c > b && b + c > a && c + a > b) {\n            area = (a * c + b *\
    \ b + c * a) / 2;\n        } else if (a + b > c && c + b > a && b + c > b) {\n\
    \            area = (a * b + b * c + c * b) / 2;\n        } else if (b + c > a\
    \ && c + b > a && b + c > b) {\n            area = (a * b + b * c + c * a) / 2;\n\
    \        }\n        return Math.round(area * 100.0) / 100.0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3fpo_dpy.java:28: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.round(area * 100.0) / 100.0;\n   \
    \                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return (a + b + c) / 2;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnfi2qbde.java:22)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float result = a;\n        if (b > c) {\n            result\
    \ = b;\n        }\n        if (c > b) {\n            result = c;\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy8pp9xv7.java:28)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return a*b*c/((a+b+c));\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm84mk0_d.java:21)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return (float) (a * b * c / Math.sqrt((b * b) - (a * a)));\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9xeeb_e_.java:21)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Write your code here\n        float area = 0;\n    \
    \    if (a == c && b == c) {\n            area = (float) ((a * a + b * b) / 2);\n\
    \            System.out.println(\"Return area \" + area);\n        } else {\n\
    \            if (a > b) {\n                if (a > c) {\n                    area\
    \ = (a * a + c * c);\n                    System.out.println(\"Return area \"\
    \ + area);\n                } else {\n                    area = (a * b + c *\
    \ c);\n                    System.out.println(\"Return area \" + area);\n    \
    \            }\n            } else if (b > c) {\n                area = (a * b\
    \ + c * c);\n                System.out.println(\"Return area \" + area);\n  \
    \          } else {\n                area = (a * a + b * b);\n               \
    \ System.out.println(\"Return area \" + area);\n            }\n        }\n   \
    \     return area;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkyyk8243.java:43)\n"
  stdout: 'Return area 25.0

    '
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a + b > c) {\n            return -1;\n        } else\
    \ {\n            float s = (a + b + c) / 2.0f;\n            return a * b * s;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9csfr206.java:26)\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area_tri = 0;\n        float area_tri_ab = (float)(a*b)/2;\n\
    \        float area_tri_cc = (float)(c*a)/2;\n        if (area_tri_ab + area_tri_cc\
    \ > c) \n            return -1;\n        if (area_tri_ab + area_tri_cc < c) \n\
    \            return -1;\n        area_tri = area_tri_ab + area_tri_cc;\n     \
    \   return round2Decimal(area_tri);\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp32qgm4s_.java:26: error: cannot find symbol\n        return round2Decimal(area_tri);\n\
    \               ^\n  symbol:   method round2Decimal(float)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011905
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        double d1, d2;\n        float area;\n\n        d1 = (a\
    \ + b + c) / 2.0;\n        d2 = Math.sqrt((Math.pow(d1, 2)));\n        area =\
    \ Math.round(d2 * 100.0);\n        if (area != 0)\n            return area;\n\
    \        return -1;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8jmesd1c.java:29)\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area;\n        if (a+b>c) {\n            area = -1;\n\
    \        } else if (b+c>a) {\n            area = -1;\n        } else {\n     \
    \       area = (float)(a+b+c)/2;\n        }\n        return Math.round(area*100)/100;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3l4h54kh.java:29)\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a + b < c) {\n            return -1;\n        }\n \
    \       if (a + c < b) {\n            return -1;\n        }\n        if ((b -\
    \ c) > 0) {\n            return -1;\n        }\n        return (float) (a * b\
    \ * c);\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyhh7gvw3.java:30)\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Get the area of the triangle\n        float area = Math.abs((a\
    \ * b) - c) / 2;\n\n        // If all the sides are greater than the third side\n\
    \        if (area < 0)\n            return -1;\n\n        // Return the area rounded\
    \ to 2 decimal points\n        return Math.round(area * 100.0) / 100.0;\n}\n \
    \   public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdxmnjkxo.java:26: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.round(area * 100.0) / 100.0;\n   \
    \                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // (a + b > c) ?\n        return (float) (a + (b > c))\
    \ * ((float) (a + b + c) / 2.0);\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph_1eqvqh.java:19: error: bad operand types for binary operator\
    \ '+'\n        return (float) (a + (b > c)) * ((float) (a + b + c) / 2.0);\n \
    \                         ^\n  first type:  int\n  second type: boolean\n/tmp/tmph_1eqvqh.java:19:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        return (float) (a + (b > c)) * ((float) (a + b + c) / 2.0);\n       \
    \                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float side1 = (a+b+c) / 2;\n        float side2 = (b+a-c)\
    \ / 2;\n        float side3 = (c+a-b) / 2;\n        if(side1 + side2 > side3){\n\
    \            return Math.round(side1*100) / 100 + Math.round(side2*100) / 100;\n\
    \        }\n        return -1;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8auzmrks.java:27)\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = (a + b + c) / 2.0;\n        float area = Math.abs((a\
    \ * b) - (s * s));\n        double area = Math.abs((Math.pow(s, 2.0) + Math.pow(s,\
    \ 3.0)) - Math.pow(s, 2.0));\n        if (area >= 0.0)\n            area = Math.round(area\
    \ * 100.0) / 100.0;\n        return area;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcess_6_7.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float s = (a + b + c) / 2.0;\n               \
    \               ^\n/tmp/tmpcess_6_7.java:20: error: variable area is already defined\
    \ in method triangleArea(int,int,int)\n        double area = Math.abs((Math.pow(s,\
    \ 2.0) + Math.pow(s, 3.0)) - Math.pow(s, 2.0));\n               ^\n/tmp/tmpcess_6_7.java:23:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        return area;\n               ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // TODO: Write your solution here\n        if(a+b>c) {\n\
    \            float area = (float) (c*(c-a)/2+(a-b)/2);\n            System.out.println(area.toString());\n\
    \            return area;\n        }\n        float area = -1;\n        return\
    \ area;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpor8a4y0u.java:21: error: float cannot be dereferenced\n       \
    \     System.out.println(area.toString());\n                                 \
    \  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if(a>b+c) return -1;\n        return a+b+c>4?Math.round((a+b+c)/2)/Math.PI:-1;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl7odafn4.java:19: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return a+b+c>4?Math.round((a+b+c)/2)/Math.PI:-1;\n\
    \                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area, length1, length2, length3;\n        area =\
    \ (float) (a * b + c * b);\n        length1 = (float) Math.sqrt(a * a + b * b);\n\
    \        length2 = (float) Math.sqrt(a * a + c * c);\n        length3 = (float)\
    \ Math.sqrt(b * b + c * c);\n\n        if (a > b && a > c) {\n            System.out.println(\"\
    a is greater than b \" + a + \" \" + b);\n            System.out.println(\"a is\
    \ greater than c \" + a + \" \" + c);\n        } else if (b > a && b > c) {\n\
    \            System.out.println(\"b is greater than a \" + b + \" \" + a);\n \
    \           System.out.println(\"b is greater than c \" + b + \" \" + c);\n  \
    \      } else if (c > a && c > b) {\n            System.out.println(\"c is greater\
    \ than a \" + c + \" \" + a);\n            System.out.println(\"c is greater than\
    \ b \" + c + \" \" + b);\n        } else if (length1 > length2 & length1 > length3)\
    \ {\n            System.out.println(\"a is greater than b \" + length1 + \" \"\
    \ + length2);\n            System.out.println(\"a is greater than c \" + length1\
    \ + \" \" + length3);\n            System.out.println(\"b is greater than c \"\
    \ + length2+ \" \" + length3);\n        } else if (length2 > length1 & length2\
    \ > length3) {\n            System.out.println(\"b is greater than a \" + length2+\
    \ \" \" + length1);\n            System.out.println(\"b is greater than c \" +\
    \ length2+ \" \" + length3);\n            System.out.println(\"c is greater than\
    \ a \" + length3+ \" \" + length1);\n        } else if (length3 > length1 & length3\
    \ > length2) {\n            System.out.println(\"c is greater than a \" + length3+\
    \ \" \" + length1);\n            System.out.println(\"c is greater than b \" +\
    \ length3+ \" \" + length2);\n        } else if (length1 == length2 && length1\
    \ == length3) {\n            return area;\n        } else {\n            return\
    \ -1;\n        }\n        return area;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcid48cai.java:52)\n"
  stdout: 'c is greater than a 5 3

    c is greater than b 5 4

    '
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = (a * b) - (c * c);\n        if (a != 0 &&\
    \ b != 0 && c != 0) {\n            float length = 0;\n            if (a + b >\
    \ c) {\n                length = b - a;\n            } else {\n              \
    \  length = c - b;\n            }\n            if (length != 0) {\n          \
    \      float areac = triangleArea(a, b, c);\n                area = areac + (area\
    \ / length) * length;\n            }\n        }\n        return area;\n}\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\tat Problem.triangleArea(tmp7frdj6tn.java:27)\n\
    \tat Problem.tr"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float a = Math.sqrt((a * a) + (b * b) + (c * c));\n   \
    \     return ((float)a / 2).toFixed(2);\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp514a5uly.java:18: error: variable a is already defined in method\
    \ triangleArea(int,int,int)\n        float a = Math.sqrt((a * a) + (b * b) + (c\
    \ * c));\n              ^\n/tmp/tmp514a5uly.java:18: error: incompatible types:\
    \ possible lossy conversion from double to float\n        float a = Math.sqrt((a\
    \ * a) + (b * b) + (c * c));\n                           ^\n/tmp/tmp514a5uly.java:19:\
    \ error: float cannot be dereferenced\n        return ((float)a / 2).toFixed(2);\n\
    \                             ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a>b && b > c) {\n            float area = (float) (a\
    \ * b * c);\n            return round(area);\n        }\n        else\n      \
    \      return -1;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnw9e6pfc.java:20: error: cannot find symbol\n            return\
    \ round(area);\n                   ^\n  symbol:   method round(float)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float sum = a + b + c;\n        float side1 = (float) Math.sqrt(Math.pow(sum,\
    \ 2));\n        float side2 = (float) Math.sqrt(Math.pow(sum, 2));\n        float\
    \ side3 = (float) Math.sqrt(Math.pow(sum, 2));\n        if (Math.pow(a, b) + Math.pow(c,\
    \ 2) > Math.pow(b, 2)) {\n            return side1;\n        } else if (Math.pow(a,\
    \ 2) + Math.pow(c, 2) > Math.pow(b, 2)) {\n            return side2;\n       \
    \ } else {\n            return side3;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvx97em2.java:31)\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Write your code here\n        float ans = -1;\n    \
    \    if((a + b > c) || (a + c > b) || (b + c > a)) {\n            ans = -1;\n\
    \        }\n        else if(a < b + c) {\n            if((a + b > c) && (a + c\
    \ > b)) {\n                ans = (a * b * c)/2;\n            }\n            if((b\
    \ + c > a) && (b + a > c)) {\n                ans = (b * c * a)/2;\n         \
    \   }\n            if((a + c > b) && (a + b > c)) {\n                ans = (c\
    \ * b * a)/2;\n            }\n        }\n        else {\n            if((a + c\
    \ > b) && (a + b > c)) {\n                ans = (a * b * c)/2;\n            }\n\
    \            if((a + b > c) && (a + c > b)) {\n                ans = (a * c *\
    \ b)/2;\n            }\n            if((b + c > a) && (b + a > c)) {\n       \
    \         ans = (b * a * c)/2;\n            }\n        }\n        return ans;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgn77bdg.java:48)\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float h = Math.abs(a) + Math.abs(b) + Math.abs(c);\n  \
    \      float s = 2 * Math.abs(a) + Math.abs(b) - Math.abs(c);\n        float area\
    \ = Math.abs((Math.abs(s) / (h * h)));\n        return Math.hypot(a, b) + Math.hypot(b,\
    \ c) + Math.hypot(c, a) > 0 ? area : -1f;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpytqa4w_3.java:24)\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b + c) <= 0) return -1;\n        return roundToDecimal(c,\
    \ 2) + roundToDecimal(b, 2) + roundToDecimal(a, 2);\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk6rex9ih.java:19: error: cannot find symbol\n        return roundToDecimal(c,\
    \ 2) + roundToDecimal(b, 2) + roundToDecimal(a, 2);\n               ^\n  symbol:\
    \   method roundToDecimal(int,int)\n  location: class Problem\n/tmp/tmpk6rex9ih.java:19:\
    \ error: cannot find symbol\n        return roundToDecimal(c, 2) + roundToDecimal(b,\
    \ 2) + roundToDecimal(a, 2);\n                                      ^\n  symbol:\
    \   method roundToDecimal(int,int)\n  location: class Problem\n/tmp/tmpk6rex9ih.java:19:\
    \ error: cannot find symbol\n        return roundToDecimal(c, 2) + roundToDecimal(b,\
    \ 2) + roundToDecimal(a, 2);\n                                               \
    \              ^\n  symbol:   method roundToDecimal(int,int)\n  location: class\
    \ Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float a = Math.abs(a);\n        float b = Math.abs(b);\n\
    \        float c = Math.abs(c);\n        float s = (a + b + c) / 2;\n        if\
    \ (a + b > s && b + c > s && a + c > s) {\n            float area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n            return area;\n        } else {\n\
    \            return -1;\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp107b796y.java:18: error: variable a is already defined in method\
    \ triangleArea(int,int,int)\n        float a = Math.abs(a);\n              ^\n\
    /tmp/tmp107b796y.java:19: error: variable b is already defined in method triangleArea(int,int,int)\n\
    \        float b = Math.abs(b);\n              ^\n/tmp/tmp107b796y.java:20: error:\
    \ variable c is already defined in method triangleArea(int,int,int)\n        float\
    \ c = Math.abs(c);\n              ^\n/tmp/tmp107b796y.java:23: error: incompatible\
    \ types: possible lossy conversion from double to float\n            float area\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n                            \
    \      ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a + b > c) {\n            return -1;\n        } else\
    \ if (a + c > b) {\n            return -1;\n        } else if (b + c > a) {\n\
    \            return -1;\n        } else {\n            return (float)(a * b *\
    \ 0.5);\n        }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6a7fwffx.java:29)\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = -1f;\n        if ((a + b > c) && (a + c >\
    \ b)) {\n            float s = (a + b) * (a + c);\n            float t = (b +\
    \ c) * (a + b);\n            float area = s + (t - s);\n            area = (area\
    \ / 2);\n            System.out.println(\"Triangle area: \" + area);\n       \
    \ }\n        return area;\n}\n    public static void main(String[] args) {\n \
    \   assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7xbwbvui.java:22: error: variable area is already defined in method\
    \ triangleArea(int,int,int)\n            float area = s + (t - s);\n         \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Calculate area of triangle when all sides are greater\
    \ than the third side.\n        if (a+b > c) {\n            return (float)(a+b+c)/2;\n\
    \        } else {\n            // Calculate area of triangle when all sides are\
    \ less than the third side.\n            if (a + c > b) {\n                return\
    \ (float)(a + b + c)/2;\n            } else {\n                if (b + c > a)\
    \ {\n                    return (float)(b + a + c)/2;\n                } else\
    \ {\n                    return -1;\n                }\n            }\n      \
    \  }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmocamq19.java:36)\n"
  stdout: ''
  timestamp: 1660011907
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return ((float)(a+b+c)) / ((float)(a+b+c) >= (float)(b+c)\
    \ ? b+c : a+b); \n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0vrtr6o.java:21)\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a + b > c && a + c > b && b + c > a) {\n          \
    \  float s = (float) Math.sqrt((a + b) * (a + c) * (b + c));\n            return\
    \ (float) (s * 0.5f);\n        }\n        else\n            return -1;\n}\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2sewhxo6.java:26)\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if(a==b && b==c) {\n            return 0;\n        }\n\
    \        if(a==b || b==c) {\n            return -1;\n        }\n        double\
    \ x = (a+b+c)/2;\n        double y = (Math.sqrt(Math.pow(a, 2)+Math.pow(b, 2)+Math.pow(c,\
    \ 2)) - x)/2;\n        return Math.round(x*100)/100;\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf34ogy99.java:30)\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a + b > c && a + c > b && b + c > a)\n            return\
    \ (float) (a * b * 0.5f);\n        return -1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7sj85hn.java:25)\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0.0f;\n        float h = (b + c) / 2.0f;\n\
    \n        if (a >= b + c) {\n            area = Math.abs((a * h) / 2.0f);\n  \
    \      } else if (a < b + c) {\n            area = Math.abs(((b * h) + (a * c))\
    \ / 2.0f);\n        }\n\n        return Math.round(area * 100.0) / 100.0f;\n}\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp322lm35z.java:30)\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return triangleArea(a, b, c, a, b, c);\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw2dp816z.java:18: error: method triangleArea in class Problem cannot\
    \ be applied to given types;\n        return triangleArea(a, b, c, a, b, c);\n\
    \               ^\n  required: int,int,int\n  found:    int,int,int,int,int,int\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        area = Math.abs((a * b) + c);\n\
    \        area = (area / 2) + ((Math.abs(a) * Math.abs(b)) / (2));\n        if\
    \ (Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2)) == area)\n    \
    \        return area;\n        else\n            return -1;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf2o1x_1.java:27)\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b + c) < 3) {\n            return -1;\n      \
    \  }\n        return Math.sqrt(a * a + b * b + c * c);\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsvfauinv.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt(a * a + b * b + c * c);\n   \
    \                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float triangleArea;\n        if (a >= 0 && b >= 0 && c\
    \ >= 0) {\n            triangleArea = (a + b + c)/2;\n        } else {\n     \
    \       triangleArea = -1;\n        }\n        return triangleArea;\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfwn_j4lu.java:28)\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = (a + b + c) / 2;\n        if (s > 0 && s >= b)\
    \ {\n            return (s + b * b - a + c) / 2;\n        }\n        return -1;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv9zfhy5_.java:25)\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if(a+b>c && b+c>a && c+a>b){\n            return (float)\
    \ (a+b+c)/2;\n        }\n        else{\n            return -1;\n        }\n}\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9qonkgc.java:28)\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return (a * b * c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n    public static void main(String[] args) {\n   \
    \ assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpac1et5ch.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return (a * b * c) / Math.sqrt(Math.pow(a, 2)\
    \ + Math.pow(b, 2) + Math.pow(c, 2));\n                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        // To check if the triangle is\
    \ valid or not\n        if (a * b > c) {\n            area = -1;\n           \
    \ return area;\n        }\n\n        // If the sum of the lengths of the sides\
    \ equals the third length,\n        // the triangle is valid\n        if (a +\
    \ b + c == 2 * b) {\n            area = ((a + b + c) / 2);\n            return\
    \ area;\n        }\n\n        // If the sides are equal, there is no valid triangle\n\
    \        if (a == b) {\n            area = (c / 2);\n            return area;\n\
    \        }\n\n        if (a == c) {\n            area = (b / 2);\n           \
    \ return area;\n        }\n\n        if (b == c) {\n            area = (a / 2);\n\
    \            return area;\n        }\n\n        // If the sum of the lengths of\
    \ the sides equals the third length,\n        // the triangle is valid\n     \
    \   if ((a + b + c) == 2 * b) {\n            area = ((a + b + c) / 2);\n     \
    \       return area;\n        }\n\n        // If the sides are equal, there is\
    \ no valid triangle\n        if (a == b) {\n            area = (c / 2);\n    \
    \        return area;\n        }\n\n        if (a == c) {\n            area =\
    \ (b / 2);\n            return area;\n        }\n\n        if (b == c) {\n   \
    \         area = (a / 2);\n            return area;\n        }\n\n        // If\
    \ the sum of the lengths of the sides equals the third length,\n        // the\
    \ triangle is valid\n        if ((a + b + c) == 2 * b) {\n            area = ((a\
    \ + b + c) / 2);\n            return area;\n        }\n\n        // If the sides\
    \ are equal, there is no valid triangle\n        if (a == b) {\n            area\
    \ = (c / 2);\n            return area;\n        }\n\n        if (a == c) {\n \
    \           area = (b / 2);\n            return area;\n        }\n\n        if\
    \ (b == c) {\n            area = (a / 2);\n            return area;\n        }\n\
    \n        if ((a + b + c) == 2 * b) {\n            area = ((a + b + c) / 2);\n\
    \            return area;\n        }\n\n        if (a == b) {\n            area\
    \ = (c / 2);\n            return area;\n        }\n\n        if (a == c) {\n \
    \           area = (b / 2);\n            return area;\n        }\n\n        if\
    \ (b == c) {\n            area = (a / 2);\n            return area;\n        }\n\
    \n        if ((a + b + c) == 2 * b) {\n            area = ((a + b + c) / 2);\n\
    \            return area;\n        }\n\n        if (a == b) {\n            area\
    \ = (c / 2);\n            return area;\n        }\n\n        if (a == c) {\n \
    \           area = (b / 2);\n            return area;\n        }\n\n        if\
    \ (b == c) {\n            area = (a / 2);\n            return area;\n        }\n\
    \n        if ((a + b\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkkd950fv.java:134: error: ')' expected\n        if ((a + b\n  \
    \                ^\n/tmp/tmpkkd950fv.java:135: error: illegal start of statement\n\
    }\n^\n2 errors\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float triA = a + b + c;\n        float triB = (float) (b\
    \ + c);\n        float triC = (float) (a);\n        if (triA > triB && triA >\
    \ triC) {\n            return ((float) ((triA * .5) / 3));\n        } else if\
    \ (triB > triC) {\n            return ((float) ((triB * .5) / 3));\n        }\n\
    \        return ((float) ((triC * .5) / 3));\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxlfpac5.java:29)\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        double triA = (a*b)/(c*c);\n        return triA == Math.floor(triA)\
    \ ? Math.round(triA * 100.0) / 100.0f : -1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwm00zwmk.java:22)\n"
  stdout: ''
  timestamp: 1660011910
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area;\n        if ((a + b > c) && (a + c > b) &&\
    \ (b + c > a)) {\n            area = (a * b + c) / 2;\n        }\n        else\
    \ {\n            area = -1;\n        }\n        return Math.round(area * 100.0)\
    \ / 100.0;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt1l9fn3z.java:25: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.round(area * 100.0) / 100.0;\n   \
    \                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a + b > c) return -1;\n        if (a + c > b) return\
    \ -1;\n        if (b + c > a) return -1;\n        return Math.round(Math.sqrt(a\
    \ * b * c)) % 1 == 0 ? \n                Math.round(Math.sqrt(a * b * c)) : -1;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qlsg9zq.java:25)\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area, sqrt_area, area_sum, sqrt_area_sum, area_product,\
    \ sqr_area_product;\n        float area_sum2 = (a+b+c)/2;\n\n        if (a+b>c)\
    \ {\n            area = Math.abs((a*b)/2 - area_sum2);\n            area_product\
    \ = a*b;\n            area_sum = Math.sqrt(area_product);\n            sqrt_area\
    \ = (float) Math.sqrt(area_sum);\n            sqrt_area_sum = (float) Math.sqrt(area_sum2);\n\
    \            sqr_area_product = (float) Math.pow(sqrt_area_sum, 2);\n        \
    \    area = Math.round(area + (float) Math.pow(sqr_area_product, 0.5));\n    \
    \    }\n        return area;\n}\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpki6vhb2z.java:24: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area_sum = Math.sqrt(area_product);\n    \
    \                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = -1;\n        if (a+b > c) {\n            area\
    \ = (a+b)*(c-a+b)/2;\n        }\n        return area;\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkgo2kut1.java:25)\n"
  stdout: ''
  timestamp: 1660011910
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = (a+b+c) / 2;\n        float area = Math.sqrt(Math.pow(s-a,2)\
    \ + Math.pow(s-b,2) + Math.pow(s-c,2));\n        float areaRounded = Math.round(area\
    \ * 100) / 100.0;\n        System.out.println(areaRounded);\n        return areaRounded;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbffkfdsp.java:19: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = Math.sqrt(Math.pow(s-a,2) + Math.pow(s-b,2)\
    \ + Math.pow(s-c,2));\n                              ^\n/tmp/tmpbffkfdsp.java:20:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        float areaRounded = Math.round(area * 100) / 100.0;\n               \
    \                                    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011909
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = -1;\n        if ((a + b) > c) {\n        \
    \    int sum = a + b;\n            int sum2 = a + c;\n            int sum3 = c\
    \ + b;\n            area = Float.valueOf(String.valueOf(sum / sum3 * sum / sum2).toLowerCase()).floatValue();\n\
    \        } else {\n            area = Float.valueOf(String.valueOf(a + b + c).toLowerCase()).floatValue();\n\
    \        }\n        return area;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfhzkk3n.java:30)\n"
  stdout: ''
  timestamp: 1660011910
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a * a + b * b > c) {\n            return (float) -1;\
    \ // no valid triangle\n        }\n        float s = (float) (a * b + b * c);\n\
    \        float area = (float) (Math.sqrt(s) / 2);\n        return Math.round(area\
    \ * 100) / 100; // round to two decimal points\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_j95xbj.java:26)\n"
  stdout: ''
  timestamp: 1660011910
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Only consider the case when sides form a valid triangle\n\
    \        if ((a < b + c) && (b < a + c) && (c < a + b)) {\n            return\
    \ (float) (a * b * c / (a * b + c));\n        } else {\n            return -1;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpccts8mep.java:26)\n"
  stdout: ''
  timestamp: 1660011910
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        double area = 0.0f;\n        float result = 0f;\n     \
    \   \n        // We check that all sides are valid\n        if (a + b > c) {\n\
    \            return -1;\n        }\n        \n        // If sum of any two sides\
    \ is greater than third side, we return -1\n        if (a + b > c) {\n       \
    \     return -1;\n        }\n        \n        // Compute area using Pythagorean\
    \ theorem\n        area = ((b * b) - (4 * a * c));\n        \n        // Round\
    \ the result to 2 decimal places\n        result = Math.round(area / 2f, 2);\n\
    \        \n        // Return area\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7r5chrt6.java:35: error: no suitable method found for round(double,int)\n\
    \        result = Math.round(area / 2f, 2);\n                     ^\n    method\
    \ Math.round(float) is not applicable\n      (actual and formal argument lists\
    \ differ in length)\n    method Math.round(double) is not applicable\n      (actual\
    \ and formal argument lists differ in length)\n1 error\n"
  stdout: ''
  timestamp: 1660011910
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b > c) || (b + c > a) || (c + a > b)) {\n    \
    \        return -1;\n        }\n        return Math.sqrt(a * b * c);\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oftvb_c.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt(a * b * c);\n               \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011910
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = (a * b * c)/2.0f;\n        if( a < b && a\
    \ < c && b < c )\n            return roundTo2Decimal(area);\n        return -1.0f;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4k2gs1ag.java:20: error: cannot find symbol\n            return\
    \ roundTo2Decimal(area);\n                   ^\n  symbol:   method roundTo2Decimal(float)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float A = (float) (a+b+c);\n        float B = (float) (a*b*c);\n\
    \        float C = (float) (a*b*b*c);\n        float area_of_triangle = A/B/C;\n\
    \        if(area_of_triangle>=1){\n            area_of_triangle = Math.round(area_of_triangle*100.0)/100.0f;\n\
    \        }\n        if(area_of_triangle<=0){\n            area_of_triangle = -1;\n\
    \        }\n        return area_of_triangle;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt8mgquz1.java:31)\n"
  stdout: ''
  timestamp: 1660011911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float a1 = a * 0.5;\n        float a2 = a1 * 0.5;\n   \
    \     float b1 = b * 0.5;\n        float b2 = b1 * 0.5;\n        float c1 = c\
    \ * 0.5;\n        float c2 = c1 * 0.5;\n\n        // if c > a + b then a must\
    \ be a valid triangle since c > a + b\n        float area;\n        if (c < a\
    \ + b) {\n            area = -1f;\n        } else {\n            // if c > a +\
    \ b then a must be a valid triangle since c > a + b\n            if (c > a1 &&\
    \ c > b1 && c > c1) {\n                area = a1 * a2 + b1 * b2 + c1 * c2;\n \
    \           } else if (c > a1 && c > b1 && c < c1) {\n                area = a1\
    \ * a2 + b1 * b2 + c1;\n            } else if (c > a1 && c < b1 && c > c1) {\n\
    \                area = a1 * a2 + b1 * b2 + c1;\n            } else if (c > a1\
    \ && c < b1 && c < c1) {\n                area = a1 * a2 + b1 * b2 + c1 * c2;\n\
    \            } else if (c > a1 && c < b1 && c > c2) {\n                area =\
    \ a1 * a2 + b1 * b2 + c1;\n            } else if (c > a1 && c < b1 && c < c2)\
    \ {\n                area = a1 * a2 + b1 * b2 + c1 * c2;\n            } else if\
    \ (c > a1 && c < b1 && c < c2) {\n                area = a1 * a2 + b1 * b2 + c1\
    \ * c2;\n            } else if (c > a1 && c < b1 && c < c2) {\n              \
    \  area = a1 * a2 + b1 * b2 + c1 * c2;\n            } else if (c > a1 && c < b1\
    \ && c < c2) {\n                area = a1 * a2 + b1 * b2 + c1 * c2;\n        \
    \    } else if (c > a1 && c < b1 && c < c2) {\n                area = a1 * a2\
    \ + b1 * b2 + c1 * c2;\n            } else if (c > a1 && c < b1 && c < c2) {\n\
    \                area = a1 * a2 + b1 * b2 + c1 * c2;\n            } else if (c\
    \ > a1 && c < b1 && c < c2) {\n                area = a1 * a2 + b1 * b2 + c1 *\
    \ c2;\n            } else if (c > a1 && c < b1 && c < c2) {\n                area\
    \ = a1 * a2 + b1 * b2 + c1 * c2;\n            } else if (c > a1 && c < b1 && c\
    \ < c2) {\n                area = a1 * a2 + b1 * b2 + c1 * c2;\n            }\
    \ else if (c > a1 && c < b1 && c < c2) {\n                area = a1 * a2 + \n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpscrpzote.java:61: error: illegal start of expression\n}\n^\n/tmp/tmpscrpzote.java:62:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011910
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return (a+b+c) / 2.0f;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsp9gx8mr.java:22)\n"
  stdout: ''
  timestamp: 1660011911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if( a > 0 && b > 0 && c > 0 ) {\n            float s =\
    \ 0.0f;\n            if( a > b && a > c ) {\n                s = a + b + c;\n\
    \            } else if( b > a && b > c ) {\n                s = a + b + c;\n \
    \           } else if( c > a && c > b ) {\n                s = a + b + c;\n  \
    \          } \n            if( s > 0 ) {\n                s /= 3.f;\n        \
    \        System.out.println( s );\n                return s;\n            }\n\
    \        }\n        return -1;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2z5atb9y.java:36)\n"
  stdout: '4.0

    '
  timestamp: 1660011911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return Triangle.isValid(a, b, c)\n                ? ((float)\
    \ (a * b * c) / Math.sqrt((a * a) + (b * b) + (c * c))) \n                : -1;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3bf_uxt5.java:18: error: cannot find symbol\n        return Triangle.isValid(a,\
    \ b, c)\n               ^\n  symbol:   variable Triangle\n  location: class Problem\n\
    /tmp/tmp3bf_uxt5.java:19: error: incompatible types: possible lossy conversion\
    \ from double to float\n                ? ((float) (a * b * c) / Math.sqrt((a\
    \ * a) + (b * b) + (c * c))) \n                ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n      float sideA = a;\n      float sideB = b;\n      float sideC\
    \ = c;\n      \n      //Check to see if all sides are positive\n      if(sideA\
    \ > 0 && sideB > 0 && sideC > 0) {\n        \n          //Check side sum when\
    \ sideA + sideB > sideC\n          if(sideA + sideB > sideC) {\n            return\
    \ sideA * b / 2;\n          } else if (sideA + sideB < sideC) {\n            return\
    \ sideC * a / 2;\n          } else {\n            //Check side sum when sideA\
    \ + sideB = sideC\n            if(sideA + sideB == sideC) {\n              return\
    \ sideA * c / 2;\n            }\n          }\n      } else {\n        return -1;\n\
    \      }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcgmwtljq.java:39: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a + b > c) {\n            return (float) (Math.sqrt((Math.pow((a\
    \ + b), 2) - (Math.pow(c, 2)))));\n        } else if (a + c > b) {\n         \
    \   return (float) (Math.sqrt((Math.pow((a + c), 2) - (Math.pow(b, 2)))));\n \
    \       } else if (b + c > a) {\n            return (float) (Math.sqrt((Math.pow((b\
    \ + c), 2) - (Math.pow(a, 2)))));\n        } else {\n            return -1;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21z4g10b.java:29)\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        double area = Math.sqrt(b*b-4*a*c);\n        if (b*b-4*a*c\
    \ > 0) {\n            area = (int)(area);\n            area = (float) Math.round(area*100)/100.0;\n\
    \        }\n        return area;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpajrlekqm.java:23: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return area;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        double a, b, c;\n        double\
    \ x1;\n        double y1;\n        double x2;\n        double y2;\n        double\
    \ x3;\n        double y3;\n        try{\n            System.out.println(\"Enter\
    \ three sides length\");\n            Scanner sc = new Scanner(System.in);\n \
    \           a = sc.nextDouble();\n            b = sc.nextDouble();\n         \
    \   c = sc.nextDouble();\n            if (a + b > c){\n                System.out.println(\"\
    invalid input :\" + a + \",\" + b + \",\" + c);\n                return -1;\n\
    \            }\n            x1 = (float) (a / 2);\n            y1 = (float) (b\
    \ / 2);\n            x2 = (float) (b / 2);\n            y2 = (float) (c / 2);\n\
    \            x3 = (float) (c / 2);\n            y3 = (float) (a / 2);\n      \
    \      area = Math.sqrt(x1 * x1 + y1 * y1 + x2 * x2 + y2 * y2 + x3 * x3 + y3 *\
    \ y3);\n        }\n        catch (Exception e){\n            System.out.println(\"\
    invalid input :\" + a + \",\" + b + \",\" + c);\n            return -1;\n    \
    \    }\n        return (int) Math.round(area * 100);\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp29i57fr4.java:19: error: variable a is already defined in method\
    \ triangleArea(int,int,int)\n        double a, b, c;\n               ^\n/tmp/tmp29i57fr4.java:19:\
    \ error: variable b is already defined in method triangleArea(int,int,int)\n \
    \       double a, b, c;\n                  ^\n/tmp/tmp29i57fr4.java:19: error:\
    \ variable c is already defined in method triangleArea(int,int,int)\n        double\
    \ a, b, c;\n                     ^\n/tmp/tmp29i57fr4.java:42: error: incompatible\
    \ types: possible lossy conversion from double to float\n            area = Math.sqrt(x1\
    \ * x1 + y1 * y1 + x2 * x2 + y2 * y2 + x3 * x3 + y3 * y3);\n                 \
    \           ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a * a + b * b > c * c) {\n            return -1;\n\
    \        }\n        float area = 0.5f * Math.sqrt(Math.pow((a + b), 2.0f) + Math.pow((b\
    \ + c), 2.0f)) - \n                Math.sqrt((Math.pow(a, 2.0f) + Math.pow(b,\
    \ 2.0f)) - Math.pow((a + b + c), 2.0f));\n        if ((a + b + c) == 0) {\n  \
    \          return 0;\n        }\n        return area;\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcxf40lpl.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = 0.5f * Math.sqrt(Math.pow((a + b),\
    \ 2.0f) + Math.pow((b + c), 2.0f)) - \n                                      \
    \                                                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float result = (a + b + c) / 2.0f;\n        return (result\
    \ > a) ? (result - a) : ((result - b) * (result - c));\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3vmy_7b9.java:22)\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        //TODO: Write your code here\n        if (Math.pow(a, 2)\
    \ + Math.pow(b, 2) <= Math.pow(c, 2)){\n            return (float) (a * b * c);\n\
    \        }\n        return -1;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppw6w50dl.java:25)\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        double area = 0.5f * Math.sqrt((b*b + c*c - a*a));\n  \
    \      return Math.round(area * 100.0) / 100.0f;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz5sx8zly.java:22)\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = (a + b + c) / 2;\n        if (a >= b + c || a\
    \ >= c || b >= c || a >= s + b + c || b >= s + c || c >= s + b || a >= s + c +\
    \ b || b >= s + c + a) {\n            return -1;\n        }\n        return Math.abs(Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)));\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpov1jyq7y.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.abs(Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)));\n                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // TODO: Write your Java implementation here.\n       \
    \ float area = -1f;\n        if (Math.abs(a - b) > Math.abs(c - b)) {\n      \
    \      float ab = a > b ? a : b;\n            float bc = b > c ? b : c;\n    \
    \        float ca = c > a ? c : a;\n            float abc = ab > ca ? ab : ca;\n\
    \            float sqrt_abc = Math.sqrt(abc);\n            area = abc / sqrt_abc;\n\
    \        }\n        return Math.round(area * 100.0) / 100.0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2d125apd.java:25: error: incompatible types: possible lossy conversion\
    \ from double to float\n            float sqrt_abc = Math.sqrt(abc);\n       \
    \                               ^\n/tmp/tmp2d125apd.java:28: error: incompatible\
    \ types: possible lossy conversion from double to float\n        return Math.round(area\
    \ * 100.0) / 100.0;\n                                        ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return Math.toDegrees(Math.sqrt(Math.pow(a + b, 2) + Math.pow(c,\
    \ 2)));\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpik80r8w5.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.toDegrees(Math.sqrt(Math.pow(a + b,\
    \ 2) + Math.pow(c, 2)));\n                             ^\n1 error\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n    \
    \        return (float)(a * b * 0.5f);\n        } else {\n            return -1;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5fe0mxi1.java:27)\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return Math.sqrt(a * a + b * b - c * c);\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdvt9547v.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt(a * a + b * b - c * c);\n   \
    \                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n    \
    \        float side1 = (a + b + c) / 2;\n            float side2 = (a + b - c)\
    \ / 2;\n            float side3 = (a - b + c) / 2;\n            float side4 =\
    \ (a - b - c) / 2;\n            if (side1 > side2 && side1 > side3 && side1 >\
    \ side4 && side2 > side3\n                    && side2 > side4 && side3 > side4)\
    \ {\n                return side1;\n            }\n            return -1;\n  \
    \      }\n        return -1;\n}\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprywbp4mn.java:32)\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0.0f;\n        if (a+b>c) {\n            area\
    \ = -1;\n        } else {\n            float s = (a + b) * 0.5f;\n           \
    \ float t = (c + a) * 0.5f;\n            float u = (s + t) * 0.5f;\n         \
    \   float v = (b + c) * 0.5f;\n            area = Math.sqrt(Math.pow(u, 2) + Math.pow(v,\
    \ 2));\n        }\n        return Math.round(area * 100) / 100f;\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyhjknm8a.java:26: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = Math.sqrt(Math.pow(u, 2) + Math.pow(v,\
    \ 2));\n                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area;\n        if ((a + b > c) || (b > c)) {\n  \
    \          return -1;\n        } else {\n            area = (float) (Math.pow((a\
    \ + b), 2.0) / 2.0);\n        }\n        return Math.round(area * 100) / 100;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk95lnimv.java:27)\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a + b > c && a + c > b && b + c > a) {\n          \
    \  return (a + b + c) / 2.0;\n        } else {\n            return -1;\n     \
    \   }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvj5hi1pw.java:19: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return (a + b + c) / 2.0;\n              \
    \                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area;\n        if (a + b > c || b + c > a || a +\
    \ c > b) {\n            area = -1;\n        } else {\n            area = (float)\
    \ (Math.sqrt(a * b * c) / 2);\n        }\n        return area;\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd61lhzus.java:27)\n"
  stdout: ''
  timestamp: 1660011912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        boolean isValid = a + b > c && b + c > a && c + a > b;\n\
    \        if (isValid) {\n            return (a + b + c) / 2;\n        } else {\n\
    \            return -1;\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa478zjth.java:28)\n"
  stdout: ''
  timestamp: 1660011913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        float sum = (a + b + c) / 2;\n\
    \        \n        if (sum > c) {\n            area = -1;\n        } else {\n\
    \            area = Float.parseFloat(a.toString()) * Float.parseFloat(b.toString())\
    \ * Float.parseFloat(c.toString());\n            area = Math.round(area / 100)\
    \ * 100;\n        }\n        return area;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwjhfpa2v.java:24: error: int cannot be dereferenced\n         \
    \   area = Float.parseFloat(a.toString()) * Float.parseFloat(b.toString()) * Float.parseFloat(c.toString());\n\
    \                                     ^\n/tmp/tmpwjhfpa2v.java:24: error: int\
    \ cannot be dereferenced\n            area = Float.parseFloat(a.toString()) *\
    \ Float.parseFloat(b.toString()) * Float.parseFloat(c.toString());\n         \
    \                                                             ^\n/tmp/tmpwjhfpa2v.java:24:\
    \ error: int cannot be dereferenced\n            area = Float.parseFloat(a.toString())\
    \ * Float.parseFloat(b.toString()) * Float.parseFloat(c.toString());\n       \
    \                                                                            \
    \                    ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b + c) <= 0) {\n            return -1;\n     \
    \   }\n        else {\n            return (float) (a * b * 0.5f) / (a + b + c);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq33___pf.java:26)\n"
  stdout: ''
  timestamp: 1660011913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        if ((a + b) > c && (b + c) > a\
    \ && (c + a) > b) {\n            area = FloatMath.sqrt((b * b) - (4 * a * c));\n\
    \        } else if (a == b) {\n            area = FloatMath.sqrt((b * b) - (4\
    \ * a * a));\n        } else if (a == c) {\n            area = FloatMath.sqrt((c\
    \ * c) - (4 * a * a));\n        } else if (b == c) {\n            area = FloatMath.sqrt((b\
    \ * b) - (4 * a * a));\n        } else if (a > b) {\n            area = FloatMath.sqrt((b\
    \ * b) - (4 * a * a));\n        } else if (b > c) {\n            area = FloatMath.sqrt((c\
    \ * c) - (4 * a * a));\n        }\n        return Math.round(area / 100) * 100;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7as3b8q0.java:20: error: cannot find symbol\n            area =\
    \ FloatMath.sqrt((b * b) - (4 * a * c));\n                   ^\n  symbol:   variable\
    \ FloatMath\n  location: class Problem\n/tmp/tmp7as3b8q0.java:22: error: cannot\
    \ find symbol\n            area = FloatMath.sqrt((b * b) - (4 * a * a));\n   \
    \                ^\n  symbol:   variable FloatMath\n  location: class Problem\n\
    /tmp/tmp7as3b8q0.java:24: error: cannot find symbol\n            area = FloatMath.sqrt((c\
    \ * c) - (4 * a * a));\n                   ^\n  symbol:   variable FloatMath\n\
    \  location: class Problem\n/tmp/tmp7as3b8q0.java:26: error: cannot find symbol\n\
    \            area = FloatMath.sqrt((b * b) - (4 * a * a));\n                 \
    \  ^\n  symbol:   variable FloatMath\n  location: class Problem\n/tmp/tmp7as3b8q0.java:28:\
    \ error: cannot find symbol\n            area = FloatMath.sqrt((b * b) - (4 *\
    \ a * a));\n                   ^\n  symbol:   variable FloatMath\n  location:\
    \ class Problem\n/tmp/tmp7as3b8q0.java:30: error: cannot find symbol\n       \
    \     area = FloatMath.sqrt((c * c) - (4 * a * a));\n                   ^\n  symbol:\
    \   variable FloatMath\n  location: class Problem\n6 errors\n"
  stdout: ''
  timestamp: 1660011913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area;\n        // Test for triangle\n        if ((a\
    \ + b > c) || (b > c) || (c > a)) {\n            area = -1;\n        } else {\n\
    \            // Calculate the area of the triangle\n            area = (a * b\
    \ * c) / 2;\n            // round the area to 2 decimal points\n            area\
    \ = (int) Math.round(area * 100) / 100;\n        }\n        return area;\n}\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsvtuj_4.java:31)\n"
  stdout: ''
  timestamp: 1660011913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = a;\n        float s = (b+c) * 0.5f;\n    \
    \    float e = (a + b) * 0.5f;\n        float f = (a+c) * 0.5f;\n        if (s\
    \ > e) {\n            if (s > f) {\n                area = Math.sqrt(s * (s -\
    \ e) * (s - f) * (e - f));\n            }\n            else {\n              \
    \  area = Math.sqrt(s * (s - e) * (e - f) * (f - e));\n            }\n       \
    \ }\n        else {\n            if (e > f) {\n                area = Math.sqrt(s\
    \ * (s - e) * (e - f) * (f - e));\n            }\n            else {\n       \
    \         area = Math.sqrt(s * (s - e) * (e - f) * (f - e));\n            }\n\
    \        }\n        area = Math.round(area * 100) / 100f;\n        return area;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf3c5w8dj.java:24: error: incompatible types: possible lossy conversion\
    \ from double to float\n                area = Math.sqrt(s * (s - e) * (s - f)\
    \ * (e - f));\n                                ^\n/tmp/tmpf3c5w8dj.java:27: error:\
    \ incompatible types: possible lossy conversion from double to float\n       \
    \         area = Math.sqrt(s * (s - e) * (e - f) * (f - e));\n               \
    \                 ^\n/tmp/tmpf3c5w8dj.java:32: error: incompatible types: possible\
    \ lossy conversion from double to float\n                area = Math.sqrt(s *\
    \ (s - e) * (e - f) * (f - e));\n                                ^\n/tmp/tmpf3c5w8dj.java:35:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \                area = Math.sqrt(s * (s - e) * (e - f) * (f - e));\n        \
    \                        ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float aSq = a * a;\n        float bSq = b * b;\n      \
    \  float cSq = c * c;\n        float s = (a + b + c) / 2;\n\n        float ac\
    \ = a - c;\n        float bc = b - c;\n        float abc = (a + b + c) / 2;\n\n\
    \        if (a > b && a > c && b > c) {\n            float d = Math.sqrt((bSq\
    \ + cSq - aSq) * (bSq + cSq - aSq) + (bSq - aSq) * (bSq - aSq));\n           \
    \ return s;\n        } else if (ac > 0) {\n            return -1;\n        } else\
    \ if (bc > ac) {\n            float d1 = Math.sqrt((bSq + cSq - aSq) * (bSq +\
    \ cSq - aSq) + (bSq - aSq) * (bSq - aSq));\n            return d1;\n        }\
    \ else {\n            return -1;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqjwrl1c3.java:28: error: incompatible types: possible lossy conversion\
    \ from double to float\n            float d = Math.sqrt((bSq + cSq - aSq) * (bSq\
    \ + cSq - aSq) + (bSq - aSq) * (bSq - aSq));\n                               ^\n\
    /tmp/tmpqjwrl1c3.java:33: error: incompatible types: possible lossy conversion\
    \ from double to float\n            float d1 = Math.sqrt((bSq + cSq - aSq) * (bSq\
    \ + cSq - aSq) + (bSq - aSq) * (bSq - aSq));\n                               \
    \ ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a < 0 || b < 0 || c < 0 || (a + b + c) != 0)\n    \
    \        return -1;\n        return (a + b + c) / 2;\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpck12nilk.java:23)\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return Math.round(triangleArea(a, b, c) * 100) / 100.f;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.triangleArea(tmpszqva9hr.java:18)\n\tat Problem.triangleArea(tmpszqva9hr.java:18)\n\
    \tat Problem.tr"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float side1 = (float) (a+b+c);\n        float side2 = (float)\
    \ (a-c-b);\n        float side3 = (float) (a-b-c);\n        float area = 0.0f;\n\
    \        float result = side1*side2*side3;\n\n        if (a<b) {\n           \
    \ if (a<c) {\n                if (b<c) {\n                    area = side1;\n\
    \                }\n                else {\n                    area = side2;\n\
    \                }\n            }\n            else {\n                area =\
    \ side3;\n            }\n        }\n        else {\n            if (b<c) {\n \
    \               area = side1;\n            }\n            else {\n           \
    \     area = side3;\n            }\n        }\n        System.out.println(\"side1=\
    \ \"+side1);\n        System.out.println(\"side2= \"+side2);\n        System.out.println(\"\
    side3= \"+side3);\n        System.out.println(\"result= \"+result);\n        System.out.println(\"\
    area= \"+area);\n        return Math.round(area*100.0f)/100.0f;\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddhzale9.java:53)\n"
  stdout: 'side1= 12.0

    side2= -6.0

    side3= -6.0

    result= 432.0

    area= 12.0

    '
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a * a + b * b > c * c) {\n            return -1;\n\
    \        } else {\n            return (float) Math.sqrt(a * a + b * b);\n    \
    \    }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0id_tp00.java:25)\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = (a + b > c) ? a/2 : a+b;\n        float e = (a\
    \ + c > b) ? a/2 : a+c;\n        float t = b+c;\n        float area;\n       \
    \ if(a==b+c && b==c) {\n            area = s;\n        } else if(a==a+b && b==a+c\
    \ && c==a+b) {\n            area = (s+e)/2;\n        } else if(a==b+c || a==a+b\
    \ || a==c) {\n            area = (s+e)/2;\n        } else {\n            area\
    \ = -1;\n        }\n        DecimalFormat df = new DecimalFormat(\"##.##\");\n\
    \        if(area>=0) {\n            System.out.println(\"Area: \"+area);\n   \
    \         System.out.println(\"Area: \"+df.format(area));\n        } else {\n\
    \            System.out.println(\"Area: -1\");\n            System.out.println(\"\
    Area: -1\");\n        }\n        return area;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp99v5nkdp.java:31: error: cannot find symbol\n        DecimalFormat\
    \ df = new DecimalFormat(\"##.##\");\n        ^\n  symbol:   class DecimalFormat\n\
    \  location: class Problem\n/tmp/tmp99v5nkdp.java:31: error: cannot find symbol\n\
    \        DecimalFormat df = new DecimalFormat(\"##.##\");\n                  \
    \             ^\n  symbol:   class DecimalFormat\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n    \
    \        float s = (a + b + c) / 2;\n            float area;\n            if (s\
    \ == (float) Math.sqrt(s * (s - a) * (s - b) * (s - c))) {\n                area\
    \ = Math.acos(s / Math.sqrt(s * (s - a) * (s - b) * (s - c)));\n            }\n\
    \            else {\n                return -1;\n            }\n            return\
    \ area;\n        }\n        else {\n            return -1;\n        }\n}\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbp8as5w6.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n                area = Math.acos(s / Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c)));\n                                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float side1 = (float)(a+b+c)/2;\n        float side2 =\
    \ (float)(b-a+c)/2;\n        float side3 = (float)(b-c-a)/2;\n\n        float\
    \ area = 0;\n\n        if (side1==side2==side3) {\n            area = (float)(a+b+c)/2;\n\
    \        }\n        else if (side1 == side2 || side1 == side3) {\n           \
    \ area = (float)(a+b+c)*0.5;\n        }\n        else if (side2 == side3 || side2\
    \ == side3) {\n            area = (float)(a+b+c)*0.5;\n        }\n        else\
    \ {\n            area = (float)(a+b+c)*0.5;\n        }\n\n        float rounded_area\
    \ = Math.round(area*100)/100;\n\n        if (rounded_area == area) {\n       \
    \     return rounded_area;\n        }\n        else {\n            return -1;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprvmi0024.java:24: error: incomparable types: boolean and float\n\
    \        if (side1==side2==side3) {\n                        ^\n/tmp/tmprvmi0024.java:28:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \            area = (float)(a+b+c)*0.5;\n                                 ^\n\
    /tmp/tmprvmi0024.java:31: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = (float)(a+b+c)*0.5;\n             \
    \                    ^\n/tmp/tmprvmi0024.java:34: error: incompatible types: possible\
    \ lossy conversion from double to float\n            area = (float)(a+b+c)*0.5;\n\
    \                                 ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        if (a + b > c)\n            return\
    \ -1;\n        if (a + c > b)\n            return -1;\n        if (b + c > a)\n\
    \            return -1;\n        float s = (a + b + c) / 2.0;\n        float area2\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area2 < 1.0) {\n\
    \            area2 = 1.0;\n        } else {\n            area2 = area2 / 2.0;\n\
    \        }\n        area = area2 * Math.sqrt(3.0);\n        return Math.round(area\
    \ * 100.0) / 100.0;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5nu1g5n.java:25: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float s = (a + b + c) / 2.0;\n               \
    \               ^\n/tmp/tmpn5nu1g5n.java:26: error: incompatible types: possible\
    \ lossy conversion from double to float\n        float area2 = Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n                               ^\n/tmp/tmpn5nu1g5n.java:28:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \            area2 = 1.0;\n                    ^\n/tmp/tmpn5nu1g5n.java:30: error:\
    \ incompatible types: possible lossy conversion from double to float\n       \
    \     area2 = area2 / 2.0;\n                          ^\n/tmp/tmpn5nu1g5n.java:32:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        area = area2 * Math.sqrt(3.0);\n                     ^\n/tmp/tmpn5nu1g5n.java:33:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        return Math.round(area * 100.0) / 100.0;\n                          \
    \              ^\n6 errors\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return (float) (a * b + c) / 2;\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8jv269bd.java:21)\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 3*(a+b+c);\n        area = Math.round(area*100)/100;\n\
    \        return area;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptcmtuqgl.java:23)\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Create a triangle with lengths a through c with sides\
    \ b and c \n        // using the formula \n        // x^2 + y^2 = z^2 - a\n  \
    \      // \n        // The formula for getting the area of a triangle is x = sqrt(a^2\
    \ + b^2 - c^2)\n        // The formula for getting the length of x is sqrt(x^2\
    \ + y^2)\n        // The formula for getting the length of y is sqrt(a^2 + x^2\
    \ - b^2)\n        // The formula for getting the area of triangle is 0.5 * lengths\
    \ \n        // and all sides are positive\n\n        if (a<0 || b<0 || c<0) {\n\
    \            return -1;\n        }\n        float length = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) - Math.pow(c, 2));\n        float side1 = (float)(Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2)));\n        float side2 = (float)(Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) - Math.pow(c, 2)));\n        if (side1 < side2 && side1\
    \ < length) {\n            return side1;\n        }\n        if (side2 < side1\
    \ && side2 < length) {\n            return side2;\n        }\n        return length;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqs20shbg.java:31: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float length = Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) - Math.pow(c, 2));\n                                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b + c) == 0)\n            return -1;\n       \
    \ float s = (a + b) * (b + c) * (a + c) / 2.0;\n        return (float) Math.round(s);\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp22qx3m8k.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float s = (a + b) * (b + c) * (a + c) / 2.0;\n\
    \                                              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float side1 = (float) (a*Math.tan(b));\n        float side2\
    \ = (float) (c*Math.tan(b));\n        float side3 = (float) (a*Math.tan(c));\n\
    \        if(side1 + side2 > side3)\n            return Math.round(side1 + side2/2);\n\
    \        else\n            return -1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa61pgnt8.java:29)\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area_of_triangle;\n        if (a + b > c && a + c\
    \ > b && b + c > a) {\n            area_of_triangle = FloatMath.sqrt(a * a + b\
    \ * b + c * c);\n        }\n        return area_of_triangle;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3kcabi3f.java:20: error: cannot find symbol\n            area_of_triangle\
    \ = FloatMath.sqrt(a * a + b * b + c * c);\n                               ^\n\
    \  symbol:   variable FloatMath\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a==b) || (a==c) || (b==c)) return 0;\n        float\
    \ s = (a + b + c) / 2;\n        return Math.sqrt((s-a) * (s-b) * (s-c));\n}\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1qdryoqt.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt((s-a) * (s-b) * (s-c));\n   \
    \                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float side1 = (float) Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2));\n        float side2 = (float) Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n\
    \        float side3 = (float) Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n \
    \       if (side1 + side2 > side3) {\n            float triangle_area = ((side1\
    \ * side2) / (side3));\n            triangle_area = Math.round(triangle_area *\
    \ 100) / 100;\n            return triangle_area;\n        } else {\n         \
    \   return -1;\n        }\n}\n    public static void main(String[] args) {\n \
    \   assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8df4_8mn.java:30)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area;\n        if (a + b > c && a + c > b && b +\
    \ c > a) {\n            area = (a * a + b * b + c * c) / (2.0f);\n        } else\
    \ {\n            area = -1;\n        }\n        return Math.round(area * 100)\
    \ / 100.0f;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmxu0pthm.java:27)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if(a>b+c){\n            return -1;\n        }\n       \
    \ if(a>c+b){\n            return -1;\n        }\n        if(a>b+c){\n        \
    \    return -1;\n        }\n        float triangleArea = 3*(float)(a+b+c)/2;\n\
    \        return Math.round(triangleArea * 100) / 100;\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zcdpt4o.java:31)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = -1;\n        if ((a + b + c) > 0)\n      \
    \      area = (float) (Math.sqrt((Math.pow(a, 2) + Math.pow(b, 2)) * (Math.pow(c,\
    \ 2))) / 2);\n        return area;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpni3k9vas.java:24)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = (a+b+c)/2.0f;\n        if (s > a&&s<a+c&&s<=b)\
    \ {\n            return s;\n        } else {\n            return -1f;\n      \
    \  }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8zdev86v.java:26)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float a = Math.abs(a);\n        float b = Math.abs(b);\n\
    \        float c = Math.abs(c);\n        if ((a>0 && b>0) || (a>0 && c>0) || (b>0\
    \ && c>0)) {\n            float s = (a + b + c) / 2;\n            float area =\
    \ Math.abs(Math.sqrt(s*(s-a)*(s-b)*(s-c)));\n            return Math.round(area*100)/100;\n\
    \        } else {\n            return -1;\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa4ulcltp.java:18: error: variable a is already defined in method\
    \ triangleArea(int,int,int)\n        float a = Math.abs(a);\n              ^\n\
    /tmp/tmpa4ulcltp.java:19: error: variable b is already defined in method triangleArea(int,int,int)\n\
    \        float b = Math.abs(b);\n              ^\n/tmp/tmpa4ulcltp.java:20: error:\
    \ variable c is already defined in method triangleArea(int,int,int)\n        float\
    \ c = Math.abs(c);\n              ^\n/tmp/tmpa4ulcltp.java:23: error: incompatible\
    \ types: possible lossy conversion from double to float\n            float area\
    \ = Math.abs(Math.sqrt(s*(s-a)*(s-b)*(s-c)));\n                              \
    \   ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        double s = (a+b+c)/2;\n        return Math.round(s*s);\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgouwn8h5.java:22)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = Math.sqrt(a*b*c);\n        return Float.toString(area);\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8u3d8_d1.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = Math.sqrt(a*b*c);\n             \
    \                 ^\n/tmp/tmp8u3d8_d1.java:19: error: incompatible types: String\
    \ cannot be converted to float\n        return Float.toString(area);\n       \
    \                      ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return (float) (a * b) > (float) (c * a);\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq7yqztwh.java:18: error: incompatible types: boolean cannot be\
    \ converted to float\n        return (float) (a * b) > (float) (c * a);\n    \
    \                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = (a + b + c) / 2.0f;\n        float area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        return (area > 0.0f) ? area : -1;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1v5s3uo4.java:19: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n                              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return Float.isNaN(Math.sqrt((a * a) + (b * b) + (c * c))\
    \ || Math.sqrt((a * a) + (b * b)) < c);\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwzcqun5n.java:18: error: bad operand types for binary operator\
    \ '||'\n        return Float.isNaN(Math.sqrt((a * a) + (b * b) + (c * c)) || Math.sqrt((a\
    \ * a) + (b * b)) < c);\n                                                    \
    \              ^\n  first type:  double\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b > c) || (a + c > b) || (b + c > a)) {\n    \
    \        return -1;\n        }\n        float area = a * b / (float) Math.sqrt((c\
    \ * b) - (a * c));\n        return Math.round(area * 100) / 100;\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjojzskev.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Your code here\n        float area = 0;\n        if\
    \ ((a + b) > c) {\n            area = -1;\n        } else if (b < (c * 0.1)) {\n\
    \            area = -1;\n        } else {\n            area = (float) (Math.sqrt(a\
    \ * a + b * b + c * c));\n            area = Math.round(area / 2) * 2; \n    \
    \    }\n        return area;\n}\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmxn0ybf7.java:31)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Write your code here\n        if (a==b && b==c && c==a\
    \ || a==b && b==c || a==c && b==c) {\n            return 0;\n        }\n     \
    \   if (b > c && b > a || c > a && c > b) {\n            return -1;\n        }\n\
    \        float a = a < b ? a + b : b + c;\n        float b = a < c ? a + c : c\
    \ + a;\n        float c = b < a ? b + a : c + b;\n        float a = b < c ? b\
    \ + c : c + b;\n        float b = a < c ? a + c : c + a;\n        float c = b\
    \ < a ? a + c : b + a;\n        return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2));\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6tkyian6.java:25: error: variable a is already defined in method\
    \ triangleArea(int,int,int)\n        float a = a < b ? a + b : b + c;\n      \
    \        ^\n/tmp/tmp6tkyian6.java:26: error: variable b is already defined in\
    \ method triangleArea(int,int,int)\n        float b = a < c ? a + c : c + a;\n\
    \              ^\n/tmp/tmp6tkyian6.java:27: error: variable c is already defined\
    \ in method triangleArea(int,int,int)\n        float c = b < a ? b + a : c + b;\n\
    \              ^\n/tmp/tmp6tkyian6.java:28: error: variable a is already defined\
    \ in method triangleArea(int,int,int)\n        float a = b < c ? b + c : c + b;\n\
    \              ^\n/tmp/tmp6tkyian6.java:29: error: variable b is already defined\
    \ in method triangleArea(int,int,int)\n        float b = a < c ? a + c : c + a;\n\
    \              ^\n/tmp/tmp6tkyian6.java:30: error: variable c is already defined\
    \ in method triangleArea(int,int,int)\n        float c = b < a ? a + c : b + a;\n\
    \              ^\n/tmp/tmp6tkyian6.java:31: error: incompatible types: possible\
    \ lossy conversion from double to float\n        return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n                        ^\n7 errors\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if(a < b) a = b;\n        if(c < a) c = a;\n        float\
    \ area, side1, side2, side3, area, side1, side2, side3, area;\n        area =\
    \ b * c;\n        if(a*a + b*b > c*c) {\n            side1 = (float)(a*(a-b)/(2*b));\n\
    \            side2 = (float)(a*(b-c)/(2*c));\n            side3 = (float)(a*(b-a)/(2*a));\n\
    \            area = side1 + side2 + side3;\n        } else {\n            return\
    \ -1;\n        }\n        float x = (area / 2.0F);\n        if(a*a > x*x) {\n\
    \            area = x;\n        }\n        if(area > 0) return (float)Math.round(area*100.0F)/100.0F;\n\
    \        return -1;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3n6h_x1a.java:20: error: variable area is already defined in method\
    \ triangleArea(int,int,int)\n        float area, side1, side2, side3, area, side1,\
    \ side2, side3, area;\n                                         ^\n/tmp/tmp3n6h_x1a.java:20:\
    \ error: variable side1 is already defined in method triangleArea(int,int,int)\n\
    \        float area, side1, side2, side3, area, side1, side2, side3, area;\n \
    \                                              ^\n/tmp/tmp3n6h_x1a.java:20: error:\
    \ variable side2 is already defined in method triangleArea(int,int,int)\n    \
    \    float area, side1, side2, side3, area, side1, side2, side3, area;\n     \
    \                                                 ^\n/tmp/tmp3n6h_x1a.java:20:\
    \ error: variable side3 is already defined in method triangleArea(int,int,int)\n\
    \        float area, side1, side2, side3, area, side1, side2, side3, area;\n \
    \                                                            ^\n/tmp/tmp3n6h_x1a.java:20:\
    \ error: variable area is already defined in method triangleArea(int,int,int)\n\
    \        float area, side1, side2, side3, area, side1, side2, side3, area;\n \
    \                                                                   ^\n5 errors\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = (float)(b * b) - (float)(pow(a, 2) * (float)(c\
    \ + a));\n        \n        float result = (area > 0 ? area : -1);\n        \n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc6_q22w1.java:18: error: cannot find symbol\n        float area\
    \ = (float)(b * b) - (float)(pow(a, 2) * (float)(c + a));\n                  \
    \                            ^\n  symbol:   method pow(int,int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = a * b * c;\n        if (isValidArea(area,\
    \ a, b, c)) {\n            return Math.round(area / 2.0F);\n        } else {\n\
    \            return -1;\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzqsqv_62.java:19: error: cannot find symbol\n        if (isValidArea(area,\
    \ a, b, c)) {\n            ^\n  symbol:   method isValidArea(float,int,int,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        int area = (a + b + c) / 2;\n        int sideA = (a + b)\
    \ / 2;\n        int sideB = (a + c) / 2;\n        int sideC = (b + c) / 2;\n \
    \       float area = 0.0;\n\n        // Check if any 2 sides are greater than\
    \ the third side\n        if (sideA < sideB) {\n            if (sideA < sideC)\
    \ {\n                if (sideB < sideC) {\n                    area = sideA *\
    \ sideB * sideC;\n                } else {\n                    area = sideA *\
    \ sideC * sideB;\n                }\n            } else {\n                if\
    \ (sideB < sideC) {\n                    area = sideA * sideB * sideC;\n     \
    \           } else {\n                    area = sideA * sideC * sideB;\n    \
    \            }\n            }\n        } else {\n            if (sideA < sideC)\
    \ {\n                if (sideB < sideC) {\n                    area = sideA *\
    \ sideB * sideC;\n                } else {\n                    area = sideA *\
    \ sideC * sideB;\n                }\n            } else {\n                if\
    \ (sideB < sideC) {\n                    area = sideA * sideB * sideC;\n     \
    \           } else {\n                    area = sideA * sideC * sideB;\n    \
    \            }\n            }\n        }\n        // Round the area to 2 decimal\
    \ places\n        return Math.round(area * 100) / 100.0f;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbzupkuem.java:22: error: variable area is already defined in method\
    \ triangleArea(int,int,int)\n        float area = 0.0;\n              ^\n/tmp/tmpbzupkuem.java:22:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        float area = 0.0;\n                     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b > c) && (b > c) && (a > c)) {\n            return\
    \ (a * b * c) / 2.0;\n        }\n        return -1;\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpus21opzi.java:19: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return (a * b * c) / 2.0;\n              \
    \                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = (a + b + c) / 2.0f;\n        if ((a + b > c)\
    \ && (s + c > s)) {\n            float area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n            return (float)Math.round(area / 2.0f) * 2.0f;\n   \
    \     }\n        return -1.0f;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcraba_zo.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n            float area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float triangleArea = (a+b+c)/2.0f;\n        return Math.max(triangleArea,\
    \ 0.0f);\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmr40ytay.java:23)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0.0f;\n\n        if( a <= b && a <= c ) {\n\
    \            area = a ;\n        } else if( b <= c ) {\n            area = b ;\n\
    \        } else {\n            area = c ;\n        }\n\n        return area;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1szy76w.java:31)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float a, b, c;\n        int sum1, sum2, sum3;\n       \
    \ sum1 = a + b + c;\n        sum2 = a - b - c;\n        sum3 = Math.max(sum1,\
    \ sum2);\n        return (float) (sum3 / 2);\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp45ntydim.java:18: error: variable a is already defined in method\
    \ triangleArea(int,int,int)\n        float a, b, c;\n              ^\n/tmp/tmp45ntydim.java:18:\
    \ error: variable b is already defined in method triangleArea(int,int,int)\n \
    \       float a, b, c;\n                 ^\n/tmp/tmp45ntydim.java:18: error: variable\
    \ c is already defined in method triangleArea(int,int,int)\n        float a, b,\
    \ c;\n                    ^\n/tmp/tmp45ntydim.java:20: error: incompatible types:\
    \ possible lossy conversion from float to int\n        sum1 = a + b + c;\n   \
    \                  ^\n/tmp/tmp45ntydim.java:21: error: incompatible types: possible\
    \ lossy conversion from float to int\n        sum2 = a - b - c;\n            \
    \         ^\n5 errors\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = -1f;\n        // Test for validity\n     \
    \   if ((a + b > c) && (c >= b)) {\n            area = (a * b) / c;\n        \
    \    return Math.round(area * 100) / 100;\n        } else {\n            return\
    \ -1f;\n        }\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23nv4gp5.java:28)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area;\n        area = (a * b * c) / 2.0;\n      \
    \  float ab = a + b;\n        float bc = b + c;\n        float ac = a + c;\n \
    \       if (ab > bc && ab > ac) {\n            return area;\n        } else {\n\
    \            return -1;\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn0seusd0.java:19: error: incompatible types: possible lossy conversion\
    \ from double to float\n        area = (a * b * c) / 2.0;\n                  \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a+b>c) {\n            return -1;\n        }\n     \
    \   return (float)(a+b*(b+c)/3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpslb7pwgx.java:24)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        int s = (a + b > c) ? b : (a + c > b) ? c : (a + b);\n\
    \        int t = (a + c > b) ? a : (a + b > c) ? c : (b + c);\n        return\
    \ Float.valueOf(s).divide(Float.valueOf(t)).floatValue();\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmvn1ctms.java:20: error: cannot find symbol\n        return Float.valueOf(s).divide(Float.valueOf(t)).floatValue();\n\
    \                               ^\n  symbol:   method divide(Float)\n  location:\
    \ class Float\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float triArea = (float) (a * b * c / 2);\n        double\
    \ triangleAreaDouble = (double) triArea;\n        if (triangleAreaDouble > Math.sqrt((float)\
    \ Math.pow((float) a, 2) + (float) Math.pow((float) b, 2) + (float) Math.pow((float)\
    \ c, 2))) {\n            return -1;\n        }\n        \n        return triArea;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0e9klcu9.java:27)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return Math.sqrt((a*a)+(2*b*c)-(2*b*b));\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpagg8jze2.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt((a*a)+(2*b*c)-(2*b*b));\n   \
    \                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = (a + b + c) / 2.0f;\n        if ((a + b >\
    \ c) || (b > c) || (c > a)) {\n            area = -1.0f;\n        }\n        return\
    \ Math.round(area * 100.0) / 100.0f;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8k_e9hi7.java:25)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float sideA = a;\n        float sideB = b;\n        float\
    \ sideC = (a + b + c) / 2;\n\n        float area_of_tri = (sideA * sideB * sideC)\
    \ / 4;\n\n        if (sideA > sideB && sideA > sideC) {\n            return area_of_tri;\n\
    \        } else if (sideB > sideA && sideB > sideC) {\n            return area_of_tri;\n\
    \        } else {\n            return area_of_tri;\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1tvgb6lv.java:33)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return ((a + b + c) > c) ? Math.sqrt(a * b * c / (a + b\
    \ + c)) : -1;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpumd_qkul.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return ((a + b + c) > c) ? Math.sqrt(a * b * c\
    \ / (a + b + c)) : -1;\n                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Write your code here\n        float triangleArea;\n\
    \        if (Math.abs(a + b) > Math.abs(c)) {\n            triangleArea = c /\
    \ a;\n        } else if (Math.abs(b) > Math.abs(c)) {\n            triangleArea\
    \ = c / b;\n        } else {\n            triangleArea = c / c;\n        }\n \
    \       return Math.ceil(triangleArea * 100);\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn3rf36lp.java:27: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.ceil(triangleArea * 100);\n      \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float side = (a + b + c) / 2.0f;\n        if (side > b)\
    \ {\n            side = b;\n        } else if (side > a) {\n            side =\
    \ a;\n        }\n        if (side > c) {\n            side = c;\n        } else\
    \ if (side > b) {\n            side = b;\n        }\n        float s = (a + b\
    \ + c) / 2.0f;\n        float area = (s * s) * ((s - a) * (s - b) * (s - c));\n\
    \        return Math.round(area * 100.0) / 100.0f;\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26ewvrln.java:34)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if(a<b && b<c){\n            return 0;\n        }\n   \
    \     if(a>b && b>c){\n            return 0;\n        }\n        if(a>b&&b>c){\n\
    \            return 0;\n        }\n        if(a<b&&b<c){\n            return 0;\n\
    \        }\n        float area;\n        if(a>b && b>c){\n            area=(b+c)*(a-b)/2;\n\
    \        }\n        if(a<b && b>c){\n            area=(c+a)*(b-a)/2;\n       \
    \ }\n        if(a>b&&b>c){\n            area=(c+a)*(2-b)/2;\n        }\n     \
    \   if(a<b&&b<c){\n            area=(c+a)*(2-a)/2;\n        }\n        return\
    \ Math.round(area * 100.0) / 100.0;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppzgoyinf.java:43: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.round(area * 100.0) / 100.0;\n   \
    \                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a>b && b>c && c>a) return (float) Math.sqrt(a*b + b*c\
    \ + c*a);\n        else return -1;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp59w2rmic.java:22)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if ((a + b + c) < 0) {\n            return -1;\n      \
    \  }\n        float sum = a;\n        sum += b;\n        sum += c;\n        double\
    \ area = sum / 2;\n        return Math.round(area * 100) / 100;\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2geft2rh.java:29)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        double side1 = (a+b+c)/2;\n        double side2 = (a+b-c)/2;\n\
    \        double side3 = (a-b-c)/2;\n        if(side1+side2+side3 == 0) return\
    \ -1;\n        double side4 = Math.sqrt(Math.pow(side1,2)+Math.pow(side2,2)+Math.pow(side3,2));\n\
    \        return Math.round(side4*100.0f)/100.0f;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpubd9h0za.java:26)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = a + b + c;\n        if(s > 0) {\n           \
    \ return (float)(s/2);\n        } else {\n            return -1;\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6g1qnkl1.java:27)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = ((float) (a * b)) + ((float) (a * c)) + ((float)\
    \ (b * c));\n        if (a < 0 || b < 0 || c < 0 || a > b || a > c || b > c ||\
    \ a + b > c) {\n            area = -1;\n        }\n        \n        return area;\n\
    }\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppoklwukm.java:26)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a>b && a>c) {\n            if (b>c)\n             \
    \   return triangleArea(b, c, a);\n            else\n                return triangleArea(c,\
    \ a, b);\n        }\n        else if(b>a && b>c) {\n            if (c>a)\n   \
    \             return triangleArea(a, c, b);\n            else\n              \
    \  return triangleArea(b, a, c);\n        }\n        else if(c>a && c>b) {\n \
    \           if (a>b)\n                return triangleArea(a, b, c);\n        \
    \    else\n                return triangleArea(a, c, b);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqz75us_q.java:36: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0;\n        if (a+b>c) {\n            return\
    \ area;\n        }\n        if (a+c>b) {\n            return area;\n        }\n\
    \        if (b+c>a) {\n            return area;\n        }\n        float h =\
    \ b + c;\n        float k = a + h;\n        area = (float) (a*b + a*c + b*c);\n\
    \        area = (float) (area / (float) (h*k));\n        return area;\n}\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp9sksob9.java:35)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        int s = a + b + c;\n        if (s <= 0) {\n           \
    \ return -1;\n        } else if (a == b && b == c) {\n            return 0;\n\
    \        } else if (a == b || b == c || a == c) {\n            return (float)\
    \ Math.sqrt((float)Math.pow((float)b, (float)2)\n                    + (float)Math.pow((float)c,\
    \ (float)2));\n        }\n        return -1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2eyidylo.java:30)\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Triangle area is calculated by three sides (a+b+c)/2\n\
    \        // Sum of two sides is greater than third side, therefore it's a valid\
    \ triangle\n        if ((a + b + c) > 0) {\n            return (float) (Math.sqrt((a\
    \ * a) + (b * b) + (c * c)) * (a > b && a > c));\n        } else {\n         \
    \   return (float) -1;\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbfmgyynb.java:21: error: bad operand types for binary operator\
    \ '*'\n            return (float) (Math.sqrt((a * a) + (b * b) + (c * c)) * (a\
    \ > b && a > c));\n                                                          \
    \         ^\n  first type:  double\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        int abSum = a + b;\n        int bcSum = b + c;\n      \
    \  if (abSum > bcSum)\n            return (float) (a + b + c) / 2.0;\n       \
    \ return -1;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplxxl_w5y.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return (float) (a + b + c) / 2.0;\n      \
    \                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float h = b * b / (float) Math.sqrt((float)((a + b) * (a\
    \ + c) * (b + c)));\n        float s = a + b + c;\n        float area = h * s\
    \ / (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return Math.round(area\
    \ * 100.0) / 100.0;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppndmj2_z.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.round(area * 100.0) / 100.0;\n   \
    \                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Write your code here\n        if ((a + b > c) || (b\
    \ + c > a) || (c + a > b))\n            return -1f;\n        else\n          \
    \  return (float) (a * c + b * a + c * b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjxmokv_2.java:25)\n"
  stdout: ''
  timestamp: 1660011919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return a*b*c > b+c ? a/b*c : -1;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gv86bi6.java:21)\n"
  stdout: ''
  timestamp: 1660011919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float ab = a + b;\n        float ac = a + c;\n        float\
    \ bc = b + c;\n        if (ab <= ac && ab <= bc) {\n            return ab;\n \
    \       } else if (ac <= ab && ac <= bc) {\n            return ac;\n        }\
    \ else {\n            return bc;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7oabymj1.java:30)\n"
  stdout: ''
  timestamp: 1660011919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0.0;\n        if (Math.max(a, b) > c) {\n\
    \            return -1;\n        }\n        if (Math.max(a, b) < c) {\n      \
    \      return -1;\n        }\n        area = (a * b) / c;\n        return Math.round(area\
    \ * 100.0) / 100.0f;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphecbglwc.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = 0.0;\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float area = 0.0f;\n        if ((b > a) && (c > b)) {\n\
    \            area = (a * b) / c;\n        } else if (c > b) {\n            area\
    \ = ((b * b) / c);\n        } else if (b > a) {\n            area = ((c * c) /\
    \ b);\n        }\n        return Math.round(area * 100) / 100;\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpavdwgdxh.java:29)\n"
  stdout: ''
  timestamp: 1660011919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        return 0;\n}\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxir0vjqy.java:21)\n"
  stdout: ''
  timestamp: 1660011766
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float triangleArea;\n        float sideSum;\n\n       \
    \ triangleArea = (float) (a * b * c) / 2;\n\n        sideSum = (float) a + b +\
    \ c;\n\n        if (sideSum <= triangleArea) {\n            return triangleArea;\n\
    \        } else {\n            return -1;\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5xq8tevx.java:32)\n"
  stdout: ''
  timestamp: 1660011919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        double s = 0.0;\n        if ((a + b > c) && (a + c > b)\
    \ && (b + c > a)) {\n            s = ((a + b + c) / 2) * Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n        } else if ((a + b < c) && (a\
    \ + c < b) && (b + c < a)) {\n            s = (a * a + b * b + c * c) / Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n        } else {\n            s = -1;\n\
    \        }\n        return (float) Math.round(s * 100) / 100;\n}\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_0oiuwjg.java:29)\n"
  stdout: ''
  timestamp: 1660011919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // The area of a triangle with side length is (a * b) *\
    \ c where a = base and b = height\n        return (a * b) * c;\n}\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3), (4), (5)) ==\
    \ (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2z242rso.java:22)\n"
  stdout: ''
  timestamp: 1660011919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if(b != 0)\n            return Math.abs((float)(a * b +\
    \ (b * c)) / 2);\n        else\n            return -1;\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1fa8h5d0.java:24)\n"
  stdout: ''
  timestamp: 1660011919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = a + b + c;\n        if (s > 0) {\n          \
    \  float area = s / 2;\n            if (a + b > c) {\n                area = area\
    \ + ((c - b) * (a - b)) / 2;\n            }\n            if (a + c > b) {\n  \
    \              area = area + ((a - c) * (b - c)) / 2;\n            }\n       \
    \     if (b + c > a) {\n                area = area + ((b - c) * (a - c)) / 2;\n\
    \            }\n            return area;\n        }\n        return -1;\n}\n \
    \   public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptu24z4wb.java:35)\n"
  stdout: ''
  timestamp: 1660011920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        // Write your code here\n        float side1 = (a + b +\
    \ c) / 2;\n        float side2 = Math.sqrt((a*a) + (b*b) + (c*c));\n        float\
    \ side3 = Math.max((side1, side2), 0);\n        if (side1 + side2 > side3) {\n\
    \            System.out.println(\"Three sides make a valid triangle\");\n    \
    \        return (float) Math.sqrt((side1 * side1) + (side2 * side2) + (side3 *\
    \ side3));\n        }\n        return -1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehan5yoo.java:21: error: -> expected\n        float side3 = Math.max((side1,\
    \ side2), 0);\n                                             ^\n1 error\n"
  stdout: ''
  timestamp: 1660011919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        int sA = a + b;\n        int sB = a + c;\n        int sC\
    \ = c + b;\n        // return sA > sB && sA > sC ? sA : -1;\n        // return\
    \ sB > sC ? sB : -1;\n        // return sA > sC ? sA : -1;\n        if (sA > sB\
    \ && sA > sC) {\n            return sA;\n        } else if (sB > sC) {\n     \
    \       return sB;\n        } else {\n            return sC;\n        }\n}\n \
    \   public static void main(String[] args) {\n    assert(triangleArea((3), (4),\
    \ (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n \
    \   assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxv7blxa6.java:33)\n"
  stdout: ''
  timestamp: 1660011920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        double d = b * b - 4 * a * c;\n        if (d > 0) {\n \
    \           double x = Math.sqrt(d);\n            double y = (a * a) + (b * b)\
    \ - (c * c);\n            return (float) Math.sqrt(y / x) / 2;\n        } else\
    \ {\n            return -1;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n    assert(triangleArea((1),\
    \ (2), (10)) == (float)-1);\n    assert(triangleArea((4), (8), (5)) == (8.18f));\n\
    \    assert(triangleArea((2), (2), (2)) == (1.73f));\n    assert(triangleArea((1),\
    \ (2), (3)) == (float)-1);\n    assert(triangleArea((10), (5), (7)) == (16.25f));\n\
    \    assert(triangleArea((2), (6), (3)) == (float)-1);\n    assert(triangleArea((1),\
    \ (1), (1)) == (0.43f));\n    assert(triangleArea((2), (2), (10)) == (float)-1);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps15i8wdu.java:28)\n"
  stdout: ''
  timestamp: 1660011920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        if (a + b > c) {\n            return -1;\n        }\n \
    \       return Math.abs(((b * b) - (4 * a * c)) / 2);\n}\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3), (4), (5)) == (6.0f));\n\
    \    assert(triangleArea((1), (2), (10)) == (float)-1);\n    assert(triangleArea((4),\
    \ (8), (5)) == (8.18f));\n    assert(triangleArea((2), (2), (2)) == (1.73f));\n\
    \    assert(triangleArea((1), (2), (3)) == (float)-1);\n    assert(triangleArea((10),\
    \ (5), (7)) == (16.25f));\n    assert(triangleArea((2), (6), (3)) == (float)-1);\n\
    \    assert(triangleArea((1), (1), (1)) == (0.43f));\n    assert(triangleArea((2),\
    \ (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpid2i5zlz.java:24)\n"
  stdout: ''
  timestamp: 1660011920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(int a, int\
    \ b, int c) {\n        float s = (a + b + c) / 2.0f;\n        if (s > a) {\n \
    \           s = s - a;\n        }\n        if (s > b) {\n            s = s - b;\n\
    \        }\n        if (s > c) {\n            s = s - c;\n        }\n        return\
    \ s;\n}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
    \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
    \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
    \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
    \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
    \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
    \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmpm4yi3.java:31)\n"
  stdout: ''
  timestamp: 1660011920

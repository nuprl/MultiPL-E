name: HumanEval_125_split_words
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int res = 0;\n        List<String> txts =\
    \ Arrays.asList(txt.split(\"(?<=\\\\w)|(?<=\\\\s)\"));\n        System.out.println(txts);\n\
    \        Union_ArrayList_String__int w = new Union_ArrayList_String__int();\n\
    \        w.addAll(txts);\n        System.out.println(w);\n        if (w.count()\
    \ % 2 == 1) {\n            System.out.println(\"1\");\n            res = 1;\n\
    \        } else {\n            System.out.println(\"2\");\n            res = 2;\n\
    \        }\n        return res;\nreturn new Union_ArrayList_String__int();\n \
    \   }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc8a794tb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpc8a794tb.java:20:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int w = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpc8a794tb.java:20: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ w = new Union_ArrayList_String__int();\n                                   \
    \         ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpc8a794tb.java:31: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpc8a794tb.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpc8a794tb.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpc8a794tb.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpc8a794tb.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int myArrayList =\
    \ new Union_ArrayList_String__int();\n        txt = txt.replaceAll(\"\\\\s\",\
    \ \"\");\n        char[] c = txt.toCharArray();\n        for (int i = 0; i < c.length;\
    \ i++) {\n            if (c[i] == ',')\n                myArrayList.add(i, 1);\n\
    \            else if (c[i] == ' ')\n                myArrayList.add(i, 1);\n \
    \           else\n                myArrayList.add(i, 0);\n        }\n        return\
    \ myArrayList;\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3nrdcw81.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp3nrdcw81.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int myArrayList =\
    \ new Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp3nrdcw81.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int myArrayList = new Union_ArrayList_String__int();\n\
    \                                                      ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp3nrdcw81.java:29: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp3nrdcw81.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3nrdcw81.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3nrdcw81.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3nrdcw81.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                               "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        ArrayList<String> list = new ArrayList<>();\n\
    \        String word = \"\";\n        int c = 0;\n        for (char c : txt.toCharArray())\
    \ {\n            word += c;\n            if (Character.isWhitespace(c)) {\n  \
    \              list.add(word);\n                word = \"\";\n            }\n\
    \            if (c == ',') {\n                list.add(word);\n              \
    \  word = \"\";\n            }\n        }\n        return list;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4y1f6aqh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp4y1f6aqh.java:20:\
    \ error: variable c is already defined in method splitWords(String)\n        for\
    \ (char c : txt.toCharArray()) {\n                  ^\n/tmp/tmp4y1f6aqh.java:32:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp4y1f6aqh.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp4y1f6aqh.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp4y1f6aqh.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp4y1f6aqh.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp4y1f6aqh.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        return Arrays.stream(txt.split(\" \"))\n \
    \               .map(s -> s.contains(\",\") ? s.split(\",\") : s.split(\"\"))\n\
    \                .flatMap(Arrays::stream)\n                .map(String::toLowerCase)\n\
    \                .map(String::chars)\n                .filter(c -> {\n       \
    \             for (int i = 0; i < 26; i++) {\n                        if (c.charAt(i)\
    \ >= 'a' && c.charAt(i) <= 'z') {\n                            return false;\n\
    \                        }\n                    }\n                    return\
    \ true;\n                })\n                .filter(c -> {\n                \
    \    for (int i = 0; i < 26; i++) {\n                        if (c.charAt(i) !=\
    \ 'a' && c.charAt(i) != 'z') {\n                            return false;\n  \
    \                      }\n                    }\n                    return true;\n\
    \                })\n                .collect(Collectors.toCollection(LinkedList::new));\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjyc8jicn.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpjyc8jicn.java:24:\
    \ error: cannot find symbol\n                        if (c.charAt(i) >= 'a' &&\
    \ c.charAt(i) <= 'z') {\n                             ^\n  symbol:   method charAt(int)\n\
    \  location: variable c of type IntStream\n/tmp/tmpjyc8jicn.java:24: error: cannot\
    \ find symbol\n                        if (c.charAt(i) >= 'a' && c.charAt(i) <=\
    \ 'z') {\n                                                   ^\n  symbol:   method\
    \ charAt(int)\n  location: variable c of type IntStream\n/tmp/tmpjyc8jicn.java:32:\
    \ error: cannot find symbol\n                        if (c.charAt(i) != 'a' &&\
    \ c.charAt(i) != 'z') {\n                             ^\n  symbol:   method charAt(int)\n\
    \  location: variable c of type IntStream\n/tmp/tmpjyc8jicn.java:32: error: cannot\
    \ find symbol\n                        if (c.charAt(i) != 'a' && c.charAt(i) !=\
    \ 'z') {\n                                                   ^\n  symbol:   method\
    \ charAt(int)\n  location: variable c of type IntStream\n/tmp/tmpjyc8jicn.java:39:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpjyc8jicn.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpjyc8jicn.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpjyc8jicn.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    He"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        int length = txt.length();\n        char[] charArray = txt.toCharArray();\n\
    \        char[] cArray = new char[length];\n        for (int i = 0; i < length;\
    \ i++) {\n            cArray[i] = charArray[i];\n        }\n        int evenIndex\
    \ = 0;\n        int oddIndex = 0;\n        for (int i = 0; i < length; i++) {\n\
    \            if (cArray[i] > 96 && cArray[i] < 123 || cArray[i] == ',') {\n  \
    \              if (cArray[i] > 96 && cArray[i] < 123 || cArray[i] == ',') {\n\
    \                    result.add(cArray[i]);\n                }\n             \
    \   if (cArray[i] > 124 && cArray[i] < 172 || cArray[i] == 'a') {\n          \
    \          evenIndex++;\n                }\n                if (cArray[i] > 173\
    \ && cArray[i] < 194 || cArray[i] == 'b') {\n                    oddIndex++;\n\
    \                }\n            }\n        }\n        if (evenIndex % 2 == 1)\
    \ {\n            result.addAll(splitWords(txt, oddIndex));\n        }\n      \
    \  return result;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnfr_jxii.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpnfr_jxii.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpnfr_jxii.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpnfr_jxii.java:40: error: method splitWords\
    \ in class Problem cannot be applied to given types;\n            result.addAll(splitWords(txt,\
    \ oddIndex));\n                          ^\n  required: String\n  found: String,int\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpnfr_jxii.java:43:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpnfr_jxii.java:46: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpnfr_jxii.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpnfr_jxii.java:48: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ua = new Union_ArrayList_String__int();\n\
    \        txt = txt.toLowerCase().trim();\n        String[] txtSplitted = txt.split(\"\
    \ \");\n        for (String s: txtSplitted) {\n            s = s.toLowerCase().trim();\n\
    \            if (s.contains(\",\")) {\n                String[] strSplit = s.split(\"\
    ,\");\n                for (String str : strSplit) {\n                    str\
    \ = str.toLowerCase().trim();\n                    if (strSplit.length > 1) {\n\
    \                        ua.add(strSplit[0]);\n                    }\n       \
    \         }\n            } else {\n                ua.add(s);\n            }\n\
    \        }\n        return ua;\nreturn new Union_ArrayList_String__int();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpww72xw17.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpww72xw17.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ua = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpww72xw17.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ua = new Union_ArrayList_String__int();\n                                  \
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpww72xw17.java:35: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpww72xw17.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpww72xw17.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpww72xw17.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpww72xw17.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        HashSet<String> words = new HashSet<>();\n\
    \        String[] wordsList = txt.split(\" \");\n        wordsList = Arrays.copyOf(wordsList,\
    \ wordsList.length);\n\n        List<String> splitList = new ArrayList<>();\n\
    \        splitList.add(wordsList[0]);\n        int i = 0;\n        int count =\
    \ 0;\n        for (String word : wordsList) {\n            if (word.isEmpty())\
    \ {\n                continue;\n            }\n            while (i < wordsList.length\
    \ - 1 && wordsList[i + 1].equals(\"\")) {\n                i++;\n            }\n\
    \            String w = wordsList[i];\n            words.add(w);\n           \
    \ splitList.add(w);\n            i++;\n        }\n        if (count == 0) {\n\
    \            count = countLettersOnAlphabet(splitList.get(0));\n        }\n  \
    \      return new Union_ArrayList_String__int(splitList.toArray(new String[splitList.size()]),\
    \ count);\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplpe87myh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmplpe87myh.java:38:\
    \ error: cannot find symbol\n            count = countLettersOnAlphabet(splitList.get(0));\n\
    \                    ^\n  symbol:   method countLettersOnAlphabet(String)\n  location:\
    \ class Problem\n/tmp/tmplpe87myh.java:40: error: cannot find symbol\n       \
    \ return new Union_ArrayList_String__int(splitList.toArray(new String[splitList.size()]),\
    \ count);\n                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmplpe87myh.java:41: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmplpe87myh.java:44: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplpe87myh.java:45: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplpe87myh.java:46: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplpe87myh.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        \n        String [] words = txt.split(\" \"\
    );\n        \n        Union_ArrayList_String__int list = new Union_ArrayList_String__int();\n\
    \        \n        int length = 0;\n        \n        if (words == null) {\n \
    \           return list;\n        }\n        \n        for (String word : words)\
    \ {\n            if (word.equals(\"\")) {\n                list.add(\"\", 1);\n\
    \            } else {\n                length += word.length();\n            }\n\
    \        }\n        \n        int counter = 0;\n        for (int i = 0; i < length;\
    \ i++) {\n            for (int j = 0; j < 26; j++) {\n                if (i +\
    \ j <= length) {\n                    if (j % 2 == 0) {\n                    \
    \    list.add(words[i + j], 1);\n                        counter++;\n        \
    \            } else {\n                        list.add(words[j], 1);\n      \
    \                  counter++;\n                    }\n                }\n    \
    \        }\n        }\n        \n        return list;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphvscprpz.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmphvscprpz.java:20:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int list = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmphvscprpz.java:20: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ list = new Union_ArrayList_String__int();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmphvscprpz.java:52: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmphvscprpz.java:55: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmphvscprpz.java:56: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmphvscprpz.java:57: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmphvscprpz.java:58: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                 "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List <String> words = Arrays.asList(txt.split(\"\
    \ \"));\n        List<String> splitWords = new ArrayList<>();\n\n        for (int\
    \ i = 0; i < words.size(); i++) {\n            if (!words.get(i).contains(\",\"\
    )) {\n                splitWords.add(words.get(i));\n            } else {\n  \
    \              splitWords.add(words.get(i).split(\",\")[0]);\n            }\n\
    \        }\n\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ret.add(splitWords);\n\n        return ret.getArrayList();\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg_fk0y2l.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpg_fk0y2l.java:28:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpg_fk0y2l.java:28: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg_fk0y2l.java:32: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg_fk0y2l.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg_fk0y2l.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg_fk0y2l.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg_fk0y2l.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Write your code here\n        Set<String>\
    \ set = new HashSet<>();\n        for (int i = 0; i < txt.length(); i++) {\n \
    \           String word = txt.substring(i, i + 1).trim();\n            if (word.equals(\"\
    ,\") || word.equals(\" \")) {\n                set.add(word);\n            } else\
    \ {\n                String lowerWord = word.toLowerCase();\n                if\
    \ (set.add(lowerWord)) {\n                    int len = word.length();\n     \
    \               for (int k = 0; k < len; k++) {\n                        char\
    \ ch = word.charAt(k);\n                        if (ch >= 'a' && ch <= 'z') {\n\
    \                            if (k == len - 1 || Character.isAlphabetic(word.charAt(k\
    \ + 1))) {\n                                return Union_ArrayList_String__int.create(set);\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n        return Union_ArrayList_String__int.create(set);\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt7qtx15x.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpt7qtx15x.java:31:\
    \ error: cannot find symbol\n                                return Union_ArrayList_String__int.create(set);\n\
    \                                       ^\n  symbol:   variable Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpt7qtx15x.java:38: error: cannot find symbol\n\
    \        return Union_ArrayList_String__int.create(set);\n               ^\n \
    \ symbol:   variable Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpt7qtx15x.java:39: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt7qtx15x.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt7qtx15x.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt7qtx15x.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt7qtx15x.java:45: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symb"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> words = new ArrayList<>();\n\
    \        Union_ArrayList_String__int ret = new Union_ArrayList_String__int(\n\
    \                new ArrayList<>(), new ArrayList<>(), new ArrayList<>());\n \
    \       boolean first = true;\n        for(String s : txt.split(\" \")) {\n  \
    \          words.add(s);\n        }\n        for(String s: words) {\n        \
    \    if(!first) {\n                ret.addString__int(s);\n            } else\
    \ {\n                ret.addString__int(s);\n                ret.addString__int(s);\n\
    \                first = false;\n            }\n        }\n        return ret;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzrd7iygn.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpzrd7iygn.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int(\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpzrd7iygn.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int(\n                                   \
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzrd7iygn.java:34: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzrd7iygn.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzrd7iygn.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzrd7iygn.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzrd7iygn.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        // Your code here\n        String[] strarray = txt.split(\" \");\n  \
    \      Arrays.sort(strarray);\n        for (int i = 0; i < strarray.length; i++)\
    \ {\n            int count = strarray[i].length();\n            for (int j = 0;\
    \ j < strarray[i].length(); j++) {\n                int val = strarray[i].charAt(j);\n\
    \                if (val > 32 && val < 123) {\n                    count++;\n\
    \                }\n            }\n            if (strarray[i].length() == 0)\
    \ {\n                count++;\n            }\n            words.addElement(new\
    \ Integer(count));\n        }\n        words.addElement(new Integer(words.size()));\n\
    \        return words;\nreturn new Union_ArrayList_String__int();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4b0l6xrl.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp4b0l6xrl.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp4b0l6xrl.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ words = new Union_ArrayList_String__int();\n                               \
    \                 ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp4b0l6xrl.java:36: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp4b0l6xrl.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp4b0l6xrl.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp4b0l6xrl.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp4b0l6xrl.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \              "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        ArrayList<String> arrayList = new ArrayList<>();\n\
    \        arrayList.add(txt);\n        Set<Integer> set = new HashSet<>();\n  \
    \      int counter = 0;\n        for (int i = 0; i < arrayList.size(); i++) {\n\
    \            for (int j = 0; j < arrayList.get(i).length(); j++) {\n         \
    \       if (Character.isLetter(arrayList.get(i).charAt(j))) {\n              \
    \      counter++;\n                } else {\n                    break;\n    \
    \            }\n            }\n            set.add(counter);\n            counter\
    \ = 0;\n        }\n        if (set.size() == 1) {\n            ArrayList<String>\
    \ arrayList2 = new ArrayList<>();\n            arrayList2.add(arrayList.get(0));\n\
    \            String s = arrayList2.get(0).toString();\n            arrayList2.remove(0);\n\
    \            arrayList.remove(0);\n            arrayList2.add(s.substring(0, arrayList2.size()\
    \ - 1));\n            return arrayList2;\n        } else {\n            ArrayList<String>\
    \ arrayList2 = new ArrayList<>();\n            arrayList2.add(arrayList.get(0));\n\
    \            String s = arrayList2.get(0).toString();\n            arrayList2.remove(0);\n\
    \            arrayList.remove(0);\n            arrayList2.add(s.substring(0, s.length()\
    \ - 1));\n            return arrayList2;\n        }\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmponfaygdb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmponfaygdb.java:49:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmponfaygdb.java:52: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmponfaygdb.java:53: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmponfaygdb.java:54: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmponfaygdb.java:55: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmponfaygdb.java:56: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmponfaygdb.java:57: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        final int len = txt.length();\n        final\
    \ int len = txt.length();\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int(len);\n\
    \        ArrayList<String> wordsArr = new ArrayList<String>();\n        final\
    \ String txt = txt.replaceAll(\"[ ]+\", \" \");\n        final String txt = txt.replaceAll(\"\
    [,]+\", \" \");\n        final String[] wordsInTxt = txt.split(\" \");\n     \
    \   for(String wordsInTxt1 : wordsInTxt){\n            wordsArr.add(wordsInTxt1.toLowerCase());\n\
    \        }\n        for(int i = 0; i < wordsArr.size(); i++){\n            String\
    \ tmpWords = wordsArr.get(i);\n            final int tmpWordsArr = tmpWords.length();\n\
    \            final int tmpWordsArr = tmpWords.length();\n            final int\
    \ tmpWordsArr = tmpWordsArr;\n            for(int j = 0; j < tmpWordsArr; j++){\n\
    \                res.add(tmpWords);\n            }\n        }\n        int sum\
    \ = 0;\n        for(int i = 0; i < res.size(); i++){\n            int tmpSum =\
    \ 0;\n            String tmpWords = res.get(i);\n            for(int j = 0; j\
    \ < tmpWords.length(); j++){\n                tmpSum++;\n            }\n     \
    \       sum += tmpSum;\n        }\n        return sum;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt4ij6kox.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpt4ij6kox.java:18:\
    \ error: variable len is already defined in method splitWords(String)\n      \
    \  final int len = txt.length();\n                  ^\n/tmp/tmpt4ij6kox.java:19:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int(len);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpt4ij6kox.java:19: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int(len);\n                              \
    \                ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpt4ij6kox.java:21: error: variable txt is already defined\
    \ in method splitWords(String)\n        final String txt = txt.replaceAll(\"[\
    \ ]+\", \" \");\n                     ^\n/tmp/tmpt4ij6kox.java:22: error: variable\
    \ txt is already defined in method splitWords(String)\n        final String txt\
    \ = txt.replaceAll(\"[,]+\", \" \");\n                     ^\n/tmp/tmpt4ij6kox.java:30:\
    \ error: variable tmpWordsArr is already defined in method splitWords(String)\n\
    \            final int tmpWordsArr = tmpWords.length();\n                    \
    \  ^\n/tmp/tmpt4ij6kox.java:31: error: variable tmpWordsArr is already defined\
    \ in method splitWords(String)\n            final int tmpWordsArr = tmpWordsArr;\n\
    \                      ^\n/tmp/tmpt4ij6kox.java:46: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpt4ij6kox.java:49: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt4ij6kox.java:"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        ArrayList<String> list = new ArrayList<String>();\n\
    \        if (txt.trim().isEmpty()) {\n            list.add(txt);\n           \
    \ return new Union_ArrayList_String__int(list);\n        }\n        ArrayList<Integer>\
    \ oddNums = new ArrayList<Integer>();\n        for (char c : txt.toCharArray())\
    \ {\n            int ord = Character.getNumericValue(c);\n            if (ord\
    \ != 0) {\n                oddNums.add(ord);\n            }\n        }\n     \
    \   Collections.sort(oddNums);\n        int[] arr = new int[oddNums.size()];\n\
    \        for (int i = 0; i < arr.length; i++) {\n            arr[i] = oddNums.get(i);\n\
    \        }\n        Collections.sort(arr);\n        List<String> list = arr.stream().map(i\
    \ -> String.valueOf((char)i)).collect(Collectors.toList());\n        return new\
    \ Union_ArrayList_String__int(list);\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxm168qqh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpxm168qqh.java:20:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__int(list);\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpxm168qqh.java:34: error: no suitable method found for\
    \ sort(int[])\n        Collections.sort(arr);\n                   ^\n    method\
    \ Collections.<T#1>sort(List<T#1>) is not applicable\n      (cannot infer type-variable(s)\
    \ T#1\n        (argument mismatch; int[] cannot be converted to List<T#1>))\n\
    \    method Collections.<T#2>sort(List<T#2>,Comparator<? super T#2>) is not applicable\n\
    \      (cannot infer type-variable(s) T#2\n        (actual and formal argument\
    \ lists differ in length))\n  where T#1,T#2 are type-variables:\n    T#1 extends\
    \ Comparable<? super T#1> declared in method <T#1>sort(List<T#1>)\n    T#2 extends\
    \ Object declared in method <T#2>sort(List<T#2>,Comparator<? super T#2>)\n/tmp/tmpxm168qqh.java:35:\
    \ error: variable list is already defined in method splitWords(String)\n     \
    \   List<String> list = arr.stream().map(i -> String.valueOf((char)i)).collect(Collectors.toList());\n\
    \                     ^\n/tmp/tmpxm168qqh.java:35: error: cannot find symbol\n\
    \        List<String> list = arr.stream().map(i -> String.valueOf((char)i)).collect(Collectors.toList());\n\
    \                               ^\n  symbol:   method stream()\n  location: variable\
    \ arr of type int[]\n/tmp/tmpxm168qqh.java:36: error: cannot find symbol\n   \
    \     return new Union_ArrayList_String__int(list);\n                   ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpxm168qqh.java:37:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpxm168qqh.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hel"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> words = new ArrayList<>();\n\
    \        txt = txt.replaceAll(\"[^\\\\w,]\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \",\");\n        txt = txt.toLowerCase();\n        char[] chars = txt.toCharArray();\n\
    \        for (char c : chars) {\n            if (Character.isLetter(c) && c !=\
    \ 'a' && c != 'b' && c != 'c' && c != 'd' && c != 'e' && c != 'f' && c != 'g'\
    \ && c != 'h' && c != 'i' && c != 'j' && c != 'k' && c != 'l' && c != 'm' && c\
    \ != 'n' && c != 'o' && c != 'p' && c != 'q' && c != 'r' && c != 's' && c != 't'\
    \ && c != 'u' && c != 'v' && c != 'w' && c != 'x' && c != 'y' && c != 'z') {\n\
    \                words.add(\"\" + c);\n            }\n        }\n        return\
    \ words.stream().map(i -> new String__int(i)).collect(Collectors.toList());\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsxn6zk6q.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpsxn6zk6q.java:27:\
    \ error: cannot find symbol\n        return words.stream().map(i -> new String__int(i)).collect(Collectors.toList());\n\
    \                                           ^\n  symbol:   class String__int\n\
    \  location: class Problem\n/tmp/tmpsxn6zk6q.java:28: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpsxn6zk6q.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpsxn6zk6q.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpsxn6zk6q.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpsxn6zk6q.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpsxn6zk6q.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n           "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        if (txt != null && !txt.isEmpty()) {\n            ArrayList <String>\
    \ l = new ArrayList<String>();\n            String s = txt.trim();\n         \
    \   s = s.replaceAll(\",\", \"\");\n            s = s.toLowerCase();\n       \
    \     for (int i = 0; i < s.length(); i++) {\n                l.add(s.substring(i,\
    \ i + 1));\n            }\n            Arrays.stream(l).map(String::toLowerCase).distinct().filter(s\
    \ -> s.length() > 0).forEach(s -> {\n                res.addElement(s);\n    \
    \        });\n        }\n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_oes6ahw.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp_oes6ahw.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp_oes6ahw.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_oes6ahw.java:26: error: no suitable method found for stream(ArrayList<String>)\n\
    \            Arrays.stream(l).map(String::toLowerCase).distinct().filter(s ->\
    \ s.length() > 0).forEach(s -> {\n                  ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; ArrayList<String> cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    /tmp/tmp_oes6ahw.java:26: error: invalid method reference\n            Arrays.stream(l).map(String::toLowerCase).distinct().filter(s\
    \ -> s.length() > 0).forEach(s -> {\n                                 ^\n  non-static\
    \ method toLowerCase() cannot be referenced from a static con"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] parts = txt.split(\"\\\\s+\");\n\
    \        String[][] arr = new String[parts.length][];\n        for (int i = 0;\
    \ i < parts.length; i++) {\n            arr[i] = parts[i].split(\",\");\n    \
    \    }\n        Map<String, Integer> result = new HashMap<>();\n        for (int\
    \ i = 0; i < parts.length; i++) {\n            for (int j = 0; j < arr[i].length;\
    \ j++) {\n                String s = arr[i][j];\n                int c = s.length();\n\
    \                if (result.containsKey(s)) {\n                    int res = result.get(s);\n\
    \                    result.replace(s, res + 1);\n                } else {\n \
    \                   result.put(s, 1);\n                }\n            }\n    \
    \    }\n        Map<String, Integer> result2 = new HashMap<>();\n        result.keySet().stream().forEach((s)\
    \ -> {\n            if (result2.containsKey(s)) {\n                result2.put(s,\
    \ result2.get(s) + 1);\n            } else {\n                result2.put(s, 1);\n\
    \            }\n        });\n        Union_ArrayList_String__int ua = new Union_ArrayList_String__int(new\
    \ ArrayList[26], 0);\n        result2.keySet().stream().forEach((s) -> {\n   \
    \         int count = 1;\n            int idx = ua.indexOf(s) + 1;\n         \
    \   while (result2.get(s) != result2.get(idx)) {\n                idx++;\n   \
    \         }\n            ua.add(s, idx);\n        });\n        return ua;\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprwxjbjeg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmprwxjbjeg.java:43:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ua = new Union_ArrayList_String__int(new\
    \ ArrayList[26], 0);\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmprwxjbjeg.java:43: error: cannot find symbol\n\
    \        Union_ArrayList_String__int ua = new Union_ArrayList_String__int(new\
    \ ArrayList[26], 0);\n                                             ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmprwxjbjeg.java:53:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmprwxjbjeg.java:56: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprwxjbjeg.java:57: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprwxjbjeg.java:58: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprwxjbjeg.java:59: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\" \");\n        List<String> ret = new ArrayList<String>();\n\
    \        for (String w : words) {\n            w = w.replace(\",\", \"\");\n \
    \           if (w.equals(\"\")) {\n                ret.add(w);\n            }\
    \ else {\n                ret.add(w);\n            }\n        }\n        return\
    \ ret.toArray();\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1dm8a_9c.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp1dm8a_9c.java:29:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp1dm8a_9c.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp1dm8a_9c.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp1dm8a_9c.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp1dm8a_9c.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp1dm8a_9c.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmp1dm8a_9c.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Add your code to get the number of splitted\
    \ words\n        int splittedWords = 1;\n\n        List<Integer> myList = new\
    \ ArrayList<Integer>();\n        // Add your code to split the words\n       \
    \ char[] textChars = txt.toCharArray();\n        String[] result = Arrays.copyOfRange(textChars,\
    \ 0, textChars.length);\n        int i = 0;\n        int j = 0;\n        while\
    \ (i < textChars.length)\n        {\n            if (textChars[i] == ',')\n  \
    \          {\n                result[j] = result[j + 1];\n                j +=\
    \ 1;\n                i += 1;\n            }\n            else if (textChars[i]\
    \ == ' ')\n            {\n                result[j] = result[j + 1];\n       \
    \         j += 1;\n            }\n            else\n            {\n          \
    \      char c = textChars[i];\n                if (Character.isLowerCase(c))\n\
    \                    myList.add(c - 'a');\n                else\n            \
    \        myList.add(0);\n                i += 1;\n            }\n        }\n \
    \       System.out.println(\"Number of splitted words = \" + myList.size());\n\
    \        Union_ArrayList_String__int output = new Union_ArrayList_String__int(myList);\n\
    \        System.out.println(\"Output = \" + output);\n        return output;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpajpyo3xi.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpajpyo3xi.java:23:\
    \ error: incompatible types: char[] cannot be converted to String[]\n        String[]\
    \ result = Arrays.copyOfRange(textChars, 0, textChars.length);\n             \
    \                               ^\n/tmp/tmpajpyo3xi.java:50: error: cannot find\
    \ symbol\n        Union_ArrayList_String__int output = new Union_ArrayList_String__int(myList);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpajpyo3xi.java:50: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ output = new Union_ArrayList_String__int(myList);\n                        \
    \                         ^\n  symbol:   class Union_ArrayList_String__int\n \
    \ location: class Problem\n/tmp/tmpajpyo3xi.java:53: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpajpyo3xi.java:56: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpajpyo3xi.java:57: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpajpyo3xi.java:58: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpajpyo3xi.j"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        StringBuilder result = new StringBuilder();\n\
    \        ArrayList<String> allWords = new ArrayList<>();\n\n        String[] words\
    \ = txt.split(\" \");\n        for (String word : words) {\n            allWords.add(word);\n\
    \        }\n        ArrayList<String> resultWords = new ArrayList<>();\n     \
    \   ArrayList<String> oddWords = new ArrayList<>();\n        for(String word :\
    \ allWords) {\n            int count = word.length();\n            if (count %\
    \ 2 == 0) {\n                resultWords.add(word);\n            } else {\n  \
    \              oddWords.add(word);\n            }\n        }\n        Union_ArrayList_String__int\
    \ resultWordsUA = new Union_ArrayList_String__int(resultWords);\n        Union_ArrayList_String__int\
    \ oddWordsUA = new Union_ArrayList_String__int(oddWords);\n        int evenWordsCount\
    \ = allWords.size();\n        Union_ArrayList_String__int evenWordsUA = new Union_ArrayList_String__int(evenWordsCount);\n\
    \        int resultWordsCount = resultWords.size();\n        Union_ArrayList_String__int\
    \ resultWordsUA = new Union_ArrayList_String__int(resultWordsCount);\n       \
    \ Union_ArrayList_String__int oddWordsCount = new Union_ArrayList_String__int(oddWords.size());\n\
    \        Union_ArrayList_String__int oddWordsUA = new Union_ArrayList_String__int(oddWordsCount);\n\
    \        resultWordsUA.Union_ArrayList_String__int__int__int__int__int__int(resultWordsUA,\
    \ oddWordsCount, evenWordsCount, evenWordsUA, oddWordsUA);\n        return resultWordsUA.UA_getArrayList_String__int__int();\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9n7ak8da.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp9n7ak8da.java:34:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int resultWordsUA\
    \ = new Union_ArrayList_String__int(resultWords);\n        ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp9n7ak8da.java:34:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int resultWordsUA\
    \ = new Union_ArrayList_String__int(resultWords);\n                          \
    \                              ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9n7ak8da.java:35: error: cannot find symbol\n\
    \        Union_ArrayList_String__int oddWordsUA = new Union_ArrayList_String__int(oddWords);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp9n7ak8da.java:35: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ oddWordsUA = new Union_ArrayList_String__int(oddWords);\n                  \
    \                                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9n7ak8da.java:37: error: cannot find symbol\n\
    \        Union_ArrayList_String__int evenWordsUA = new Union_ArrayList_String__int(evenWordsCount);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp9n7ak8da.java:37: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ evenWordsUA = new Union_ArrayList_String__int(evenWordsCount);\n           \
    \                                           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9n7ak8da.java:39: error: cannot find symbol\n\
    \        Union_ArrayList_String__int resultWordsUA = new Union_ArrayList_String__int(resultWordsCount);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp9n7ak8da.java:39: error: cannot find symbol\n        Union_ArrayList"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int a = 0;\n        int b = 0;\n        int\
    \ c = 0;\n        int d = 0;\n        int f = 0;\n        int g = 0;\n       \
    \ int h = 0;\n        int i = 0;\n        int j = 0;\n        int k = 0;\n   \
    \     int l = 0;\n        int m = 0;\n        int n = 0;\n        int o = 0;\n\
    \        int p = 0;\n        int q = 0;\n        int r = 0;\n        int s = 0;\n\
    \        int t = 0;\n        int u = 0;\n        int v = 0;\n        int w = 0;\n\
    \        int x = 0;\n        int y = 0;\n        int z = 0;\n        Union_ArrayList_String__int\
    \ list = new Union_ArrayList_String__int();\n\n        txt = txt.toLowerCase();\n\
    \n        for (int z = 0; z < txt.length(); z++) {\n            String word =\
    \ txt.substring(z, z + 1).trim();\n            if (word == null || word == \"\"\
    ) {\n                continue;\n            }\n            int len = word.length();\n\
    \            if (len < 1) {\n                continue;\n            }\n      \
    \      if (word.contains(\",\")) {\n                String w;\n              \
    \  for (int a = 0; a < word.length(); a++) {\n                    w = word.substring(0,\
    \ a).trim();\n                    if (w == null || w == \"\") {\n            \
    \            continue;\n                    }\n                    if (w.contains(\"\
    ,\")) {\n                        String ww = word.replaceAll(\",\", \"\");\n \
    \                       int xx = ww.length();\n                        String\
    \ ww1 = null;\n                        for (int b = 0; b < ww.length(); b++) {\n\
    \                            ww1 = ww1.concat(ww.substring(0, b));\n         \
    \               }\n                        if (ww.contains(\" \")) {\n       \
    \                     String ww2 = word.replaceAll(\" \", \"\");\n           \
    \                 int xx = ww.length();\n                            String ww3\
    \ = null;\n                            for (int b = 0; b < ww.length(); b++) {\n\
    \                                ww3 = ww3.concat(ww.substring(0, b));\n     \
    \                       }\n                            if (ww.contains(\".\"))\
    \ {\n                                String ww4 = word.replaceAll(\".\", \"\"\
    );\n                                int xx = ww.length();\n                  \
    \              String ww5 = null;\n                                for (int b\
    \ = 0; b < ww.length(); b++) {\n                                    ww5 = ww5.concat(ww.substring(0,\
    \ b));\n                                }\n                                if\
    \ (ww.contains(\"-\")) {\n                                    String ww6 = word.replaceAll(\"\
    -\", \"\");\n                                    int xx = ww.length();\n     \
    \                               String ww7 = null;\n                         \
    \           for (int b = 0; b < ww.length(); b++) {\n                        \
    \                ww7 = ww7.concat(ww.substring(0, b));\n                     \
    \               }\n                                    if (ww.contains(\":\"))\
    \ {\n                                        String ww8 = word.replaceAll(\":\"\
    , \"\");\n                                        int xx = ww.length();\n    \
    \                                    String ww9 = null;\n                    \
    \                    for (int b = 0; b < ww.length(); b++) {\n               \
    \                             ww9 = ww9.concat(ww.substring(0, b));\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8zg4xha4.java:98: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp8zg4xha4.java:98: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp8zg4xha4.java:98: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp8zg4xha4.java:98: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp8zg4xha4.java:98: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp8zg4xha4.java:109:\
    \ error: reached end of file while parsing\n}\n ^\n/tmp/tmp8zg4xha4.java:110:\
    \ error: reached end of file while parsing\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        if (txt.isEmpty()) {\n            return ret;\n        }\n        if\
    \ (txt.charAt(0) == ' ' || txt.charAt(0) == ',') {\n            for (char ch :\
    \ txt.toCharArray()) {\n                ret.add(ch);\n            }\n        \
    \    return ret;\n        }\n        int size = txt.length();\n        ArrayList\
    \ res = new ArrayList();\n        for (int i = 0; i < size; i++) {\n         \
    \   char ch = txt.charAt(i);\n            if (Character.isLetter(ch)) {\n    \
    \            res.add(ch);\n            } else if (Character.isLowerCase(ch)) {\n\
    \                res.add(ch);\n                for (int j = i + 1; j < size; j++)\
    \ {\n                    char ch2 = txt.charAt(j);\n                    if (Character.isUpperCase(ch2))\
    \ {\n                        res.add(ch2);\n                        i = j;\n \
    \                   }\n                }\n            }\n        }\n        if\
    \ (res.isEmpty()) {\n            return ret;\n        }\n        int result =\
    \ res.get(0);\n        for (int i = 1; i < res.size(); i++) {\n            result\
    \ = (int) Math.max(result, (int) res.get(i));\n        }\n        ret.addAll(res.subList(0,\
    \ res.size() - 1));\n        return ret;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0pfi_5cu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp0pfi_5cu.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp0pfi_5cu.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp0pfi_5cu.java:47: error: incompatible types: Object cannot\
    \ be converted to int\n        int result = res.get(0);\n                    \
    \        ^\n/tmp/tmp0pfi_5cu.java:53: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp0pfi_5cu.java:56: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp0pfi_5cu.java:57: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp0pfi_5cu.java:58: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp0pfi_5cu.java:59: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // TODO: Auto-generated method stub\n    \
    \    return null;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbng4aujf.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpbng4aujf.java:19:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpbng4aujf.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpbng4aujf.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpbng4aujf.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpbng4aujf.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpbng4aujf.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpbng4aujf.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Complete this method\n        List<String>\
    \ words = new ArrayList<>();\n        txt.split(\",\").forEach(word -> words.add(word.toLowerCase()));\n\
    \        return words.stream().filter(s -> s.matches(\".*[a-z].*\")).collect(Collectors.toList());\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz3wpfr0y.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpz3wpfr0y.java:19:\
    \ error: cannot find symbol\n        txt.split(\",\").forEach(word -> words.add(word.toLowerCase()));\n\
    \                      ^\n  symbol:   method forEach((word)->wo[...]se()))\n \
    \ location: class String[]\n/tmp/tmpz3wpfr0y.java:21: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpz3wpfr0y.java:24: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpz3wpfr0y.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpz3wpfr0y.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpz3wpfr0y.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpz3wpfr0y.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \        "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String txt1 = txt.replaceAll(\"[ ]\", \",\"\
    );\n        List<String> list = new ArrayList<>();\n        int count = 0;\n \
    \       int count1 = 0;\n        for(String s : txt1.split(\",\")){\n        \
    \    if(s.isEmpty()){\n                continue;\n            }\n            int\
    \ length = s.length();\n            for(int i = 0; i < length; i++){\n       \
    \         if(s.charAt(i) == ' ') {\n                    list.add(s.substring(0,\
    \ i));\n                    list.add(s.substring(i+1, length));\n            \
    \        count++;\n                    count1++;\n                }\n        \
    \    }\n        }\n        if(count == 0) {\n            try {\n             \
    \   list.add(txt1.toUpperCase());\n            } catch (Exception e) {\n     \
    \           e.printStackTrace();\n            }\n        }\n        return count1;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd6po4ct7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpd6po4ct7.java:43:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpd6po4ct7.java:46: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpd6po4ct7.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpd6po4ct7.java:48: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpd6po4ct7.java:49: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpd6po4ct7.java:50: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpd6po4ct7.java:51: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int length = txt.length();\n        String[]\
    \ words = new String[length];\n        for(int i = 0; i < length; i++) {\n   \
    \         words[i] = txt.substring(i, i + 1).trim();\n        }\n        Union_ArrayList_String__int\
    \ list = new Union_ArrayList_String__int();\n        int counter = 0;\n      \
    \  for (String str : words) {\n            str = str.toLowerCase();\n        \
    \    int a = 0, b = 1, c = 2, d = 2, e = 2;\n            for (int j = str.length()\
    \ - 1; j < str.length(); j++) {\n                int val = str.charAt(j);\n  \
    \              val = (int)val;\n                val = val - 64;\n            \
    \    if (val % 2 == 0) {\n                    if (a < val && val < b) {\n    \
    \                    a = val;\n                    }\n                    if (b\
    \ < val && val < c) {\n                        b = val;\n                    }\n\
    \                    if (c < val && val < d) {\n                        c = val;\n\
    \                    }\n                    if (d < val && val < e) {\n      \
    \                  d = val;\n                    }\n                    if (e\
    \ < val) {\n                        e = val;\n                    }\n        \
    \        }\n                else {\n                    if (a < val) {\n     \
    \                   a = val;\n                    }\n                    if (b\
    \ < val) {\n                        b = val;\n                    }\n        \
    \            if (c < val) {\n                        c = val;\n              \
    \      }\n                    if (d < val) {\n                        d = val;\n\
    \                    }\n                    if (e < val) {\n                 \
    \       e = val;\n                    }\n                }\n            }\n  \
    \          Union_String_Int *union_int = new Union_String_Int(a, b);\n       \
    \     Union_String_Int *union_int1 = new Union_String_Int(c, d);\n           \
    \ Union_String_Int *union_int2 = new Union_String_Int(c, e);\n            Union_String_Int\
    \ *union_int3 = new Union_String_Int(d, e);\n            Union_ArrayList_String__int\
    \ union_list_union_int = new Union_ArrayList_String__int(union_int, union_int1,\
    \ union_int2, union_int3);\n            list.add(union_list_union_int);\n    \
    \        counter += 1;\n        }\n        return list;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpieol580w.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpieol580w.java:22:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int list = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpieol580w.java:22: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ list = new Union_ArrayList_String__int();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpieol580w.java:66: error: cannot find symbol\n       \
    \     Union_String_Int *union_int = new Union_String_Int(a, b);\n            ^\n\
    \  symbol:   variable Union_String_Int\n  location: class Problem\n/tmp/tmpieol580w.java:66:\
    \ error: cannot find symbol\n            Union_String_Int *union_int = new Union_String_Int(a,\
    \ b);\n                              ^\n  symbol:   variable union_int\n  location:\
    \ class Problem\n/tmp/tmpieol580w.java:66: error: cannot find symbol\n       \
    \     Union_String_Int *union_int = new Union_String_Int(a, b);\n            \
    \                                  ^\n  symbol:   class Union_String_Int\n  location:\
    \ class Problem\n/tmp/tmpieol580w.java:67: error: cannot find symbol\n       \
    \     Union_String_Int *union_int1 = new Union_String_Int(c, d);\n           \
    \ ^\n  symbol:   variable Union_String_Int\n  location: class Problem\n/tmp/tmpieol580w.java:67:\
    \ error: cannot find symbol\n            Union_String_Int *union_int1 = new Union_String_Int(c,\
    \ d);\n                              ^\n  symbol:   variable union_int1\n  location:\
    \ class Problem\n/tmp/tmpieol580w.java:67: error: cannot find symbol\n       \
    \     Union_String_Int *union_int1 = new Union_String_Int(c, d);\n           \
    \                                    ^\n  symbol:   class Union_String_Int\n \
    \ location: class Problem\n/tmp/tmpieol580w.java:68: error: cannot find symbol\n\
    \            Union_String_Int "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int count = 0, a = 0;\n        boolean flag\
    \ = true;\n        txt = txt.toLowerCase();\n        String[] words = txt.split(\"\
    \\\\s\");\n        ArrayList<String> array = new ArrayList<String>();\n      \
    \  for (String s : words) {\n            array.add(s);\n        }\n        HashMap<String,\
    \ Integer> map = new HashMap<>();\n        for (String s : array) {\n        \
    \    Integer value = map.get(s);\n            if (value == null) {\n         \
    \       map.put(s, 1);\n            } else {\n                map.put(s, value\
    \ + 1);\n            }\n        }\n        for (String s : map.keySet()) {\n \
    \           if (map.get(s) % 2 != 0) {\n                if (flag == false) {\n\
    \                    a = count + 1;\n                    flag = true;\n      \
    \          }\n                count += 1;\n            }\n        }\n        return\
    \ a;\nreturn new Union_ArrayList_String__int();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm4f5t9qc.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpm4f5t9qc.java:44:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpm4f5t9qc.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpm4f5t9qc.java:48: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpm4f5t9qc.java:49: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpm4f5t9qc.java:50: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpm4f5t9qc.java:51: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpm4f5t9qc.java:52: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        txt = txt.toLowerCase();\n        txt = txt.replaceAll(\",\",\"\");\n\
    \        txt = txt.replaceAll(\" \",\"\");\n        String[] words = txt.split(\"\
    \\\\s+\");\n        for (String w : words) {\n            res.add(w);\n      \
    \  }\n        return res;\nreturn new Union_ArrayList_String__int();\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmproa_z2g1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmproa_z2g1.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmproa_z2g1.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmproa_z2g1.java:26: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmproa_z2g1.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmproa_z2g1.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmproa_z2g1.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmproa_z2g1.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int size = txt.length();\n        String[]\
    \ words = txt.split(\"\\\\s\");\n        List<String> splitWords = new ArrayList<>();\n\
    \        List<Integer> splitWordsIndexes = new ArrayList<>();\n        StringBuilder\
    \ currentWord = new StringBuilder();\n        List<Integer> currentWordIndexes\
    \ = new ArrayList<>();\n        boolean wordStarted = false;\n        for (int\
    \ i = 0; i < words.length; i++) {\n            if (wordStarted) {\n          \
    \      splitWords.add(currentWord.toString());\n                splitWordsIndexes.add(currentWordIndexes.size()\
    \ - 1);\n                currentWord = new StringBuilder();\n                currentWordIndexes.clear();\n\
    \                wordStarted = false;\n            }\n            if (words[i].isEmpty())\
    \ {\n                wordStarted = true;\n                continue;\n        \
    \    }\n            currentWord.append(words[i]);\n            currentWordIndexes.add(i);\n\
    \        }\n        if (currentWord.length() > 0) {\n            splitWords.add(currentWord.toString());\n\
    \            splitWordsIndexes.add(currentWordIndexes.size() - 1);\n        }\n\
    \        Union_ArrayList_String__int unionWords = new Union_ArrayList_String__int();\n\
    \        unionWords.add(splitWords);\n        unionWords.add(splitWordsIndexes);\n\
    \        return unionWords;\nreturn new Union_ArrayList_String__int();\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2g6lni_y.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp2g6lni_y.java:43:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int unionWords =\
    \ new Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp2g6lni_y.java:43: error: cannot find symbol\n\
    \        Union_ArrayList_String__int unionWords = new Union_ArrayList_String__int();\n\
    \                                                     ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp2g6lni_y.java:47: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp2g6lni_y.java:50: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp2g6lni_y.java:51: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp2g6lni_y.java:52: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp2g6lni_y.java:53: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Write your code here\n        int a = 0,\
    \ b = 1, c = 2, d = 3, e = 4, f = 5, g = 6, h = 7, i = 8, j = 9, k = 10;\n   \
    \     int low = 0;\n        int mid = 0;\n        int high = 0;\n        boolean\
    \ isOdd = null;\n        String__int__String wordList = null;\n        boolean\
    \ wordCheck = false;\n        String word = \"\";\n        List<String> words\
    \ = new ArrayList<String>();\n        List<String> splitWords = new ArrayList<String>();\n\
    \        for(int i = 0; i < txt.length(); i++) {\n            char c = txt.charAt(i);\n\
    \            if(c == ' ') {\n                words.add(word);\n              \
    \  word = \"\";\n                continue;\n            } else if(c == ',') {\n\
    \                wordCheck = false;\n                continue;\n            }\
    \ else {\n                word += c;\n                wordCheck = true;\n    \
    \        }\n            if(!wordCheck) {\n                low = c - (int)c;\n\
    \                mid = (int)(c) + 1;\n                high = c - mid;\n      \
    \          isOdd = low % 2 != 0;\n                if(isOdd) {\n              \
    \      low = low - 1;\n                }\n                if(low == mid && mid+1\
    \ == high && high != 0) {\n                    words.add(word);\n            \
    \        word = \"\";\n                } else {\n                    wordCheck\
    \ = false;\n                }\n            }\n        }\n        wordList = Union_ArrayList_String__string.join(words);\n\
    \        splitWords = Union_ArrayList_String__string.split(wordList);\n      \
    \  int wordCount = splitWords.size();\n        return wordCount;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcfl8r2l8.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpcfl8r2l8.java:22:\
    \ error: incompatible types: <null> cannot be converted to boolean\n        boolean\
    \ isOdd = null;\n                        ^\n/tmp/tmpcfl8r2l8.java:23: error: cannot\
    \ find symbol\n        String__int__String wordList = null;\n        ^\n  symbol:\
    \   class String__int__String\n  location: class Problem\n/tmp/tmpcfl8r2l8.java:28:\
    \ error: variable i is already defined in method splitWords(String)\n        for(int\
    \ i = 0; i < txt.length(); i++) {\n                ^\n/tmp/tmpcfl8r2l8.java:29:\
    \ error: variable c is already defined in method splitWords(String)\n        \
    \    char c = txt.charAt(i);\n                 ^\n/tmp/tmpcfl8r2l8.java:57: error:\
    \ cannot find symbol\n        wordList = Union_ArrayList_String__string.join(words);\n\
    \                   ^\n  symbol:   variable Union_ArrayList_String__string\n \
    \ location: class Problem\n/tmp/tmpcfl8r2l8.java:58: error: cannot find symbol\n\
    \        splitWords = Union_ArrayList_String__string.split(wordList);\n      \
    \               ^\n  symbol:   variable Union_ArrayList_String__string\n  location:\
    \ class Problem\n/tmp/tmpcfl8r2l8.java:61: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpcfl8r2l8.java:64: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcfl8r2l8.java:65: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__i"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> words = new ArrayList<String>();\n\
    \        char[] charArr = txt.toCharArray();\n        Arrays.sort(charArr);\n\
    \        int count = 0;\n        for (int i = 0; i < charArr.length; i++) {\n\
    \            if (i == 0) {\n                words.add(new String(charArr, 0, i));\n\
    \            } else if (i == charArr.length - 1) {\n                words.add(new\
    \ String(charArr, 0, i));\n            } else if (charArr[i] != ',' && charArr[i\
    \ - 1] != '\\0' &&\n                       charArr[i + 1] != '\\0' && charArr[i\
    \ - 1] == charArr[i + 1]) {\n                words.add(new String(charArr, 0,\
    \ i));\n            } else {\n                words.add(new String(charArr, i,\
    \ charArr.length - i - 1));\n                count += charArr[i - 1] - 'a';\n\
    \            }\n        }\n        return new Union_ArrayList_String__int(words);\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5b8c1cjr.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp5b8c1cjr.java:34:\
    \ error: cannot find symbol\n        return new Union_ArrayList_String__int(words);\n\
    \                   ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp5b8c1cjr.java:35: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp5b8c1cjr.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5b8c1cjr.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5b8c1cjr.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5b8c1cjr.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp5b8c1cjr.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        String[] strArray = txt.split(\"[,\\\\s]+\");\n        for (String s\
    \ : strArray) {\n            words.add(s);\n        }\n        return words;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfbx_ji5u.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpfbx_ji5u.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpfbx_ji5u.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ words = new Union_ArrayList_String__int();\n                               \
    \                 ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpfbx_ji5u.java:23: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfbx_ji5u.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfbx_ji5u.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfbx_ji5u.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfbx_ji5u.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \              "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int(txt);\n\
    \        String[] splitted = txt.split(\"\\\\s\");\n        List<String> splittedList\
    \ = Arrays.asList(splitted);\n        List<String> splittedList1 = new ArrayList<>();\n\
    \        for (String s : splittedList) {\n            if (!s.isEmpty()) {\n  \
    \              splittedList1.add(s);\n            }\n        }\n        ret.listString\
    \ = splittedList1;\n        return ret;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu99964ve.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpu99964ve.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int(txt);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpu99964ve.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int(txt);\n                              \
    \                ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpu99964ve.java:28: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpu99964ve.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpu99964ve.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpu99964ve.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpu99964ve.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \              "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int results = new\
    \ Union_ArrayList_String__int(\"\");\n        Set<Character> charSet = txt.toCharArray().stream().filter(x\
    \ -> !Character.isWhitespace(x)).collect(Collectors.toSet());\n        List<Character>\
    \ charList = charSet.stream().sorted().collect(Collectors.toList());\n       \
    \ String string = \"\";\n        for(int i = 0; i < charList.size(); i++) {\n\
    \            string = string + charList.get(i);\n        }\n        string = string.trim().toLowerCase();\n\
    \        if(string.length() % 2 == 0) {\n            StringBuilder builder = new\
    \ StringBuilder(string.substring(0, string.length()-1));\n            int count\
    \ = 0;\n            for(int i = 0; i < builder.length(); i++) {\n            \
    \    if(builder.charAt(i) == ',') {\n                    count++;\n          \
    \      }\n            }\n            results.addElement(new Integer(count));\n\
    \        }\n        else {\n            results.addElement(new Integer(string.indexOf(',')+1));\n\
    \        }\n        return results;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfymcl_hb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpfymcl_hb.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int results = new\
    \ Union_ArrayList_String__int(\"\");\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfymcl_hb.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int results = new Union_ArrayList_String__int(\"\
    \");\n                                                  ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfymcl_hb.java:18: error: cannot find symbol\n\
    \        Set<Character> charSet = txt.toCharArray().stream().filter(x -> !Character.isWhitespace(x)).collect(Collectors.toSet());\n\
    \                                                  ^\n  symbol:   method stream()\n\
    \  location: class char[]\n/tmp/tmpfymcl_hb.java:39: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfymcl_hb.java:42: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfymcl_hb.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfymcl_hb.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_A"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        System.out.println(\"split_words\" + txt);\n\
    \        ArrayList<String> strings = new ArrayList<>();\n        int index = 0;\n\
    \        for (char c : txt.toCharArray()) {\n            if (Character.isWhitespace(c))\
    \ {\n                strings.add(new String(Arrays.copyOfRange(txt.toCharArray(),\
    \ index, txt.length())));\n                index = txt.length();\n           \
    \ } else {\n                strings.add(new String(Arrays.copyOfRange(txt.toCharArray(),\
    \ index, index)));\n                strings.add(String.valueOf(c));\n        \
    \        index = index + 1;\n            }\n        }\n        if (index != txt.length())\
    \ {\n            strings.add(new String(Arrays.copyOfRange(txt.toCharArray(),\
    \ index, txt.length())));\n        }\n        return strings;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7uva8se3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp7uva8se3.java:34:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp7uva8se3.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7uva8se3.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7uva8se3.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7uva8se3.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp7uva8se3.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmp7uva8se3.java:42: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        txt = txt.toLowerCase().replaceAll(\"[,]\"\
    , \"\").replaceAll(\"[\\\\s]\", \"\");\n        final List<String> words = new\
    \ ArrayList<>();\n        for (final String word : txt.split(\"(?<=\\\\s)\"))\
    \ {\n            if (word.isEmpty()) {\n                continue;\n          \
    \  }\n            final String splitted = word.replaceAll(\"(?<=\\\\w)\\\\w(?=\\\
    \\w)\", \"\").replaceAll(\"(?<=\\\\w)\\\\w+\", \"\");\n            if (splitted.isEmpty())\
    \ {\n                continue;\n            }\n            words.add(splitted);\n\
    \        }\n        final Union_ArrayList_String__int wordToNumberMap = new Union_ArrayList_String__int();\n\
    \        final Union_ArrayList_String__int numberToWordMap = new Union_ArrayList_String__int();\n\
    \        for (final String word : words) {\n            final String cleaned =\
    \ word.replaceAll(\"(?<=\\\\w)\\\\w(?=\\\\w)\", \"\");\n            if (cleaned.isEmpty())\
    \ {\n                continue;\n            }\n            final int number =\
    \ Integer.valueOf(cleaned);\n            if (number == 0) {\n                continue;\n\
    \            }\n            wordToNumberMap.insert(number);\n            numberToWordMap.insert(word);\n\
    \        }\n        final int alphabetSize = Character.MAX_VALUE - ord('a') +\
    \ 1;\n        final int oddLetters = Collections.nCopies(alphabetSize, 0).stream().filter(i\
    \ -> i % 2 == 1).count();\n        return new Union_ArrayList_String__int(wordToNumberMap.arrayList,\
    \ numberToWordMap.arrayList, alphabetSize, oddLetters);\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi1pkpp8v.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpi1pkpp8v.java:29:\
    \ error: cannot find symbol\n        final Union_ArrayList_String__int wordToNumberMap\
    \ = new Union_ArrayList_String__int();\n              ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpi1pkpp8v.java:29: error: cannot find symbol\n\
    \        final Union_ArrayList_String__int wordToNumberMap = new Union_ArrayList_String__int();\n\
    \                                                                ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpi1pkpp8v.java:30:\
    \ error: cannot find symbol\n        final Union_ArrayList_String__int numberToWordMap\
    \ = new Union_ArrayList_String__int();\n              ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpi1pkpp8v.java:30: error: cannot find symbol\n\
    \        final Union_ArrayList_String__int numberToWordMap = new Union_ArrayList_String__int();\n\
    \                                                                ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpi1pkpp8v.java:43:\
    \ error: cannot find symbol\n        final int alphabetSize = Character.MAX_VALUE\
    \ - ord('a') + 1;\n                                                       ^\n\
    \  symbol:   method ord(char)\n  location: class Problem\n/tmp/tmpi1pkpp8v.java:44:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \    final int oddLetters = Collections.nCopies(alphabetSize, 0).stream().filter(i\
    \ -> i % 2 == 1).count();\n                                                  \
    \                                                        ^\n/tmp/tmpi1pkpp8v.java:45:\
    \ error: cannot find symbol\n        return new Union_ArrayList_String__int(wordToNumberMap.arrayList,\
    \ numberToWordMap.arrayList, alphabetSize, oddLetters);\n                   ^\n\
    \  symbol:   class Union_ArrayList_String__int"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        return splitWords(txt,\"\",0,0);\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkf8pp769.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpkf8pp769.java:17:\
    \ error: method splitWords in class Problem cannot be applied to given types;\n\
    \        return splitWords(txt,\"\",0,0);\n               ^\n  required: String\n\
    \  found: String,String,int,int\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpkf8pp769.java:18: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpkf8pp769.java:21: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpkf8pp769.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpkf8pp769.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpkf8pp769.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpkf8pp769.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_Stri"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> words = new ArrayList<String>();\n\
    \        char[] charArray = txt.toCharArray();\n        for (int i = 0; i < charArray.length;\
    \ i++) {\n            if (Character.isLetterOrDigit(charArray[i])) {\n       \
    \         words.add(String.valueOf(charArray[i]));\n            }\n        }\n\
    \        // if there are no comma separated words - split on white space\n   \
    \     if (words.size() == 1) {\n            return new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(words.get(0), 0));\n        }\n        Map<String,\
    \ Integer> map = new HashMap<String, Integer>();\n        for (String word : words)\
    \ {\n            if (map.containsKey(word)) {\n                map.put(word, map.get(word)\
    \ + 1);\n            } else {\n                map.put(word, 1);\n           \
    \ }\n        }\n        List<String> stringList = new ArrayList<String>();\n \
    \       for (String word : map.keySet()) {\n            if (map.get(word) % 2\
    \ != 0) {\n                stringList.add(word);\n            }\n        }\n \
    \       if (stringList.size() == 1) {\n            return new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(stringList.get(0), 0));\n        }\n        int\
    \ count = 0;\n        for (String word : stringList) {\n            if (map.get(word)\
    \ % 2 != 0) {\n                count++;\n            }\n        }\n        return\
    \ new Union_ArrayList_String__int(new Union_ArrayList_String__int(stringList.get(0),\
    \ count));\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt7ycw3r3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpt7ycw3r3.java:26:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(words.get(0), 0));\n                       ^\n \
    \ symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpt7ycw3r3.java:26:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(words.get(0), 0));\n                           \
    \                            ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpt7ycw3r3.java:43: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__int(new Union_ArrayList_String__int(stringList.get(0),\
    \ 0));\n                       ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpt7ycw3r3.java:43: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__int(new Union_ArrayList_String__int(stringList.get(0),\
    \ 0));\n                                                       ^\n  symbol:  \
    \ class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpt7ycw3r3.java:51:\
    \ error: cannot find symbol\n        return new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(stringList.get(0), count));\n                  \
    \ ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpt7ycw3r3.java:51: error: cannot find symbol\n        return new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(stringList.get(0), count));\n                  \
    \                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpt7ycw3r3.java:52: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpt7ycw3r3.java:55: error: cannot "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String txt1 = txt.replaceAll(\"\\\\s\", \"\
    \");\n        \n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        res.add(txt1);\n        \n        String[] s = txt1.split(\",\");\n \
    \       \n        String txt2 = \"\";\n        for (int i = 0; i < s.length; i++)\
    \ {\n            txt2 += s[i];\n            res.add(txt2);\n        }\n      \
    \  \n        \n        \n        \n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo0_fg9f5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpo0_fg9f5.java:19:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpo0_fg9f5.java:19: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpo0_fg9f5.java:34: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpo0_fg9f5.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpo0_fg9f5.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpo0_fg9f5.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpo0_fg9f5.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // write your answer here\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n        ArrayList_String__int split\
    \ = new ArrayList_String__int();\n        for(int i = 0; i < txt.length(); i++)\
    \ {\n            if(txt.charAt(i) == ' ') {\n                split.add(txt.charAt(i));\n\
    \            } else {\n                if(split.size() > 0) {\n              \
    \      res.add(new Union_ArrayList_String__int(split));\n                }\n \
    \               split.clear();\n            }\n        }\n        if(split.size()\
    \ > 0) {\n            res.add(new Union_ArrayList_String__int(split));\n     \
    \   }\n        return res;\nreturn new Union_ArrayList_String__int();\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3wm0keae.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp3wm0keae.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp3wm0keae.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3wm0keae.java:19: error: cannot find symbol\n        ArrayList_String__int\
    \ split = new ArrayList_String__int();\n        ^\n  symbol:   class ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp3wm0keae.java:19: error: cannot find symbol\n\
    \        ArrayList_String__int split = new ArrayList_String__int();\n        \
    \                                  ^\n  symbol:   class ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp3wm0keae.java:25: error: cannot find symbol\n\
    \                    res.add(new Union_ArrayList_String__int(split));\n      \
    \                          ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp3wm0keae.java:31: error: cannot find symbol\n\
    \            res.add(new Union_ArrayList_String__int(split));\n              \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3wm0keae.java:34: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3wm0keae.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3wm0keae.jav"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        String[] words = txt.split(\"\\\\s+\");\n        List<String> list =\
    \ Arrays.asList(words);\n        List<String> wordList = new ArrayList<String>();\n\
    \        for (int i = 0; i < list.size(); i++) {\n            if (Character.isUpperCase(list.get(i).charAt(0)))\
    \ {\n                wordList.add(list.get(i));\n            }\n        }\n  \
    \      int counter = 0;\n        for (int i = 0; i < wordList.size(); i++) {\n\
    \            String word = wordList.get(i);\n            int lowerCaseLetters\
    \ = 0;\n            if (i == wordList.size() - 1) {\n                lowerCaseLetters\
    \ = txt.length();\n            }\n            String newWord = word;\n       \
    \     if (word.equals(\",\")) {\n                newWord = \",\";\n          \
    \  }\n            if (word.length() % 2 == 1) {\n                newWord = newWord\
    \ + \",\";\n            }\n            int a = lowerCaseLetters + word.split(newWord).length\
    \ - 1;\n            int b = wordList.size() - 1;\n            while (b >= 0) {\n\
    \                String nextWord = wordList.get(b);\n                String currentWord\
    \ = wordList.get(b);\n                lowerCaseLetters += nextWord.length();\n\
    \                if (Character.isUpperCase(nextWord.charAt(0))) {\n          \
    \          wordList.add(b, currentWord);\n                }\n                b--;\n\
    \            }\n            counter = counter + a;\n        }\n        result.add(counter);\n\
    \        return result;\nreturn new Union_ArrayList_String__int();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9e6fln4t.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp9e6fln4t.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9e6fln4t.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9e6fln4t.java:55: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9e6fln4t.java:58: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9e6fln4t.java:59: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9e6fln4t.java:60: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9e6fln4t.java:61: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \           "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] split = txt.split(\" \");\n     \
    \   List<String> words = new ArrayList<>();\n        for (String word : split)\
    \ {\n            words.add(word);\n        }\n        List<Integer> numbers =\
    \ new ArrayList<>();\n        for (String word : split) {\n            int count\
    \ = word.length();\n            if (count % 2 == 0) {\n                numbers.add(count);\n\
    \            }\n        }\n        Set<Integer> oddNumbers = numbers.stream().filter(number\
    \ -> number % 2 == 1).collect(Collectors.toSet());\n        int num = 0;\n   \
    \     for (Integer number : oddNumbers) {\n            num = num + number;\n \
    \       }\n        return Union_ArrayList_String__int.add(txt, num, split);\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuz8hvnz7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpuz8hvnz7.java:34:\
    \ error: cannot find symbol\n        return Union_ArrayList_String__int.add(txt,\
    \ num, split);\n               ^\n  symbol:   variable Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpuz8hvnz7.java:35: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpuz8hvnz7.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpuz8hvnz7.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpuz8hvnz7.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpuz8hvnz7.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpuz8hvnz7.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        // if there are no commas, then we can return the number of letters with\
    \ odd order in the alphabet\n        if(txt.indexOf(',')!=-1){\n            int\
    \ charArray[] = txt.split(\",\");\n            for (int i = 0; i < charArray.length;\
    \ i++) {\n                for (int j = 0; j < 26; j++) {\n                   \
    \ if (Character.toLowerCase(charArray[i].charAt(j)) == (char) j) {\n         \
    \               words.addElement(charArray[i]);\n                    }\n     \
    \           }\n            }\n            return words;\n        }else{\n    \
    \        int count = 0;\n            for (int i = 0; i < txt.length(); i++) {\n\
    \                if (Character.isLetter(txt.charAt(i))) {\n                  \
    \  count++;\n                }\n            }\n            for (int i = 0; i <\
    \ 26; i++) {\n                if (count % 2 != 0) {\n                    words.addElement(String.valueOf((char)\
    \ i));\n                }\n                count /= 2;\n            }\n      \
    \      return words;\n        }\nreturn new Union_ArrayList_String__int();\n \
    \   }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoypygjll.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpoypygjll.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpoypygjll.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ words = new Union_ArrayList_String__int();\n                               \
    \                 ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpoypygjll.java:20: error: incompatible types: String[]\
    \ cannot be converted to int[]\n            int charArray[] = txt.split(\",\"\
    );\n                                       ^\n/tmp/tmpoypygjll.java:23: error:\
    \ int cannot be dereferenced\n                    if (Character.toLowerCase(charArray[i].charAt(j))\
    \ == (char) j) {\n                                                          ^\n\
    /tmp/tmpoypygjll.java:44: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpoypygjll.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpoypygjll.java:48: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpoypygjll.java:49: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\""
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        Union_ArrayList_String__int arr;\n        char c;\n        int index;\n\
    \        int index2 = 0;\n        int count2 = 0; // How many words have been\
    \ created so far\n        for (int i = 0; i < txt.length(); i++) {\n         \
    \   c = txt.charAt(i);\n            if (c == ' ' || c == ',') {\n            \
    \    index = i;\n                words.insert(words.getArray(), index, index2\
    \ + 1);\n                index2++;\n                count2++;\n            } else\
    \ if (c >= 'a' && c <= 'z') {\n                index = i;\n                arr\
    \ = words.insert(words.getArray(), index, index2);\n                index2++;\n\
    \                arr.add(c - 'a');\n                count2++;\n            }\n\
    \        }\n        int len = words.size();\n        if (len < count2) {\n   \
    \         arr = words.insert(words.getArray(), len, count2);\n        }\n    \
    \    return arr;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplfjpu5fv.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmplfjpu5fv.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmplfjpu5fv.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ words = new Union_ArrayList_String__int();\n                               \
    \                 ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmplfjpu5fv.java:18: error: cannot find symbol\n       \
    \ Union_ArrayList_String__int arr;\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmplfjpu5fv.java:43: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmplfjpu5fv.java:46: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplfjpu5fv.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplfjpu5fv.java:48: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplfjpu5fv.java:49: error: cannot find symbol\n    assert(splitWords("
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        String[] words = txt.split(\"[, ]\");\n        for(String s : words)\
    \ {\n            if(s != null && !s.isEmpty()) {\n                ret.add(s);\n\
    \            }\n        }\n        return ret;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprv3ivctu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmprv3ivctu.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmprv3ivctu.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprv3ivctu.java:25: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprv3ivctu.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprv3ivctu.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprv3ivctu.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprv3ivctu.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> result = new ArrayList<>();\n\
    \        Union_ArrayList_String__int list = new Union_ArrayList_String__int();\n\
    \        String[] words = txt.split(\"\\\\s+\");\n        for (String word : words)\
    \ {\n            int count = 0;\n            String trimmed = word.trim();\n \
    \           if (trimmed.length() > 0) {\n                list.add(trimmed.toLowerCase());\n\
    \                result.add(word);\n                count++;\n            }\n\
    \            list.add(trimmed.toLowerCase());\n            result.add(word);\n\
    \            count++;\n        }\n        if (words.length % 2 != 0) {\n     \
    \       result.add(words[words.length - 1]);\n            list.add(\"A\");\n \
    \       }\n        return list;\nreturn new Union_ArrayList_String__int();\n \
    \   }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp420jzfnf.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp420jzfnf.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int list = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp420jzfnf.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ list = new Union_ArrayList_String__int();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp420jzfnf.java:37: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp420jzfnf.java:40: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp420jzfnf.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp420jzfnf.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp420jzfnf.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                 "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int[] a = new int[256];\n        int[] b =\
    \ new int[256];\n        int[] c = new int[256];\n        int[] d = new int[256];\n\
    \        int[] e = new int[256];\n        int[] f = new int[256];\n        int[]\
    \ g = new int[256];\n        int[] h = new int[256];\n        int[] i = new int[256];\n\
    \        int[] j = new int[256];\n        int[] k = new int[256];\n        int[]\
    \ l = new int[256];\n        int[] m = new int[256];\n        int[] n = new int[256];\n\
    \        int[] o = new int[256];\n        int[] p = new int[256];\n        int[]\
    \ q = new int[256];\n        int[] r = new int[256];\n        int[] s = new int[256];\n\
    \        int[] t = new int[256];\n        int[] u = new int[256];\n        int[]\
    \ v = new int[256];\n        int[] w = new int[256];\n        int[] x = new int[256];\n\
    \        int[] y = new int[256];\n        int[] z = new int[256];\n        int\
    \ i = 0;\n        int j = 0;\n        int k = 0;\n        int l = 0;\n       \
    \ int m = 0;\n        int n = 0;\n        int o = 0;\n        int p = 0;\n   \
    \     int q = 0;\n        int r = 0;\n        int s = 0;\n        int t = 0;\n\
    \        int u = 0;\n        int v = 0;\n        int w = 0;\n        int x = 0;\n\
    \        int y = 0;\n        int z = 0;\n        for (char c : txt.toCharArray())\
    \ {\n            i++;\n            if (c >= 'a' && c <= 'z') {\n             \
    \   a[i] = c - 'a';\n            } else if (c >= 'A' && c <= 'Z') {\n        \
    \        b[i] = c - 'A';\n            } else if (c >= '0' && c <= '9') {\n   \
    \             c[i] = c - '0';\n            } else if (c == ' ') {\n          \
    \      d[i] = 1;\n            } else if (c == ',') {\n                e[i] = 1;\n\
    \            } else if (c == '.') {\n                f[i] = 1;\n            }\
    \ else if (c == ':') {\n                g[i] = 1;\n            } else if (c ==\
    \ '-') {\n                h[i] = 1;\n            } else if (c == '/') {\n    \
    \            i[i] = 1;\n            } else if (c == '(') {\n                j[i]\
    \ = 1;\n            } else if (c == ')') {\n                k[i] = 1;\n      \
    \      } else if (c == '+') {\n                l[i] = 1;\n            } else if\
    \ (c == '-') {\n                m[i] = 1;\n            } else if (c == '*') {\n\
    \                n[i] = 1;\n            } else if (c\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpys51ie75.java:91: error: ')' expected\n            } else if (c\n\
    \                        ^\n/tmp/tmpys51ie75.java:94: error: illegal start of\
    \ expression\n    public static void main(String[] args) {\n    ^\n/tmp/tmpys51ie75.java:94:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmpys51ie75.java:94: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpys51ie75.java:94: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpys51ie75.java:94: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpys51ie75.java:105: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Your code here\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprcorgdlu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmprcorgdlu.java:18:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmprcorgdlu.java:21: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprcorgdlu.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprcorgdlu.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprcorgdlu.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmprcorgdlu.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmprcorgdlu.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        return txt.toLowerCase().chars().mapToObj(c\
    \ -> (char) c).collect(\n            Collectors.toCollection(ArrayList::new));\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnf12sd8a.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpnf12sd8a.java:19:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpnf12sd8a.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpnf12sd8a.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpnf12sd8a.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpnf12sd8a.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpnf12sd8a.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpnf12sd8a.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        if (txt == null || txt.length() == 0) {\n\
    \            return new Union_ArrayList_String__int();\n        }\n        String[]\
    \ arr = txt.trim().replaceAll(\"[,]\", \"\").split(\" \");\n        List<String>\
    \ words = new ArrayList<String>(arr.length);\n        for (String s : arr) {\n\
    \            if (s == null || s.isEmpty()) {\n                continue;\n    \
    \        }\n            words.add(s);\n        }\n        return words;\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf1vacj94.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpf1vacj94.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__int();\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpf1vacj94.java:29: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpf1vacj94.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpf1vacj94.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpf1vacj94.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpf1vacj94.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpf1vacj94.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symb"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        ArrayList<Integer> arr = new ArrayList<Integer>();\n        Union_ArrayList_String__int.sizeToArray(arr);\n\
    \        int cnt = 0;\n        for (Integer i : arr) {\n            if (i.equals(txt.length()))\
    \ return result;\n            cnt += i;\n        }\n        result.addAll(splitWordsAux(txt,\
    \ cnt, arr));\n        return result;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmfk67mpx.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpmfk67mpx.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpmfk67mpx.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpmfk67mpx.java:19: error: cannot find symbol\n\
    \        Union_ArrayList_String__int.sizeToArray(arr);\n        ^\n  symbol: \
    \  variable Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpmfk67mpx.java:25:\
    \ error: cannot find symbol\n        result.addAll(splitWordsAux(txt, cnt, arr));\n\
    \                      ^\n  symbol:   method splitWordsAux(String,int,ArrayList<Integer>)\n\
    \  location: class Problem\n/tmp/tmpmfk67mpx.java:27: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpmfk67mpx.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpmfk67mpx.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpmfk67mpx.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Write your logic here\n        Union_ArrayList_String__int\
    \ splitted = new Union_ArrayList_String__int();\n\n        String[] words = txt.split(\"\
    \\\\s+\");\n        splitted = Arrays.stream(words).filter(x -> !x.isEmpty()).distinct().filter(x\
    \ -> !x.equals(\"\")).sorted().collect(toList());\n        int even = 0;\n   \
    \     int odd = 0;\n        for (int i = 0; i < splitted.size(); i++) {\n    \
    \        if (splitted.get(i).equals(\"\")) {\n                splitted.set(i,\
    \ \"\");\n            }\n            char[] chars = splitted.get(i).toCharArray();\n\
    \            for (int j = 0; j < chars.length; j++) {\n                if (chars[j]\
    \ >= 'a' && chars[j] <= 'z') {\n                    if (chars[j] % 2 == 0) {\n\
    \                        even++;\n                    }\n                } else\
    \ {\n                    if (chars[j] % 2 != 0) {\n                        odd++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ splitted;\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfqsdlem6.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpfqsdlem6.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int splitted = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfqsdlem6.java:18: error: cannot find symbol\n\
    \        Union_ArrayList_String__int splitted = new Union_ArrayList_String__int();\n\
    \                                                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfqsdlem6.java:21: error: cannot find symbol\n\
    \        splitted = Arrays.stream(words).filter(x -> !x.isEmpty()).distinct().filter(x\
    \ -> !x.equals(\"\")).sorted().collect(toList());\n                          \
    \                                                                            \
    \                   ^\n  symbol:   method toList()\n  location: class Problem\n\
    /tmp/tmpfqsdlem6.java:42: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfqsdlem6.java:45: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfqsdlem6.java:46: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfqsdlem6.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n      "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    ,+\", \",\");\n        txt = txt.toLowerCase();\n        txt = txt.replaceAll(\"\
    [a-z]\", \"\");\n        int n = txt.length();\n        for(int i = 0; i < n;\
    \ i++) {\n            int j = 0;\n            for(; j < i && j + 1 < n; j++) {\n\
    \                if(txt.charAt(i) == txt.charAt(j + 1) && txt.charAt(i) != ' ')\
    \ {\n                    break;\n                }\n            }\n          \
    \  String tmp = txt.substring(i, j);\n            if(j - i < 3) {\n          \
    \      result.add(tmp);\n            } else {\n                result.add(tmp,\
    \ i - j);\n            }\n        }\n        return result;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5d1uszuu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp5d1uszuu.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp5d1uszuu.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp5d1uszuu.java:38: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp5d1uszuu.java:41: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5d1uszuu.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5d1uszuu.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5d1uszuu.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \           "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int(1);\n\
    \        for (String s : split_words(txt)) {\n            result.add(s);\n   \
    \     }\n        return result;\nreturn new Union_ArrayList_String__int();\n \
    \   }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf_rh74uo.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpf_rh74uo.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int(1);\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpf_rh74uo.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int(1);\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpf_rh74uo.java:18: error: cannot find symbol\n\
    \        for (String s : split_words(txt)) {\n                        ^\n  symbol:\
    \   method split_words(String)\n  location: class Problem\n/tmp/tmpf_rh74uo.java:22:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpf_rh74uo.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpf_rh74uo.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpf_rh74uo.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpf_rh74uo.java:28: error: cannot find symbol\n    a"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int list = new Union_ArrayList_String__int();\n\
    \        char [] txtArr = txt.toCharArray();\n        ArrayList<Character> charList\
    \ = new ArrayList<Character>();\n        int i = 0;\n        for (char letter\
    \ : txtArr) {\n            i++;\n            if (letter == '.') {\n          \
    \      break;\n            }\n            charList.add(letter);\n        }\n \
    \       char[] letters = new char[i];\n        int j = 0;\n        for (char letter\
    \ : charList) {\n            letters[j++] = letter;\n        }\n        Arrays.sort(letters);\n\
    \        Union_ArrayList_String__int arrList = new Union_ArrayList_String__int();\n\
    \        arr.sort(letters);\n        for (int k = 0; k < txt.length(); k++) {\n\
    \            String str = new String(txtArr[k]);\n            if (str == \".\"\
    ) {\n                break;\n            }\n            int size = str.split(\"\
    \ \").length;\n            arrList.add(str.split(\" \"));\n        }\n       \
    \ int count = 0;\n        for (int k = 0; k < arrList.size(); k++) {\n       \
    \     for (int l = 0; l < arrList.get(k).size(); l++) {\n                int index\
    \ = arrList.get(k).get(l);\n                if (arrList.get(k).get(l).equalsIgnoreCase(arrList.get(k).get(l\
    \ - 1))) {\n                    count++;\n                }\n            }\n \
    \       }\n        return count;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx_unosf1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpx_unosf1.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int list = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpx_unosf1.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ list = new Union_ArrayList_String__int();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpx_unosf1.java:34: error: cannot find symbol\n       \
    \ Union_ArrayList_String__int arrList = new Union_ArrayList_String__int();\n \
    \       ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpx_unosf1.java:34: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ arrList = new Union_ArrayList_String__int();\n                             \
    \                     ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpx_unosf1.java:35: error: cannot find symbol\n       \
    \ arr.sort(letters);\n        ^\n  symbol:   variable arr\n  location: class Problem\n\
    /tmp/tmpx_unosf1.java:37: error: no suitable constructor found for String(char)\n\
    \            String str = new String(txtArr[k]);\n                         ^\n\
    \    constructor String.String(String) is not applicable\n      (argument mismatch;\
    \ char cannot be converted to String)\n    constructor String.String(char[]) is\
    \ not applicable\n      (argument mismatch; char cannot be converted to char[])\n\
    \    constructor String.String(byte[]) is not applicable\n      (argument mismatch;\
    \ char cannot be converted to byte[])\n    constructor String.String(StringBuffer)\
    \ is not applicable\n      (argument mismatch; char cannot be converted to StringBuffer)\n\
    \    constructor String.String(StringBuilder) is not applicable\n      (argument\
    \ mismatch; char cannot be converted to St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ArrayList<String> arr = new ArrayList<String>();\n        ArrayList<String>\
    \ arr_2 = new ArrayList<String>();\n        int size = txt.length();\n       \
    \ int size = arr.size();\n        for (int i = 0; i < size; i++) {\n         \
    \   if (txt.charAt(i) == ',') {\n                arr.add(txt.substring(i, size\
    \ + 1));\n                arr_2.add(txt.substring(i, size + 1));\n           \
    \     txt = txt.substring(size + 1);\n                size = txt.length();\n \
    \           }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n   \
    \         int size = arr.get(i).length();\n            for (int j = 0; j < size;\
    \ j++) {\n                if (Character.isLowerCase(arr.get(i).charAt(j))) {\n\
    \                    int pos = Integer.parseInt(arr.get(i).substring(j + 1, arr.get(i).length()));\n\
    \                    if (pos == 1) {\n                        res.addElement(arr.get(i));\n\
    \                        res.addElement(arr_2.get(i));\n                    }\
    \ else if (pos == 2) {\n                        res.addElement(arr.get(i));\n\
    \                    } else if (pos == 3) {\n                        res.addElement(arr_2.get(i));\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ res;\nreturn new Union_ArrayList_String__int();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3oom62qi.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp3oom62qi.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp3oom62qi.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3oom62qi.java:21: error: variable size is already defined in\
    \ method splitWords(String)\n        int size = arr.size();\n            ^\n/tmp/tmp3oom62qi.java:31:\
    \ error: variable size is already defined in method splitWords(String)\n     \
    \       int size = arr.get(i).length();\n                ^\n/tmp/tmp3oom62qi.java:47:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp3oom62qi.java:50: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3oom62qi.java:51: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3oom62qi.java:52: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayL"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // your code goes here\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        if (txt.indexOf(\",\") == -1) {\n\
    \            for (String word : txt.split(\" \")) {\n                if (word.matches(\"\
    [a-zA-Z]+\")) {\n                    result.add(word);\n                }\n  \
    \          }\n            if (result.size() % 2 == 1) {\n                return\
    \ result.size() - 1;\n            } else {\n                return result.size();\n\
    \            }\n        } else {\n            String[] wordsArray = txt.split(\"\
    ,\");\n            ArrayList<String> splittedWords = new ArrayList<String>();\n\
    \            for (String word: wordsArray) {\n                if (word.matches(\"\
    [a-zA-Z]+\")) {\n                    splittedWords.add(word);\n              \
    \  }\n            }\n            for (String word : splittedWords) {\n       \
    \         if (result.size() % 2 == 1) {\n                    result.add(word);\n\
    \                } else {\n                    result.add(word);\n           \
    \     }\n            }\n            return result.size();\n        }\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqjqxuqij.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpqjqxuqij.java:47:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpqjqxuqij.java:50: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpqjqxuqij.java:51: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpqjqxuqij.java:52: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpqjqxuqij.java:53: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpqjqxuqij.java:54: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpqjqxuqij.java:55: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        String[] words = txt.split(\"\\\\s+\");\n        for (String word : words)\
    \ {\n            ret.insert(word);\n        }\n        return ret;\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplriq2dj0.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmplriq2dj0.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmplriq2dj0.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplriq2dj0.java:23: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplriq2dj0.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplriq2dj0.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplriq2dj0.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplriq2dj0.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Your code here\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n        StringBuilder sb =  new StringBuilder(txt);\n\
    \        int index = 0;\n        while(index<txt.length())\n        {\n      \
    \      int start = txt.indexOf(\",\",index);\n            if(start==-1)\n    \
    \        {\n                res.add(txt.substring(index,txt.length()));\n    \
    \            index+=txt.length()-1;\n            }\n            else\n       \
    \     {\n                res.add(txt.substring(index,start+1));\n            \
    \    index=start;\n            }\n        }\n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt8rr0dar.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpt8rr0dar.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpt8rr0dar.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt8rr0dar.java:36: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt8rr0dar.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt8rr0dar.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt8rr0dar.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt8rr0dar.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> split_txt = new ArrayList<>();\n\
    \        if (txt != null) {\n            for (String word : txt.toLowerCase().split(\"\
    \ \")) {\n                if (!word.equals(\"\")) {\n                    split_txt.add(word);\n\
    \                }\n            }\n        }\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int(split_txt);\n        return ret;\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpokz7c1gw.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpokz7c1gw.java:25:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int(split_txt);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpokz7c1gw.java:25: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int(split_txt);\n                        \
    \                      ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpokz7c1gw.java:27: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpokz7c1gw.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpokz7c1gw.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpokz7c1gw.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpokz7c1gw.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] words;\n        Union_ArrayList_String__int\
    \ splitWord = new Union_ArrayList_String__int();\n        String string1 = \"\
    [\";\n        String string2 = \"]\";\n        boolean notfound = true;\n    \
    \    int i = 0;\n        int k = 0;\n        words = new String[txt.length()];\n\
    \        txt = txt.toUpperCase();\n        txt = txt.replaceAll(\"[\\\\s,]+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        while (i\
    \ < txt.length()) {\n            if (txt.charAt(i) == ' ') {\n               \
    \ txt = txt.substring(i);\n                words[i] += string1;\n            \
    \    i++;\n                continue;\n            } else {\n                words[i]\
    \ += string2;\n                i++;\n                continue;\n            }\n\
    \        }\n        if (words[i-1].equals(string1)) {\n            words[words.length-1]\
    \ = words[words.length-1].replaceFirst(string1, \"\");\n        }\n        i =\
    \ words.length - 1;\n        while (i >= 0) {\n            if (words[i-1].equals(string2))\
    \ {\n                words[words.length-1] = words[words.length-1].replaceFirst(string2,\
    \ \"\");\n            }\n            i--;\n        }\n        int j = 0;\n   \
    \     while (j < words.length) {\n            if (words[j].length() > 1) {\n \
    \               splitWord.add(new Union_String__int(words[j]));\n            }\n\
    \            j++;\n        }\n        return splitWord;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphnonaci9.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmphnonaci9.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int splitWord = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmphnonaci9.java:18: error: cannot find symbol\n\
    \        Union_ArrayList_String__int splitWord = new Union_ArrayList_String__int();\n\
    \                                                    ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmphnonaci9.java:53: error: cannot find symbol\n\
    \                splitWord.add(new Union_String__int(words[j]));\n           \
    \                       ^\n  symbol:   class Union_String__int\n  location: class\
    \ Problem\n/tmp/tmphnonaci9.java:58: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmphnonaci9.java:61: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmphnonaci9.java:62: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmphnonaci9.java:63: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmphnonaci9.java:6"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> lst = Arrays.asList(txt.split(\"\
    [,!\\\\s]+\")); // splits on comma or exclamation mark or whitespace\n       \
    \ int size = lst.size();\n        int result = 0;\n        List<String> lst2 =\
    \ new ArrayList<>();\n\n        for (int i = 0; i < size; i++) {\n           \
    \ String s = lst.get(i);\n            if (s.length() != 0) {\n               \
    \ lst2.add(s);\n                result = result + s.length();\n            }\n\
    \        }\n\n        return result;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzfawa83z.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpzfawa83z.java:31:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpzfawa83z.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzfawa83z.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzfawa83z.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzfawa83z.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpzfawa83z.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpzfawa83z.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> list = Arrays.asList(txt.split(\"\
    [\\\\s+,]+\"));\n        List<String> outList = new ArrayList<>();\n        for\
    \ (String s : list) {\n            if (!s.isEmpty()) {\n                outList.add(s);\n\
    \            }\n        }\n        return splitWords(outList);\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq_xte18q.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpq_xte18q.java:24:\
    \ error: incompatible types: List<String> cannot be converted to String\n    \
    \    return splitWords(outList);\n                          ^\n/tmp/tmpq_xte18q.java:25:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpq_xte18q.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpq_xte18q.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpq_xte18q.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpq_xte18q.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpq_xte18q.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(in"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        txt = txt.toLowerCase();\n        List<String>\
    \ words = new ArrayList<>();\n        for(int i = 0; i < txt.length(); i++) {\n\
    \            String current = txt.substring(i, i+1);\n            if(Character.isWhitespace(current.charAt(0)))\n\
    \                words.add(\"\");\n            else if(Character.isLetter(current.charAt(0)))\
    \ {\n                words.add(current);\n            }\n            else if(current.indexOf(\"\
    ,\") != -1) {\n                words.add(current);\n            }\n          \
    \  else if(current.indexOf(\"a\") != -1 || current.indexOf(\"b\") != -1 || current.indexOf(\"\
    c\") != -1 || current.indexOf(\"d\") != -1 || current.indexOf(\"e\") != -1 ||\
    \ current.indexOf(\"f\") != -1 || current.indexOf(\"g\") != -1 || current.indexOf(\"\
    h\") != -1 || current.indexOf(\"i\") != -1 || current.indexOf(\"j\") != -1 ||\
    \ current.indexOf(\"k\") != -1 || current.indexOf(\"l\") != -1 || current.indexOf(\"\
    m\") != -1 || current.indexOf(\"n\") != -1 || current.indexOf(\"o\") != -1 ||\
    \ current.indexOf(\"p\") != -1 || current.indexOf(\"q\") != -1 || current.indexOf(\"\
    r\") != -1 || current.indexOf(\"s\") != -1 || current.indexOf(\"t\") != -1 ||\
    \ current.indexOf(\"u\") != -1 || current.indexOf(\"v\") != -1 || current.indexOf(\"\
    w\") != -1 || current.indexOf(\"x\") != -1 || current.indexOf(\"y\") != -1 ||\
    \ current.indexOf(\"z\") != -1) {\n                words.add(current);\n     \
    \       }\n            else if(current.indexOf(\"A\") != -1 || current.indexOf(\"\
    B\") != -1 || current.indexOf(\"C\") != -1 || current.indexOf(\"D\") != -1 ||\
    \ current.indexOf(\"E\") != -1 || current.indexOf(\"F\") != -1 || current.indexOf(\"\
    G\") != -1 || current.indexOf(\"H\") != -1 || current.indexOf(\"I\") != -1 ||\
    \ current.indexOf(\"J\") != -1 || current.indexOf(\"K\") != -1 || current.indexOf(\"\
    L\") != -1 || current.indexOf(\"M\") != -1 || current.indexOf(\"N\") != -1 ||\
    \ current.indexOf(\"O\") != -1 || current.indexOf(\"P\") != -1 || current.indexOf(\"\
    Q\") != -1 || current.indexOf(\"R\") != -1 || current.indexOf(\"S\") != -1 ||\
    \ current.indexOf(\"T\") != -1 || current.indexOf(\"U\") != -1 || current.indexOf(\"\
    V\") != -1 || current.indexOf(\"W\") != -1 || current.indexOf(\"X\") != -1 ||\
    \ current.indexOf(\"Y\") != -1 || current.indexOf(\"Z\") != -1) {\n\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiwunm4ax.java:36: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpiwunm4ax.java:36: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmpiwunm4ax.java:36: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmpiwunm4ax.java:36: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmpiwunm4ax.java:36: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmpiwunm4ax.java:47:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        return Union_ArrayList_String__int.split_words(txt);\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0qv8583p.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp0qv8583p.java:17:\
    \ error: cannot find symbol\n        return Union_ArrayList_String__int.split_words(txt);\n\
    \               ^\n  symbol:   variable Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp0qv8583p.java:18: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp0qv8583p.java:21: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp0qv8583p.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp0qv8583p.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp0qv8583p.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp0qv8583p.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  sy"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // write your Java code here\n        ArrayList\
    \ al = new ArrayList();\n        for(int i = 0;i<txt.length();i++){\n        \
    \    for(int j=0;j<i;j++){\n                if(txt.charAt(i)==txt.charAt(j)){\n\
    \                    al.remove(j);\n                }\n            }\n       \
    \ }\n        for(int i = 0;i<al.size();i++){\n            if(al.get(i).equalsIgnoreCase(\"\
    ,\")){\n                al.remove(i);\n                i=al.size()-1;\n      \
    \      }\n        }\n        return al.size();\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpry36wp7e.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpry36wp7e.java:27:\
    \ error: cannot find symbol\n            if(al.get(i).equalsIgnoreCase(\",\")){\n\
    \                        ^\n  symbol:   method equalsIgnoreCase(String)\n  location:\
    \ class Object\n/tmp/tmpry36wp7e.java:33: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpry36wp7e.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpry36wp7e.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpry36wp7e.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpry36wp7e.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpry36wp7e.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   m"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] words = txt.split(\" \");\n     \
    \   Union_ArrayList_String__int result = new Union_ArrayList_String__int(new ArrayList());\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\nreturn new Union_ArrayList_String__int();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd_npt00b.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpd_npt00b.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int(new ArrayList());\n        ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpd_npt00b.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int(new ArrayList());\n                            \
    \                     ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpd_npt00b.java:23: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpd_npt00b.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpd_npt00b.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpd_npt00b.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpd_npt00b.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<Integer> list = Arrays.asList(txt.split(\"\
    \\\\s\"));\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        for(String s:list){\n            ret.add(new Integer(txt.indexOf(s) +\
    \ 1));\n            ret.add(new Integer(txt.length()));\n        }\n        return\
    \ ret;\nreturn new Union_ArrayList_String__int();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk__smb8q.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpk__smb8q.java:17:\
    \ error: incompatible types: inference variable T has incompatible bounds\n  \
    \      List<Integer> list = Arrays.asList(txt.split(\"\\\\s\"));\n           \
    \                               ^\n    equality constraints: Integer\n    lower\
    \ bounds: String\n  where T is a type-variable:\n    T extends Object declared\
    \ in method <T>asList(T...)\n/tmp/tmpk__smb8q.java:18: error: cannot find symbol\n\
    \        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpk__smb8q.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpk__smb8q.java:19: error: incompatible types: Integer cannot\
    \ be converted to String\n        for(String s:list){\n                     ^\n\
    /tmp/tmpk__smb8q.java:24: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpk__smb8q.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpk__smb8q.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpk__smb8q.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hel"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_String__int(new ArrayList_String__int(new\
    \ ArrayList_String__int(new ArrayList_\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8_c_g57o.java:18: error: '(' or '[' expected\nreturn new Union_ArrayList_String__int();\n\
    ^\n/tmp/tmp8_c_g57o.java:18: error: ')' expected\nreturn new Union_ArrayList_String__int();\n\
    \      ^\n/tmp/tmp8_c_g57o.java:18: error: ')' expected\nreturn new Union_ArrayList_String__int();\n\
    \          ^\n/tmp/tmp8_c_g57o.java:18: error: ')' expected\nreturn new Union_ArrayList_String__int();\n\
    \                                      ^\n/tmp/tmp8_c_g57o.java:18: error: ')'\
    \ expected\nreturn new Union_ArrayList_String__int();\n                      \
    \                  ^\n/tmp/tmp8_c_g57o.java:18: error: ')' expected\nreturn new\
    \ Union_ArrayList_String__int();\n                                         ^\n\
    /tmp/tmp8_c_g57o.java:19: error: ')' expected\n    }\n     ^\n/tmp/tmp8_c_g57o.java:20:\
    \ error: ')' expected\n    public static void main(String[] args) {\n        \
    \  ^\n/tmp/tmp8_c_g57o.java:20: error: ')' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp8_c_g57o.java:20: error: ')' expected\n\
    \    public static void main(String[] args) {\n                      ^\n/tmp/tmp8_c_g57o.java:20:\
    \ error: ')' expected\n    public static void main(String[] args) {\n        \
    \                   ^\n/tmp/tmp8_c_g57o.java:20: error: ')' expected\n    public\
    \ static void main(String[] args) {\n                            ^\n/tmp/tmp8_c_g57o.java:20:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                                   ^\n/tmp/tmp8_c_g57o.java:20: error: ')'\
    \ expected\n    public static void main(String[] args) {\n                   \
    \                 ^\n/tmp/tmp8_c_g57o.java:21: error: as of release 1.4, 'assert'\
    \ is a keyword, and may not be used as an identifier\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    ^\n  (use -source 1.3 or lower to use 'assert'\
    \ as an identifier)\n/tmp/tmp8_c_g57o.java:21: error: <identifier> expected\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String delimiter = \",\";\n        Union_ArrayList_String__int\
    \ words = new Union_ArrayList_String__int();\n        if (txt.contains(delimiter))\n\
    \            txt = txt.replace(delimiter, \" \");\n        if (txt.toLowerCase().trim().length()\
    \ == 0)\n            return new Union_ArrayList_String__int(new int[]{0, txt.length()});\n\
    \        String[] split = txt.trim().split(\" \");\n        if (split.length ==\
    \ 0)\n            return new Union_ArrayList_String__int(new int[]{0, txt.length()});\n\
    \        if (split.length > 0) {\n            for (String s : split) {\n     \
    \           words.add(s.trim());\n            }\n            return words;\n \
    \       } else {\n            int odd_index = 0;\n            boolean odd = true;\n\
    \            for (int i = 0; i < 26; i++) {\n                if (i != 0 && txt.charAt(i)\
    \ == txt.charAt(i - 1)) {\n                    if (odd)\n                    \
    \    odd_index = i;\n                } else {\n                    odd = false;\n\
    \                }\n            }\n            if (odd_index == 0)\n         \
    \       return new Union_ArrayList_String__int(new int[]{0, txt.length()});\n\
    \            return new Union_ArrayList_String__int(words.toArray());\n      \
    \  }\nreturn new Union_ArrayList_String__int();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu7q6_umz.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpu7q6_umz.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpu7q6_umz.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ words = new Union_ArrayList_String__int();\n                               \
    \                 ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpu7q6_umz.java:22: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__int(new int[]{0, txt.length()});\n  \
    \                     ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpu7q6_umz.java:25: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__int(new int[]{0, txt.length()});\n  \
    \                     ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpu7q6_umz.java:43: error: cannot find symbol\n       \
    \         return new Union_ArrayList_String__int(new int[]{0, txt.length()});\n\
    \                           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpu7q6_umz.java:44: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__int(words.toArray());\n      \
    \                 ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpu7q6_umz.java:46: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpu7q6_umz.java:49: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String__String__int ss = new String__String__int();\n\
    \        String [] words = txt.split(\"\\\\s+\");\n        for (int i = 0; i <\
    \ words.length; i++) {\n            String word = words[i];\n            ss =\
    \ ss.union_add_1(new String__String__int(word));\n        }\n        ss = ss.union_add_1(new\
    \ String__String__int(\",\"));\n        ss = ss.union_add_1(new String__String__int(\"\
    ,\"));\n        List<String__Int> result = ss.union_array_to_List__Int();\n  \
    \      return result;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9ptkv495.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp9ptkv495.java:17:\
    \ error: cannot find symbol\n        String__String__int ss = new String__String__int();\n\
    \        ^\n  symbol:   class String__String__int\n  location: class Problem\n\
    /tmp/tmp9ptkv495.java:17: error: cannot find symbol\n        String__String__int\
    \ ss = new String__String__int();\n                                     ^\n  symbol:\
    \   class String__String__int\n  location: class Problem\n/tmp/tmp9ptkv495.java:21:\
    \ error: cannot find symbol\n            ss = ss.union_add_1(new String__String__int(word));\n\
    \                                    ^\n  symbol:   class String__String__int\n\
    \  location: class Problem\n/tmp/tmp9ptkv495.java:23: error: cannot find symbol\n\
    \        ss = ss.union_add_1(new String__String__int(\",\"));\n              \
    \                  ^\n  symbol:   class String__String__int\n  location: class\
    \ Problem\n/tmp/tmp9ptkv495.java:24: error: cannot find symbol\n        ss = ss.union_add_1(new\
    \ String__String__int(\",\"));\n                                ^\n  symbol: \
    \  class String__String__int\n  location: class Problem\n/tmp/tmp9ptkv495.java:25:\
    \ error: cannot find symbol\n        List<String__Int> result = ss.union_array_to_List__Int();\n\
    \             ^\n  symbol:   class String__Int\n  location: class Problem\n/tmp/tmp9ptkv495.java:27:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp9ptkv495.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9ptkv495.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayL"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> result = new ArrayList<>();\n\
    \        List<String> split = new ArrayList<>();\n        int count = 0;\n   \
    \     for (int i = 0; i < txt.length(); i++) {\n            if (Character.isWhitespace(txt.charAt(i)))\
    \ {\n                split.add(txt.substring(i, i + 1));\n                i =\
    \ i + 1;\n            } else {\n                result.add(txt.substring(i, i\
    \ + 1));\n                i = i + 1;\n                count = count + 1;\n   \
    \         }\n        }\n        if (split.isEmpty()) {\n            split.add(txt);\n\
    \        }\n        if (split.size() > 1) {\n            result.add(split);\n\
    \        } else {\n            result.add(count.toString());\n        }\n    \
    \    return Union_ArrayList_String__int.valueOf(result);\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcns508ud.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpcns508ud.java:34:\
    \ error: no suitable method found for add(List<String>)\n            result.add(split);\n\
    \                  ^\n    method Collection.add(String) is not applicable\n  \
    \    (argument mismatch; List<String> cannot be converted to String)\n    method\
    \ List.add(String) is not applicable\n      (argument mismatch; List<String> cannot\
    \ be converted to String)\n/tmp/tmpcns508ud.java:36: error: int cannot be dereferenced\n\
    \            result.add(count.toString());\n                            ^\n/tmp/tmpcns508ud.java:38:\
    \ error: cannot find symbol\n        return Union_ArrayList_String__int.valueOf(result);\n\
    \               ^\n  symbol:   variable Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpcns508ud.java:39: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpcns508ud.java:42: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcns508ud.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcns508ud.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcn"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        \n        Union_ArrayList_String__int wordList\
    \ = new Union_ArrayList_String__int();\n        \n        if (txt.indexOf(',')\
    \ < 0)\n        {\n            wordList.addAll(Arrays.asList(txt.toLowerCase().split(\"\
    \ \")));\n            return wordList;\n        }\n        \n        wordList.addAll(Arrays.asList(txt.split(\"\
    ,\")));\n        return wordList;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn9i46ufk.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpn9i46ufk.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int wordList = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpn9i46ufk.java:18: error: cannot find symbol\n\
    \        Union_ArrayList_String__int wordList = new Union_ArrayList_String__int();\n\
    \                                                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpn9i46ufk.java:28: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpn9i46ufk.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpn9i46ufk.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpn9i46ufk.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpn9i46ufk.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \     "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] words = txt.trim().split(\" \");\n\
    \        List<String> wordList = new ArrayList<String>(Arrays.asList(words));\n\
    \        List<Integer> letters = new ArrayList<Integer>(wordList.size());\n  \
    \      letters.add(0,0);\n        int n = 0;\n        for(int i = 1; i < wordList.size();\
    \ i++){\n            String thisWord = wordList.get(i);\n            String nextWord\
    \ = wordList.get(i+1);\n            if (thisWord.length() < nextWord.length()\
    \ || nextWord.length() < thisWord.length()){\n                letters.add(0,0);\n\
    \                n++;\n            }\n            else{\n                letters.add(0,1);\n\
    \                n++;\n            }\n        }\n        return n;\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpod10hohw.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpod10hohw.java:35:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpod10hohw.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpod10hohw.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpod10hohw.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpod10hohw.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpod10hohw.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpod10hohw.java:43: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        ArrayList_String__int words = new ArrayList_String__int();\n        char[]\
    \ charArray = txt.toCharArray();\n        for (int i = 0; i < charArray.length;\
    \ i++) {\n            words.add(i, charArray[i]);\n        }\n        ArrayList<Integer>\
    \ oddIndexList = new ArrayList<>();\n        for (Integer i : words) {\n     \
    \       if (i%2 != 0) {\n                oddIndexList.add(i);\n            }\n\
    \        }\n        for (int i : oddIndexList) {\n            words.remove(i);\n\
    \        }\n        IntUnaryOperator filter = i -> i;\n        IntUnaryOperator\
    \ filterOutEven = i -> i%2 == 0;\n        int oddIndexWords = words.stream().filter(filterOutEven).count();\n\
    \        int evenIndexWords = words.stream().filter(filter).count();\n       \
    \ result.add(oddIndexWords);\n        result.add(evenIndexWords);\n        return\
    \ result;\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp66cu7fz1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp66cu7fz1.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp66cu7fz1.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp66cu7fz1.java:18: error: cannot find symbol\n\
    \        ArrayList_String__int words = new ArrayList_String__int();\n        ^\n\
    \  symbol:   class ArrayList_String__int\n  location: class Problem\n/tmp/tmp66cu7fz1.java:18:\
    \ error: cannot find symbol\n        ArrayList_String__int words = new ArrayList_String__int();\n\
    \                                          ^\n  symbol:   class ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp66cu7fz1.java:32: error: cannot find symbol\n\
    \        IntUnaryOperator filter = i -> i;\n        ^\n  symbol:   class IntUnaryOperator\n\
    \  location: class Problem\n/tmp/tmp66cu7fz1.java:32: error: lambda expression\
    \ not expected here\n        IntUnaryOperator filter = i -> i;\n             \
    \                     ^\n/tmp/tmp66cu7fz1.java:33: error: cannot find symbol\n\
    \        IntUnaryOperator filterOutEven = i -> i%2 == 0;\n        ^\n  symbol:\
    \   class IntUnaryOperator\n  location: class Problem\n/tmp/tmp66cu7fz1.java:33:\
    \ error: lambda expression not expected here\n        IntUnaryOperator filterOutEven\
    \ = i -> i%2 == 0;\n                                         ^\n/tmp/tmp66cu7fz1.java:39:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp66cu7fz1.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((ne"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        return splitWords(txt, new Union_ArrayList_String__int(0));\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5a7sbrr3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp5a7sbrr3.java:17:\
    \ error: cannot find symbol\n        return splitWords(txt, new Union_ArrayList_String__int(0));\n\
    \                                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp5a7sbrr3.java:18: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp5a7sbrr3.java:21: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5a7sbrr3.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5a7sbrr3.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5a7sbrr3.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp5a7sbrr3.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        return null;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp479gf1yu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp479gf1yu.java:18:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp479gf1yu.java:21: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp479gf1yu.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp479gf1yu.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp479gf1yu.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp479gf1yu.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmp479gf1yu.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] words = txt.split(\"\\\\s+\");\n\
    \        // return txt.split(\",\");\n        Union_ArrayList_String__int res\
    \ = new Union_ArrayList_String__int();\n        for (String word : words) {\n\
    \            res.add(word);\n        }\n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpby0djuyg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpby0djuyg.java:19:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpby0djuyg.java:19: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpby0djuyg.java:24: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpby0djuyg.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpby0djuyg.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpby0djuyg.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpby0djuyg.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int num_words = 0;\n        if (txt == null)\
    \ {\n            return new Union_ArrayList_String__int(new int[0], new int[0]);\n\
    \        }\n        String[] words = txt.split(\"[\\\\s]+\");\n        for (String\
    \ word : words) {\n            num_words++;\n        }\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int(new int[num_words]);\n        if (words.length\
    \ > 0) {\n            for (int i = 0; i < words.length; i++) {\n             \
    \   res.add(new Union_ArrayList_String__int(words[i]));\n            }\n     \
    \   }\n        return res;\nreturn new Union_ArrayList_String__int();\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo4rr0xe6.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpo4rr0xe6.java:19:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__int(new\
    \ int[0], new int[0]);\n                       ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpo4rr0xe6.java:25: error: cannot find symbol\n\
    \        Union_ArrayList_String__int res = new Union_ArrayList_String__int(new\
    \ int[num_words]);\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpo4rr0xe6.java:25: error: cannot find symbol\n\
    \        Union_ArrayList_String__int res = new Union_ArrayList_String__int(new\
    \ int[num_words]);\n                                              ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpo4rr0xe6.java:28:\
    \ error: cannot find symbol\n                res.add(new Union_ArrayList_String__int(words[i]));\n\
    \                            ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpo4rr0xe6.java:32: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpo4rr0xe6.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpo4rr0xe6.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpo4rr0xe6.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        if (txt == null || txt.isEmpty()) return 0;\n\
    \        final Union_ArrayList_String__int ret = new Union_ArrayList_String__int(txt.length()\
    \ * 2);\n        final char ch = ' ';\n        int i = 0;\n        for (String\
    \ t : txt.split(ch)) {\n            ret.add(t.toLowerCase());\n            ret.add(t.toUpperCase());\n\
    \            i++;\n        }\n        ret.add(i);\n        return ret;\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps7ul1p4a.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmps7ul1p4a.java:18:\
    \ error: cannot find symbol\n        final Union_ArrayList_String__int ret = new\
    \ Union_ArrayList_String__int(txt.length() * 2);\n              ^\n  symbol: \
    \  class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmps7ul1p4a.java:18:\
    \ error: cannot find symbol\n        final Union_ArrayList_String__int ret = new\
    \ Union_ArrayList_String__int(txt.length() * 2);\n                           \
    \                         ^\n  symbol:   class Union_ArrayList_String__int\n \
    \ location: class Problem\n/tmp/tmps7ul1p4a.java:21: error: incompatible types:\
    \ char cannot be converted to String\n        for (String t : txt.split(ch)) {\n\
    \                                  ^\n/tmp/tmps7ul1p4a.java:28: error: cannot\
    \ find symbol\nreturn new Union_ArrayList_String__int();\n           ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmps7ul1p4a.java:31:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmps7ul1p4a.java:32:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmps7ul1p4a.java:33:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmps7ul1p4a.java:34:\
    \ error: c"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ws = Union_ArrayList_String__int.add();\n\
    \        Union_ArrayList_String__int comm = Union_ArrayList_String__int.add();\n\
    \        Union_ArrayList_String__int numLowerApl = Union_ArrayList_String__int.add();\n\
    \        Union_ArrayList_String__int upper = Union_ArrayList_String__int.add();\n\
    \        String split = \"\";\n        List<String> words = Arrays.asList(txt.split(\"\
    \ \"));\n        Map<Character, Integer> chars = IntStream.range(0, 26).boxed().collect(Collectors.toMap(i\
    \ -> String.valueOf(i + 97), i -> i));\n        words.forEach(s -> {\n       \
    \     split = s.replaceAll(\",\", \"\");\n            int l = split.length();\n\
    \            chars.entrySet().stream().filter(e -> e.getValue() < l).forEach(e2\
    \ -> {\n                ws.add(e.getKey());\n            });\n            split\
    \ = split.toLowerCase();\n            chars.entrySet().stream().filter(e -> e.getValue()\
    \ < l).forEach(e2 -> {\n                if (e.getValue() % 2 == 0) {\n       \
    \             numLowerApl.add(e.getKey());\n                }\n            });\n\
    \            chars.entrySet().stream().filter(e -> e.getValue() > l).forEach(e2\
    \ -> {\n                if (e.getValue() % 2 != 0) {\n                    upper.add(e.getKey());\n\
    \                }\n            });\n        });\n        Union_ArrayList_String__int\
    \ result = Union_ArrayList_String__int.add();\n        Union_ArrayList_String__int\
    \ rs = Union_ArrayList_String__int.add();\n        if ((numLowerApl.size() !=\
    \ 0) && (numLowerApl.size() == upper.size())) {\n            Union_ArrayList_String__int\
    \ r = Union_ArrayList_String__int.add();\n            Union_ArrayList_String__int\
    \ n = Union_ArrayList_String__int.add();\n            Union_ArrayList_String__int\
    \ t = Union_ArrayList_String__int.add();\n            Union_ArrayList_String__int\
    \ f1 = Union_ArrayList_String__int.add();\n            Union_ArrayList_String__int\
    \ f2 = Union_ArrayList_String__int.add();\n            Union_ArrayList_String__int\
    \ f3 = Union_ArrayList_String__int.add();\n            Union_ArrayList_String__int\
    \ f4 = Union_ArrayList_String__int.add();\n            Union_ArrayList_String__int\
    \ f5 = Union_ArrayList_String__int.add();\n            Union_Array\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0fhineix.java:53: error: not a statement\n            Union_Array\n\
    \            ^\n/tmp/tmp0fhineix.java:53: error: ';' expected\n            Union_Array\n\
    \                       ^\n/tmp/tmp0fhineix.java:56: error: illegal start of expression\n\
    \    public static void main(String[] args) {\n    ^\n/tmp/tmp0fhineix.java:56:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmp0fhineix.java:56: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmp0fhineix.java:56: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmp0fhineix.java:56: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmp0fhineix.java:67: error: reached end of file while parsing\n\
    }\n ^\n8 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int(new\
    \ ArrayList(), new ArrayList(), new ArrayList(), new ArrayList(), new ArrayList(),\
    \ new ArrayList());\n        for (String word : txt.split(\" \")) {\n        \
    \    Union_ArrayList_String__int curr = res.copy();\n            Union_ArrayList_String__int\
    \ wordCurr = res.copy();\n            for (char c : word.toCharArray()) {\n  \
    \              if (Character.isLetter(c)) {\n                    curr.add(c);\n\
    \                }\n            }\n            if (res.isEmpty()) {\n        \
    \        res.setAllChars(curr);\n                res.setAllChars(wordCurr);\n\
    \            } else {\n                res.addAll(curr);\n                res.addAll(wordCurr);\n\
    \            }\n        }\n        for (String word : res.allChars()) {\n    \
    \        if (!word.isEmpty()) {\n                res.addToAllChars(word);\n  \
    \          }\n        }\n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_a3x3b34.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp_a3x3b34.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int(new\
    \ ArrayList(), new ArrayList(), new ArrayList(), new ArrayList(), new ArrayList(),\
    \ new ArrayList());\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp_a3x3b34.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int res = new Union_ArrayList_String__int(new\
    \ ArrayList(), new ArrayList(), new ArrayList(), new ArrayList(), new ArrayList(),\
    \ new ArrayList());\n                                              ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp_a3x3b34.java:19:\
    \ error: cannot find symbol\n            Union_ArrayList_String__int curr = res.copy();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_a3x3b34.java:20: error: cannot find symbol\n            Union_ArrayList_String__int\
    \ wordCurr = res.copy();\n            ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp_a3x3b34.java:40: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp_a3x3b34.java:43: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_a3x3b34.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__in"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        StringTokenizer st = new StringTokenizer(txt, \" ,\");\n        while\
    \ (st.hasMoreTokens()) {\n            String s = st.nextToken();\n           \
    \ st = new StringTokenizer(s, \" ,\");\n            while (st.hasMoreTokens())\
    \ {\n                String s2 = st.nextToken();\n                String s3 =\
    \ s2.toLowerCase();\n                result.add(s3);\n            }\n        }\n\
    \        return result;\nreturn new Union_ArrayList_String__int();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp96ld7n8_.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp96ld7n8_.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp96ld7n8_.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp96ld7n8_.java:29: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp96ld7n8_.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp96ld7n8_.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp96ld7n8_.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp96ld7n8_.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \           "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        txt = txt.replaceAll(\"[\\\\s,]+\", \",\");\n        txt = txt.toLowerCase();\n\
    \        ArrayList <String> arrayList = new ArrayList <String> ();\n        for\
    \ (String s : txt.split(\"[\\\\s,]+\")) {\n            if (s.trim().length() >\
    \ 0) {\n                arrayList.add(s.trim());\n            }\n        }\n \
    \       int noOfWords = arrayList.size();\n        if (noOfWords % 2 != 0) {\n\
    \            noOfWords--;\n        }\n        int noOfCommas = 0;\n        ArrayList<String>\
    \ arrayList = new ArrayList<String>();\n        for (String s : arrayList) {\n\
    \            if (s.contains(\",\")) {\n                noOfCommas++;\n       \
    \     } else {\n                arrayList.add(s);\n            }\n        }\n\
    \        noOfCommas = noOfCommas + noOfWords;\n        int noOfLetters = noOfWords;\n\
    \        for (int i = 0; i < arrayList.size(); i++) {\n            int noOfLettersTemp\
    \ = noOfLetters;\n            String s1 = arrayList.get(i);\n            int noOfCommasTemp\
    \ = 0;\n            String s2 = \"\";\n            for (int j = 0; j < s1.length();\
    \ j++) {\n                char c = s1.charAt(j);\n                for (int k =\
    \ 0; k < 26; k++) {\n                    if (((char) k) == c) {\n            \
    \            s2 = s2 + Character.toUpperCase((char) k);\n                    \
    \    noOfLettersTemp = noOfLettersTemp - 1;\n                    }\n         \
    \       }\n            }\n            for (int j = 0; j < s2.length(); j++) {\n\
    \                if ((s2.charAt(j) == 'z') || (s2.charAt(j) == 'Z')) {\n     \
    \               noOfLettersTemp = noOfLettersTemp - 1;\n                }\n  \
    \          }\n            noOfLetters = noOfLettersTemp;\n            if (noOfCommasTemp\
    \ != 0) {\n                noOfCommas = noOfCommasTemp;\n            }\n     \
    \   }\n        ret.s1 = arrayList;\n        ret.s2 = noOfLetters;\n        ret.s3\
    \ = noOfCommas;\n        return ret;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmj5pn7a2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpmj5pn7a2.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpmj5pn7a2.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpmj5pn7a2.java:31: error: variable arrayList is already defined\
    \ in method splitWords(String)\n        ArrayList<String> arrayList = new ArrayList<String>();\n\
    \                          ^\n/tmp/tmpmj5pn7a2.java:69: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpmj5pn7a2.java:72: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpmj5pn7a2.java:73: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpmj5pn7a2.java:74: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpmj5pn7a2.java:75: error: cannot find symbol\n    assert(s"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String txtLc = txt.toLowerCase();\n      \
    \  int lc = txtLc.length();\n        int odd = 1;\n        String txtCommaSeparated\
    \ = \"\";\n        String txtWithCommaSeparated = \"\";\n        for (int i =\
    \ 0; i < txtLc.length(); i++) {\n            char c = txtLc.charAt(i);\n     \
    \       int index = ((int)c) - ord('a') + 1;\n            while (index < 26) {\n\
    \                if (index != odd)\n                    txtCommaSeparated += txtLc.charAt(i);\n\
    \                index++;\n            }\n        }\n        txtCommaSeparated\
    \ = txtCommaSeparated.substring(0, txtCommaSeparated.length() - 1);\n        txtWithCommaSeparated\
    \ = txtCommaSeparated.replace(\",\", \" \");\n        txtWithCommaSeparated =\
    \ txtWithCommaSeparated.trim();\n        return txt_split(txtWithCommaSeparated);\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpngu4bywq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpngu4bywq.java:24:\
    \ error: cannot find symbol\n            int index = ((int)c) - ord('a') + 1;\n\
    \                                   ^\n  symbol:   method ord(char)\n  location:\
    \ class Problem\n/tmp/tmpngu4bywq.java:34: error: cannot find symbol\n       \
    \ return txt_split(txtWithCommaSeparated);\n               ^\n  symbol:   method\
    \ txt_split(String)\n  location: class Problem\n/tmp/tmpngu4bywq.java:35: error:\
    \ cannot find symbol\nreturn new Union_ArrayList_String__int();\n           ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpngu4bywq.java:38:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpngu4bywq.java:39:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpngu4bywq.java:40:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpngu4bywq.java:41:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\", (String)\"\
    !\")))));\n                                                           ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> strings = new ArrayList<>();\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : txt.toCharArray())\
    \ {\n            if (Character.isWhitespace(c)) {\n                strings.add(sb.toString());\n\
    \                sb = new StringBuilder();\n            } else if (c == ',') {\n\
    \                strings.add(sb.toString());\n                sb = new StringBuilder();\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        if (sb.length() > 0) {\n            strings.add(sb.toString());\n   \
    \     }\n        List<Integer> result = new ArrayList<>();\n        int oddNum\
    \ = 0;\n        int evenNum = 0;\n        for (String string : strings) {\n  \
    \          for (int i = 0; i < string.length(); i++) {\n                char c\
    \ = string.charAt(i);\n                if (c > 64 && c < 91) c = c - 64;\n   \
    \             switch (c) {\n                    case 65:\n                   \
    \ case 66:\n                    case 67:\n                    case 68:\n     \
    \               case 69:\n                    case 70:\n                    case\
    \ 71:\n                    case 72:\n                    case 73:\n          \
    \          case 74:\n                    case 75:\n                    case 76:\n\
    \                    case 77:\n                    case 78:\n                \
    \    case 79:\n                    case 80:\n                    case 81:\n  \
    \                  case 82:\n                    case 83:\n                  \
    \  case 84:\n                    case 85:\n                    case 86:\n    \
    \                case 87:\n                    case 88:\n                    case\
    \ 89:\n                    case 90:\n                    case 91:\n          \
    \          case 92:\n                    case 93:\n                    case 94:\n\
    \                    case 95:\n                    case 96:\n                \
    \    case 97:\n                        oddNum++;\n                        break;\n\
    \                    case 97:\n                    case 98:\n                \
    \    case 99:\n                    case 100:\n                    case 101:\n\
    \                    case 102:\n                    case 103:\n              \
    \      case 104:\n                    case 105:\n                    case 106:\n\
    \                    case 107:\n                    case 108:\n              \
    \      case 109:\n                    case 110:\n                    case 111:\n\
    \                    case 112:\n                    case 113:\n              \
    \      case 114:\n                    case 115:\n                    case 116:\n\
    \                    case 117:\n                    case 118:\n              \
    \      case 119:\n                    case 120:\n                    case 121:\n\
    \                    case 122:\n                    case 123:\n              \
    \      case 124:\n                    case 125:\n                    case 126:\n\
    \                    case 127:\n                        evenNum++;\n         \
    \               break;\n                    default:\n                       \
    \ result.add(oddNum);\n                        oddNum = 0;\n                 \
    \       evenNum = 0;\n                        break;\n                }\n    \
    \        }\n        }\n        result.add(evenNum);\n        result.add(oddNum);\n\
    \        return result;\nreturn new Union_ArrayList_String__int();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuqveaz_5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpuqveaz_5.java:39:\
    \ error: incompatible types: possible lossy conversion from int to char\n    \
    \            if (c > 64 && c < 91) c = c - 64;\n                             \
    \               ^\n/tmp/tmpuqveaz_5.java:76: error: duplicate case label\n   \
    \                 case 97:\n                    ^\n/tmp/tmpuqveaz_5.java:120:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpuqveaz_5.java:123: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpuqveaz_5.java:124: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpuqveaz_5.java:125: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpuqveaz_5.java:126: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpuqveaz_5.java:127: error: cannot find symbol\n    assert(splitWords((\"\
    abc"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        char[] chars = txt.toCharArray();\n      \
    \  Arrays.sort(chars);\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int(Arrays.stream(chars).filter(c\
    \ -> !Character.isWhitespace(c)).collect(Collectors.toList()));\n        Union_ArrayList_Int__int\
    \ oddIndexChars = new Union_ArrayList_Int__int(Arrays.stream(chars).filter(c ->\
    \ Character.isLowerCase(c) && c > 96 && c < 123).collect(Collectors.toList()));\n\
    \        Union_ArrayList_Int__int evenIndexChars = new Union_ArrayList_Int__int(Arrays.stream(chars).filter(c\
    \ -> Character.isLowerCase(c) && c > 96 && c < 123).filter(c -> c % 2 == 0).collect(Collectors.toList()));\n\
    \        int totalNumberOfChars = evenIndexChars.size() + oddIndexChars.size();\n\
    \        if (totalNumberOfChars == 0) return 0;\n        int evenCount = 0;\n\
    \        int oddCount = 0;\n        if (evenIndexChars.size() != 0) {\n      \
    \      for (int i = 0; i < chars.length; i++) {\n                if (chars[i]\
    \ != chars[evenIndexChars.last()])\n                    evenCount++;\n       \
    \     }\n        }\n        if (oddIndexChars.size() != 0) {\n            for\
    \ (int i = 0; i < chars.length; i++) {\n                if (chars[i] != chars[oddIndexChars.last()])\n\
    \                    oddCount++;\n            }\n        }\n        if (oddCount\
    \ < evenCount) return evenCount;\n        return oddCount;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqpx6_0tu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpqpx6_0tu.java:19:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int(Arrays.stream(chars).filter(c -> !Character.isWhitespace(c)).collect(Collectors.toList()));\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpqpx6_0tu.java:19: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ result = new Union_ArrayList_String__int(Arrays.stream(chars).filter(c -> !Character.isWhitespace(c)).collect(Collectors.toList()));\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpqpx6_0tu.java:20: error: cannot find symbol\n\
    \        Union_ArrayList_Int__int oddIndexChars = new Union_ArrayList_Int__int(Arrays.stream(chars).filter(c\
    \ -> Character.isLowerCase(c) && c > 96 && c < 123).collect(Collectors.toList()));\n\
    \        ^\n  symbol:   class Union_ArrayList_Int__int\n  location: class Problem\n\
    /tmp/tmpqpx6_0tu.java:20: error: cannot find symbol\n        Union_ArrayList_Int__int\
    \ oddIndexChars = new Union_ArrayList_Int__int(Arrays.stream(chars).filter(c ->\
    \ Character.isLowerCase(c) && c > 96 && c < 123).collect(Collectors.toList()));\n\
    \                                                     ^\n  symbol:   class Union_ArrayList_Int__int\n\
    \  location: class Problem\n/tmp/tmpqpx6_0tu.java:21: error: cannot find symbol\n\
    \        Union_ArrayList_Int__int evenIndexChars = new Union_ArrayList_Int__int(Arrays.stream(chars).filter(c\
    \ -> Character.isLowerCase(c) && c > 96 && c < 123).filter(c -> c % 2 == 0).collect(Collectors.toList()));\n\
    \        ^\n  symbol:   class Union_ArrayList_Int__int\n  location: class Problem\n\
    /tmp/tmpqpx6_0tu.java:21: error: cannot find symbol\n        Union_ArrayList_Int__int\
    \ evenIndexChars = new Union_ArrayList_Int__int(Arrays.stream(chars).filt"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        ArrayList<String> result = new ArrayList<>();\n\
    \        final Union_ArrayList_String__int uaas = new Union_ArrayList_String__int();\n\
    \        final Union_ArrayList_String__int uaas2 = new Union_ArrayList_String__int();\n\
    \n        // Split txt on white-spaces\n        String[] words_arr = txt.split(\"\
    \\\\s+\");\n        for (String word : words_arr) {\n            if (word.isEmpty())\
    \ continue;\n            boolean isDigit = Character.isDigit(word.charAt(0));\n\
    \            boolean isSpace = Character.isWhitespace(word.charAt(0));\n     \
    \       if (isDigit) {\n                uaas2.addAll(Arrays.stream(word.split(\"\
    \")).map(String::trim).filter(x -> x.length() > 0).collect(Collectors.toList()));\n\
    \            } else if (isSpace) {\n                uaas.add(word);\n        \
    \    } else {\n                result.add(word);\n            }\n        }\n \
    \       uaas.addAll(uaas2);\n        return uaas;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmped5pqg3n.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmped5pqg3n.java:18:\
    \ error: cannot find symbol\n        final Union_ArrayList_String__int uaas =\
    \ new Union_ArrayList_String__int();\n              ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmped5pqg3n.java:18: error: cannot find symbol\n\
    \        final Union_ArrayList_String__int uaas = new Union_ArrayList_String__int();\n\
    \                                                     ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmped5pqg3n.java:19: error: cannot find symbol\n\
    \        final Union_ArrayList_String__int uaas2 = new Union_ArrayList_String__int();\n\
    \              ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmped5pqg3n.java:19: error: cannot find symbol\n        final\
    \ Union_ArrayList_String__int uaas2 = new Union_ArrayList_String__int();\n   \
    \                                                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmped5pqg3n.java:37: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmped5pqg3n.java:40: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmped5pqg3n.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmped5pqg3n.java:42: error: cannot find symbol\n "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        if (txt != null && !txt.isEmpty()) {\n            String[] words = txt.split(\"\
    \ \");\n            for (int i = 0; i < words.length; i++) {\n               \
    \ String word = words[i];\n                String[] words = word.split(\",\");\n\
    \                if (words.length > 1) {\n                    for (int j = 0;\
    \ j < words.length; j++) {\n                        String w = words[j];\n   \
    \                     int len = w.length();\n                        if (len >\
    \ 0) {\n                            for (int k = 0; k < len; k++) {\n        \
    \                        int index = alphabet.indexOf(w.charAt(k));\n        \
    \                        if (index >= 0) {\n                                 \
    \   result.add(index, w);\n                                }\n               \
    \             }\n                        }\n                    }\n          \
    \      } else if (words.length == 1) {\n                    String w = words[0];\n\
    \                    int len = w.length();\n                    if (len > 0) {\n\
    \                        for (int k = 0; k < len; k++) {\n                   \
    \         int index = alphabet.indexOf(w.charAt(k));\n                       \
    \     if (index >= 0) {\n                                result.add(index, w);\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n        return result;\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9ifv5max.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp9ifv5max.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9ifv5max.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9ifv5max.java:22: error: variable words is\
    \ already defined in method splitWords(String)\n                String[] words\
    \ = word.split(\",\");\n                         ^\n/tmp/tmp9ifv5max.java:29:\
    \ error: cannot find symbol\n                                int index = alphabet.indexOf(w.charAt(k));\n\
    \                                            ^\n  symbol:   variable alphabet\n\
    \  location: class Problem\n/tmp/tmp9ifv5max.java:41: error: cannot find symbol\n\
    \                            int index = alphabet.indexOf(w.charAt(k));\n    \
    \                                    ^\n  symbol:   variable alphabet\n  location:\
    \ class Problem\n/tmp/tmp9ifv5max.java:51: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9ifv5max.java:54: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9ifv5max.java:55: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol: "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> words = Arrays.stream(txt.split(\"\
    \ \")).map(String::toUpperCase)\n                .collect(Collectors.toList());\n\
    \        Union_ArrayList_String__int ret = new Union_ArrayList_String__int(\n\
    \                Arrays.stream(words).collect(Collectors.toList()));\n       \
    \ return ret;\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnej7kn_0.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpnej7kn_0.java:19:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int(\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpnej7kn_0.java:19: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int(\n                                   \
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpnej7kn_0.java:22: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpnej7kn_0.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpnej7kn_0.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpnej7kn_0.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpnej7kn_0.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = Union_ArrayList_String__int.unite();\n\
    \        for (String s : txt.split(\" \")) {\n            if (s.trim().length()\
    \ == 0)\n                continue;\n            ret.add(s);\n        }\n     \
    \   for (String s : txt.split(\",\")) {\n            if (s.trim().length() ==\
    \ 0)\n                continue;\n            ret.add(s);\n        }\n        HashMap<Character,\
    \ Integer> charCounts = new HashMap<Character, Integer>();\n        txt.toLowerCase().chars().mapToObj(c\
    \ -> charCounts.put(c, charCounts.getOrDefault(c, 0) + 1)).forEach(c -> {\n  \
    \          if (c.intValue() % 2 != 0) {\n                ret.add(c.toString());\n\
    \            }\n        });\n        for (Map.Entry<Character, Integer> e : charCounts.entrySet())\
    \ {\n            int curr = e.getValue();\n            int rem = e.getValue()\
    \ - curr;\n            while (curr != 1) {\n                if (rem < 0) {\n \
    \                   rem--;\n                    break;\n                }\n  \
    \              rem--;\n                curr--;\n            }\n        }\n   \
    \     return ret;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcgvk4hy7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpcgvk4hy7.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = Union_ArrayList_String__int.unite();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpcgvk4hy7.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = Union_ArrayList_String__int.unite();\n                               \
    \           ^\n  symbol:   variable Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcgvk4hy7.java:29: error: no suitable method found for put(int,int)\n\
    \        txt.toLowerCase().chars().mapToObj(c -> charCounts.put(c, charCounts.getOrDefault(c,\
    \ 0) + 1)).forEach(c -> {\n                                                  \
    \        ^\n    method Map.put(Character,Integer) is not applicable\n      (argument\
    \ mismatch; int cannot be converted to Character)\n    method AbstractMap.put(Character,Integer)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Character)\n\
    \    method HashMap.put(Character,Integer) is not applicable\n      (argument\
    \ mismatch; int cannot be converted to Character)\n/tmp/tmpcgvk4hy7.java:30: error:\
    \ cannot find symbol\n            if (c.intValue() % 2 != 0) {\n             \
    \    ^\n  symbol:   method intValue()\n  location: variable c of type Object\n\
    /tmp/tmpcgvk4hy7.java:47: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcgvk4hy7.java:50: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcgvk4hy7.java:51: error: cannot find symbol\n    assert(splitWords(("
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        String__int currentWord = new String__int(txt);\n        result.add(currentWord);\n\
    \        String__int currentWord2 = new String__int(\"\");\n        int currPosition\
    \ = 0;\n        while (currPosition < currentWord.str.length()) {\n          \
    \  if (currentWord.str[currPosition] == ' ') {\n                result.add(currentWord2);\n\
    \                currentWord2 = new String__int(\"\");\n            } else {\n\
    \                currentWord2.add(currentWord.str[currPosition]);\n          \
    \  }\n            currPosition++;\n        }\n        if (currentWord2.str.length()\
    \ > 0) {\n            result.add(currentWord2);\n        }\n        return result;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo95urb6b.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpo95urb6b.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpo95urb6b.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpo95urb6b.java:18: error: cannot find symbol\n\
    \        String__int currentWord = new String__int(txt);\n        ^\n  symbol:\
    \   class String__int\n  location: class Problem\n/tmp/tmpo95urb6b.java:18: error:\
    \ cannot find symbol\n        String__int currentWord = new String__int(txt);\n\
    \                                      ^\n  symbol:   class String__int\n  location:\
    \ class Problem\n/tmp/tmpo95urb6b.java:20: error: cannot find symbol\n       \
    \ String__int currentWord2 = new String__int(\"\");\n        ^\n  symbol:   class\
    \ String__int\n  location: class Problem\n/tmp/tmpo95urb6b.java:20: error: cannot\
    \ find symbol\n        String__int currentWord2 = new String__int(\"\");\n   \
    \                                    ^\n  symbol:   class String__int\n  location:\
    \ class Problem\n/tmp/tmpo95urb6b.java:25: error: cannot find symbol\n       \
    \         currentWord2 = new String__int(\"\");\n                            \
    \       ^\n  symbol:   class String__int\n  location: class Problem\n/tmp/tmpo95urb6b.java:35:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpo95urb6b.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        \nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpimvefvr2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpimvefvr2.java:18:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpimvefvr2.java:21: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpimvefvr2.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpimvefvr2.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpimvefvr2.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpimvefvr2.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpimvefvr2.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int word = new Union_ArrayList_String__int(new\
    \ ArrayList_String__int(0));\n        StringBuilder txt2 = new StringBuilder();\n\
    \        for (String word : txt.split(\" \")) {\n            if (word.trim().length()\
    \ > 0) {\n                if (txt2.length() == 0) {\n                    txt2.append(word);\n\
    \                } else {\n                    txt2.append(\" \");\n         \
    \           txt2.append(word);\n                }\n                word.add(txt2.toString());\n\
    \                txt2 = new StringBuilder();\n            } else {\n         \
    \       word.add(word.toString());\n                txt2 = new StringBuilder();\n\
    \            }\n        }\n        return word;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppng4kjxt.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmppng4kjxt.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int word = new Union_ArrayList_String__int(new\
    \ ArrayList_String__int(0));\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmppng4kjxt.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int word = new Union_ArrayList_String__int(new\
    \ ArrayList_String__int(0));\n                                               ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmppng4kjxt.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int word = new Union_ArrayList_String__int(new\
    \ ArrayList_String__int(0));\n                                               \
    \                                ^\n  symbol:   class ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmppng4kjxt.java:27: error: cannot find symbol\n\
    \                word.add(txt2.toString());\n                    ^\n  symbol:\
    \   method add(String)\n  location: variable word of type String\n/tmp/tmppng4kjxt.java:30:\
    \ error: cannot find symbol\n                word.add(word.toString());\n    \
    \                ^\n  symbol:   method add(String)\n  location: variable word\
    \ of type String\n/tmp/tmppng4kjxt.java:35: error: cannot find symbol\nreturn\
    \ new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmppng4kjxt.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmppng4kjxt.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.a"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> words = new ArrayList<String>();\n\
    \        List<String> split = new ArrayList<String>();\n        \n        int\
    \ flag = 0;\n        \n        txt = txt.replaceAll(\"[^a-zA-Z]\", \"\");\n  \
    \      \n        \n        \n        if (txt.length() % 2 != 0)\n            txt\
    \ = txt.substring(txt.length() - 1);\n        \n        if (txt.length() == 0)\n\
    \            return new Union_ArrayList_String__int(new String[] {\"\"});\n  \
    \      \n        \n        for(int i = 0; i < txt.length()/2; i++) {\n       \
    \     String str = txt.substring(i, i + 2);\n            split.add(str);\n   \
    \     }\n        \n        \n        \n        \n        if (split.size() % 2\
    \ != 0) {\n            split.remove(split.size() - 1);\n            split.remove(split.size()\
    \ - 1);\n        }\n        \n        \n        \n        \n        \n       \
    \ \n        \n        if (split.size() % 2 != 0)\n            split.remove(split.size()\
    \ - 1);\n        \n        \n        \n        if (split.size() % 2 != 0) {\n\
    \            split.remove(split.size() - 1);\n            split.remove(split.size()\
    \ - 1);\n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \  }\n        \n        \n        \n        \n        \n        if (split.size()\
    \ % 2 != 0) {\n            split.remove(split.size() - 1);\n            split.remove(split.size()\
    \ - 1);\n        }\n        \n        \n        \n        \n        \n       \
    \ if (split.size() % 2 != 0) {\n            split.remove(split.size() - 1);\n\
    \            split.remove(split.size() - 1);\n        }\n        \n        \n\
    \        \n        \n        \n        \n        if (split.size() % 2 != 0) {\n\
    \            split.remove(split.size() - 1);\n            split.remove(split.size()\
    \ - 1);\n        }\n        \n        \n        \n        \n        \n       \
    \ if (split.size() % 2 != 0) {\n            split.remove(split.size() - 1);\n\
    \            split.remove(split.size() - 1);\n        }\n        \n        \n\
    \        \n        \n        \n        if (split.size() % 2 != 0) {\n        \
    \    split.remove(split.size() - 1);\n            split.remove(split.size() -\
    \ 1);\n        }\n        \n        \n        \n        \n        \n        if\
    \ (split.size() % 2 != 0) {\n            split.remove(split.size() - 1);\n   \
    \         split.remove(split.size() - 1);\n        }\n        \n        \n   \
    \     \n        \n        \n        if (split.size() % 2 != 0) {\n           \
    \ split.remove(split.size() - 1);\n\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqwk9inei.java:147: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpqwk9inei.java:147: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \           ^\n/tmp/tmpqwk9inei.java:147: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpqwk9inei.java:147: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpqwk9inei.java:147: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpqwk9inei.java:158: error: reached end of file while parsing\n\
    }\n ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int[] charMap = {\n            ' ', ',', 'a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'\n        };\n        // This can\
    \ be improved by using a regex or by splitting the string in words\n        int[]\
    \ wordMap = new int[26];\n        char[] txtChars = txt.toCharArray();\n     \
    \   Arrays.fill(wordMap, -1);\n        int wordIndex = 0;\n        int previousChar\
    \ = 0;\n        for (int i = 0; i < txtChars.length; i++) {\n            if (wordMap[previousChar]\
    \ >= 0) {\n                Union_ArrayList_String__int nextWord = new Union_ArrayList_String__int(wordMap[previousChar]);\n\
    \                Union_ArrayList_String__int currWord = new Union_ArrayList_String__int(wordMap[previousChar]);\n\
    \                while (previousChar < 26 && wordMap[previousChar] < 0) {\n  \
    \                  nextWord.element().add(txtChars[i]);\n                    currWord.element().add(charMap[previousChar]);\n\
    \                    previousChar++;\n                }\n                wordMap[previousChar]\
    \ = wordIndex;\n                Union_ArrayList_String__int currWordCopy = currWord;\n\
    \                Union_ArrayList_String__int nextWordCopy = nextWord;\n      \
    \          wordIndex++;\n                Union_ArrayList_String__int currWordCopy2\
    \ = currWord;\n                while (currWordCopy2.element().size() != 0) {\n\
    \                    currWordCopy2.element().remove(0);\n                }\n \
    \               currWordCopy.element().add(currWordCopy2.element());\n       \
    \         currWordCopy.element().remove(0);\n                nextWordCopy.element().add(nextWordCopy.element());\n\
    \            }\n            previousChar = i;\n        }\n        return wordIndex;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfkw13cdp.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpfkw13cdp.java:28:\
    \ error: cannot find symbol\n                Union_ArrayList_String__int nextWord\
    \ = new Union_ArrayList_String__int(wordMap[previousChar]);\n                ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpfkw13cdp.java:28:\
    \ error: cannot find symbol\n                Union_ArrayList_String__int nextWord\
    \ = new Union_ArrayList_String__int(wordMap[previousChar]);\n                \
    \                                           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfkw13cdp.java:29: error: cannot find symbol\n\
    \                Union_ArrayList_String__int currWord = new Union_ArrayList_String__int(wordMap[previousChar]);\n\
    \                ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpfkw13cdp.java:29: error: cannot find symbol\n       \
    \         Union_ArrayList_String__int currWord = new Union_ArrayList_String__int(wordMap[previousChar]);\n\
    \                                                           ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpfkw13cdp.java:36:\
    \ error: cannot find symbol\n                Union_ArrayList_String__int currWordCopy\
    \ = currWord;\n                ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfkw13cdp.java:37: error: cannot find symbol\n\
    \                Union_ArrayList_String__int nextWordCopy = nextWord;\n      \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfkw13cdp.java:39: error: cannot find symbol\n             \
    \   Union_ArrayList_String__int currWordCopy2 = currWord;\n                ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpfkw13cdp.java:50:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> words = new ArrayList<>();\n\
    \        String[] words = txt.split(\"[,\\\\s+]+\");\n        for (String word\
    \ : words) {\n            if (word.isEmpty()) {\n                continue;\n \
    \           }\n            words.add(word);\n        }\n        Union_ArrayList_String__int\
    \ ans = new Union_ArrayList_String__int();\n        int countLetters = 0;\n  \
    \      for (String word : words) {\n            int count = word.length();\n \
    \           for (char c : word.toCharArray()) {\n                countLetters++;\n\
    \                if (c >= 'a' && c <= 'z') {\n                    count++;\n \
    \               }\n            }\n            ans.add(new Union_ArrayList_String__int(word,\
    \ count));\n        }\n        return ans;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpawpd6pj6.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpawpd6pj6.java:18:\
    \ error: variable words is already defined in method splitWords(String)\n    \
    \    String[] words = txt.split(\"[,\\\\s+]+\");\n                 ^\n/tmp/tmpawpd6pj6.java:25:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ans = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpawpd6pj6.java:25: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ans = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpawpd6pj6.java:35: error: cannot find symbol\n            ans.add(new\
    \ Union_ArrayList_String__int(word, count));\n                        ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpawpd6pj6.java:38:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpawpd6pj6.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpawpd6pj6.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpawpd6pj6.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = null;\n\
    \        char[] charArray = txt.toCharArray();\n        char[] wordCharArray =\
    \ new char[charArray.length];\n        char[] commaCharArray = new char[charArray.length];\n\
    \        int position = 0;\n        for (char c : charArray) {\n            if\
    \ (Character.isWhitespace(c)) {\n                wordCharArray[position++] = c;\n\
    \            } else {\n                commaCharArray[position++] = c;\n     \
    \       }\n        }\n        char[] wordCharacterArray = new char[position];\n\
    \        System.arraycopy(wordCharArray, 0, wordCharacterArray, 0, position);\n\
    \        System.arraycopy(commaCharArray, 0, wordCharacterArray, position, position);\n\
    \        words = createUnionArrayList_String__int(wordCharacterArray);\n     \
    \   return words;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmporm6xbox.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmporm6xbox.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = null;\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmporm6xbox.java:32: error: cannot find symbol\n        words = createUnionArrayList_String__int(wordCharacterArray);\n\
    \                ^\n  symbol:   method createUnionArrayList_String__int(char[])\n\
    \  location: class Problem\n/tmp/tmporm6xbox.java:34: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmporm6xbox.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmporm6xbox.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmporm6xbox.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmporm6xbox.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__in"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int counter = 0;\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        String word = \"\";\n        if (txt\
    \ != null && !\"\".equals(txt)) {\n            String[] splitStr = txt.split(\"\
    \\\\s+\");\n            ArrayList<String> wordsWithCommas = new ArrayList<String>();\n\
    \            ArrayList<String> wordsNoCommas = new ArrayList<String>();\n    \
    \        ArrayList<Integer> lettersOdOrder = new ArrayList<Integer>();\n     \
    \       for (String s : str_split_regex(splitStr)) {\n                word = s.trim();\n\
    \                if (!\"\".equals(word)) {\n                    wordsWithCommas.add(word);\n\
    \                } else {\n                    wordsNoCommas.add(word);\n    \
    \            }\n                lettersOdOrder.add(counter++);\n            }\n\
    \            int count = countLettersOdOrder(lettersOdOrder);\n            if\
    \ (count == 0) {\n                wordsWithCommas.removeAll(wordsNoCommas);\n\
    \                result.addAll(wordsWithCommas);\n            } else {\n     \
    \           result.addAll(wordsNoCommas);\n            }\n        }\n        return\
    \ result;\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvu660fhb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpvu660fhb.java:25:\
    \ error: cannot find symbol\n            for (String s : str_split_regex(splitStr))\
    \ {\n                            ^\n  symbol:   method str_split_regex(String[])\n\
    \  location: class Problem\n/tmp/tmpvu660fhb.java:34: error: cannot find symbol\n\
    \            int count = countLettersOdOrder(lettersOdOrder);\n              \
    \          ^\n  symbol:   method countLettersOdOrder(ArrayList<Integer>)\n  location:\
    \ class Problem\n/tmp/tmpvu660fhb.java:43: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpvu660fhb.java:46: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpvu660fhb.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpvu660fhb.java:48: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpvu660fhb.java:49: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Un"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int splitWords = new\
    \ Union_ArrayList_String__int();\n        \n        ArrayList<String> words =\
    \ Arrays.asList(txt.split(\" \"));\n        \n        String[] words = words.toArray(new\
    \ String[words.size()]);\n        \n        ArrayList<Integer> wordCounts = new\
    \ ArrayList<Integer>();\n        for (int i = 0; i < words.length; ++i) {\n  \
    \          wordCounts.add((int) words[i].length());\n        }\n        \n   \
    \     wordCounts.sort(null);\n        \n        Map<Integer,String> wordMap =\
    \ new HashMap<Integer,String>();\n        \n        for (int i = 0; i < wordCounts.size();\
    \ ++i) {\n            wordMap.put(wordCounts.get(i),words.get(i));\n        }\n\
    \        \n        ArrayList<String> result = new ArrayList<String>();\n     \
    \   for (int i = 0; i < wordCounts.size(); ++i) {\n            String currentWord\
    \ = wordMap.get(wordCounts.get(i));\n            \n            if (currentWord\
    \ != null && !currentWord.isEmpty()) {\n                result.add(currentWord);\n\
    \            }\n        }\n        \n        Union_ArrayList_String__int wordCount\
    \ = new Union_ArrayList_String__int();\n        \n        wordCount.add(new Int(0,result.size()));\n\
    \        \n        for (int i = 0; i < result.size(); ++i) {\n            wordCount.add(new\
    \ Int(i,1));\n        }\n        \n        splitWords.set(wordCount);\n      \
    \  \n        return splitWords;\nreturn new Union_ArrayList_String__int();\n \
    \   }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg_rme10f.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpg_rme10f.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int splitWords =\
    \ new Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpg_rme10f.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int splitWords = new Union_ArrayList_String__int();\n\
    \                                                     ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpg_rme10f.java:19: error: incompatible types:\
    \ no instance(s) of type variable(s) T exist so that List<T> conforms to ArrayList<String>\n\
    \        ArrayList<String> words = Arrays.asList(txt.split(\" \"));\n        \
    \                                       ^\n  where T is a type-variable:\n   \
    \ T extends Object declared in method <T>asList(T...)\n/tmp/tmpg_rme10f.java:21:\
    \ error: variable words is already defined in method splitWords(String)\n    \
    \    String[] words = words.toArray(new String[words.size()]);\n             \
    \    ^\n/tmp/tmpg_rme10f.java:24: error: cannot find symbol\n        for (int\
    \ i = 0; i < words.length; ++i) {\n                                 ^\n  symbol:\
    \   variable length\n  location: variable words of type ArrayList<String>\n/tmp/tmpg_rme10f.java:25:\
    \ error: array required, but ArrayList<String> found\n            wordCounts.add((int)\
    \ words[i].length());\n                                      ^\n/tmp/tmpg_rme10f.java:45:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int wordCount = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpg_rme10f.java:45: error: cannot find symbol\n\
    \        Union_ArrayList_String__int wordCount = new Union_ArrayList_String__int();\n\
    \                                                    ^\n  symbol:   class Union_ArrayList_St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Map<String, Integer> countMap = new HashMap<>();\n\
    \        txt = txt.trim();\n        String delimiter = \" ,.!?\";\n        String[]\
    \ parts = txt.split(delimiter);\n        for (String part : parts) {\n       \
    \     int count = countMap.containsKey(part) ? countMap.get(part) : 0;\n     \
    \       countMap.put(part, count + 1);\n        }\n        String[] words = new\
    \ String[countMap.size()];\n        int i = 0;\n        for (Map.Entry<String,\
    \ Integer> entry : countMap.entrySet()) {\n            words[i] = entry.getKey();\n\
    \            i++;\n        }\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        for (String word : words) {\n      \
    \      result.add(word);\n        }\n        return result;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5rcijo3a.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp5rcijo3a.java:31:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp5rcijo3a.java:31: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp5rcijo3a.java:36: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp5rcijo3a.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5rcijo3a.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5rcijo3a.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5rcijo3a.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \           "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        final int n = txt.length();\n        final\
    \ ArrayList<String> output = new ArrayList<>(n);\n        final ArrayList<String>\
    \ words = new ArrayList<>(n);\n        // Split words by commas if any\n     \
    \   final String comma = \",\";\n        final String space = \" \";\n       \
    \ // Count number of commas to split words based on comma or space\n        final\
    \ int commaCount = txt.split(comma).length - 1;\n        final int spaceCount\
    \ = txt.split(space).length - 1;\n        // Split words by space if any\n   \
    \     final String space = \" \";\n        for (int i = 0; i < n; i++) {\n   \
    \         final String s = txt.substring(0, i + 1);\n            final int idx\
    \ = s.indexOf(space);\n            if (idx > 0) {\n                words.add(s.substring(0,\
    \ idx));\n            }\n            else {\n                words.add(s);\n \
    \           }\n        }\n        // Append commas to words if any\n        if\
    \ (commaCount > 0) {\n            words.addAll(Arrays.asList(txt.split(comma)));\n\
    \        }\n        // Filter out empty strings from words\n        words.forEach(w\
    \ -> {\n            if (w.isEmpty()) {\n                words.remove(w);\n   \
    \         }\n        });\n        // Count number of lower-case letters in words\
    \ with odd order\n        int odd_order_count = 0;\n        final int upperCase\
    \ = Character.toUpperCase('Z');\n        for (int i = 0; i < words.size(); i++)\
    \ {\n            final String s = words.get(i);\n            final int idx = s.indexOf('a');\n\
    \            if (idx > -1) {\n                odd_order_count += 1;\n        \
    \        s = s.substring(idx);\n            }\n            else {\n          \
    \      s = s.substring(1);\n            }\n            final int idx2 = s.indexOf(upperCase);\n\
    \            if (idx2 > -1) {\n                odd_order_count += 1;\n       \
    \         s = s.substring(0, idx2);\n            }\n            output.add(s);\n\
    \        }\n        // Return number of letters with odd order in alphabet\n \
    \       return odd_order_count;\nreturn new Union_ArrayList_String__int();\n \
    \   }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8w5vs0z8.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp8w5vs0z8.java:27:\
    \ error: variable space is already defined in method splitWords(String)\n    \
    \    final String space = \" \";\n                     ^\n/tmp/tmp8w5vs0z8.java:56:\
    \ error: cannot assign a value to final variable s\n                s = s.substring(idx);\n\
    \                ^\n/tmp/tmp8w5vs0z8.java:59: error: cannot assign a value to\
    \ final variable s\n                s = s.substring(1);\n                ^\n/tmp/tmp8w5vs0z8.java:64:\
    \ error: cannot assign a value to final variable s\n                s = s.substring(0,\
    \ idx2);\n                ^\n/tmp/tmp8w5vs0z8.java:70: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp8w5vs0z8.java:73: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp8w5vs0z8.java:74: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp8w5vs0z8.java:75: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp8w5vs0z8.java:76: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int wordlist = new\
    \ Union_ArrayList_String__int();\n        txt = txt.toLowerCase();\n        int\
    \ lastChar = -1;\n        int cnt = 0;\n        for (int i = 0; i < txt.length();\
    \ i++) {\n            char c = txt.charAt(i);\n            if (c == ',' || i ==\
    \ txt.length() - 1) {\n                if (lastChar == -1) {\n               \
    \     wordlist.add(i, cnt);\n                } else {\n                    wordlist.add(i,\
    \ cnt);\n                }\n                cnt = 0;\n                lastChar\
    \ = -1;\n            } else {\n                cnt++;\n                lastChar\
    \ = c;\n            }\n        }\n        return wordlist;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq8pao1ch.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpq8pao1ch.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int wordlist = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpq8pao1ch.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int wordlist = new Union_ArrayList_String__int();\n\
    \                                                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpq8pao1ch.java:37: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpq8pao1ch.java:40: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpq8pao1ch.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpq8pao1ch.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpq8pao1ch.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \     "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Write your code here\n        String split[]\
    \ = txt.split(\"\\\\s\", -1);\n        ArrayList<String> words = new ArrayList<>();\n\
    \        int size = 0;\n        boolean comma = false;\n        for(String s :\
    \ (split != null ? split : new String[]{\"-\", \"-\", \"-\"})){\n            if(comma){\n\
    \                words.add(s);\n                comma = false;\n            }\n\
    \            else if(s.contains(\",\")){\n                comma = true;\n    \
    \            words.add(s);\n            }\n            else{\n               \
    \ size += s.size() - 1;\n            }\n        }\n        ArrayList<Integer>\
    \ count = new ArrayList<>();\n        for (int i = 0; i < 26; i++) {\n       \
    \     count.add(0);\n        }\n        for (String word : words) {\n        \
    \    for (int i = 0; i < word.length(); i++) {\n                count.set(word.charAt(i)\
    \ - 'a', count.get(word.charAt(i) - 'a') + 1);\n            }\n        }\n   \
    \     List<Integer> countList = count.stream().distinct().sorted(Collections.reverseOrder())\n\
    \                .collect(Collectors.toList());\n        for(int i : countList){\n\
    \            if(countList.indexOf(i) < countList.lastIndexOf(i)){\n          \
    \      return new Union_ArrayList_String__int(new String[]{split[countList.indexOf(i)],\
    \ split[countList.lastIndexOf(i)])}, size);\n            }\n        }\n      \
    \  return new Union_ArrayList_String__int(new String[]{\"-\", \"-\", \"-\"}, size);\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvpfrmu_8.java:48: error: '}' expected\n                return new\
    \ Union_ArrayList_String__int(new String[]{split[countList.indexOf(i)], split[countList.lastIndexOf(i)])},\
    \ size);\n                                                                   \
    \                                                             ^\n/tmp/tmpvpfrmu_8.java:48:\
    \ error: ';' expected\n                return new Union_ArrayList_String__int(new\
    \ String[]{split[countList.indexOf(i)], split[countList.lastIndexOf(i)])}, size);\n\
    \                                                                            \
    \                                                     ^\n/tmp/tmpvpfrmu_8.java:48:\
    \ error: illegal start of expression\n                return new Union_ArrayList_String__int(new\
    \ String[]{split[countList.indexOf(i)], split[countList.lastIndexOf(i)])}, size);\n\
    \                                                                            \
    \                                                      ^\n/tmp/tmpvpfrmu_8.java:48:\
    \ error: not a statement\n                return new Union_ArrayList_String__int(new\
    \ String[]{split[countList.indexOf(i)], split[countList.lastIndexOf(i)])}, size);\n\
    \                                                                            \
    \                                                        ^\n/tmp/tmpvpfrmu_8.java:48:\
    \ error: ';' expected\n                return new Union_ArrayList_String__int(new\
    \ String[]{split[countList.indexOf(i)], split[countList.lastIndexOf(i)])}, size);\n\
    \                                                                            \
    \                                                            ^\n/tmp/tmpvpfrmu_8.java:51:\
    \ error: illegal start of type\n        return new Union_ArrayList_String__int(new\
    \ String[]{\"-\", \"-\", \"-\"}, size);\n        ^\n/tmp/tmpvpfrmu_8.java:51:\
    \ error: ';' expected\n        return new Union_ArrayList_String__int(new String[]{\"\
    -\", \"-\", \"-\"}, size);\n              ^\n/tmp/tmpvpfrmu_8.java:51: error:\
    \ invalid method declaration; return type required\n        return new Union_ArrayList_String__int(new\
    \ String[]{\"-\", "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> strArr = Arrays.asList(txt.split(\"\
    \ \"));\n        List<Integer> numArr = new ArrayList<>();\n        for (int i\
    \ = 0; i < strArr.size(); i++) {\n            numArr.add(Integer.valueOf(strArr.get(i)));\n\
    \        }\n        Union_ArrayList_String__int sol = new Union_ArrayList_String__int(strArr);\n\
    \        sol.insertAll(sol.stream().filter(o -> o.getValue() % 2 == 1).collect(Collectors.toList()));\n\
    \        sol.insertAll(sol.stream().filter(o -> o.getValue() % 2 == 0).collect(Collectors.toList()));\n\
    \        sol.insertAll(strArr.stream().filter(o -> o == null).collect(Collectors.toList()));\n\
    \        sol.insertAll(numArr.stream().filter(o -> o == null).collect(Collectors.toList()));\n\
    \        return sol;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp6nudx06.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpp6nudx06.java:22:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int sol = new Union_ArrayList_String__int(strArr);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpp6nudx06.java:22: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ sol = new Union_ArrayList_String__int(strArr);\n                           \
    \                   ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpp6nudx06.java:28: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpp6nudx06.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpp6nudx06.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpp6nudx06.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpp6nudx06.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \        "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n \
    \       List<String> words = Arrays.asList(txt.split(\"[\\\\s,]+\"));\n      \
    \  txt = txt.toLowerCase();\n        int letters = 0;\n        for(int i = 0;\
    \ i < txt.length(); i++) {\n            char c = txt.charAt(i);\n            if(Character.isLetter(c))\
    \ {\n                if(Character.isLowerCase(c)) {\n                    letters++;\n\
    \                }\n            }\n        }\n        return new Union_ArrayList_String__int(Arrays.asList(words),\
    \ letters);\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_zu64l19.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp_zu64l19.java:29:\
    \ error: cannot find symbol\n        return new Union_ArrayList_String__int(Arrays.asList(words),\
    \ letters);\n                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp_zu64l19.java:30: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp_zu64l19.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_zu64l19.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_zu64l19.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_zu64l19.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp_zu64l19.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Set<String> words = Arrays.stream(txt.split(\"\
    \ \"))\n                .map(String::toUpperCase)\n                .filter(e ->\
    \ e.matches(\"[a-zA-Z]+\"))\n                .collect(Collectors.toSet());\n \
    \       List<String> split = words.stream().map(e -> e + \" \").collect(Collectors.toList());\n\
    \        return split.stream().filter(e -> e.matches(\"[a-zA-Z]+\")).map(String::toUpperCase).collect(Collectors.toSet());\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc69dqmzs.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpc69dqmzs.java:23:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpc69dqmzs.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpc69dqmzs.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpc69dqmzs.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpc69dqmzs.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpc69dqmzs.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpc69dqmzs.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> splitWords = new ArrayList<String>();\n\
    \        txt = txt.toLowerCase(); // Lowercase all letters\n        char[] letters\
    \ = { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E',\
    \ 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',\
    \ 'V', 'W', 'X', 'Y', 'Z' };\n        // Check whether there is a white space\
    \ in the text\n        if (txt.indexOf(\" \") >= 0) {\n            String[] wordsList\
    \ = txt.split(\" \");\n            splitWords.addAll(Arrays.asList(wordsList));\n\
    \        } else {\n            splitWords.addAll(Arrays.asList(txt.split(\",\"\
    ))); // Split on commas\n        }\n        // For each letter check if it is\
    \ odd and add it to the array list\n        for (char letter : letters) {\n  \
    \          boolean isOdd = false;\n            for (int i = 1; i < splitWords.size();\
    \ i++) {\n                if (splitWords.get(i).contains(String.valueOf(letter)))\
    \ {\n                    isOdd = true;\n                }\n            }\n   \
    \         if (isOdd) {\n                splitWords.addAll(Arrays.asList(String.valueOf(letter)));\n\
    \            }\n        }\n        // For each words in the list check if there\
    \ is an even number in it, if there isn't the count should be 1\n        for (String\
    \ word : splitWords) {\n            int count = 0;\n            for (int i = 0;\
    \ i < word.length(); i++) {\n                if (word.charAt(i) >= 'a' && word.charAt(i)\
    \ <= 'z') {\n                    count++;\n                }\n            }\n\
    \            if (count % 2 == 0) {\n                splitWords.addAll(Arrays.asList(word));\n\
    \            }\n        }\n        Union_ArrayList_String__int newSplit = new\
    \ Union_ArrayList_String__int(splitWords);\n        return newSplit;\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt727xdag.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpt727xdag.java:51:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int newSplit = new\
    \ Union_ArrayList_String__int(splitWords);\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpt727xdag.java:51: error: cannot find symbol\n\
    \        Union_ArrayList_String__int newSplit = new Union_ArrayList_String__int(splitWords);\n\
    \                                                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpt727xdag.java:53: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpt727xdag.java:56: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt727xdag.java:57: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt727xdag.java:58: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpt727xdag.java:59: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Your code here\n        Union_ArrayList_String__int\
    \ word_list = new Union_ArrayList_String__int();\n        Set<String> temp = new\
    \ HashSet<>();\n        \n        for(char ch : txt.toCharArray()) {\n       \
    \     if(Character.isWhitespace(ch)){\n                if(!temp.isEmpty()){\n\
    \                    word_list.add(temp.toArray(new String[temp.size()]));\n \
    \                   temp = new HashSet<>();\n                }\n            }\
    \ else if(!Character.isWhitespace(ch)){\n                temp.add(Character.toString(ch));\n\
    \            }\n        }\n        \n        if(!temp.isEmpty()){\n          \
    \  word_list.add(temp.toArray(new String[temp.size()]));\n        }\n        \n\
    \        return word_list;\nreturn new Union_ArrayList_String__int();\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvm_37gb2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpvm_37gb2.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int word_list = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpvm_37gb2.java:18: error: cannot find symbol\n\
    \        Union_ArrayList_String__int word_list = new Union_ArrayList_String__int();\n\
    \                                                    ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpvm_37gb2.java:37: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpvm_37gb2.java:40: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpvm_37gb2.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpvm_37gb2.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpvm_37gb2.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        String str[] = txt.split(\"\\\\s+\");\n        for(String strg : str)\
    \ {\n            words.add(strg);\n        }\n        return words;\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeh4vtr1w.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpeh4vtr1w.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpeh4vtr1w.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ words = new Union_ArrayList_String__int();\n                               \
    \                 ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpeh4vtr1w.java:23: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpeh4vtr1w.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpeh4vtr1w.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpeh4vtr1w.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpeh4vtr1w.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \              "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        String[] words = txt.split(\" \");\n        int size = words.length;\n\
    \n        for (int i = 0; i < size; i++) {\n            if (words[i].contains(\"\
    ,\")) {\n                words[i] = words[i].replace(\",\", \" \");\n        \
    \    }\n            words[i] = words[i].toLowerCase();\n        }\n\n        for\
    \ (int i = 0; i < words.length; i++) {\n            if (words[i].contains(\",\"\
    )) {\n                words[i] = words[i].replace(\",\", \" \");\n           \
    \ }\n            words[i] = words[i].toLowerCase();\n            words.addAll(new\
    \ Union_ArrayList_String__int(words[i].split(\" \")));\n        }\n        return\
    \ words;\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_30ne274.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp_30ne274.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp_30ne274.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ words = new Union_ArrayList_String__int();\n                               \
    \                 ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp_30ne274.java:33: error: cannot find symbol\n       \
    \     words.addAll(new Union_ArrayList_String__int(words[i].split(\" \")));\n\
    \                             ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp_30ne274.java:36: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp_30ne274.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_30ne274.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_30ne274.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_30ne2"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> words = new ArrayList<>();\n\
    \        txt = txt.trim();\n        if (txt.equals(\"\")) {\n            txt =\
    \ \"0\";\n        }\n        char[] charArray = txt.toCharArray();\n        Arrays.sort(charArray);\n\
    \        String res = \"\";\n        for (char c : charArray) {\n            if\
    \ (res.length() > 0) {\n                res += \" \";\n            }\n       \
    \     if (Character.isLetter(c)) {\n                res += Character.toString(c);\n\
    \            } else {\n                res += \",\" + Character.toString(c);\n\
    \            }\n        }\n        Union_ArrayList_String__int uA = new Union_ArrayList_String__int();\n\
    \        String__int ss = String__int.valueOf(res);\n        uA.unionSet(ss);\n\
    \        return uA;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9_meaety.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp9_meaety.java:35:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int uA = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp9_meaety.java:35: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ uA = new Union_ArrayList_String__int();\n                                  \
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9_meaety.java:36: error: cannot find symbol\n        String__int\
    \ ss = String__int.valueOf(res);\n        ^\n  symbol:   class String__int\n \
    \ location: class Problem\n/tmp/tmp9_meaety.java:36: error: cannot find symbol\n\
    \        String__int ss = String__int.valueOf(res);\n                        \
    \ ^\n  symbol:   variable String__int\n  location: class Problem\n/tmp/tmp9_meaety.java:39:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp9_meaety.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9_meaety.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9_meaety.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                           "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        ArrayList<String> splitted = new ArrayList<>();\n\
    \        // TODO Auto-generated method stub\n        return null;\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2t1285g1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp2t1285g1.java:20:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp2t1285g1.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp2t1285g1.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp2t1285g1.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp2t1285g1.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp2t1285g1.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmp2t1285g1.java:28: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        if (txt != null) {\n            String[] words = txt.split(\"\\\\s+\"\
    );\n            for (String word : words) {\n                res.addElement(word);\n\
    \            }\n            return res;\n        }\n        return null;\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsfjuxn7z.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpsfjuxn7z.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpsfjuxn7z.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpsfjuxn7z.java:26: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpsfjuxn7z.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpsfjuxn7z.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpsfjuxn7z.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpsfjuxn7z.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Write your code here\n        int letterCount\
    \ = 0;\n        char alphabet = 'a';\n        char comma = ',';\n        ArrayList<String>\
    \ splitWords = new ArrayList<String>();\n        if (txt.contains(comma)) {\n\
    \            String text = txt.replaceAll(\",\", \"\");\n            splitWords\
    \ = Arrays.stream(text.split(\" \")).map(e -> e.replaceAll(\"[!@#$%^&*()]\", \"\
    \")).filter(s -> s != \"\").collect(Collectors.toList());\n        } else {\n\
    \            splitWords = Arrays.stream(txt.split(\" \")).map(e -> e.replaceAll(\"\
    [!@#$%^&*()]\", \"\")).filter(s -> s != \"\").collect(Collectors.toList());\n\
    \        }\n        for (int i = 0; i < splitWords.size(); i++) {\n          \
    \  if (splitWords.get(i).isEmpty()) {\n                continue;\n           \
    \ }\n            char[] letter = splitWords.get(i).toCharArray();\n          \
    \  boolean letterCountOddOrder = true;\n            boolean letterCountEvenOrder\
    \ = true;\n            for (int j = 0; j < letter.length; j++) {\n           \
    \     if (Character.isLetter(letter[j])) {\n                    if (alphabet ==\
    \ letter[j]) {\n                        letterCountEvenOrder = false;\n      \
    \                  letterCountOddOrder = true;\n                        alphabet\
    \ = alphabet + 1;\n                        break;\n                    } else\
    \ {\n                        letterCountEvenOrder = false;\n                 \
    \       letterCountOddOrder = true;\n                        alphabet = alphabet\
    \ + 1;\n                    }\n                } else {\n                    letterCountEvenOrder\
    \ = false;\n                    letterCountOddOrder = true;\n                \
    \    alphabet = alphabet + 1;\n                    break;\n                }\n\
    \            }\n            if (letterCountEvenOrder && letterCountOddOrder) {\n\
    \                letterCount = letterCount + 1;\n            }\n        }\n  \
    \      return letterCount;\nreturn new Union_ArrayList_String__int();\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpldrtkkpi.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpldrtkkpi.java:22:\
    \ error: incompatible types: char cannot be converted to CharSequence\n      \
    \  if (txt.contains(comma)) {\n                         ^\n/tmp/tmpldrtkkpi.java:24:\
    \ error: incompatible types: inference variable R has incompatible bounds\n  \
    \          splitWords = Arrays.stream(text.split(\" \")).map(e -> e.replaceAll(\"\
    [!@#$%^&*()]\", \"\")).filter(s -> s != \"\").collect(Collectors.toList());\n\
    \                                                                            \
    \                                                   ^\n    equality constraints:\
    \ List<String>\n    upper bounds: ArrayList<String>,Object\n  where R,A,T are\
    \ type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n/tmp/tmpldrtkkpi.java:26:\
    \ error: incompatible types: inference variable R has incompatible bounds\n  \
    \          splitWords = Arrays.stream(txt.split(\" \")).map(e -> e.replaceAll(\"\
    [!@#$%^&*()]\", \"\")).filter(s -> s != \"\").collect(Collectors.toList());\n\
    \                                                                            \
    \                                                  ^\n    equality constraints:\
    \ List<String>\n    upper bounds: ArrayList<String>,Object\n  where R,A,T are\
    \ type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n/tmp/tmpldrtkkpi.java:40:\
    \ error: incompatible types: possible lossy conversion from int to char\n    \
    \                    alphabet = alphabet + 1;\n                              \
    \              ^\n/tmp/tmpldrtkkpi.java:45: error: incompatible types: possible\
    \ lossy conversion from in"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> result = new ArrayList<>();\n\
    \        Union_ArrayList_String__int splitWordsResult = new Union_ArrayList_String__int(null);\n\
    \        String[] splitWords = txt.split(\" \");\n        Union_ArrayList_String__int\
    \ list = new Union_ArrayList_String__int(splitWords);\n        Union_ArrayList_String__int\
    \ list2 = new Union_ArrayList_String__int(new String[0]);\n        if (list.isEmpty())\
    \ {\n            return list2;\n        }\n        list.forEach(word -> result.add(word));\n\
    \        for (String s : result) {\n            if (s.contains(\",\")) {\n   \
    \             result.add(s);\n            }\n        }\n        result = result.stream().distinct().collect(Collectors.toList());\n\
    \        int a = 0, b = 0, c = 0, d = 0;\n        for (String s : result) {\n\
    \            if (s.contains(\"a\")) {\n                a = Integer.parseInt(s);\n\
    \            }\n            if (s.contains(\"b\")) {\n                b = Integer.parseInt(s);\n\
    \            }\n            if (s.contains(\"c\")) {\n                c = Integer.parseInt(s);\n\
    \            }\n            if (s.contains(\"d\")) {\n                d = Integer.parseInt(s);\n\
    \            }\n        }\n        if (a * 2 + b * 2 + c * 2 + d * 2 <= txt.length())\
    \ {\n            splitWordsResult.add(result);\n        }\n        return splitWordsResult;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu5k162st.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpu5k162st.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int splitWordsResult\
    \ = new Union_ArrayList_String__int(null);\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpu5k162st.java:18: error: cannot find symbol\n\
    \        Union_ArrayList_String__int splitWordsResult = new Union_ArrayList_String__int(null);\n\
    \                                                           ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpu5k162st.java:20:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int list = new Union_ArrayList_String__int(splitWords);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpu5k162st.java:20: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ list = new Union_ArrayList_String__int(splitWords);\n                      \
    \                         ^\n  symbol:   class Union_ArrayList_String__int\n \
    \ location: class Problem\n/tmp/tmpu5k162st.java:21: error: cannot find symbol\n\
    \        Union_ArrayList_String__int list2 = new Union_ArrayList_String__int(new\
    \ String[0]);\n        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpu5k162st.java:21: error: cannot find symbol\n       \
    \ Union_ArrayList_String__int list2 = new Union_ArrayList_String__int(new String[0]);\n\
    \                                                ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpu5k162st.java:51: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpu5k162st.java:54: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\""
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        char [] chars = txt.toCharArray();\n     \
    \   Arrays.sort(chars);\n        int count = 0;\n        int evens = 0;\n    \
    \    int odds = 0;\n        int start = 0;\n        for (char c : chars) {\n \
    \           if (c == '\\0' || (c >= 'a' && c <= 'z')) {\n                if (count\
    \ == 0) {\n                    start = c;\n                } else {\n        \
    \            String s = String.valueOf(c);\n                    if (s.compareToIgnoreCase(String.valueOf((char)\
    \ start)) > 0) {\n                        count++;\n                    } else\
    \ {\n                        count--;\n                    }\n               \
    \ }\n            } else {\n                if (count % 2 == 0) {\n           \
    \         evens++;\n                } else {\n                    odds++;\n  \
    \              }\n                count = 0;\n            }\n        }\n     \
    \   if (count % 2 == 0) {\n            evens++;\n        }\n        return new\
    \ Union_ArrayList_String__int(evens, odds);\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpydwbwj0o.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpydwbwj0o.java:47:\
    \ error: cannot find symbol\n        return new Union_ArrayList_String__int(evens,\
    \ odds);\n                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpydwbwj0o.java:48: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpydwbwj0o.java:51: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpydwbwj0o.java:52: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpydwbwj0o.java:53: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpydwbwj0o.java:54: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpydwbwj0o.java:55: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  s"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        final int N = txt.length();\n        Union_ArrayList_String__int\
    \ split = new Union_ArrayList_String__int(N);\n        for (int i = 0; i < N;\
    \ i++) {\n            char c = txt.charAt(i);\n            int index = i;\n  \
    \          if (c == ',')\n                index = ++i;\n            if (c == '\
    \ ')\n                index = ++i;\n            if (c < 'a' || c > 'z')\n    \
    \            continue;\n            split.add(i, index - 1);\n        }\n    \
    \    return split;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprisy_r35.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmprisy_r35.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int split = new Union_ArrayList_String__int(N);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmprisy_r35.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ split = new Union_ArrayList_String__int(N);\n                              \
    \                  ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmprisy_r35.java:31: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmprisy_r35.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprisy_r35.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprisy_r35.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmprisy_r35.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        ArrayList<String> splits = new ArrayList<String>();\n\
    \        int lc = 0, cc = 0;\n        for(int i = 0; i < txt.length(); i++) {\n\
    \            char c = txt.charAt(i);\n            if(c == ',')\n             \
    \   cc++;\n            if(c == ' ')\n                lc++;\n            if(c ==\
    \ ',' && cc == 0) {\n                splits.add(txt.substring(i, i + 1));\n  \
    \              i++;\n                cc++;\n            }\n        }\n       \
    \ if(splits.size() > 0)\n            return new Union_ArrayList_String__int(splits);\n\
    \        return lc;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptqpxqa2z.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmptqpxqa2z.java:32:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__int(splits);\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmptqpxqa2z.java:34: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmptqpxqa2z.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmptqpxqa2z.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmptqpxqa2z.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmptqpxqa2z.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmptqpxqa2z.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> words = Arrays.asList(txt .split(\"\
    \\\\s+\"));\n        List<Integer> result = new ArrayList<>();\n        List<Integer>\
    \ lwrLetters = new ArrayList<>();\n        for (String word : words) {\n     \
    \       if (!result.contains(word)) {\n                int count = 0;\n      \
    \          int letterCount = 0;\n                for (int i = 0; i < word.length();\
    \ i++) {\n                    if (Character.isLowerCase(word.charAt(i))) {\n \
    \                       count++;\n                        letterCount++;\n   \
    \                 }\n                }\n                if (count % 2 == 1) {\n\
    \                    result.add(word);\n                    lwrLetters.add(letterCount);\n\
    \                }\n            }\n        }\n        return new Union_ArrayList_String__int(lwrLetters,\
    \ result);\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaqi9axyg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpaqi9axyg.java:31:\
    \ error: no suitable method found for add(String)\n                    result.add(word);\n\
    \                          ^\n    method Collection.add(Integer) is not applicable\n\
    \      (argument mismatch; String cannot be converted to Integer)\n    method\
    \ List.add(Integer) is not applicable\n      (argument mismatch; String cannot\
    \ be converted to Integer)\n/tmp/tmpaqi9axyg.java:36: error: cannot find symbol\n\
    \        return new Union_ArrayList_String__int(lwrLetters, result);\n       \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpaqi9axyg.java:37: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpaqi9axyg.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpaqi9axyg.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpaqi9axyg.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpaqi9axyg.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Strin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        txt = txt.trim();\n        if (txt.length() == 0) return result;\n  \
    \      Set<Character> chars = txt.toLowerCase().chars().map(c -> c).collect(Collectors.toSet());\n\
    \        if (chars.isEmpty()) return result;\n        if (chars.size() == 1) {\n\
    \            char c = chars.iterator().next();\n            if (c == ' ') return\
    \ result;\n            if (c != ',') return result;\n        }\n        chars.stream().sorted().forEach(c\
    \ -> result.addAll(new Union_ArrayList_String__int(Arrays.asList(txt, 0, txt.length()))));\n\
    \        return result;\nreturn new Union_ArrayList_String__int();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpipyt3o26.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpipyt3o26.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpipyt3o26.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpipyt3o26.java:20: error: method collect in\
    \ interface IntStream cannot be applied to given types;\n        Set<Character>\
    \ chars = txt.toLowerCase().chars().map(c -> c).collect(Collectors.toSet());\n\
    \                                                                    ^\n  required:\
    \ Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>\n  found: Collector<Object,CAP#1,Set<Object>>\n\
    \  reason: cannot infer type-variable(s) R\n    (actual and formal argument lists\
    \ differ in length)\n  where R is a type-variable:\n    R extends Object declared\
    \ in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n  where\
    \ CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture of ?\n\
    /tmp/tmpipyt3o26.java:27: error: cannot find symbol\n        chars.stream().sorted().forEach(c\
    \ -> result.addAll(new Union_ArrayList_String__int(Arrays.asList(txt, 0, txt.length()))));\n\
    \                                                               ^\n  symbol: \
    \  class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpipyt3o26.java:29:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpipyt3o26.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] arr = txt.split(\" \");\n       \
    \ Union_ArrayList_String__int arr = new Union_ArrayList_String__int(Arrays.asList(arr));\n\
    \        Set<String> set = new HashSet<>();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            String s = arr[i];\n            if(!set.add(s)) {\n    \
    \            String[] words = s.split(\",\");\n                for(int j = 0;\
    \ j < words.length; j++) {\n                    set.add(words[j]);\n         \
    \       }\n            }\n        }\n        int count = 0;\n        for(int i\
    \ = 0; i < set.length(); i++) {\n            if(!set.get(i).startsWith(\"a\"))\
    \ {\n                count += 1;\n            }\n        }\n        return count;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzt5ghijw.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpzt5ghijw.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int arr = new Union_ArrayList_String__int(Arrays.asList(arr));\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpzt5ghijw.java:18: error: variable arr is already defined in method splitWords(String)\n\
    \        Union_ArrayList_String__int arr = new Union_ArrayList_String__int(Arrays.asList(arr));\n\
    \                                    ^\n/tmp/tmpzt5ghijw.java:18: error: cannot\
    \ find symbol\n        Union_ArrayList_String__int arr = new Union_ArrayList_String__int(Arrays.asList(arr));\n\
    \                                              ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpzt5ghijw.java:30: error: cannot find symbol\n\
    \        for(int i = 0; i < set.length(); i++) {\n                           \
    \   ^\n  symbol:   method length()\n  location: variable set of type Set<String>\n\
    /tmp/tmpzt5ghijw.java:31: error: cannot find symbol\n            if(!set.get(i).startsWith(\"\
    a\")) {\n                   ^\n  symbol:   method get(int)\n  location: variable\
    \ set of type Set<String>\n/tmp/tmpzt5ghijw.java:36: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpzt5ghijw.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzt5ghijw.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        return splitWords(txt, new int[]{0, 1}, new\
    \ int[]{1, 1}, new int[]{1, 1}, new int[]{0, 0});\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl9ndc1_x.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpl9ndc1_x.java:17:\
    \ error: method splitWords in class Problem cannot be applied to given types;\n\
    \        return splitWords(txt, new int[]{0, 1}, new int[]{1, 1}, new int[]{1,\
    \ 1}, new int[]{0, 0});\n               ^\n  required: String\n  found: String,int[],int[],int[],int[]\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl9ndc1_x.java:18:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpl9ndc1_x.java:21: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpl9ndc1_x.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpl9ndc1_x.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpl9ndc1_x.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpl9ndc1_x.java:25: error: cannot find"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Complete the code here\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n        boolean splitOnSpace = true;\n\
    \        boolean splitOnComma = true;\n        for(int i = 0; i <= txt.length();\
    \ i++) {\n            if(Character.isWhitespace(txt.charAt(i))) {\n          \
    \      splitOnSpace = true;\n            }\n            if(Character.isLetter(txt.charAt(i))\
    \ || Character.isUpperCase(txt.charAt(i))) {\n                splitOnComma = true;\n\
    \            }\n            if(!splitOnSpace) {\n                if(Character.isLetter(txt.charAt(i))\
    \ || Character.isUpperCase(txt.charAt(i))) {\n                    ret.sb.append(txt.charAt(i));\n\
    \                }\n                else if(Character.isWhitespace(txt.charAt(i)))\
    \ {\n                    splitOnSpace = true;\n                    ret.sb.append(\"\
    ,\");\n                }\n                else {\n                    splitOnComma\
    \ = true;\n                }\n            }\n            else {\n            \
    \    ret.sb.append(txt.charAt(i));\n                splitOnSpace = false;\n  \
    \          }\n        }\n        System.out.println(\"Split Result: \" + ret.sb.toString());\n\
    \        return ret;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg_zyffcy.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpg_zyffcy.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpg_zyffcy.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg_zyffcy.java:47: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg_zyffcy.java:50: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg_zyffcy.java:51: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg_zyffcy.java:52: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg_zyffcy.java:53: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        final List<String> wordList = new ArrayList<String>();\n\
    \        if (null != txt && !txt.isEmpty()) {\n            final String [] words\
    \ = txt.split(\" \");\n            for (final String w : words) {\n          \
    \      wordList.add(w.toLowerCase());\n            }\n        }\n        final\
    \ Set<String> uniqueWords = new HashSet<String>();\n        for (final String\
    \ w : wordList) {\n            uniqueWords.add(w);\n        }\n        int size\
    \ = 0;\n        for (final String uw : uniqueWords) {\n            size = Math.max(size,\
    \ Character.charCount(uw.toLowerCase()) - 1);\n        }\n        final Union_ArrayList_String__int\
    \ wl = new Union_ArrayList_String__int(size);\n        for (final String w : uniqueWords)\
    \ {\n            wl.add(w);\n        }\n        return wl;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp64159tk1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp64159tk1.java:30:\
    \ error: incompatible types: String cannot be converted to int\n            size\
    \ = Math.max(size, Character.charCount(uw.toLowerCase()) - 1);\n             \
    \                                                       ^\n/tmp/tmp64159tk1.java:32:\
    \ error: cannot find symbol\n        final Union_ArrayList_String__int wl = new\
    \ Union_ArrayList_String__int(size);\n              ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp64159tk1.java:32: error: cannot find symbol\n\
    \        final Union_ArrayList_String__int wl = new Union_ArrayList_String__int(size);\n\
    \                                                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp64159tk1.java:37: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp64159tk1.java:40: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp64159tk1.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp64159tk1.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] words = txt.split(\" \");\n     \
    \   List<String> = new ArrayList<String>(Arrays.asList(words));\n        // int\
    \ count = words.length();\n        int count = 0;\n        // String lowerCaseLetters\
    \ = \"\";\n        // String evenLetters = \"\";\n        // String oddLetters\
    \ = \"\";\n\n        for (String word : words) {\n            if (word.length()\
    \ % 2 != 0) {\n                count++;\n                // evenLetters += word\
    \ + \" \";\n                Union_ArrayList_String__int evenLetters = new Union_ArrayList_String__int();\n\
    \                evenLetters.add(word);\n                Union_ArrayList_String__int\
    \ oddLetters = new Union_ArrayList_String__int();\n                oddLetters.add(word);\n\
    \                Union_ArrayList_String__int evenLettersCount = new Union_ArrayList_String__int();\n\
    \                evenLettersCount.add(count);\n                Union_ArrayList_String__int\
    \ oddLettersCount = new Union_ArrayList_String__int();\n                oddLettersCount.add(count);\n\
    \                Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                result.add(evenLetters);\n                result.add(oddLetters);\n\
    \                result.add(evenLettersCount);\n                result.add(oddLettersCount);\n\
    \                // lowerCaseLetters += word + \" \";\n            } else {\n\
    \                count++;\n                // oddLetters += word + \" \";\n  \
    \              Union_ArrayList_String__int evenLetters = new Union_ArrayList_String__int();\n\
    \                evenLetters.add(word);\n                Union_ArrayList_String__int\
    \ oddLetters = new Union_ArrayList_String__int();\n                oddLetters.add(word);\n\
    \                Union_ArrayList_String__int evenLettersCount = new Union_ArrayList_String__int();\n\
    \                evenLettersCount.add(count);\n                Union_ArrayList_String__int\
    \ oddLettersCount = new Union_ArrayList_String__int();\n                oddLettersCount.add(count);\n\
    \                Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                result.add(evenLetters);\n                result.add(oddLetters);\n\
    \                result.add(evenLettersCount);\n                result.add(oddLettersCount);\n\
    \            }\n        }\n        return result;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0mgd84jw.java:18: error: not a statement\n        List<String>\
    \ = new ArrayList<String>(Arrays.asList(words));\n            ^\n/tmp/tmp0mgd84jw.java:18:\
    \ error: ';' expected\n        List<String> = new ArrayList<String>(Arrays.asList(words));\n\
    \                    ^\n/tmp/tmp0mgd84jw.java:18: error: not a statement\n   \
    \     List<String> = new ArrayList<String>(Arrays.asList(words));\n          \
    \                          ^\n/tmp/tmp0mgd84jw.java:18: error: ';' expected\n\
    \        List<String> = new ArrayList<String>(Arrays.asList(words));\n       \
    \                                     ^\n/tmp/tmp0mgd84jw.java:18: error: ';'\
    \ expected\n        List<String> = new ArrayList<String>(Arrays.asList(words));\n\
    \                                                                 ^\n5 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // write your code in Java SE 8\n        char\
    \ []charArray=txt.toCharArray();\n        Arrays.sort(charArray);\n        int\
    \ count=0;\n        for(char c:charArray){\n            if(c>='a' && c<='z'){\n\
    \                count++;\n            }else if(c<='z' && c>='a'){\n         \
    \       count--;\n            }\n        }\n        return count;\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq2gh836y.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpq2gh836y.java:29:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpq2gh836y.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpq2gh836y.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpq2gh836y.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpq2gh836y.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpq2gh836y.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpq2gh836y.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    ,\", \"\");\n        txt = txt.toLowerCase();\n        txt = txt.replace(\" \"\
    , \"\");\n        int len = txt.length();\n        for (int i = 0; i < len; i++)\
    \ {\n            if (i < len / 2) {\n                result.add(i, txt.charAt(i));\n\
    \            }\n            if (i > len / 2) {\n                result.add(i,\
    \ txt.charAt(i));\n            }\n        }\n        return result;\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuhy2u1i4.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpuhy2u1i4.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpuhy2u1i4.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpuhy2u1i4.java:32: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpuhy2u1i4.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpuhy2u1i4.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpuhy2u1i4.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpuhy2u1i4.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \           "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int n = txt.length();\n        int a = 0;\
    \ // number of letters in alphabet\n        int b = 0; // number of letters with\
    \ odd order in alphabet\n        int c = 0; // number of commas\n        int d\
    \ = 0; // number of periods\n        int e = 0; // number of exclamation marks\n\
    \        int f = 0; // number of question-marks\n        for (int i = 0; i < n;\
    \ i++) {\n            char ch = txt.charAt(i);\n            if (Character.isLetter(ch))\
    \ {\n                a += 1;\n                if (a % 2 == 0) {\n            \
    \        b += 1;\n                } else {\n                    c += 1;\n    \
    \            }\n            } else if (Character.isDigit(ch)) {\n            \
    \    d += 1;\n            } else if (ch == ',' || ch == '.' || ch == '!' || ch\
    \ == '?') {\n                e += 1;\n            } else if (ch == '!') {\n  \
    \              f += 1;\n            }\n        }\n        if (a > 0) {\n     \
    \       if (b == 0) {\n                if (c == 0 && d == 0 && e == 0 && f ==\
    \ 0) {\n                    return new Union_ArrayList_String__int(new int[]{1,\
    \ 2, 3, 4, 5});\n                } else if (c == 0 && d == 0 && e == 0 && f >\
    \ 0) {\n                    return new Union_ArrayList_String__int(new int[]{6});\n\
    \                } else if (c == 0 && d == 0 && e > 0) {\n                   \
    \ return new Union_ArrayList_String__int(new int[]{7});\n                } else\
    \ if (c == 0 && d > 0) {\n                    return new Union_ArrayList_String__int(new\
    \ int[]{8});\n                } else if (c == 0 && d > 0 && e == 0) {\n      \
    \              return new Union_ArrayList_String__int(new int[]{9});\n       \
    \         } else if (c == 0 && d > 0 && e > 0) {\n                    return new\
    \ Union_ArrayList_String__int(new int[]{10, 11});\n                }\n       \
    \     } else if (b > 0 && c > 0) {\n                return new Union_ArrayList_String__int(new\
    \ int[]{a, b, c, d, e, f});\n            } else if (b > 0 && c > 0 && e > 0) {\n\
    \                return new Union_ArrayList_String__int(new int[]{a, b, c, d,\
    \ f});\n            } else if (b > 0 && c > 0 && e == 0) {\n                return\
    \ new Union_ArrayList_String__int(new int[]{a, b, c, d});\n            } else\
    \ if (b > 0 && c > 0 && e > 0) {\n                return new Union_ArrayList_String__int(new\
    \ int[]{a, b, c, d, e});\n            } else if (b > 0 && c > 0 && e == 0 && f\
    \ > 0) {\n                return new Union_ArrayList_String__int(new int[]{a,\
    \ b, c, d, f});\n            } else if (b > 0 && c > 0 && e > 0 && f > 0) {\n\
    \                return new Union_ArrayList_String__int(new int[]{a, b, c, d,\
    \ f, g});\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu3ni1pbg.java:70: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpu3ni1pbg.java:70: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmpu3ni1pbg.java:70: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmpu3ni1pbg.java:70: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmpu3ni1pbg.java:70: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmpu3ni1pbg.java:81:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int length_txt = txt.length();\n        Union_ArrayList_String__int\
    \ result = new Union_ArrayList_String__int(0);\n        if (length_txt > 0) {\n\
    \            if (txt.charAt(0) == ' ') {\n                result.addElement(txt.substring(1));\n\
    \                return result;\n            }\n        }\n        if (length_txt\
    \ >= 2) {\n            if (txt.charAt(1) == '\\'') {\n                result.addElement(txt.substring(1,\
    \ 2));\n                return result;\n            }\n        }\n        if (length_txt\
    \ >= 3) {\n            if (txt.charAt(2) == '\\\"') {\n                result.addElement(txt.substring(2,\
    \ 3));\n                return result;\n            }\n        }\n        if (length_txt\
    \ >= 4) {\n            if (txt.charAt(3) == '(') {\n                result.addElement(txt.substring(3));\n\
    \                return result;\n            }\n        }\n        if (length_txt\
    \ >= 5) {\n            if (txt.charAt(4) == ')') {\n                result.addElement(txt.substring(4));\n\
    \                return result;\n            }\n        }\n        if (length_txt\
    \ >= 6) {\n            if (txt.charAt(5) == '\\\"') {\n                result.addElement(txt.substring(5,\
    \ 6));\n                return result;\n            }\n        }\n        if (length_txt\
    \ >= 7) {\n            if (txt.charAt(6) == '(') {\n                result.addElement(txt.substring(6));\n\
    \                return result;\n            }\n        }\n        if (length_txt\
    \ >= 8) {\n            if (txt.charAt(7) == ',') {\n                result.addElement(txt.substring(7));\n\
    \                return result;\n            }\n        }\n        if (length_txt\
    \ >= 9) {\n            if (txt.charAt(8) == '\\\"') {\n                result.addElement(txt.substring(8,\
    \ 9));\n                return result;\n            }\n        }\n        if (length_txt\
    \ >= 10) {\n            if (txt.charAt(9) == '(') {\n                result.addElement(txt.substring(9));\n\
    \                return result;\n            }\n        }\n        if (length_txt\
    \ >= 11) {\n            if (txt.charAt(10) == ',') {\n                result.addElement(txt.substring(10));\n\
    \                return result;\n            }\n        }\n        if (length_txt\
    \ >= 12) {\n            if (txt.charAt(11) == '(') {\n                result.addElement(txt.substring(11));\n\
    \                return result;\n            }\n        }\n        if (length_txt\
    \ >= 13) {\n            if (txt.charAt(12) == '\\\"') {\n                result.addElement(txt.substring(12,\
    \ 13));\n                return result;\n            }\n        }\n        if\
    \ (length_txt >= 14) {\n            if (txt.charAt(13) == '(') {\n           \
    \     result.addElement(txt.substring(13));\n                return result;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprzxbdp8y.java:103: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmprzxbdp8y.java:103: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \           ^\n/tmp/tmprzxbdp8y.java:103: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmprzxbdp8y.java:103: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmprzxbdp8y.java:103: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmprzxbdp8y.java:114: error: reached end of file while parsing\n\
    }\n ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        if (txt.length() == 0) {\n            return\
    \ 0;\n        }\n        String[] arr = txt.split(\" \");\n        List<String>\
    \ splits = new ArrayList<String>();\n        for (String item : arr) {\n     \
    \       if (item.trim().length() > 0) {\n                splits.add(item.trim());\n\
    \            }\n        }\n        String[] arr2 = splits.toArray(new String[0]);\n\
    \        Map<Character, Integer> map = new HashMap<Character, Integer>();\n  \
    \      int i = 0;\n        for (String str : arr2) {\n            for (char c\
    \ : str.toCharArray()) {\n                if (Character.isAlphabetic(c)) {\n \
    \                   map.put(c, i);\n                    i++;\n               \
    \ }\n            }\n        }\n        Union_ArrayList_String__int uaa = new Union_ArrayList_String__int(arr.length);\n\
    \        for (int j = 0; j < arr.length; j++) {\n            int index = map.get(arr2[j]);\n\
    \            if (index != -1) {\n                uaa.set(i, arr2[j]);\n      \
    \          i++;\n            }\n        }\n        return uaa;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3metuvbh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp3metuvbh.java:38:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int uaa = new Union_ArrayList_String__int(arr.length);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp3metuvbh.java:38: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ uaa = new Union_ArrayList_String__int(arr.length);\n                       \
    \                       ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp3metuvbh.java:47: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp3metuvbh.java:50: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3metuvbh.java:51: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3metuvbh.java:52: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp3metuvbh.java:53: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Set<String> whiteSpace = Set.of(\"\\\\s\"\
    , \"\");\n        Set<String> comma = Set.of(\",\");\n        Set<String> evenOrder\
    \ = Set.of(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\",\n           \
    \     \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n        ArrayList <String>\
    \ arr = new ArrayList<String>();\n        ArrayList <Integer> arr2 = new ArrayList<Integer>();\n\
    \        for(String s : txt.split(\" \")) {\n            if(!whiteSpace.contains(s)){\n\
    \                arr.add(s);\n            }\n        }\n        for(String s :\
    \ txt.split(\",\")) {\n            if(!whiteSpace.contains(s)){\n            \
    \    arr.add(s);\n            }\n        }\n        for(String s : evenOrder)\
    \ {\n            if(!whiteSpace.contains(s)){\n                arr2.add(Integer.valueOf(s));\n\
    \            }\n        }\n        int total = 0;\n        for(String s : arr)\
    \ {\n            for(String s2 : arr2) {\n                if(s.equalsIgnoreCase(String.valueOf(s2)))\
    \ {\n                    total++;\n                }\n            }\n        }\n\
    \        return total;\nreturn new Union_ArrayList_String__int();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe5ov77hf.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpe5ov77hf.java:17:\
    \ error: cannot find symbol\n        Set<String> whiteSpace = Set.of(\"\\\\s\"\
    , \"\");\n                                    ^\n  symbol:   method of(String,String)\n\
    \  location: interface Set\n/tmp/tmpe5ov77hf.java:18: error: cannot find symbol\n\
    \        Set<String> comma = Set.of(\",\");\n                               ^\n\
    \  symbol:   method of(String)\n  location: interface Set\n/tmp/tmpe5ov77hf.java:19:\
    \ error: cannot find symbol\n        Set<String> evenOrder = Set.of(\"a\", \"\
    b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"\
    m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\",\n                             \
    \      ^\n  symbol:   method of(String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String,String)\n\
    \  location: interface Set\n/tmp/tmpe5ov77hf.java:40: error: incompatible types:\
    \ Integer cannot be converted to String\n            for(String s2 : arr2) {\n\
    \                            ^\n/tmp/tmpe5ov77hf.java:47: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpe5ov77hf.java:50: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpe5ov77hf.java:51: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpe5ov77hf.java:52: error:"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> res = new ArrayList<>();\n  \
    \      int counter = 0;\n        // if there is a whitespace in txt split the\
    \ words\n        if (!txt.equals(\"\")) {\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (int i = 0; i < txt.length(); i++) {\n   \
    \             if (txt.charAt(i) == ' ') {\n                    res.add(sb.toString());\n\
    \                    counter++;\n                    sb = new StringBuilder();\n\
    \                } else {\n                    sb.append(txt.charAt(i));\n   \
    \             }\n            }\n            res.add(sb.toString());\n        }\n\
    \        return res.isEmpty() ? counter : Union_ArrayList_String__int.fromArray(res);\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplz2pbzmj.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmplz2pbzmj.java:33:\
    \ error: cannot find symbol\n        return res.isEmpty() ? counter : Union_ArrayList_String__int.fromArray(res);\n\
    \                                         ^\n  symbol:   variable Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmplz2pbzmj.java:34: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmplz2pbzmj.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplz2pbzmj.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplz2pbzmj.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplz2pbzmj.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmplz2pbzmj.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))))"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] words = txt.split(\"[, ]\");\n\n\
    \        HashMap<String, Integer> hm = new HashMap<>();\n        int total = 0;\n\
    \n        for (String w : words) {\n            int res = w.length();\n      \
    \      hm.put(w, res);\n            total += res;\n        }\n\n        int count\
    \ = 0;\n        for (Map.Entry<String, Integer> entry : hm.entrySet()) {\n   \
    \         if (entry.getValue() % 2 != 0) {\n                count++;\n       \
    \     }\n        }\n\n        return new Union_ArrayList_String__int(new ArrayList<String>(hm.keySet()),\
    \ new ArrayList<Integer>(hm.values()));\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmrg747pw.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpmrg747pw.java:35:\
    \ error: cannot find symbol\n        return new Union_ArrayList_String__int(new\
    \ ArrayList<String>(hm.keySet()), new ArrayList<Integer>(hm.values()));\n    \
    \               ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpmrg747pw.java:36: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpmrg747pw.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpmrg747pw.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpmrg747pw.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpmrg747pw.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpmrg747pw.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        if (txt.length() <= 0)\n            return\
    \ null;\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int(txt.length());\n\
    \        int i = 0;\n        boolean comma = false;\n        char c;\n       \
    \ do {\n            c = txt.charAt(i);\n            i++;\n            if (c ==\
    \ ',' || c == ' ')\n                comma = true;\n            if (comma)\n  \
    \              res.add(txt.substring(i, txt.length()));\n        } while (c !=\
    \ ',' && c != ' ' && i < txt.length());\n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_c_3a5um.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp_c_3a5um.java:19:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int(txt.length());\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp_c_3a5um.java:19: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int(txt.length());\n                     \
    \                         ^\n  symbol:   class Union_ArrayList_String__int\n \
    \ location: class Problem\n/tmp/tmp_c_3a5um.java:32: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp_c_3a5um.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_c_3a5um.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_c_3a5um.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp_c_3a5um.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                               "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        txt = txt.toLowerCase();\n        // For each word\n        String[]\
    \ words = txt.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n\
    \            words[i] = words[i].trim();\n            if (words[i].isEmpty())\
    \ {\n                continue;\n            }\n            // Check if the word\
    \ has comma\n            if (words[i].indexOf(',') > -1) {\n                res.addElement(new\
    \ Union_ArrayList_String(words[i]));\n            } else {\n                int\
    \ count = 0;\n                // Count number of lower case letters with odd order\
    \ in the alphabet\n                for (int j = 'a';j<='z';j++) {\n          \
    \          int countChar = words[i].indexOf(String.valueOf(j));\n            \
    \        if (countChar > -1) {\n                        count++;\n           \
    \         }\n                }\n                // Add count as an element in\
    \ the list\n                res.addElement(new Union_ArrayList_String__int(count));\n\
    \            }\n        }\n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpov9dmkls.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpov9dmkls.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpov9dmkls.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpov9dmkls.java:28: error: cannot find symbol\n             \
    \   res.addElement(new Union_ArrayList_String(words[i]));\n                  \
    \                 ^\n  symbol:   class Union_ArrayList_String\n  location: class\
    \ Problem\n/tmp/tmpov9dmkls.java:39: error: cannot find symbol\n             \
    \   res.addElement(new Union_ArrayList_String__int(count));\n                \
    \                   ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpov9dmkls.java:43: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpov9dmkls.java:46: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpov9dmkls.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpov9dmkls.java:48: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int count = 0, odd_count = 0;\n        String[]\
    \ words = new String[txt.length()];\n        String[] split = txt.split(\" \"\
    );\n        Union_ArrayList_String__int word_counts = new Union_ArrayList_String__int();\n\
    \        word_counts.union(new Union_ArrayList_String__int(split[0], count));\n\
    \        for (int i = 1; i < split.length; ++i) {\n            word_counts.union(new\
    \ Union_ArrayList_String__int(split[i], count));\n        }\n        for (int\
    \ i = split.length - 1; i > 0; --i) {\n            String word = split[i];\n \
    \           if (Character.isLowerCase(word.charAt(0))) {\n                word_counts.union(new\
    \ Union_ArrayList_String__int(word, count));\n                count++;\n     \
    \           odd_count++;\n            }\n            else {\n                word_counts.union(new\
    \ Union_ArrayList_String__int(word + \",\" + split[i - 1], count));\n        \
    \        count++;\n            }\n        }\n        int odd_index = -1;\n   \
    \     for (int i = 0; i < word_counts.size(); ++i) {\n            Union_ArrayList_String__int\
    \ word_count = word_counts.get(i);\n            if (odd_count > word_counts.get(i).value)\
    \ {\n                odd_index = i;\n                break;\n            }\n \
    \       }\n        if (odd_index < 0) {\n            return new Union_ArrayList_String__int(\"\
    \", 0);\n        }\n        Union_ArrayList_String__int odd_word_count = word_counts.get(odd_index);\n\
    \        return new Union_ArrayList_String__int(split[odd_word_count.index], count\
    \ - odd_word_count.value);\nreturn new Union_ArrayList_String__int();\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa45nvl22.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpa45nvl22.java:20:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int word_counts =\
    \ new Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpa45nvl22.java:20: error: cannot find symbol\n\
    \        Union_ArrayList_String__int word_counts = new Union_ArrayList_String__int();\n\
    \                                                      ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpa45nvl22.java:21: error: cannot find symbol\n\
    \        word_counts.union(new Union_ArrayList_String__int(split[0], count));\n\
    \                              ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpa45nvl22.java:23: error: cannot find symbol\n\
    \            word_counts.union(new Union_ArrayList_String__int(split[i], count));\n\
    \                                  ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpa45nvl22.java:28: error: cannot find symbol\n\
    \                word_counts.union(new Union_ArrayList_String__int(word, count));\n\
    \                                      ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpa45nvl22.java:33: error: cannot find symbol\n\
    \                word_counts.union(new Union_ArrayList_String__int(word + \",\"\
    \ + split[i - 1], count));\n                                      ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpa45nvl22.java:39:\
    \ error: cannot find symbol\n            Union_ArrayList_String__int word_count\
    \ = word_counts.get(i);\n            ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpa45nvl22.java:46: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__int(\"\", 0);\n              \
    \         ^\n  symbol:   class"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        int len = txt.length();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            ret.union(new Union_ArrayList_String__int(word));\n\
    \        }\n        ret.union(new Union_ArrayList_String__int(\",\"));\n     \
    \   for (char c : txt.toCharArray()) {\n            if (c == ',') {\n        \
    \        ret.union(new Union_ArrayList_String__int(\"\"));\n            } else\
    \ if (c >= 'a' && c <= 'z') {\n                ret.union(new Union_ArrayList_String__int(\"\
    \"));\n            } else if (c >= 'A' && c <= 'Z') {\n                ret.union(new\
    \ Union_ArrayList_String__int(\"\"));\n            }\n        }\n        int count\
    \ = 0;\n        for (String s : ret) {\n            count += s.isNotEmpty();\n\
    \        }\n        return count + 1;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl20kqovo.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpl20kqovo.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpl20kqovo.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpl20kqovo.java:21: error: cannot find symbol\n            ret.union(new\
    \ Union_ArrayList_String__int(word));\n                          ^\n  symbol:\
    \   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpl20kqovo.java:23:\
    \ error: cannot find symbol\n        ret.union(new Union_ArrayList_String__int(\"\
    ,\"));\n                      ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpl20kqovo.java:26: error: cannot find symbol\n\
    \                ret.union(new Union_ArrayList_String__int(\"\"));\n         \
    \                     ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpl20kqovo.java:28: error: cannot find symbol\n       \
    \         ret.union(new Union_ArrayList_String__int(\"\"));\n                \
    \              ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpl20kqovo.java:30: error: cannot find symbol\n             \
    \   ret.union(new Union_ArrayList_String__int(\"\"));\n                      \
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpl20kqovo.java:35: error: cannot find symbol\n            count += s.isNotEmpty();\n\
    \                      ^\n  symbol:   method isNotEmpty()\n  location: variable\
    \ s of type String\n/tmp/tmpl20kqovo.java:38: error: cannot find symbol\nreturn\
    \ new Union_ArrayList_String__int();\n           ^\n  sy"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        String[] words = txt.split(\" \");\n        for (int i = 0; i < words.length;\
    \ i++) {\n            words[i] = words[i].replaceAll(\",\", \"\");\n         \
    \   words[i] = words[i].replaceAll(\"[^a-zA-Z]\", \"\");\n            words[i]\
    \ = words[i].toLowerCase();\n            ret.unionArrayList(ret.arrayList(0, ret.size()\
    \ - 1), ret.arrayList(ret.size() - 1, ret.size() - 1));\n            ret.unionArrayList(ret.arrayList(0,\
    \ ret.size() - 1), ret.arrayList(ret.size() - 1, ret.size() - 1));\n        }\n\
    \        ret.unionArrayList(ret.arrayList(0, ret.size() - 1), ret.arrayList(ret.size()\
    \ - 1, ret.size() - 1));\n        ret.unionArrayList(ret.arrayList(0, ret.size()\
    \ - 1), ret.arrayList(ret.size() - 1, ret.size() - 1));\n        return ret;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph58krv93.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmph58krv93.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmph58krv93.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmph58krv93.java:29: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmph58krv93.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmph58krv93.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmph58krv93.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmph58krv93.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> lst = new ArrayList<String>();\n\
    \        Union_ArrayList_String__int usa = new Union_ArrayList_String__int();\n\
    \        String tmp = \"\";\n        int cnt = 0;\n        for(char c : txt.toCharArray())\
    \ {\n            if (c == ' ') {\n                lst.add(tmp);\n            \
    \    tmp = \"\";\n            } else if (c == ',') {\n                lst.add(tmp);\n\
    \                tmp = \"\";\n            } else {\n                tmp += c;\n\
    \            }\n        }\n        if (tmp != \"\") lst.add(tmp);\n        for\
    \ (String str : lst) {\n            usa.add(new String(str).toLowerCase(), String.valueOf(cnt));\n\
    \        }\n        return usa;\nreturn new Union_ArrayList_String__int();\n \
    \   }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1qd791dm.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp1qd791dm.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int usa = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp1qd791dm.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ usa = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp1qd791dm.java:37: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp1qd791dm.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp1qd791dm.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp1qd791dm.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp1qd791dm.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int n = txt.length();\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int(n);\n        // return number of lower-case\
    \ letters with odd order in the alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n        for (int i = 0; i < n; i++) {\n            char c = txt.charAt(i);\n\
    \            if (Character.isLower(c)) {\n                res.addLast(c);\n  \
    \          }\n        }\n        if (res.size() == 0) {\n            return res.addLast(0);\n\
    \        }\n        int low = 0;\n        for (int i = n; i > 0; i -= 2) {\n \
    \           char c = res.elementAt(i);\n            if (Character.isLetter(c))\
    \ {\n                low++;\n            }\n        }\n        if (low % 2 !=\
    \ 0) {\n            throw new RuntimeException(\"Incorrect number of lower-case\
    \ letters with odd order in the alphabet!\");\n        }\n        return res;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps3gqgwlu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmps3gqgwlu.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int(n);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmps3gqgwlu.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int(n);\n                                \
    \              ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmps3gqgwlu.java:22: error: cannot find symbol\n            if\
    \ (Character.isLower(c)) {\n                         ^\n  symbol:   method isLower(char)\n\
    \  location: class Character\n/tmp/tmps3gqgwlu.java:40: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmps3gqgwlu.java:43: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmps3gqgwlu.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmps3gqgwlu.java:45: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmps3gqgwlu.java:46: error: cannot find symbol\n    assert(splitWords"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Your Code Here\n        \n        \n  \
    \      \n        \n        \n        // This line below is for handling empty\
    \ input\n        if(txt == null || txt.length() == 0) return 0;\n        // This\
    \ line below is for handling words separated by commas\n        txt = txt.replace(\"\
    ,\", \" \");\n        \n        \n        // This line below is for handling the\
    \ case when there are no commas\n        String[] words = txt.split(\" \");\n\
    \        \n        if(words == null || words.length == 0) return 0;\n        \n\
    \        \n        \n        \n        int odd_number = 0;\n        // This loop\
    \ will go through the input string, looking for any words that match our criteria\n\
    \        for (String word : words) {\n            \n            // This line below\
    \ is for handling empty input\n            if(word == null || word.length() ==\
    \ 0) continue;\n            // This line below is for handling words with commas\n\
    \            word = word.replace(\",\", \" \");\n            \n            //\
    \ This line below is for handling the case when there are no commas\n        \
    \    String[] word_splitted = word.split(\" \");\n            \n            if(word_splitted\
    \ == null || word_splitted.length == 0) continue;\n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnbxjm_lc.java:198: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpnbxjm_lc.java:198: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \           ^\n/tmp/tmpnbxjm_lc.java:198: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpnbxjm_lc.java:198: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpnbxjm_lc.java:198: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpnbxjm_lc.java:209: error: reached end of file while parsing\n\
    }\n ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        if (txt != null) {\n            char[] chars = txt.toCharArray();\n \
    \           for (int i = 0; i < chars.length; i++) {\n                char c =\
    \ chars[i];\n                switch (c) {\n                    case '\\t':\n \
    \                   case '\\n':\n                    case '\\r':\n           \
    \         case '\\v':\n                    case '\\f':\n                     \
    \   result.add(txt, 0, i);\n                        break;\n                 \
    \   case ',':\n                        if (result.isEmpty()) {\n             \
    \               result.add(txt, 0, i);\n                            break;\n \
    \                       } else {\n                            if (result.size()\
    \ == 1)\n                                break;\n                        }\n \
    \                   case 'a':\n                    case 'A':\n               \
    \     case 'b':\n                    case 'B':\n                    case 'c':\n\
    \                    case 'C':\n                    case 'd':\n              \
    \      case 'D':\n                    case 'e':\n                    case 'E':\n\
    \                    case 'f':\n                    case 'F':\n              \
    \      case 'g':\n                    case 'G':\n                    case 'h':\n\
    \                    case 'H':\n                    case 'i':\n              \
    \      case 'I':\n                    case 'j':\n                    case 'J':\n\
    \                    case 'k':\n                    case 'K':\n              \
    \      case 'l':\n                    case 'L':\n                    case 'm':\n\
    \                    case 'M':\n                    case 'n':\n              \
    \      case 'N':\n                    case 'o':\n                    case 'O':\n\
    \                    case 'p':\n                    case 'P':\n              \
    \      case 'q':\n                    case 'Q':\n                    case 'r':\n\
    \                    case 'R':\n                    case 's':\n              \
    \      case 'S':\n                    case 't':\n                    case 'T':\n\
    \                    case 'u':\n                    case 'U':\n              \
    \      case 'v':\n                    case 'V':\n                    case 'w':\n\
    \                    case 'W':\n                    case 'x':\n              \
    \      case 'X':\n                    case 'y':\n                    case 'Y':\n\
    \                    case 'z':\n                    case 'Z':\n              \
    \      case '0':\n                    case '1':\n                    case '2':\n\
    \                    case '3':\n                    case '4':\n              \
    \      case '5':\n                    case '6':\n                    case '7':\n\
    \                    case '8':\n                    case '9':\n              \
    \      case '+':\n                    case '-':\n                    case '/':\n\
    \                    case '*':\n                        result.add(txt, 0, i);\n\
    \                        break;\n                    default:\n              \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjj5f_khv.java:26: error: illegal escape character\n           \
    \         case '\\v':\n                           ^\n/tmp/tmpjj5f_khv.java:26:\
    \ error: unclosed character literal\n                    case '\\v':\n       \
    \                  ^\n/tmp/tmpjj5f_khv.java:26: error: unclosed character literal\n\
    \                    case '\\v':\n                            ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        ArrayList <String>words = new ArrayList <>();\n\
    \        ArrayList <Integer> position = new ArrayList<>();\n        Union_ArrayList_String__int\
    \ result = new Union_ArrayList_String__int();\n        int count = 0;\n      \
    \  boolean found = false;\n        for (int i = 0; i < txt.length(); i++) {\n\
    \            char c = txt.charAt(i);\n            if (c == ',') {\n          \
    \      if (!found) {\n                    words.add(txt.substring(i, i+1));\n\
    \                    found = true;\n                } else {\n               \
    \     words.set(words.size() - 1, txt.substring(i, i+1));\n                  \
    \  position.add(words.size() - 1);\n                }\n            } else if (Character.isWhitespace(c))\
    \ {\n                if (!found) {\n                    words.add(txt.substring(i,\
    \ i+1));\n                    found = true;\n                } else {\n      \
    \              words.set(words.size() - 1, txt.substring(i, i+1));\n         \
    \           position.add(words.size() - 1);\n                }\n            }\
    \ else {\n                if (!found) {\n                    words.add(txt.substring(i,\
    \ i+1));\n                    found = true;\n                } else {\n      \
    \              words.set(words.size() - 1, txt.substring(i, i+1));\n         \
    \           position.add(words.size() - 1);\n                }\n            }\n\
    \        }\n        if (found) {\n            for (int i = 0; i < words.size();\
    \ i++) {\n                result.add(i, words.get(i));\n                result.add(position.get(i),\
    \ String.valueOf(count));\n                count++;\n            }\n        }\n\
    \        return result;\nreturn new Union_ArrayList_String__int();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbk8qxk4j.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpbk8qxk4j.java:19:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpbk8qxk4j.java:19: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpbk8qxk4j.java:58: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpbk8qxk4j.java:61: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpbk8qxk4j.java:62: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpbk8qxk4j.java:63: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpbk8qxk4j.java:64: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \           "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] words = txt.split(\"\\\\s+\");\n\
    \        String[] res1 = new String[words.length];\n        String[] res2 = new\
    \ String[words.length];\n        int[] res3 = new int[words.length];\n       \
    \ int i = 0;\n        for (String s : words) {\n            res1[i] = s;\n   \
    \         res2[i] = s;\n            res3[i] = 1;\n            i++;\n        }\n\
    \        for (String s : words) {\n            res1[i] = s;\n            res2[i]\
    \ = s;\n            res3[i] += 1;\n            i++;\n        }\n        for (String\
    \ s : words) {\n            res1[i] = s;\n            res2[i] = s;\n         \
    \   res3[i] += 1;\n            i++;\n        }\n        for (String s : words)\
    \ {\n            res1[i] = s;\n            res2[i] = s;\n            res3[i] +=\
    \ 1;\n            i++;\n        }\n        for (String s : words) {\n        \
    \    res1[i] = s;\n            res2[i] = s;\n            res3[i] += 1;\n     \
    \       i++;\n        }\n        for (String s : words) {\n            res1[i]\
    \ = s;\n            res2[i] = s;\n            res3[i] += 1;\n            i++;\n\
    \        }\n        for (String s : words) {\n            res1[i] = s;\n     \
    \       res2[i] = s;\n            res3[i] += 1;\n            i++;\n        }\n\
    \        for (String s : words) {\n            res1[i] = s;\n            res2[i]\
    \ = s;\n            res3[i] += 1;\n            i++;\n        }\n        for (String\
    \ s : words) {\n            res1[i] = s;\n            res2[i] = s;\n         \
    \   res3[i] += 1;\n            i++;\n        }\n        for (String s : words)\
    \ {\n            res1[i] = s;\n            res2[i] = s;\n            res3[i] +=\
    \ 1;\n            i++;\n        }\n        for (String s : words) {\n        \
    \    res1[i] = s;\n            res2[i] = s;\n            res3[i] += 1;\n     \
    \       i++;\n        }\n        for (String s : words) {\n            res1[i]\
    \ = s;\n            res2[i] = s;\n            res3[i] += 1;\n            i++;\n\
    \        }\n        for (String s : words) {\n            res1[i] = s;\n     \
    \       res2[i] = s;\n            res3[i] += 1;\n            i++;\n        }\n\
    \        for (String s : words) {\n            res1[i] = s;\n            res2[i]\
    \ = s;\n            res3[i] += 1;\n            i++;\n        }\n        for (String\
    \ s : words) {\n            res1[i] = s;\n            res2[i] = s;\n         \
    \   res3[i] += 1;\n            i++;\n        }\n        for (\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphqzy21pr.java:113: error: illegal start of expression\nreturn new\
    \ Union_ArrayList_String__int();\n^\n/tmp/tmphqzy21pr.java:114: error: illegal\
    \ start of expression\n    }\n    ^\n/tmp/tmphqzy21pr.java:115: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n/tmp/tmphqzy21pr.java:115:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \  ^\n/tmp/tmphqzy21pr.java:115: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n                  ^\n/tmp/tmphqzy21pr.java:115:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                   ^\n/tmp/tmphqzy21pr.java:115: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                                        \
    \ ^\n/tmp/tmphqzy21pr.java:126: error: reached end of file while parsing\n}\n\
    \ ^\n8 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        if (txt != null) {\n            txt = txt.toLowerCase().trim();\n   \
    \         String [] splitArray = txt.split(\" \");\n            for (String string\
    \ : splitArray) {\n                if (string != null && string.length() > 0 &&\
    \ \" \".equals(string.trim())) {\n                    ret.add(0, string);\n  \
    \              }\n            }\n            String [] wordsArray = txt.split(\"\
    ,\");\n            for (String string : wordsArray) {\n                if (string\
    \ != null && string.length() > 0 && \",\".equals(string.trim())) {\n         \
    \           ret.add(1, string);\n                }\n            }\n        }\n\
    \        ret.add(2);\n        return ret;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj2tny4nj.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpj2tny4nj.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpj2tny4nj.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpj2tny4nj.java:35: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpj2tny4nj.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpj2tny4nj.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpj2tny4nj.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpj2tny4nj.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        return splitWords(txt, false);\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp58p5fxh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpp58p5fxh.java:17:\
    \ error: method splitWords in class Problem cannot be applied to given types;\n\
    \        return splitWords(txt, false);\n               ^\n  required: String\n\
    \  found: String,boolean\n  reason: actual and formal argument lists differ in\
    \ length\n/tmp/tmpp58p5fxh.java:18: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpp58p5fxh.java:21: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpp58p5fxh.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpp58p5fxh.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpp58p5fxh.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpp58p5fxh.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] words = txt.split(\" \");\n     \
    \   String[] word2 = new String[words.length];\n        int length = 0;\n    \
    \    HashSet<String> w = new HashSet<>();\n        HashSet<String> w2 = new HashSet<>();\n\
    \        for (String w : words) {\n            if (w.trim().length() > 0) {\n\
    \                w.add(w.trim());\n                length = length + w.trim().length();\n\
    \            }\n        }\n        if (length == 0) {\n            ArrayList<String>\
    \ words2 = new ArrayList<>();\n            for (int i = 0; i < words.length; i++)\
    \ {\n                words2.add(words[i]);\n            }\n            length\
    \ = words2.size();\n            return new Union_ArrayList_String__int(words2);\n\
    \        }\n        if (length == 1) {\n            w.add(words[0]);\n       \
    \     return new Union_ArrayList_String__int(w);\n        }\n        ArrayList<String>\
    \ words2 = new ArrayList<>();\n        for (int i = 0; i < words.length; i++)\
    \ {\n            if (w.contains(words[i])) {\n                words2.add(words[i]);\n\
    \            }\n        }\n        int i = 0;\n        w.remove(words[i++]);\n\
    \        words2.add(words[i++]);\n        return new Union_ArrayList_String__int(words2);\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5iljka1z.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp5iljka1z.java:22:\
    \ error: variable w is already defined in method splitWords(String)\n        for\
    \ (String w : words) {\n                    ^\n/tmp/tmp5iljka1z.java:24: error:\
    \ cannot find symbol\n                w.add(w.trim());\n                 ^\n \
    \ symbol:   method add(String)\n  location: variable w of type String\n/tmp/tmp5iljka1z.java:34:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__int(words2);\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp5iljka1z.java:38: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__int(w);\n                       ^\n \
    \ symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp5iljka1z.java:49:\
    \ error: cannot find symbol\n        return new Union_ArrayList_String__int(words2);\n\
    \                   ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp5iljka1z.java:50: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp5iljka1z.java:53: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5iljka1z.java:54: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp5iljka1z.java:55: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equ"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        \n        ArrayList <String> ret = new ArrayList\
    \ <> ();\n        \n        StringBuilder sb = new StringBuilder();\n        \n\
    \        for (char c: txt.toCharArray()) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(c);\n                String tempString = sb.toString();\n\
    \                ret.add(tempString);\n                sb = new StringBuilder();\n\
    \            }\n            else {\n                sb.append(c);\n          \
    \  }\n        }\n        \n        return ret;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph039k8nn.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmph039k8nn.java:35:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmph039k8nn.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmph039k8nn.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmph039k8nn.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmph039k8nn.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmph039k8nn.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmph039k8nn.java:43: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        txt.trim().replaceAll(\"[^\\\\w,\\\\s]+\", \" \");\n        if (txt.length()\
    \ > 0) {\n            ret.addAll(Arrays.stream(txt.split(\"\\\\s+\")).collect(Collectors.toList()));\n\
    \        }\n        if (txt.contains(\",\")) {\n            ret.addAll(Arrays.stream(txt.split(\"\
    ,\")).collect(Collectors.toList()));\n        }\n        if (txt.contains(\"a\"\
    ) || txt.contains(\"b\") || txt.contains(\"c\") || txt.contains(\"d\") || txt.contains(\"\
    e\") || txt.contains(\"f\") || txt.contains(\"g\") || txt.contains(\"h\") || txt.contains(\"\
    i\") || txt.contains(\"j\") || txt.contains(\"k\") || txt.contains(\"l\") || txt.contains(\"\
    m\") || txt.contains(\"n\") || txt.contains(\"o\") || txt.contains(\"p\") || txt.contains(\"\
    q\") || txt.contains(\"r\") || txt.contains(\"s\") || txt.contains(\"t\") || txt.contains(\"\
    u\") || txt.contains(\"v\") || txt.contains(\"w\") || txt.contains(\"x\") || txt.contains(\"\
    y\") || txt.contains(\"z\")) {\n            ret.addAll(Arrays.stream(txt.toLowerCase().split(\"\
    (?<=\\\\w)(?=\\\\w)\")).collect(Collectors.toList()));\n        }\n        return\
    \ ret;\nreturn new Union_ArrayList_String__int();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9r0fnps_.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp9r0fnps_.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp9r0fnps_.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9r0fnps_.java:29: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9r0fnps_.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9r0fnps_.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9r0fnps_.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9r0fnps_.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        boolean isWord = false;\n        String s\
    \ = txt.toLowerCase();\n        char[] c = s.toCharArray();\n        Union_ArrayList_String__int\
    \ u = new Union_ArrayList_String__int();\n        String[] words = s.split(\"\
    \ \");\n        for (String w : words) {\n            char[] w = w.toCharArray();\n\
    \            for (char c : w) {\n                if (Character.isLetter(c) &&\
    \ isWord == false) {\n                    isWord = true;\n                   \
    \ u = new Union_ArrayList_String__int(Arrays.asList(w, c));\n                }\n\
    \            }\n        }\n        return u;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp34shwm7s.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp34shwm7s.java:20:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int u = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp34shwm7s.java:20: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ u = new Union_ArrayList_String__int();\n                                   \
    \         ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp34shwm7s.java:23: error: variable w is already defined in method\
    \ splitWords(String)\n            char[] w = w.toCharArray();\n              \
    \     ^\n/tmp/tmp34shwm7s.java:23: error: cannot find symbol\n            char[]\
    \ w = w.toCharArray();\n                        ^\n  symbol:   method toCharArray()\n\
    \  location: variable w of type char[]\n/tmp/tmp34shwm7s.java:24: error: variable\
    \ c is already defined in method splitWords(String)\n            for (char c :\
    \ w) {\n                      ^\n/tmp/tmp34shwm7s.java:27: error: cannot find\
    \ symbol\n                    u = new Union_ArrayList_String__int(Arrays.asList(w,\
    \ c));\n                            ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp34shwm7s.java:32: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp34shwm7s.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp34shwm7s.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        String word = null;\n        char[] ch = txt.toCharArray();\n       \
    \ for (int i = 0; i < ch.length; i++) {\n            if (Character.isLetter(ch[i]))\
    \ {\n                word = word + ch[i];\n                if (i == ch.length\
    \ - 1) {\n                    words.add(word);\n                    word = null;\n\
    \                }\n            } else if (Character.isWhitespace(ch[i])) {\n\
    \                words.add(word);\n                word = null;\n            }\
    \ else {\n                if (i != ch.length - 1)\n                    word =\
    \ word + ',' + ch[i];\n                else\n                    word = word +\
    \ ch[i];\n            }\n        }\n        return words;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7y7h2hot.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp7y7h2hot.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp7y7h2hot.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ words = new Union_ArrayList_String__int();\n                               \
    \                 ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp7y7h2hot.java:38: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp7y7h2hot.java:41: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7y7h2hot.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7y7h2hot.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7y7h2hot.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \              "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> words = Arrays.asList(txt.split(\"\
    \\\\s+\"));\n        String[] array = new String[words.size()];\n        List<Union_ArrayList_String__int>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < words.size(); i++) {\n\
    \            array[i] = words.get(i);\n            char[] arr = array[i].toCharArray();\n\
    \            int count = 1;\n            int odd_count = 0;\n            int even_count\
    \ = 0;\n            int odd = 0;\n            int even = 0;\n            for (int\
    \ j = 0; j < arr.length; j++) {\n                if (arr[j] <= ' ') {\n      \
    \              continue;\n                }\n                if (arr[j] > 96)\
    \ {\n                    if (arr[j] >= 97) {\n                        if (arr[j]\
    \ >= 65) {\n                            odd++;\n                            if\
    \ (arr[j] >= 97) {\n                                even++;\n                \
    \            }\n                        } else {\n                           \
    \ odd_count++;\n                        }\n                    } else {\n    \
    \                    even_count++;\n                    }\n                } else\
    \ {\n                    count++;\n                }\n            }\n        \
    \    res.add(new Union_ArrayList_String__int(array[i], count, odd_count, odd,\
    \ even_count, even));\n        }\n        int min_count = Collections.min(res.stream().mapToInt((s)\
    \ -> s.a()).collect(Collectors.toList()));\n        int odd_count = Collections.min(res.stream().mapToInt((s)\
    \ -> s.odd_count()).collect(Collectors.toList()));\n        int even_count = Collections.min(res.stream().mapToInt((s)\
    \ -> s.even_count()).collect(Collectors.toList()));\n        int odd = Collections.min(res.stream().mapToInt((s)\
    \ -> s.odd()).collect(Collectors.toList()));\n        int even = Collections.min(res.stream().mapToInt((s)\
    \ -> s.even()).collect(Collectors.toList()));\n        Union_ArrayList_String__int\
    \ ans = new Union_ArrayList_String__int(\"\", min_count, odd_count, odd, even_count,\
    \ even);\n        Union_ArrayList_String__int minres = Collections.min(res.stream().mapToInt((s)\
    \ -> s.a()).collect(Collectors.toList()));\n        for (int i = 0; i < res.size();\
    \ i++) {\n            if (res.get(i).a() < minres.a()) {\n                ans\
    \ = res.get(i);\n                minres = res.get(i);\n            }\n       \
    \ }\n        return ans;\nreturn new Union_ArrayList_String__int();\n    }\n \
    \   public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2i8q3fo2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp2i8q3fo2.java:19:\
    \ error: cannot find symbol\n        List<Union_ArrayList_String__int> res = new\
    \ ArrayList<>();\n             ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp2i8q3fo2.java:49: error: cannot find symbol\n\
    \            res.add(new Union_ArrayList_String__int(array[i], count, odd_count,\
    \ odd, even_count, even));\n                        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp2i8q3fo2.java:51: error: method collect in\
    \ interface IntStream cannot be applied to given types;\n        int min_count\
    \ = Collections.min(res.stream().mapToInt((s) -> s.a()).collect(Collectors.toList()));\n\
    \                                                                           ^\n\
    \  required: Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>\n  found: Collector<Object,CAP#1,List<Object>>\n\
    \  reason: cannot infer type-variable(s) R\n    (actual and formal argument lists\
    \ differ in length)\n  where R is a type-variable:\n    R extends Object declared\
    \ in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n  where\
    \ CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture of ?\n\
    /tmp/tmp2i8q3fo2.java:52: error: method collect in interface IntStream cannot\
    \ be applied to given types;\n        int odd_count = Collections.min(res.stream().mapToInt((s)\
    \ -> s.odd_count()).collect(Collectors.toList()));\n                         \
    \                                                          ^\n  required: Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>\n\
    \  found: Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-varia"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Complete the function\n        Union_ArrayList_String__int\
    \ words = null;\n        String[] wordList = txt.split(\"\\\\s\");\n        List<String>\
    \ splitWords = new ArrayList<>(Arrays.asList(wordList));\n        List<Integer>\
    \ even = new ArrayList<Integer>();\n        words.words.clear();\n        for\
    \ (String s: splitWords) {\n            String[] wordsInString = s.split(\",\"\
    );\n            words.words.addAll(Arrays.asList(wordsInString));\n          \
    \  even.addAll(Arrays.asList(new int[26]));\n        }\n        for (int i = 0;\
    \ i < splitWords.size(); i++) {\n            String s = splitWords.get(i);\n \
    \           if (s.length() > 0) {\n                for (int j = 0; j < s.length();\
    \ j++) {\n                    if (s.charAt(j) == ',') {\n                    \
    \    for (int k = 0; k < s.length() - 1; k++) {\n                            int\
    \ c = 0;\n                            for (int l = 0; l < s.length() - k; l++)\
    \ {\n                                if (s.charAt(l + k) != ',') {\n         \
    \                           c = s.charAt(l + k) - s.charAt(j);\n             \
    \                       break;\n                                }\n          \
    \                  }\n                            even.set(c * 2 + 1, 1);\n  \
    \                          even.set(c * 2, 0);\n                        }\n  \
    \                  } else if (s.charAt(j) == '-') {\n                        even.set(0,\
    \ even.get(1));\n                        even.set(1, even.get(0));\n         \
    \           }\n                }\n            }\n        }\n        int odd =\
    \ 0;\n        for (Integer o: even) {\n            if (o % 2 != 0) {\n       \
    \         odd++;\n            }\n        }\n        if (odd == words.size()) {\n\
    \            String s = \"\";\n            for (Integer o: even) {\n         \
    \       if (o % 2 != 0) {\n                    s += o.toString();\n          \
    \      }\n            }\n            words.addToString(s);\n        }\n      \
    \  return words;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg3g4xmr6.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpg3g4xmr6.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = null;\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpg3g4xmr6.java:26: error: no suitable method found for addAll(List<int[]>)\n\
    \            even.addAll(Arrays.asList(new int[26]));\n                ^\n   \
    \ method Collection.addAll(Collection<? extends Integer>) is not applicable\n\
    \      (argument mismatch; inferred type does not conform to upper bound(s)\n\
    \          inferred: int[]\n          upper bound(s): Integer,Object)\n    method\
    \ List.addAll(Collection<? extends Integer>) is not applicable\n      (argument\
    \ mismatch; inferred type does not conform to upper bound(s)\n          inferred:\
    \ int[]\n          upper bound(s): Integer,Object)\n/tmp/tmpg3g4xmr6.java:67:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpg3g4xmr6.java:70: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg3g4xmr6.java:71: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpg3g4xmr6.java:72: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   cl"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int(new\
    \ ArrayList(), new ArrayList());\n\n        txt = txt.toLowerCase();\n       \
    \ String [] words = txt.split(\" \");\n        for(String word : words) {\n  \
    \          ret.add(word);\n        }\n\n        return ret;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgb4p5fj5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpgb4p5fj5.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int(new\
    \ ArrayList(), new ArrayList());\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpgb4p5fj5.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int ret = new Union_ArrayList_String__int(new\
    \ ArrayList(), new ArrayList());\n                                           \
    \   ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpgb4p5fj5.java:26: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpgb4p5fj5.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpgb4p5fj5.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpgb4p5fj5.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpgb4p5fj5.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\""
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int a = new Union_ArrayList_String__int(txt);\n\
    \        int res = 0;\n        char[] arr1 = txt.toCharArray();\n        Arrays.sort(arr1);\n\
    \        String[] arr2 = new String[arr1.length];\n        Arrays.fill(arr2, \"\
    \");\n        Collections.sort(arr1, StringCaseAscComparator.INSTANCE);\n    \
    \    int i = 0;\n        int j = 0;\n        boolean flag = false;\n        while\
    \ (i < arr1.length) {\n            if (arr1[i] != ' ') {\n                if (flag)\
    \ {\n                    arr2[j++] = arr1[i];\n                } else {\n    \
    \                flag = true;\n                    arr2[j++] = arr1[i];\n    \
    \            }\n            } else {\n                flag = false;\n        \
    \        i++;\n            }\n        }\n        for (int k = 0; k < j; k++) {\n\
    \            if (arr1[k] == ' ') {\n                arr2[k] = \"0\";\n       \
    \     } else {\n                arr2[k] = \"1\";\n            }\n        }\n \
    \       for (int k = 0; k < j; k++) {\n            if (Integer.parseInt(arr2[k])\
    \ % 2 != 0) {\n                res = res + arr2[k].length();\n            }\n\
    \        }\n        Union_ArrayList_String__int b = new Union_ArrayList_String__int(arr2.toString());\n\
    \        return b;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp44ocy9cb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp44ocy9cb.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int a = new Union_ArrayList_String__int(txt);\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp44ocy9cb.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ a = new Union_ArrayList_String__int(txt);\n                                \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp44ocy9cb.java:23: error: cannot find symbol\n        Collections.sort(arr1,\
    \ StringCaseAscComparator.INSTANCE);\n                               ^\n  symbol:\
    \   variable StringCaseAscComparator\n  location: class Problem\n/tmp/tmp44ocy9cb.java:30:\
    \ error: incompatible types: char cannot be converted to String\n            \
    \        arr2[j++] = arr1[i];\n                                    ^\n/tmp/tmp44ocy9cb.java:33:\
    \ error: incompatible types: char cannot be converted to String\n            \
    \        arr2[j++] = arr1[i];\n                                    ^\n/tmp/tmp44ocy9cb.java:52:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int b = new Union_ArrayList_String__int(arr2.toString());\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp44ocy9cb.java:52: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ b = new Union_ArrayList_String__int(arr2.toString());\n                    \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp44ocy9cb.java:54: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp44ocy9cb.java:57: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        char[] charArray = txt.toCharArray();\n  \
    \      Arrays.sort(charArray);\n        Set<Character> set = new HashSet<Character>();\n\
    \        for (char c: charArray) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        List<String> words = new ArrayList<String>();\n        for\
    \ (Character c: set) {\n            int idx = -1;\n            if (c == ',' ||\
    \ c == ' ') {\n                idx = words.size();\n            }\n          \
    \  words.add(String.valueOf(idx));\n        }\n        return words.stream().map(i\
    \ -> Integer.parseInt(i)).collect(Collectors.toList());\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy2bhq7s1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpy2bhq7s1.java:32:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpy2bhq7s1.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpy2bhq7s1.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpy2bhq7s1.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpy2bhq7s1.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpy2bhq7s1.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpy2bhq7s1.java:40: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = splitWords(txt,\
    \ false);\n        Union_ArrayList_String__int commas = splitWords(txt, true);\n\
    \        return (words.add(commas));\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptq0ufu3p.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmptq0ufu3p.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = splitWords(txt,\
    \ false);\n        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmptq0ufu3p.java:17: error: method splitWords in class Problem\
    \ cannot be applied to given types;\n        Union_ArrayList_String__int words\
    \ = splitWords(txt, false);\n                                            ^\n \
    \ required: String\n  found: String,boolean\n  reason: actual and formal argument\
    \ lists differ in length\n/tmp/tmptq0ufu3p.java:18: error: cannot find symbol\n\
    \        Union_ArrayList_String__int commas = splitWords(txt, true);\n       \
    \ ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmptq0ufu3p.java:18: error: method splitWords in class Problem cannot be\
    \ applied to given types;\n        Union_ArrayList_String__int commas = splitWords(txt,\
    \ true);\n                                             ^\n  required: String\n\
    \  found: String,boolean\n  reason: actual and formal argument lists differ in\
    \ length\n/tmp/tmptq0ufu3p.java:20: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmptq0ufu3p.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmptq0ufu3p.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: c"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        boolean foundSpace = false;\n        boolean foundComma = false;\n  \
    \      int i = 0;\n        char ch;\n        boolean isNum = false;\n        do\
    \ {\n            ch = txt.charAt(i);\n            i++;\n            if (ch ==\
    \ ' ') {\n                foundSpace = true;\n            }\n            if (ch\
    \ == ',') {\n                foundComma = true;\n            }\n        } while\
    \ (i < txt.length());\n        int i = 0;\n        do {\n            ch = txt.charAt(i);\n\
    \            i++;\n            if (ch <= 'z' && ch >= 'a') {\n               \
    \ isNum = true;\n            }\n        } while (i < txt.length());\n        int\
    \ size = txt.length();\n        if (!foundSpace) {\n            result.add(txt);\n\
    \        } else {\n            if (isNum) {\n                for (int x = 0; x\
    \ < size; x++) {\n                    if (txt.charAt(x) == 'e') {\n          \
    \              result.add(\"eee\");\n                    } else if (txt.charAt(x)\
    \ == 'e') {\n                        result.add(\"eeee\");\n                 \
    \   } else if (txt.charAt(x) == 'e') {\n                        result.add(\"\
    eeeee\");\n                    } else if (txt.charAt(x) == 'e') {\n          \
    \              result.add(\"eeeeee\");\n                    } else if (txt.charAt(x)\
    \ == 'e') {\n                        result.add(\"eeeeeee\");\n              \
    \      } else if (txt.charAt(x) == 'e') {\n                        result.add(\"\
    eeeeeeee\");\n                    } else if (txt.charAt(x) == 'e') {\n       \
    \                 result.add(\"eeeeeeeee\");\n                    } else if (txt.charAt(x)\
    \ == 'e') {\n                        result.add(\"eeeeeeeeee\");\n           \
    \         } else if (txt.charAt(x) == 'e') {\n                        result.add(\"\
    eeeeeeeeeee\");\n                    } else if (txt.charAt(x) == 'e') {\n    \
    \                    result.add(\"eeeeeeeeeeee\");\n                    } else\
    \ if (txt.charAt(x) == 'e') {\n                        result.add(\"eeeeeeeeeeeee\"\
    );\n                    } else if (txt.charAt(x) == 'e') {\n                 \
    \       result.add(\"eeeeeeeeeeeeee\");\n                    } else if (txt.charAt(x)\
    \ == 'e') {\n                        result.add(\"eeeeeeeeeeeeeee\");\n      \
    \              } else if (txt.charAt(x) == 'e') {\n                        result.add(\"\
    eeeeeeeeeeeeeeee\");\n                    } else if (txt.charAt(x) == 'e') {\n\
    \                        result.add(\"eeeeeeeeeeeeeeeee\");\n                \
    \    } else if (txt.charAt(x) == 'e') {\n                        result.add(\"\
    eeeeeeeeeeeeeeeeee\");\n                    } else if (txt.charAt(x) == 'e') {\n\
    \                        result.add(\"eeeeeeeeeeeeeeeeeee\");\n              \
    \      } else if (txt.charAt(x) == 'e') {\n                        result.add\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx95zhvif.java:82: error: not a statement\n                    \
    \    result.add\n                              ^\n/tmp/tmpx95zhvif.java:82: error:\
    \ ';' expected\n                        result.add\n                         \
    \         ^\n/tmp/tmpx95zhvif.java:85: error: illegal start of expression\n  \
    \  public static void main(String[] args) {\n    ^\n/tmp/tmpx95zhvif.java:85:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmpx95zhvif.java:85: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpx95zhvif.java:85: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpx95zhvif.java:85: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpx95zhvif.java:96: error: reached end of file while parsing\n\
    }\n ^\n/tmp/tmpx95zhvif.java:97: error: reached end of file while parsing\n9 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> list = Arrays.asList(txt.split(\"\
    \ \"));\n        System.out.println(list);\n        int count = 0;\n        boolean\
    \ comma = false;\n        boolean whitespace = false;\n        List<String> result\
    \ = new ArrayList<>();\n        for (String s : list) {\n            if (comma)\
    \ {\n                comma = false;\n                result.add(s);\n        \
    \    } else {\n                for (char ch : s.toCharArray()) {\n           \
    \         if (Character.isWhitespace(ch)) {\n                        whitespace\
    \ = true;\n                    } else if (Character.isLetter(ch)) {\n        \
    \                result.add(s);\n                        comma = true;\n     \
    \               }\n                }\n                if (whitespace) {\n    \
    \                result.add(s);\n                    whitespace = false;\n   \
    \             }\n                whitespace = false;\n                comma =\
    \ false;\n            }\n        }\n        return result.size() > 1 ? new Union_ArrayList_String__int(result.subList(0,\
    \ result.size() - 1)) : new Union_ArrayList_String__int(result);\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzjvvjezi.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpzjvvjezi.java:44:\
    \ error: cannot find symbol\n        return result.size() > 1 ? new Union_ArrayList_String__int(result.subList(0,\
    \ result.size() - 1)) : new Union_ArrayList_String__int(result);\n           \
    \                            ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpzjvvjezi.java:44: error: cannot find symbol\n\
    \        return result.size() > 1 ? new Union_ArrayList_String__int(result.subList(0,\
    \ result.size() - 1)) : new Union_ArrayList_String__int(result);\n           \
    \                                                                            \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpzjvvjezi.java:45: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpzjvvjezi.java:48: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzjvvjezi.java:49: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzjvvjezi.java:50: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzjvvjezi."
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Write your code here\n        String []\
    \ arr = txt.split(\" \");\n        ArrayList<String> splits = new ArrayList<String>();\n\
    \        Union_ArrayList_String__int ua = new Union_ArrayList_String__int();\n\
    \        int[] count = new int[26];\n        for (int i = 0; i < arr.length; i++)\
    \ {\n            String s = arr[i];\n            for (int j = 0; j < s.length();\
    \ j++) {\n                if (s.charAt(j) == ',')\n                    s = \"\"\
    \ + s.charAt(j);\n                splits.add(s);\n            }\n        }\n \
    \       Arrays.sort(splits);\n        for (String s : splits) {\n            for\
    \ (int i = 0; i < s.length(); i++) {\n                count[s.charAt(i) - 'a']++;\n\
    \            }\n        }\n        int count = 0;\n        for (int i = 0; i <\
    \ 26; i++) {\n            if (count[i] % 2 == 1)\n                ua.add(new IntObj(count[i]));\n\
    \        }\n        return ua;\nreturn new Union_ArrayList_String__int();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcxpxd_m9.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpcxpxd_m9.java:20:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ua = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpcxpxd_m9.java:20: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ua = new Union_ArrayList_String__int();\n                                  \
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcxpxd_m9.java:30: error: no suitable method found for sort(ArrayList<String>)\n\
    \        Arrays.sort(splits);\n              ^\n    method Arrays.sort(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<String> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<String> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> lst = Arrays.asList(txt.split(\"\
    \ \"));\n        List<Union_ArrayList_String__int> result = new ArrayList<>();\n\
    \        char[] arr = txt.toCharArray();\n        int i = 0;\n        int j =\
    \ 0;\n        boolean b = true;\n        for (int k = 0; k < arr.length; k++)\
    \ {\n            boolean found = false;\n            for (int m = 0; m < lst.size();\
    \ m++) {\n                String check = lst.get(m);\n                if (check.equalsIgnoreCase(Character.toString(arr[k])))\
    \ {\n                    found = true;\n                    result.add(new Union_ArrayList_String__int(Character.toString(arr[k]),\
    \ i));\n                    b = false;\n                    break;\n         \
    \       }\n            }\n            if (!found) {\n                for (int\
    \ n = k; n < arr.length; n++) {\n                    if (arr[n] >= 'A' && arr[n]\
    \ <= 'Z') {\n                        if (arr[n] != 'a' && arr[n] != 'b' && arr[n]\
    \ != 'c' && arr[n] != 'd' && arr[n] != 'e' && arr[n] != 'f' && arr[n] != 'g' &&\
    \ arr[n] != 'h' && arr[n] != 'i' && arr[n] != 'j' && arr[n] != 'k' && arr[n] !=\
    \ 'l' && arr[n] != 'm' && arr[n] != 'n' && arr[n] != 'o' && arr[n] != 'p' && arr[n]\
    \ != 'q' && arr[n] != 'r' && arr[n] != 's' && arr[n] != 't' && arr[n] != 'u' &&\
    \ arr[n] != 'v' && arr[n] != 'w' && arr[n] != 'x' && arr[n] != 'y' && arr[n] !=\
    \ 'z') {\n                            result.add(new Union_ArrayList_String__int(Character.toString(arr[n]),\
    \ i));\n                            b = false;\n                        }\n  \
    \                  }\n                }\n            }\n            if (b) {\n\
    \                for (int o = 0; o < lst.size(); o++) {\n                    String\
    \ check = lst.get(o);\n                    if (check.equalsIgnoreCase(Character.toString(arr[k])))\
    \ {\n                        b = false;\n                        break;\n    \
    \                }\n                }\n            }\n            if (b) {\n \
    \               j++;\n                b = true;\n            }\n            i++;\n\
    \        }\n        if (i == lst.size()) {\n            result.add(new Union_ArrayList_String__int(Character.toString(arr[i]),\
    \ i));\n        }\n        return result;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppuuz3hy5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmppuuz3hy5.java:18:\
    \ error: cannot find symbol\n        List<Union_ArrayList_String__int> result\
    \ = new ArrayList<>();\n             ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmppuuz3hy5.java:29: error: cannot find symbol\n\
    \                    result.add(new Union_ArrayList_String__int(Character.toString(arr[k]),\
    \ i));\n                                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmppuuz3hy5.java:38: error: cannot find symbol\n\
    \                            result.add(new Union_ArrayList_String__int(Character.toString(arr[n]),\
    \ i));\n                                           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmppuuz3hy5.java:60: error: cannot find symbol\n\
    \            result.add(new Union_ArrayList_String__int(Character.toString(arr[i]),\
    \ i));\n                           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmppuuz3hy5.java:63: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmppuuz3hy5.java:66: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmppuuz3hy5.java:67: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmppuuz3hy5.java:68: error: cannot find symbo"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int(txt.split(\"\
    \\\\s+\"));\n        Union_ArrayList_String__int out = new Union_ArrayList_String__int(words.size());\n\
    \        int index = 0;\n        boolean first = true;\n        for (String word\
    \ : words) {\n            out.add(index, word);\n            index++;\n      \
    \      if (first) {\n                first = false;\n                Union_ArrayList_String__int\
    \ even = new Union_ArrayList_String__int(words.size());\n                int odd\
    \ = index - 1;\n                for (int i = 0; i < words.size(); i++) {\n   \
    \                 if (even.contains(i)) {\n                        String evenString\
    \ = even.get(i);\n                        out.add(index, evenString);\n      \
    \                  index++;\n                    }\n                    if (odd.contains(i)\
    \ && even.contains(i)) {\n                        String evenString = even.get(i);\n\
    \                        out.add(index, evenString);\n                       \
    \ index++;\n                    }\n                }\n            }\n        }\n\
    \        return out;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbhalgjen.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpbhalgjen.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int(txt.split(\"\
    \\\\s+\"));\n        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpbhalgjen.java:17: error: cannot find symbol\n       \
    \ Union_ArrayList_String__int words = new Union_ArrayList_String__int(txt.split(\"\
    \\\\s+\"));\n                                                ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpbhalgjen.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int out = new Union_ArrayList_String__int(words.size());\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpbhalgjen.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ out = new Union_ArrayList_String__int(words.size());\n                     \
    \                         ^\n  symbol:   class Union_ArrayList_String__int\n \
    \ location: class Problem\n/tmp/tmpbhalgjen.java:26: error: cannot find symbol\n\
    \                Union_ArrayList_String__int even = new Union_ArrayList_String__int(words.size());\n\
    \                ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpbhalgjen.java:26: error: cannot find symbol\n       \
    \         Union_ArrayList_String__int even = new Union_ArrayList_String__int(words.size());\n\
    \                                                       ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpbhalgjen.java:34: error: int cannot be dereferenced\n\
    \                    if (odd.contains(i) && even.contains(i)) {\n            \
    \               ^\n/tmp/tmpbhalgjen.java:43: error: cannot find symbol\nreturn\
    \ new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] words = txt.split(\"[^a-zA-Z0-9]+\"\
    );\n        int result = 0;\n        for (String word : words) {\n           \
    \ if (!\"\".equals(word)) {\n                result ++;\n            }\n     \
    \   }\n        return result;\nreturn new Union_ArrayList_String__int();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6eudgm94.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp6eudgm94.java:25:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp6eudgm94.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp6eudgm94.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp6eudgm94.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp6eudgm94.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp6eudgm94.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmp6eudgm94.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Set<String> set = new HashSet<>(Arrays.asList(txt.split(\"\
    \ \")));\n        List<String> list = Arrays.asList(set.stream().filter(s -> s.contains(\"\
    ,\")).collect(Collectors.toList()));\n        int[] count = new int[26];\n   \
    \     list.forEach(s -> {\n            count[s.toLowerCase().charAt(0) - 'a']++;\n\
    \        });\n        int countOfOdd = 0;\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (count[i] % 2 == 1) {\n                countOfOdd += count[i];\n\
    \            }\n        }\n        return Union_ArrayList_String__int._of(list.size(),\
    \ countOfOdd);\nreturn new Union_ArrayList_String__int();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpks8ph5q5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpks8ph5q5.java:18:\
    \ error: incompatible types: inference variable T#1 has incompatible bounds\n\
    \        List<String> list = Arrays.asList(set.stream().filter(s -> s.contains(\"\
    ,\")).collect(Collectors.toList()));\n                                       \
    \  ^\n    equality constraints: String\n    lower bounds: List<T#2>,R\n  where\
    \ T#1,T#2,R,A,T#3 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>asList(T#1...)\n    T#2 extends Object declared in method <T#2>toList()\n\
    \    R extends Object declared in method <R,A>collect(Collector<? super T#3,A,R>)\n\
    \    A extends Object declared in method <R,A>collect(Collector<? super T#3,A,R>)\n\
    \    T#3 extends Object declared in interface Stream\n/tmp/tmpks8ph5q5.java:29:\
    \ error: cannot find symbol\n        return Union_ArrayList_String__int._of(list.size(),\
    \ countOfOdd);\n               ^\n  symbol:   variable Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpks8ph5q5.java:30: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpks8ph5q5.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpks8ph5q5.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpks8ph5q5.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_Array"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \",\");\n\
    \        txt = txt.replaceAll(\",\\\\s+\", \"!\");\n        txt = txt.replaceAll(\"\
    !\\\\s+\", \"\");\n        txt = txt.toLowerCase();\n        int size = txt.length();\n\
    \        for (int i = 0; i < size; i++) {\n            int count = 0;\n      \
    \      int ascii = txt.charAt(i) - 'a';\n            while (i < size && ascii\
    \ == txt.charAt(i) - 'a') {\n                i++;\n                count++;\n\
    \                ascii = txt.charAt(i) - 'a';\n            }\n            if (count\
    \ % 2 != 0)\n                words.add(i, count);\n        }\n        return words;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj9qruisn.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpj9qruisn.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int words = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpj9qruisn.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ words = new Union_ArrayList_String__int();\n                               \
    \                 ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpj9qruisn.java:36: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpj9qruisn.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpj9qruisn.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpj9qruisn.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpj9qruisn.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \              "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Your code here\n        if (txt == null)\n\
    \            return null;\n        if (txt.trim().isEmpty())\n            return\
    \ null;\n        Union_ArrayList_String__int arr = [];\n        for (String s\
    \ : txt.split(\"\\\\W+\"))\n            arr.add(s);\n        return arr;\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiep38a6m.java:22: error: illegal start of expression\n        Union_ArrayList_String__int\
    \ arr = [];\n                                          ^\n/tmp/tmpiep38a6m.java:22:\
    \ error: illegal start of expression\n        Union_ArrayList_String__int arr\
    \ = [];\n                                           ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        String [] tokens = txt.split(\"\\\\s+\");\n        \n        for(String\
    \ token : tokens) {\n            int count = token.length();\n            String\
    \ [] words=new String[count];\n            \n            for(int i=0;i<count;i++)\
    \ {\n                if(token.charAt(i)!=' ')\n                    words[i]=token.charAt(i);\n\
    \            }\n            \n            \n            Union_ArrayList_String__int\
    \ new_list = new Union_ArrayList_String__int(words);\n            res.add(new_list);\n\
    \        }\n        \n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzhqn7js7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpzhqn7js7.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpzhqn7js7.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzhqn7js7.java:26: error: incompatible types: char cannot be\
    \ converted to String\n                    words[i]=token.charAt(i);\n       \
    \                                  ^\n/tmp/tmpzhqn7js7.java:30: error: cannot\
    \ find symbol\n            Union_ArrayList_String__int new_list = new Union_ArrayList_String__int(words);\n\
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzhqn7js7.java:30: error: cannot find symbol\n            Union_ArrayList_String__int\
    \ new_list = new Union_ArrayList_String__int(words);\n                       \
    \                                ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpzhqn7js7.java:35: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpzhqn7js7.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzhqn7js7.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> result = new ArrayList<>();\n\
    \        txt = txt.replaceAll(\"\\\\s\", \"\");\n        if (txt.length() > 0)\
    \ {\n            txt = txt.replaceAll(\",\", \"\");\n            txt = txt.toLowerCase();\n\
    \            txt = txt.chars().filter(c -> (char) c >= 'a' && (char) c <= 'z').count();\n\
    \        }\n        result.add(txt);\n        return result;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplvinsx92.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmplvinsx92.java:22:\
    \ error: incompatible types: long cannot be converted to String\n            txt\
    \ = txt.chars().filter(c -> (char) c >= 'a' && (char) c <= 'z').count();\n   \
    \                                                                            \
    \    ^\n/tmp/tmplvinsx92.java:26: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplvinsx92.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplvinsx92.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplvinsx92.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmplvinsx92.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmplvinsx92.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int("
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Write your code here\n        int index\
    \ = 0;\n        int i = 0;\n        ArrayList<Integer> words = new ArrayList<Integer>();\n\
    \        String word = \"\";\n        String wordSplit = \"\";\n        int count\
    \ = 0;\n        char lastChar = ' ';\n        int lastCharCount = 0;\n       \
    \ boolean isFirst = true;\n        boolean isUpper = false;\n        boolean isLower1\
    \ = true;\n        boolean isLower2 = false;\n        boolean isComma = false;\n\
    \n        while (index < txt.length()) {\n            char nextChar = txt.charAt(index);\n\
    \n            if (lastChar == ',' || lastChar == ' ') {\n                isComma\
    \ = false;\n                lastCharCount++;\n                words.add(lastCharCount);\n\
    \                lastCharCount = 0;\n            }\n            if (isFirst) {\n\
    \                isFirst = false;\n            }\n            if (nextChar ==\
    \ '\\n') {\n                isFirst = true;\n            }\n\n            if (isUpper\
    \ == true && nextChar == ' ') {\n                isUpper = false;\n          \
    \  }\n\n            if (isUpper == true && nextChar == ',') {\n              \
    \  isUpper = false;\n                isComma = true;\n                lastCharCount\
    \ = 0;\n            }\n\n            if (isUpper == true && nextChar == '.') {\n\
    \                isUpper = false;\n                isComma = true;\n         \
    \       lastCharCount = 0;\n            }\n\n            if (isUpper == true &&\
    \ nextChar == ',' || nextChar == '.' || nextChar == ' ') {\n                isUpper\
    \ = false;\n                isComma = false;\n                lastCharCount =\
    \ 0;\n            }\n\n            if (isUpper == true && nextChar == ' ') {\n\
    \                isUpper = false;\n                lastCharCount = 0;\n      \
    \      }\n\n            if (isUpper == true) {\n                isUpper = true;\n\
    \            }\n\n            if (isLower == true && nextChar == 'a' || nextChar\
    \ == 'b' || nextChar == 'c' || nextChar == 'd' || nextChar == 'e'\n          \
    \          || nextChar == 'f' || nextChar == 'g' || nextChar == 'h' || nextChar\
    \ == 'i' || nextChar == 'j' || nextChar == 'k'\n                    || nextChar\
    \ == 'l' || nextChar == 'm' || nextChar == 'n' || nextChar == 'o' || nextChar\
    \ == 'p' || nextChar == 'q'\n                    || nextChar == 'r' || nextChar\
    \ == 's' || nextChar == 't' || nextChar == 'u' || nextChar == 'v' || nextChar\
    \ == 'w'\n                    || nextChar == 'x' || nextChar == 'y' || nextChar\
    \ == 'z') {\n                isLower = false;\n                isLower1 = true;\n\
    \                isLower2 = true;\n                lastCharCount = 0;\n      \
    \      }\n\n            if (isLower1 == true && \nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3kbte96c.java:91: error: illegal start of expression\nreturn new\
    \ Union_ArrayList_String__int();\n^\n/tmp/tmp3kbte96c.java:93: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n/tmp/tmp3kbte96c.java:93:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmp3kbte96c.java:93: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmp3kbte96c.java:93: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmp3kbte96c.java:93: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmp3kbte96c.java:104: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        StringBuilder words = new StringBuilder();\n\
    \        char[] chars = txt.toCharArray();\n        boolean isSpace = Arrays.stream(chars).anyMatch(Character::isSpace);\n\
    \        boolean isComma = Arrays.stream(chars).anyMatch(Character::isLetter);\n\
    \        if (isSpace) {\n            String[] words = txt.replaceAll(\"\\\\s+\"\
    , \" \").split(\" \");\n            return Arrays.stream(words).map(String::toLowerCase).toArray(Union_ArrayList_String__int::new);\n\
    \        } else {\n            int[] words = Arrays.stream(chars).filter(Character::isLetter).toArray();\n\
    \            Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \            for (int i = 0; i < words.length; i++) {\n                result.add(i);\n\
    \            }\n            return result;\n        }\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9y6p01bs.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp9y6p01bs.java:19:\
    \ error: no suitable method found for stream(char[])\n        boolean isSpace\
    \ = Arrays.stream(chars).anyMatch(Character::isSpace);\n                     \
    \           ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n      (inference\
    \ variable T#1 has incompatible bounds\n        equality constraints: char\n \
    \       upper bounds: Object)\n    method Arrays.<T#2>stream(T#2[],int,int) is\
    \ not applicable\n      (cannot infer type-variable(s) T#2\n        (actual and\
    \ formal argument lists differ in length))\n    method Arrays.stream(int[]) is\
    \ not applicable\n      (argument mismatch; char[] cannot be converted to int[])\n\
    \    method Arrays.stream(long[]) is not applicable\n      (argument mismatch;\
    \ char[] cannot be converted to long[])\n    method Arrays.stream(double[]) is\
    \ not applicable\n      (argument mismatch; char[] cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    /tmp/tmp9y6p01bs.java:20: error: no suitable method found for stream(char[])\n\
    \        boolean isComma = Arrays.stream(chars).anyMatch(Character::isLetter);\n\
    \                                ^\n    method Arrays.<T#1>stream(T#1[]) is not\
    \ applicable\n      (inference variable T#1 has incompatible bounds\n        equality\
    \ constraints: char\n        upper bounds: Object)\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; char[] cannot be converted to int[])\n\
    \    method Arrays.stream(long[]) is not applicable\n      (argument mismatch;\
    \ char[] cannot be converted to long[])\n    method Arrays.stream(double[]) is"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        Set<String> allWords = Sets.newHashSet();\n        allWords.addAll(Arrays.asList(txt\
    \ != null ? txt.split(\" \") : Collections.<String>emptyList()));\n        allWords.addAll(Arrays.asList(txt\
    \ != null ? txt.split(\",\") : Collections.<String>emptyList()));\n        allWords.addAll(Arrays.asList(txt\
    \ != null ? txt.toLowerCase().chars().filter(Character::isLetter) : Collections.<String>emptyList()));\n\
    \        allWords.addAll(Arrays.asList(txt != null ? txt.toLowerCase().chars().filter(Character::isDigit)\
    \ : Collections.<String>emptyList()));\n        int count = 0;\n        for (String\
    \ word : allWords) {\n            if (word.matches(\"^[a-zA-Z]{2,}$\") || word.matches(\"\
    ^[0-9]{2,}$\") || word.matches(\"^[a-z]{2}\") || word.matches(\"^[a-z]{2}[0-9]{2,}$\"\
    )) {\n                res.addLast(word);\n                count++;\n         \
    \   }\n        }\n        if (count % 2 == 1) {\n            System.out.println(\"\
    Count should be odd, found \" + count);\n        } else {\n            System.out.println(\"\
    Found \" + count + \" words\");\n        }\n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe_c8guss.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpe_c8guss.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpe_c8guss.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpe_c8guss.java:18: error: cannot find symbol\n        Set<String>\
    \ allWords = Sets.newHashSet();\n                               ^\n  symbol: \
    \  variable Sets\n  location: class Problem\n/tmp/tmpe_c8guss.java:19: error:\
    \ no suitable method found for addAll(List<Object>)\n        allWords.addAll(Arrays.asList(txt\
    \ != null ? txt.split(\" \") : Collections.<String>emptyList()));\n          \
    \      ^\n    method Collection.addAll(Collection<? extends String>) is not applicable\n\
    \      (argument mismatch; inferred type does not conform to upper bound(s)\n\
    \          inferred: Object\n          upper bound(s): String,Object)\n    method\
    \ Set.addAll(Collection<? extends String>) is not applicable\n      (argument\
    \ mismatch; inferred type does not conform to upper bound(s)\n          inferred:\
    \ Object\n          upper bound(s): String,Object)\n/tmp/tmpe_c8guss.java:20:\
    \ error: no suitable method found for addAll(List<Object>)\n        allWords.addAll(Arrays.asList(txt\
    \ != null ? txt.split(\",\") : Collections.<String>emptyList()));\n          \
    \      ^\n    method Collection.addAll(Collection<? extends String>) is not applicable\n\
    \      (argument mismatch; inferred type does not conform to upper bound(s)\n\
    \          inferred: Object\n          upper bound(s): String,Object)\n    method\
    \ Set.addAll(Collection<? extends String>) is not applicable\n      (argument\
    \ mismatch; inferred type does not conf"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int split_words =\
    \ new Union_ArrayList_String__int();\n        // Write your answer here\n    \
    \    return split_words;\nreturn new Union_ArrayList_String__int();\n    }\n \
    \   public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgbd1dsk_.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpgbd1dsk_.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int split_words =\
    \ new Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpgbd1dsk_.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int split_words = new Union_ArrayList_String__int();\n\
    \                                                      ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpgbd1dsk_.java:20: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpgbd1dsk_.java:23: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpgbd1dsk_.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpgbd1dsk_.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpgbd1dsk_.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                               "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        ArrayList <String> words = new ArrayList <>();\n\
    \        ArrayList <Integer> letters = new ArrayList <>();\n        txt = txt.toLowerCase();\n\
    \        txt = txt.replaceAll(\"[\\\\s,]+\", \",\");\n        txt = txt.replaceAll(\"\
    ,+\", \",\");\n        int index = 0;\n        int length = txt.length();\n  \
    \      while (index < length) {\n            String currentWord = \"\";\n    \
    \        int currentLetter = 0;\n            do {\n                currentWord\
    \ = txt .substring ( index, index + 1 );\n                currentLetter = txt\
    \ .indexOf ( currentWord, currentWord.lastIndexOf ( currentWord.charAt ( currentLetter\
    \ - 1 ) ) - 1 );\n                if (currentWord.length() != 0) {\n         \
    \           words.add( currentWord );\n                    letters.add( currentLetter\
    \ );\n                }\n                index++;\n            } while ( index\
    \ != length );\n        }\n        int oddLetters = 0;\n        int i = 0;\n \
    \       int j = 0;\n        int k = 0;\n        while (i < words.size()) {\n \
    \           String word = words.get(i);\n            if (word.length() == 0) {\n\
    \                i++;\n                continue;\n            }\n            while\
    \ (j < letters.size() && k < (letters.size() + 1)) {\n                if (j ==\
    \ letters.get(k)) {\n                    oddLetters++;\n                    j++;\n\
    \                } else {\n                    String letter = letters.get(k);\n\
    \                    letters.set( k, letter );\n                    j++;\n   \
    \                 k++;\n                }\n            }\n            words.set(\
    \ i, \"\" );\n            letters.set( i, 0 );\n            i++;\n        }\n\
    \        return new Union_ArrayList_String__int( words, oddLetters );\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqekxco8f.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpqekxco8f.java:52:\
    \ error: incompatible types: Integer cannot be converted to String\n         \
    \           String letter = letters.get(k);\n                                \
    \               ^\n/tmp/tmpqekxco8f.java:53: error: no suitable method found for\
    \ set(int,String)\n                    letters.set( k, letter );\n           \
    \                ^\n    method List.set(int,Integer) is not applicable\n     \
    \ (argument mismatch; String cannot be converted to Integer)\n    method AbstractList.set(int,Integer)\
    \ is not applicable\n      (argument mismatch; String cannot be converted to Integer)\n\
    \    method ArrayList.set(int,Integer) is not applicable\n      (argument mismatch;\
    \ String cannot be converted to Integer)\n/tmp/tmpqekxco8f.java:62: error: cannot\
    \ find symbol\n        return new Union_ArrayList_String__int( words, oddLetters\
    \ );\n                   ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpqekxco8f.java:63: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpqekxco8f.java:66: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpqekxco8f.java:67: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpqekxco8f.java:68: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> splittedText = new ArrayList<>();\n\
    \        boolean found = false;\n        for (char ch : txt.toCharArray()) {\n\
    \            if (Character.isWhitespace(ch)) {\n                if (found) {\n\
    \                    splittedText.add(txt);\n                    found = false;\n\
    \                }\n            } else {\n                splittedText.add(String.valueOf(ch));\n\
    \                found = true;\n            }\n        }\n        if (found) {\n\
    \            splittedText.add(txt);\n        }\n        return splittedText.stream().map(s\
    \ -> s.trim()).filter(s -> !s.isEmpty()).map(String::toUpperCase)\n          \
    \      .collect(Collectors.toCollection(ArrayList::new));\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8vn2w73x.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp8vn2w73x.java:35:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp8vn2w73x.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp8vn2w73x.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp8vn2w73x.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp8vn2w73x.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp8vn2w73x.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmp8vn2w73x.java:43: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String comma = \"\";\n        int wordCount\
    \ = 0;\n        List<String> words = Arrays.asList(txt.split(\"[\\\\s,]+\"));\n\
    \        List<String> noWhite = new ArrayList<>();\n        List<String> noComma\
    \ = new ArrayList<>();\n        noWhite = words.stream().filter(word -> !word.equals(\"\
    \ \")).collect(Collectors.toList());\n        noComma = words.stream().filter(word\
    \ -> !word.equals(\",\")).collect(Collectors.toList());\n        for (String word\
    \ : noWhite) {\n            wordCount++;\n        }\n        for (String word\
    \ : noComma) {\n            wordCount++;\n        }\n        if (noWhite.size()\
    \ == noComma.size()) {\n            return wordCount;\n        }\n        return\
    \ wordCount + noWhite.size() + noComma.size(); // split on comma if comma exist,\
    \ split on space if space exist\nreturn new Union_ArrayList_String__int();\n \
    \   }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7h1u47od.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp7h1u47od.java:34:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp7h1u47od.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7h1u47od.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7h1u47od.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7h1u47od.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp7h1u47od.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmp7h1u47od.java:42: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        StringBuilder sb = new StringBuilder();\n\
    \        String[] words = txt.split(\"\\\\s+\");\n        List<StringBuilder>\
    \ results = new ArrayList<>();\n        for (String word : words) {\n        \
    \    if (word.contains(\",\")) {\n                results.add(new StringBuilder(word));\n\
    \            } else {\n                int count = 0;\n                for (char\
    \ c : word.toCharArray()) {\n                    if (Character.isLowerCase(c))\
    \ {\n                        count++;\n                    }\n               \
    \ }\n                results.add(new StringBuilder(word).insert(0, \"(\").insert(count\
    \ + 1, \")\"));\n            }\n        }\n        return results.stream().map(sb\
    \ -> new Union_ArrayList_String__int(sb)).collect(Collectors.toList());\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9y_86bd5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp9y_86bd5.java:33:\
    \ error: variable sb is already defined in method splitWords(String)\n       \
    \ return results.stream().map(sb -> new Union_ArrayList_String__int(sb)).collect(Collectors.toList());\n\
    \                                    ^\n/tmp/tmp9y_86bd5.java:33: error: cannot\
    \ find symbol\n        return results.stream().map(sb -> new Union_ArrayList_String__int(sb)).collect(Collectors.toList());\n\
    \                                              ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9y_86bd5.java:34: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp9y_86bd5.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9y_86bd5.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9y_86bd5.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp9y_86bd5.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String [] words= txt.split(\" \");\n     \
    \   Union_ArrayList_String__int wordList = new Union_ArrayList_String__int(words.length);\n\
    \        for (String word: words) {\n            wordList.add(word);\n       \
    \ }\n        return wordList;\nreturn new Union_ArrayList_String__int();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfn5c8hc7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpfn5c8hc7.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int wordList = new\
    \ Union_ArrayList_String__int(words.length);\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfn5c8hc7.java:18: error: cannot find symbol\n\
    \        Union_ArrayList_String__int wordList = new Union_ArrayList_String__int(words.length);\n\
    \                                                   ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfn5c8hc7.java:23: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpfn5c8hc7.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfn5c8hc7.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfn5c8hc7.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpfn5c8hc7.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List < String > wordList = new ArrayList <\
    \ > ();\n        Set < Integer > orderSet = new HashSet < > ();\n        int count\
    \ = 0;\n        StringBuilder sb = new StringBuilder();\n        for (int i =\
    \ 0; i < txt.length(); i++) {\n            char c = txt.charAt(i);\n         \
    \   if (Character.isWhitespace(c)) {\n                if (wordList.size() > 0)\
    \ {\n                    wordList.add(0, sb.toString());\n                   \
    \ sb = new StringBuilder();\n                }\n                continue;\n  \
    \          } else {\n                sb.append(c);\n                if (sb.length()\
    \ > 0 && sb.charAt(sb.length() - 1) == ',')\n                    wordList.add(0,\
    \ sb.toString());\n                sb = new StringBuilder();\n            }\n\
    \        }\n        if (sb.length() > 0) {\n            wordList.add(0, sb.toString());\n\
    \        }\n        for (String s: wordList) {\n            List<String> words\
    \ = Arrays.asList(s.split(\" \"));\n            System.out.println(s);\n     \
    \       orderSet.addAll(IntStream.range(0, words.size()).boxed().collect(Collectors.toSet()));\n\
    \            Set<Integer> set = new HashSet<>();\n            set.add(0);\n  \
    \          set.add(1);\n            set.add(2);\n            set.add(3);\n   \
    \         set.add(4);\n            set.add(5);\n            set.add(6);\n    \
    \        set.add(7);\n            set.add(8);\n            set.add(9);\n     \
    \       set.add(10);\n            set.add(11);\n            set.add(12);\n   \
    \         set.add(13);\n            set.add(14);\n            set.add(15);\n \
    \           set.add(16);\n            set.add(17);\n            set.add(18);\n\
    \            set.add(19);\n            set.add(20);\n            set.add(21);\n\
    \            set.add(22);\n            set.add(23);\n            set.add(24);\n\
    \            set.add(25);\n            boolean flag = false;\n            for\
    \ (int i = 0; i <= 26; i++) {\n                if (set.contains(i)) {\n      \
    \              flag = true;\n                    break;\n                }\n \
    \           }\n            if (flag) {\n                count++;\n           \
    \ } else {\n                for (int i = 0; i < 26; i++) {\n                 \
    \   if (set.contains(i)) {\n                        for (int j = 0; j < words.size();\
    \ j++) {\n                            if (words.get(j).equals(\"\")) {\n     \
    \                           words.remove(j);\n                               \
    \ count--;\n                            }\n                        }\n       \
    \             }\n                }\n            }\n        }\n        return count;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp28uuw2cc.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp28uuw2cc.java:93:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp28uuw2cc.java:96: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp28uuw2cc.java:97: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp28uuw2cc.java:98: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp28uuw2cc.java:99: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp28uuw2cc.java:100: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmp28uuw2cc.java:101: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        String[] words = txt.split(\" \");\n        for (String word : words)\
    \ {\n            result.addElement(word);\n        }\n        int len = txt.length();\n\
    \        for (int i = 0; i < len; i++) {\n            String c = Character.toLowerCase(txt.charAt(i));\n\
    \            if (c.equals(\"a\") || c.equals(\"b\") || c.equals(\"c\") || c.equals(\"\
    d\") || c.equals(\"e\") || c.equals(\"f\") || c.equals(\"g\") || c.equals(\"h\"\
    ) || c.equals(\"i\") || c.equals(\"j\") || c.equals(\"k\") || c.equals(\"l\")\
    \ || c.equals(\"m\") || c.equals(\"n\") || c.equals(\"o\") || c.equals(\"p\")\
    \ || c.equals(\"q\") || c.equals(\"r\") || c.equals(\"s\") || c.equals(\"t\")\
    \ || c.equals(\"u\") || c.equals(\"v\") || c.equals(\"w\") || c.equals(\"x\")\
    \ || c.equals(\"y\") || c.equals(\"z\")) {\n                continue;\n      \
    \      }\n            result.addElement(c.toLowerCase());\n        }\n       \
    \ return result;\nreturn new Union_ArrayList_String__int();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph4lnbc9a.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmph4lnbc9a.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmph4lnbc9a.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmph4lnbc9a.java:24: error: incompatible types:\
    \ char cannot be converted to String\n            String c = Character.toLowerCase(txt.charAt(i));\n\
    \                                            ^\n/tmp/tmph4lnbc9a.java:31: error:\
    \ cannot find symbol\nreturn new Union_ArrayList_String__int();\n           ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmph4lnbc9a.java:34:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmph4lnbc9a.java:35:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmph4lnbc9a.java:36:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmph4lnbc9a.java:37:\
    \ error: cannot find symbol"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        txt = txt.toLowerCase(); // Make the string all lower-case\n        String[]\
    \ words = txt.split(\" \");\n        // Remove spaces in beginning and end\n \
    \       for (int i = 0; i < words.length; ++i) {\n            if (words[i].startsWith(\"\
    \ \")) {\n                words[i] = words[i].substring(1);\n            }\n \
    \           if (words[i].endsWith(\" \")) {\n                words[i] = words[i].substring(0,\
    \ words[i].length() - 1);\n            }\n        }\n        // Remove commas\
    \ and spaces\n        words = Arrays.stream(words).map(s -> s.replace(\",\", \"\
    \")).toArray(String[]::new);\n        int len = words.length;\n        if (len\
    \ > 0) {\n            // Use map to remove all commas (except the last one)\n\
    \            ret.addAll(Arrays.stream(words).map(String::trim).toArray(String[]::new));\n\
    \        }\n        // Now check the rest\n        for (int i = 0; i < len; ++i)\
    \ {\n            char first = words[i].charAt(0);\n            char last = words[i].charAt(words[i].length()\
    \ - 1);\n            if (Character.isLetter(first) && Character.isLetter(last))\
    \ {\n                ret.addAll(Arrays.asList(words[i].substring(1), words[i].substring(0,\
    \ words[i].length() - 1)));\n            } else {\n                ret.addAll(Arrays.asList(words[i]));\n\
    \            }\n        }\n        return ret;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjrkngxl9.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpjrkngxl9.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpjrkngxl9.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpjrkngxl9.java:47: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpjrkngxl9.java:50: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpjrkngxl9.java:51: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpjrkngxl9.java:52: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpjrkngxl9.java:53: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int word_list = new\
    \ Union_ArrayList_String__int(txt);\n        int count = 0;\n        List<Integer>\
    \ oddWords = new ArrayList<Integer>();\n        Union_ArrayList_String__int odds_words\
    \ = new Union_ArrayList_String__int();\n        for (String s : word_list) {\n\
    \            String[] words = s.split(\" \");\n            if (words != null)\
    \ {\n                for (String word : words) {\n                    if (!oddWords.contains(word))\
    \ {\n                        oddWords.add(word);\n                    }\n    \
    \            }\n            }\n        }\n        oddWords.forEach(a -> odds_words.add(a));\n\
    \        List<Integer> evenWords = new ArrayList<Integer>();\n        for (String\
    \ s : oddWords) {\n            String word = s.substring(0,1);\n            if\
    \ (s.charAt(2) == 'a') {\n                for (String s : word_list) {\n     \
    \               if (s.contains(word)) {\n                        evenWords.add(Integer.parseInt(word));\n\
    \                    }\n                }\n            } else {\n            \
    \    evenWords.add(Integer.parseInt(word));\n            }\n        }\n      \
    \  evenWords.forEach(a -> word_list.add(a));\n        return word_list;\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnh0ievgx.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpnh0ievgx.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int word_list = new\
    \ Union_ArrayList_String__int(txt);\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpnh0ievgx.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int word_list = new Union_ArrayList_String__int(txt);\n\
    \                                                    ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpnh0ievgx.java:20: error: cannot find symbol\n\
    \        Union_ArrayList_String__int odds_words = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpnh0ievgx.java:20: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ odds_words = new Union_ArrayList_String__int();\n                          \
    \                           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpnh0ievgx.java:26: error: no suitable method\
    \ found for add(String)\n                        oddWords.add(word);\n       \
    \                         ^\n    method Collection.add(Integer) is not applicable\n\
    \      (argument mismatch; String cannot be converted to Integer)\n    method\
    \ List.add(Integer) is not applicable\n      (argument mismatch; String cannot\
    \ be converted to Integer)\n/tmp/tmpnh0ievgx.java:33: error: incompatible types:\
    \ Integer cannot be converted to String\n        for (String s : oddWords) {\n\
    \                        ^\n/tmp/tmpnh0ievgx.java:36: error: variable s is already\
    \ defined in method splitWords(String)\n                for (String s : word_list)\
    \ {\n                            ^\n/tmp/tmpnh0ievgx.java:47: error: cannot find\
    \ symbol\nreturn new Union_ArrayList_String__int();\n           ^\n  symbol: \
    \  class Union_ArrayList_String__int\n  location: c"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int res = [];\n  \
    \      int a = 0, b = 1, c = 2, d = 3, e = 4;\n        String word;\n        for(int\
    \ i=0; i<txt.length(); i++){\n            word = txt.substring(i, i+1);\n    \
    \        if(Character.isWhitespace(word.charAt(0))){\n                if(Character.isWhitespace(word.charAt(1))){\n\
    \                    res.add(txt.substring(i, i+3));\n                }\n    \
    \            else if(Character.isWhitespace(word.charAt(2))){\n              \
    \      res.add(txt.substring(i, i+4));\n                }\n            }\n   \
    \         else if(word.contains(\",\")){\n                res.add(word.substring(a,\
    \ word.length()));\n                a = b;\n                b = c;\n         \
    \       c = d;\n                d = e;\n                e = 4;\n             \
    \   i = word.length()-1;\n            }\n            else if(Character.isLowerCase(word.charAt(0))){\n\
    \                res.add(word.substring(a, word.length()));\n                a\
    \ = b;\n                b = c;\n                c = d;\n                d = e;\n\
    \                e = 4;\n                i = word.length()-1;\n            }\n\
    \            else if(Character.isUpperCase(word.charAt(0))){\n               \
    \ res.add(word.substring(a, word.length()));\n                a = b;\n       \
    \         b = c;\n                c = d;\n                d = e;\n           \
    \     e = 4;\n                i = word.length()-1;\n            }\n        }\n\
    \        if(txt.substring(i, i+1).equals(\",\")){\n            res.add(txt.substring(a,\
    \ txt.length()));\n        }\n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn02xebcu.java:17: error: illegal start of expression\n        Union_ArrayList_String__int\
    \ res = [];\n                                          ^\n/tmp/tmpn02xebcu.java:17:\
    \ error: illegal start of expression\n        Union_ArrayList_String__int res\
    \ = [];\n                                           ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // Complete this method\n        return null;\n\
    return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzaha60fg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpzaha60fg.java:19:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpzaha60fg.java:22: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzaha60fg.java:23: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzaha60fg.java:24: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzaha60fg.java:25: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpzaha60fg.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef\")).equals((Union_ArrayList_String__int(3))));\n                      \
    \                    ^\n  symbol:   method Union_ArrayList_String__int(int)\n\
    \  location: class Problem\n/tmp/tmpzaha60fg.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        String[] words = txt.split(\"\\\\s+\");\n\
    \        Set<Integer> set = new TreeSet<>();\n        for (String word : words)\
    \ {\n            String lower = word.toLowerCase();\n            int lowerInt\
    \ = Character.toUpperCase(lower.charAt(0)) - 'a' + 1;\n            set.addAll(Arrays.asList(new\
    \ Integer[] {lowerInt}));\n        }\n\n        ArrayList<Integer> sortedArray\
    \ = new ArrayList<>();\n        Collections.sort(set);\n        for (int i : set)\
    \ {\n            sortedArray.add(i);\n        }\n        int size = sortedArray.size();\n\
    \        int[] array = new int[size];\n        int index = 0;\n        for (Integer\
    \ i : sortedArray) {\n            array[index++] = i;\n        }\n        Union_ArrayList_String__int\
    \ uar = new Union_ArrayList_String__int(array);\n\n        return uar;\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7qrc7y4x.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp7qrc7y4x.java:26:\
    \ error: no suitable method found for sort(Set<Integer>)\n        Collections.sort(set);\n\
    \                   ^\n    method Collections.<T#1>sort(List<T#1>) is not applicable\n\
    \      (cannot infer type-variable(s) T#1\n        (argument mismatch; Set<Integer>\
    \ cannot be converted to List<T#1>))\n    method Collections.<T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Comparable<? super T#1> declared in method\
    \ <T#1>sort(List<T#1>)\n    T#2 extends Object declared in method <T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>)\n/tmp/tmp7qrc7y4x.java:36: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ uar = new Union_ArrayList_String__int(array);\n        ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp7qrc7y4x.java:36:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int uar = new Union_ArrayList_String__int(array);\n\
    \                                              ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp7qrc7y4x.java:39: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp7qrc7y4x.java:42: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7qrc7y4x.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (Strin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int output = new Union_ArrayList_String__int();\n\
    \n        if (txt == null || (txt.length() == 0)) {\n            return output;\n\
    \        }\n\n        int i = 0;\n\n        StringBuilder word = new StringBuilder();\n\
    \        while (i < txt.length()) {\n            char c = txt.charAt(i);\n   \
    \         if (Character.isWhitespace(c)) {\n                if (word.length()\
    \ > 0) {\n                    output.add(word.toString());\n                }\n\
    \                word = new StringBuilder();\n                i++;\n         \
    \       continue;\n            }\n\n            if (Character.isLetter(c)) {\n\
    \                word.append(c);\n            } else {\n                if (word.length()\
    \ > 0) {\n                    output.add(word.toString());\n                }\n\
    \                word = new StringBuilder();\n                output.add(Character.toLowerCase(c));\n\
    \                i++;\n                continue;\n            }\n\n          \
    \  i++;\n        }\n        if (word.length() > 0) {\n            output.add(word.toString());\n\
    \        }\n\n        return output;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgm_hkfpe.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpgm_hkfpe.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int output = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpgm_hkfpe.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int output = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpgm_hkfpe.java:56: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpgm_hkfpe.java:59: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpgm_hkfpe.java:60: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpgm_hkfpe.java:61: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpgm_hkfpe.java:62: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \           "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__int(new Union_ArrayList_String__int(new\
    \ Union_ArrayList_String__int(new Union_ArrayList_String__\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqowv0utv.java:18: error: '(' or '[' expected\nreturn new Union_ArrayList_String__int();\n\
    ^\n/tmp/tmpqowv0utv.java:18: error: ')' expected\nreturn new Union_ArrayList_String__int();\n\
    \      ^\n/tmp/tmpqowv0utv.java:18: error: ')' expected\nreturn new Union_ArrayList_String__int();\n\
    \          ^\n/tmp/tmpqowv0utv.java:18: error: ')' expected\nreturn new Union_ArrayList_String__int();\n\
    \                                      ^\n/tmp/tmpqowv0utv.java:18: error: ')'\
    \ expected\nreturn new Union_ArrayList_String__int();\n                      \
    \                  ^\n/tmp/tmpqowv0utv.java:18: error: ')' expected\nreturn new\
    \ Union_ArrayList_String__int();\n                                         ^\n\
    /tmp/tmpqowv0utv.java:19: error: ')' expected\n    }\n     ^\n/tmp/tmpqowv0utv.java:20:\
    \ error: ')' expected\n    public static void main(String[] args) {\n        \
    \  ^\n/tmp/tmpqowv0utv.java:20: error: ')' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmpqowv0utv.java:20: error: ')' expected\n\
    \    public static void main(String[] args) {\n                      ^\n/tmp/tmpqowv0utv.java:20:\
    \ error: ')' expected\n    public static void main(String[] args) {\n        \
    \                   ^\n/tmp/tmpqowv0utv.java:20: error: ')' expected\n    public\
    \ static void main(String[] args) {\n                            ^\n/tmp/tmpqowv0utv.java:20:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                                   ^\n/tmp/tmpqowv0utv.java:20: error: ')'\
    \ expected\n    public static void main(String[] args) {\n                   \
    \                 ^\n/tmp/tmpqowv0utv.java:21: error: as of release 1.4, 'assert'\
    \ is a keyword, and may not be used as an identifier\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    ^\n  (use -source 1.3 or lower to use 'assert'\
    \ as an identifier)\n/tmp/tmpqowv0utv.java:21: error: <identifier> expected\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int(Union_ArrayList_String__int.getEmpty());\n\
    \        Union_ArrayList_String__int currentWord = new Union_ArrayList_String__int(Union_ArrayList_String__int.getEmpty());\n\
    \        char[] charArray = txt.toCharArray();\n        String currentStr = \"\
    \";\n        char currentChar;\n        int currentNumber = 0;\n        for (int\
    \ i = 0; i < charArray.length; i++) {\n            currentChar = charArray[i];\n\
    \            if (Character.isWhitespace(charArray[i])) {\n                currentWord.add(currentStr);\n\
    \                currentStr = \"\";\n            } else if (Character.isLetter(charArray[i]))\
    \ {\n                currentStr += charArray[i];\n                if (Character.isLowerCase(charArray[i]))\
    \ {\n                    currentNumber++;\n                } else if (Character.isUpperCase(charArray[i]))\
    \ {\n                    currentNumber = currentNumber + 2;\n                }\n\
    \            } else {\n                currentStr += charArray[i];\n         \
    \   }\n            if (currentStr.isEmpty()) {\n                result.add(currentWord);\n\
    \                currentWord = new Union_ArrayList_String__int(Union_ArrayList_String__int.getEmpty());\n\
    \                currentStr = \"\";\n            }\n        }\n        result.add(currentWord);\n\
    \        return result;\nreturn new Union_ArrayList_String__int();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxz5_trfw.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpxz5_trfw.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int(Union_ArrayList_String__int.getEmpty());\n     \
    \   ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpxz5_trfw.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ result = new Union_ArrayList_String__int(Union_ArrayList_String__int.getEmpty());\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpxz5_trfw.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int(Union_ArrayList_String__int.getEmpty());\n\
    \                                                                            \
    \ ^\n  symbol:   variable Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpxz5_trfw.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ currentWord = new Union_ArrayList_String__int(Union_ArrayList_String__int.getEmpty());\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpxz5_trfw.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ currentWord = new Union_ArrayList_String__int(Union_ArrayList_String__int.getEmpty());\n\
    \                                                      ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpxz5_trfw.java:18: error: cannot find symbol\n\
    \        Union_ArrayList_String__int currentWord = new Union_ArrayList_String__int(Union_ArrayList_String__int.getEmpty());\n\
    \                                                                            \
    \      ^\n  symbol:   variable Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpxz5_trfw.java:40: error: cannot find symbol\n             \
    \   cu"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<String> list = txt.split(\"\\\\W+\");\n\
    \        Union_ArrayList_String__int retVal = new Union_ArrayList_String__int(0,\
    \ 0);\n        for (String s: list) {\n            Optional<String> os = Optional.ofNullable(s);\n\
    \            if (!os.isPresent()) {\n                continue;\n            }\n\
    \            retVal.elements[retVal.index++] = new Union_ArrayList_String__int(os.get().toLowerCase(),\n\
    \                    retVal.index == 0 ? -1 : retVal.elements[retVal.index - 1].index);\n\
    \        }\n        return retVal;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7zacvbxm.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp7zacvbxm.java:17:\
    \ error: incompatible types: String[] cannot be converted to List<String>\n  \
    \      List<String> list = txt.split(\"\\\\W+\");\n                          \
    \           ^\n/tmp/tmp7zacvbxm.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ retVal = new Union_ArrayList_String__int(0, 0);\n        ^\n  symbol:   class\
    \ Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp7zacvbxm.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int retVal = new\
    \ Union_ArrayList_String__int(0, 0);\n                                       \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7zacvbxm.java:24: error: cannot find symbol\n            retVal.elements[retVal.index++]\
    \ = new Union_ArrayList_String__int(os.get().toLowerCase(),\n                \
    \                                  ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp7zacvbxm.java:28: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp7zacvbxm.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7zacvbxm.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp7zacvbxm.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int splitList = new\
    \ Union_ArrayList_String__int();\n        txt = txt.toLowerCase();\n        for\
    \ (String eachWord : txt.split(\"\\\\s\")) {\n            splitList.add(eachWord);\n\
    \        }\n        return splitList;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzbpexp1s.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpzbpexp1s.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int splitList = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpzbpexp1s.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int splitList = new Union_ArrayList_String__int();\n\
    \                                                    ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpzbpexp1s.java:23: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpzbpexp1s.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzbpexp1s.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzbpexp1s.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpzbpexp1s.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        txt = txt.toLowerCase().trim();\n        String[] words = txt.split(\"\
    \ \");\n        for (String w : words) {\n            ret.addLast(w);\n      \
    \  }\n        int i = 0;\n        while (i < ret.size()) {\n            String\
    \ s = ret.get(i);\n            if (i == 0 && Character.isUpperCase(s.charAt(0))\
    \ && ret.get(i - 1).equalsIgnoreCase(\"a\") && ret.get(i - 2).equalsIgnoreCase(\"\
    b\") && ret.get(i - 3).equalsIgnoreCase(\"c\") && ret.get(i - 4).equalsIgnoreCase(\"\
    d\") && ret.get(i - 5).equalsIgnoreCase(\"e\") && ret.get(i - 6).equalsIgnoreCase(\"\
    f\")) {\n                ret.remove(i - 1);\n                ret.remove(i - 2);\n\
    \                ret.remove(i - 3);\n                ret.remove(i - 4);\n    \
    \            ret.remove(i - 5);\n                ret.remove(i - 6);\n        \
    \    } else if (i == 0 && Character.isUpperCase(s.charAt(0)) && ret.get(i - 1).equalsIgnoreCase(\"\
    a\") && ret.get(i - 2).equalsIgnoreCase(\"b\") && ret.get(i - 3).equalsIgnoreCase(\"\
    c\") && ret.get(i - 4).equalsIgnoreCase(\"d\") && ret.get(i - 5).equalsIgnoreCase(\"\
    e\") && ret.get(i - 6).equalsIgnoreCase(\"f\") && Character.isLowerCase(s.charAt(1)))\
    \ {\n                ret.remove(i - 1);\n                ret.remove(i - 2);\n\
    \                ret.remove(i - 3);\n                ret.remove(i - 4);\n    \
    \            ret.remove(i - 5);\n                ret.remove(i - 6);\n        \
    \    } else if (i == 0 && Character.isLowerCase(s.charAt(0)) && ret.get(i - 1).equalsIgnoreCase(\"\
    a\") && ret.get(i - 2).equalsIgnoreCase(\"b\") && ret.get(i - 3).equalsIgnoreCase(\"\
    c\") && ret.get(i - 4).equalsIgnoreCase(\"d\") && ret.get(i - 5).equalsIgnoreCase(\"\
    e\") && ret.get(i - 6).equalsIgnoreCase(\"f\") && Character.isLowerCase(s.charAt(1)))\
    \ {\n                ret.remove(i - 1);\n                ret.remove(i - 2);\n\
    \                ret.remove(i - 3);\n                ret.remove(i - 4);\n    \
    \            ret.remove(i - 5);\n                ret.remove(i - 6);\n        \
    \    } else if (i == 0 && Character.isUpperCase(s.charAt(0)) && ret.get(i - 1).equalsIgnoreCase(\"\
    a\") && ret.get(i - 2).equalsIgnoreCase(\"b\") && ret.get(i - 3).equalsIgnoreCase(\"\
    c\") && ret.get(i - 4).equalsIgnoreCase\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5gwmynm6.java:47: error: ')' expected\n            } else if (i\
    \ == 0 && Character.isUpperCase(s.charAt(0)) && ret.get(i - 1).equalsIgnoreCase(\"\
    a\") && ret.get(i - 2).equalsIgnoreCase(\"b\") && ret.get(i - 3).equalsIgnoreCase(\"\
    c\") && ret.get(i - 4).equalsIgnoreCase\n                                    \
    \                                                                            \
    \                                                                            \
    \                                  ^\n/tmp/tmp5gwmynm6.java:50: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n/tmp/tmp5gwmynm6.java:50:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmp5gwmynm6.java:50: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmp5gwmynm6.java:50: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmp5gwmynm6.java:50: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmp5gwmynm6.java:61: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int len = 0;\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n        for(String s:txt.split(\"\
    \ \")){\n            ret.push(s);\n            len+=s.length();\n        }\n \
    \       String w=ret.lastElement();\n        ret.deleteLast();\n        ret.deleteFirst();\n\
    \        int l=w;\n        if(len>26){\n            len-=1;\n        }\n     \
    \   for(int i=0;i<=len;i++){\n            if(w.charAt(i)>='a' && w.charAt(i)<='z'){\n\
    \                l=i+1;\n                break;\n            }\n        }\n  \
    \      ret.push(w);\n        ret.push(w);\n        return ret;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdymdm93t.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpdymdm93t.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ret = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpdymdm93t.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ret = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpdymdm93t.java:26: error: incompatible types: String cannot\
    \ be converted to int\n        int l=w;\n              ^\n/tmp/tmpdymdm93t.java:39:\
    \ error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n     \
    \      ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmpdymdm93t.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpdymdm93t.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpdymdm93t.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpdymdm93t.java:45: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        int cnt = 0;\n        List<String> result\
    \ = new ArrayList<String>();\n        Set<String> set = new HashSet<String>();\n\
    \        Set<Integer> set2 = new HashSet<Integer>();\n        for (int i = 0;\
    \ i < txt.length(); i++) {\n            char ch = txt.charAt(i);\n           \
    \ if (Character.isWhitespace(ch)) {\n                continue;\n            }\
    \ else {\n                String str = String.valueOf(ch);\n                set.add(str);\n\
    \            }\n        }\n        for (String st : set) {\n            String\
    \ st2 = st.replaceAll(\"([a-z]+)\", \"\");\n            int j = set2.size();\n\
    \            for (String st3 : set) {\n                if (st3.equals(st2)) {\n\
    \                    set2.add(j);\n                }\n            }\n        }\n\
    \        int cnt1 = 0;\n        for (int i = 1; i < set2.size(); i++) {\n    \
    \        int cnt = 0;\n            for (int j = 0; j < i; j++) {\n           \
    \     int c = (set2.get(j) + set2.get(j + 1)) / 2;\n                if (set2.get(j)\
    \ < set2.get(j + 1)) {\n                    c = set2.get(j);\n               \
    \ }\n                cnt += c;\n            }\n            cnt1 = Math.min(cnt1,\
    \ cnt);\n        }\n        for (int i = 0; i < set2.size(); i++) {\n        \
    \    int cnt = 0, cnt2 = 0;\n            for (int j = i; j < set2.size(); j++)\
    \ {\n                int c = (set2.get(j) + set2.get(j + 1)) / 2;\n          \
    \      if (set2.get(j) < set2.get(j + 1)) {\n                    c = set2.get(j);\n\
    \                }\n                cnt += c;\n                if (set2.get(j)\
    \ == set2.get(j + 1)) {\n                    cnt2 += c;\n                }\n \
    \           }\n            if (cnt2 == 0) {\n                result.add(set2.get(i));\n\
    \            } else {\n                cnt2 = Math.min(cnt2, cnt);\n         \
    \       if (cnt == 0) {\n                    int c = (set2.get(i) + set2.get(set2.size()\
    \ - 1)) / 2;\n                    if (set2.get(i) < set2.get(set2.size() - 1))\
    \ {\n                        c = set2.get(i);\n                    }\n       \
    \             result.add(set2.get(i) + \", \" + set2.get(set2.size() - 1));\n\
    \                    result.add(set2.get(set2.size() - 1) + \", \" + set2.get(i));\n\
    \                    result.add(set2.get(i) + \", \" + set2.get(i));\n       \
    \             result.add(set2.get(i) + \", \" + set2.get(set2.size() - 1));\n\
    \                    result.add(set2.get(set2.size() - 1) + \", \" + set2.get(i));\n\
    \                    result.add(set2.get(i));\n                } else {\n    \
    \                result.add(set2.get(i) + \", \nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqu7ndopu.java:79: error: unclosed string literal\n            \
    \        result.add(set2.get(i) + \", \n                                     \
    \        ^\n/tmp/tmpqu7ndopu.java:79: error: ';' expected\n                  \
    \  result.add(set2.get(i) + \", \n                                           \
    \     ^\n/tmp/tmpqu7ndopu.java:82: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpqu7ndopu.java:82: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmpqu7ndopu.java:82: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmpqu7ndopu.java:82: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmpqu7ndopu.java:82: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmpqu7ndopu.java:93:\
    \ error: reached end of file while parsing\n}\n ^\n/tmp/tmpqu7ndopu.java:94: error:\
    \ reached end of file while parsing\n9 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        // write your code here\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n        int count = 0;\n        for\
    \ (int i = 0; i < txt.length(); i++) {\n            if (txt.charAt(i) == ' ')\
    \ {\n                res.add(txt.substring(count + 1, i));\n                count\
    \ = i;\n            } else {\n                res.add(txt.substring(count, i));\n\
    \            }\n        }\n        return res;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp50n38uza.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp50n38uza.java:18:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int res = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp50n38uza.java:18: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ res = new Union_ArrayList_String__int();\n                                 \
    \             ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp50n38uza.java:29: error: cannot find symbol\nreturn new Union_ArrayList_String__int();\n\
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp50n38uza.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp50n38uza.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp50n38uza.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp50n38uza.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \        ArrayList<String> wordList = new ArrayList<>();\n        for (int i =\
    \ 0; i < txt.length(); i++) {\n            char c = txt.charAt(i);\n         \
    \   if (c <= ' ' || Character.isWhitespace(c)) {\n                wordList.add(txt.substring(i));\n\
    \                result.add(txt);\n            } else {\n                wordList.add(txt.substring(i));\n\
    \                result.add(txt.substring(i).split(\",\")[0]);\n            }\n\
    \        }\n        return result;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcdd60938.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpcdd60938.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int result = new\
    \ Union_ArrayList_String__int();\n        ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpcdd60938.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__int result = new Union_ArrayList_String__int();\n\
    \                                                 ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpcdd60938.java:30: error: cannot find symbol\n\
    return new Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpcdd60938.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcdd60938.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcdd60938.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpcdd60938.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \           "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        ArrayList<String> split = new ArrayList<String>();\n        ArrayList<Character>\
    \ splitChar = new ArrayList<Character>();\n        char character;\n        ArrayList<Character>\
    \ splitChar2 = new ArrayList<Character>();\n        int length = 0;\n        int\
    \ count = 0;\n        boolean flag = false;\n        for (character : txt.toCharArray())\
    \ {\n            if (character == ' ') {\n                splitChar.add(character);\n\
    \                splitChar2.clear();\n                splitChar2.addAll(splitChar);\n\
    \                splitChar.clear();\n            } else if (character == ',')\
    \ {\n                splitChar2.clear();\n                splitChar2.addAll(splitChar);\n\
    \                splitChar.clear();\n            } else {\n                splitChar2.add(character);\n\
    \            }\n            length++;\n        }\n        Iterator<Character>\
    \ it = splitChar2.iterator();\n        while (it.hasNext()) {\n            character\
    \ = (Character) it.next();\n            if (character == 'a') {\n            \
    \    count++;\n                flag = true;\n            } else {\n          \
    \      if (count % 2 == 1) {\n                    if (flag) {\n              \
    \          result.add(new String(splitChar2));\n                        result.add(txt.substring(length));\n\
    \                        length = 0;\n                        flag = false;\n\
    \                        count = 0;\n                    } else {\n          \
    \              result.add(new String(splitChar2));\n                    }\n  \
    \              }\n                count = 0;\n            }\n        }\n     \
    \   if (result.size() > 0) {\n            result.add(new String(splitChar2));\n\
    \        }\n        return result;\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpppasq6z0.java:25: error: bad initializer for for-loop\n       \
    \ for (character : txt.toCharArray()) {\n             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        char delimiter = ',';\n        boolean whitespaceExists\
    \ = false;\n        boolean commaExists = false;\n        String[] split = new\
    \ String[]{\"\", \"\"};\n        if (txt.length() == 0) {\n            return\
    \ new Union_ArrayList_String__int(new String[]{\"\"});\n        }\n        for\
    \ (int i = 0; i < txt.length(); i++) {\n            if (txt.charAt(i) == ' ')\
    \ {\n                whitespaceExists = true;\n            } else {\n        \
    \        whitespaceExists = false;\n            }\n            if (txt.charAt(i)\
    \ == ',') {\n                commaExists = true;\n            } else {\n     \
    \           commaExists = false;\n            }\n        }\n        int lowerCaseLetterCount\
    \ = 0;\n        if (whitespaceExists) {\n            split = txt.split(\" \");\n\
    \            for (int i = 0; i < split.length; i++) {\n                if (split[i].length()\
    \ > 0 && split[i][0].length() > 1) {\n                    lowerCaseLetterCount\
    \ += 1;\n                    System.out.println(split[i]);\n                }\n\
    \            }\n        } else {\n            split = txt.split(\",\");\n    \
    \        for (int i = 0; i < split.length; i++) {\n                if (split[i].length()\
    \ > 0 && split[i][0].length() > 1) {\n                    lowerCaseLetterCount\
    \ += 1;\n                    System.out.println(split[i]);\n                }\n\
    \            }\n        }\n        if (commaExists) {\n            split = txt.split(\"\
    ,\");\n            int count = 0;\n            for (String word : split) {\n \
    \               if (word.length() > 0 && word[0].length() > 1) {\n           \
    \         lowerCaseLetterCount += 1;\n                    System.out.println(word);\n\
    \                    count++;\n                }\n            }\n            if\
    \ (count % 2 == 0) {\n                lowerCaseLetterCount += 1;\n           \
    \ }\n        }\n        return new Union_ArrayList_String__int(split);\nreturn\
    \ new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi2tf3yh5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmpi2tf3yh5.java:22:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__int(new\
    \ String[]{\"\"});\n                       ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpi2tf3yh5.java:40: error: array required, but\
    \ String found\n                if (split[i].length() > 0 && split[i][0].length()\
    \ > 1) {\n                                                     ^\n/tmp/tmpi2tf3yh5.java:48:\
    \ error: array required, but String found\n                if (split[i].length()\
    \ > 0 && split[i][0].length() > 1) {\n                                       \
    \              ^\n/tmp/tmpi2tf3yh5.java:58: error: array required, but String\
    \ found\n                if (word.length() > 0 && word[0].length() > 1) {\n  \
    \                                           ^\n/tmp/tmpi2tf3yh5.java:68: error:\
    \ cannot find symbol\n        return new Union_ArrayList_String__int(split);\n\
    \                   ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmpi2tf3yh5.java:69: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmpi2tf3yh5.java:72: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpi2tf3yh5.java:73: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmpi2tf3yh5.java:74: error: cannot find "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        List<Integer> letterNums = new ArrayList<>();\n\
    \        String[] words = txt.split(\"\\\\s+\");\n        for (String word : words)\
    \ {\n            word = word.replaceAll(\"[^A-Za-z]+\", \"\");\n            if\
    \ (word.isEmpty()) {\n                continue;\n            }\n            int\
    \ numLetters = 0;\n            for (char letter : word.toCharArray()) {\n    \
    \            if (Character.isLetter(letter)) {\n                    numLetters++;\n\
    \                }\n            }\n            if (numLetters % 2 == 1) {\n  \
    \              letterNums.add(numLetters);\n            }\n        }\n       \
    \ return letterNums.stream().reduce(new Union_ArrayList_String__int(), (sum, current)\
    \ -> sum.add(current), Integer::sum);\nreturn new Union_ArrayList_String__int();\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp58ntayfb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp58ntayfb.java:34:\
    \ error: cannot find symbol\n        return letterNums.stream().reduce(new Union_ArrayList_String__int(),\
    \ (sum, current) -> sum.add(current), Integer::sum);\n                       \
    \                       ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp58ntayfb.java:35: error: cannot find symbol\nreturn new\
    \ Union_ArrayList_String__int();\n           ^\n  symbol:   class Union_ArrayList_String__int\n\
    \  location: class Problem\n/tmp/tmp58ntayfb.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp58ntayfb.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp58ntayfb.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp58ntayfb.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__int\n  location:\
    \ class Problem\n/tmp/tmp58ntayfb.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    abcdef"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
    \ splitWords(String txt) {\n        Union_ArrayList_String__int ua = new Union_ArrayList_String__int();\n\
    \        List<String> words = Arrays.stream(txt.split(\" \")).\n             \
    \   filter(w -> w.length() > 0).\n                collect(Collectors.toList());\n\
    \        List<Integer> chars = Arrays.stream(txt.split(\"\")).map(String::chars).flatMap(c\
    \ -> Arrays.stream(c).boxed().collect(Collectors.toList())).boxed().collect(Collectors.toList());\n\
    \        chars.stream().forEach(e -> ua.add(e));\n        return ua;\nreturn new\
    \ Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4x12qjfy.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__int splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n/tmp/tmp4x12qjfy.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__int ua = new Union_ArrayList_String__int();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__int\n  location: class Problem\n\
    /tmp/tmp4x12qjfy.java:17: error: cannot find symbol\n        Union_ArrayList_String__int\
    \ ua = new Union_ArrayList_String__int();\n                                  \
    \           ^\n  symbol:   class Union_ArrayList_String__int\n  location: class\
    \ Problem\n/tmp/tmp4x12qjfy.java:21: error: no suitable method found for stream(IntStream)\n\
    \        List<Integer> chars = Arrays.stream(txt.split(\"\")).map(String::chars).flatMap(c\
    \ -> Arrays.stream(c).boxed().collect(Collectors.toList())).boxed().collect(Collectors.toList());\n\
    \                                                                            \
    \                     ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n\
    \      (cannot infer type-variable(s) T#1\n        (argument mismatch; IntStream\
    \ cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; IntStream cannot be converted to\
    \ int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; IntStream cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; IntStream cannot be converted to\
    \ double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    /tmp/tmp4x12qjfy.java:21: error: cannot find symbol\n        List<Integer> chars\
    \ = Arrays.stream(txt.split(\"\")).map(String::chars).flatMap(c -> Arrays.stream(c).b"
  exit_code: 1
  status: SyntaxError

name: HumanEval_122_add_elements
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a non-empty array of integers arr and an integer k,\
  \ return\n    // the sum of the elements with at most two digits from the first\
  \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
  \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
  \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static int addElements(ArrayList<Integer>\
  \ arr, int k) {\n"
tests: "return 0;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)-2, (int)-3, (int)41, (int)57, (int)76,\
  \ (int)87, (int)88, (int)99))), (3)) == (-4));\n    assert(addElements((new ArrayList<Integer>(Arrays.asList((int)111,\
  \ (int)121, (int)3, (int)4000, (int)5, (int)6))), (2)) == (0));\n    assert(addElements((new\
  \ ArrayList<Integer>(Arrays.asList((int)11, (int)21, (int)3, (int)90, (int)5, (int)6,\
  \ (int)7, (int)8, (int)9))), (4)) == (125));\n    assert(addElements((new ArrayList<Integer>(Arrays.asList((int)111,\
  \ (int)21, (int)3, (int)4000, (int)5, (int)6, (int)7, (int)8, (int)9))), (4)) ==\
  \ (24));\n    assert(addElements((new ArrayList<Integer>(Arrays.asList((int)1))),\
  \ (1)) == (1));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

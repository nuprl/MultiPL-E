language: java
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a<b) return greatestCommonDivisor(b,a%b);\n        return (b%a<0)?greatestCommonDivisor(a,b%a):\
    \ (b%a==0)?a: b%a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4kcf3q9s.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return greatest_common_divisor(a, b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7mlf83wa.java:15: error: cannot find symbol\n        return greatest_common_divisor(a,\
    \ b);\n               ^\n  symbol:   method greatest_common_divisor(int,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a%b == 0) return b;\n        return greatestCommonDivisor(b,a%b);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a * b / greatestCommonDivisor(a, b + 1);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpqkq0_qzi.java:15)\n\tat Problem."
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a < b? greatestCommonDivisor(b, a) : gcd(a, b);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4whftr34.java:15: error: cannot find symbol\n        return a <\
    \ b? greatestCommonDivisor(b, a) : gcd(a, b);\n                              \
    \                      ^\n  symbol:   method gcd(int,int)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < 0)\n            a *= -1;\n        if (b < 0)\n            b *=\
    \ -1;\n        int r1 = a * b;\n        int r2 = Math.abs(a) * Math.abs(b);\n\
    \        int i = 1;\n        while (r1 % r2 != 0)\n            r2 *= i++;\n  \
    \      return r1 / r2;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg6n7a8x.java:28)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int result = 1;\n        while (a != 0) {\n            if (a > b) {\n\
    \                result = a;\n                a = b;\n            }\n        \
    \    int temp = a;\n            a = b;\n            b = temp / b;\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmp7afvvezm.java:23)\n\tat Problem.main(tmp7afvvezm.java:28)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        while (b != 0) {\n            if (a % b == 0) {\n\
    \                gcd = b;\n                break;\n            }\n           \
    \ gcd = b; // Found one divisor\n            b--; // Go back\n        }\n    \
    \    return gcd;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsi1zmoqc.java:27)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Find GCD of two numbers a and b\n        int GCD = a;\n        while\
    \ (b != 0) {\n            GCD = GCD * b % a;\n            b /= a;\n        }\n\
    \        return GCD;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmolbhsjj.java:24)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) return a;\n        return greatestCommonDivisor(b, a % b);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if ( b == 0 )\n            return a;\n        else\n            return\
    \ greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b > 0) {\n            int r = a % b;\n            a = b;\n   \
    \         b = r;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a%b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a==0 || b==0) return 0;\n        return greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp907hl4wt.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Write code here\n        if (b == 0)\n            return a;\n    \
    \    else\n            return greatestCommonDivisor(b, a % b);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Math.abs((a * b) % (Math.min(a, b)));\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx9s5l6d9.java:18)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0)\n            return b;\n        if (b == 0)\n           \
    \ return a;\n        if ((b == 1) || ((a % b) == 0))\n            return a;\n\
    \        return greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntvjd5f.java:24)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a==0) return b;\n        if (b==0) return a;\n        if (a > b)\
    \ {\n            return greatestCommonDivisor(b, a % b);\n        }\n        return\
    \ greatestCommonDivisor(a % b, b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmp133006jt.java:20)\n\tat Problem."
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int r = a % b;\n            a = b;\n  \
    \          b = r;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b)\n            swap(a, b);\n        while (b != 0) {\n     \
    \       int t = b;\n            b = a % b;\n            a = t;\n        }\n  \
    \      return a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprtvoqra3.java:16: error: cannot find symbol\n            swap(a,\
    \ b);\n            ^\n  symbol:   method swap(int,int)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0) {\n            int tmp = b;\n            b = a % b;\n\
    \            a = tmp;\n        }\n        return b;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmpqchhufos.java:17)\n\tat Problem.main(tmpqchhufos.java:23)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a%b == 0)\n            return b;\n        else\n            return\
    \ greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Write your code here\n        return Integer.gcd(a, b);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk4j8pis0.java:16: error: cannot find symbol\n        return Integer.gcd(a,\
    \ b);\n                      ^\n  symbol:   method gcd(int,int)\n  location: class\
    \ Integer\n1 error\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b ? greatestCommonDivisor(b, a % b) : a;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkp47sq8x.java:15: error: incompatible types: int cannot be converted\
    \ to boolean\n        return b ? greatestCommonDivisor(b, a % b) : a;\n      \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int c = a % b;\n        while (c != 0) {\n            a = b;\n      \
    \      b = c;\n            c = a % b;\n        }\n        return b;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0) {\n            int remainder = a % b;\n            if\
    \ (remainder != 0) {\n                b = remainder;\n            } else {\n \
    \               return b;\n            }\n            a = a - b;\n        }\n\
    \        return a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssc1uwny.java:27)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a * b == 0) {\n            return 1;\n        }\n        return greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp90b3eg5.java:22)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b ? greatestCommonDivisor(b, a % b) : a;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkp47sq8x.java:15: error: incompatible types: int cannot be converted\
    \ to boolean\n        return b ? greatestCommonDivisor(b, a % b) : a;\n      \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd;\n        do {\n            gcd = (a % b);\n            if (gcd\
    \ == 0)\n                a = b;\n            else\n                b = gcd;\n\
    \        } while (a != 1);\n        return b;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011160
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Write your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdtlb204c.java:19)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        while (b != 0) {\n            int t = b;\n    \
    \        while (t != 0) {\n                if (a % t == 0) {\n               \
    \     gcd = t;\n                    break;\n                }\n              \
    \  t /= 10;\n            }\n            b /= 10;\n        }\n        return gcd;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiftcrqlk.java:31)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return (b == 0) ? a : greatestCommonDivisor(b, a % b);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a * b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        int greatest_common_divisor\
    \ = greatestCommonDivisor(b, a%b);\n        return greatest_common_divisor ==\
    \ 0 ? a : greatest_common_divisor;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a % b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv82ft3gt.java:18)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Initialize result to 1\n        int result = 1;\n\n        // If b\
    \ is zero, return result immediately\n        if (b == 0) {\n            return\
    \ result;\n        }\n\n        // Use Euclid's Algorithm to compute the greatest\
    \ common divisor of a and b\n        // https://en.wikipedia.org/wiki/Greatest_common_divisor#Algorithm\n\
    \        while (a % b != 0) {\n            // If there is a remainder, subtract\
    \ it\n            if (a % b != 0) {\n                b = a % b;\n            }\
    \ else {\n                a = 0;\n            }\n\n            // Update result\n\
    \            result = b;\n        }\n\n        // Return the result\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmx36y7vb.java:41)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        if (b == 0)\
    \ {\n            return a;\n        }\n\n        // If they differ in any way,\
    \ the answer is one.\n        if ((a % b) == 0) {\n            return 1;\n   \
    \     }\n        // If one is a factor of the other,\n        if ((b / a) >= 1)\
    \ {\n            return greatestCommonDivisor(b, a % b);\n        }\n        return\
    \ greatestCommonDivisor(a, b % a);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\
    \tat Problem.greatestCommonDivisor(tmp9vb3ytep.java:30)\n\tat Problem."
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int d = 1;\n        while (b > 0) {\n            int rem = a % b;\n \
    \           if (rem == 0)\n                d = b;\n            a = b;\n      \
    \      b = rem;\n        }\n        return d;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int result = 0;\n        while (b != 0) {\n            int temp = a;\n\
    \            a = b;\n            b = temp % b;\n            result++;\n      \
    \  }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnnc_y4y0.java:25)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a%b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int n = Math.abs(a) > Math.abs(b) ? a : b;\n        int rem = n % b;\n\
    \        if (rem == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b,\
    \ rem);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7uqksiv_.java:23)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Write your code here\n        if (a<b){\n            return greatestCommonDivisor(b,\
    \ a);\n        }\n        int remainder, i;\n        remainder = a%b;\n      \
    \  for(i=a; i>b; i=i-remainder){\n            remainder = remainder%i;\n     \
    \   }\n        return remainder;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnbhj_7c6.java:30)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a%b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Math.max(a, b) % Math.min(a, b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps49w4_pb.java:21)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        else\n            return\
    \ greatestCommonDivisor(b, a%b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        for (int i = b; i > 0; --i) {\n            if (a\
    \ % i == 0) {\n                gcd = i;\n            }\n        }\n        return\
    \ gcd;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz66i003m.java:25)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if(b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        while (b != 0) {\n            int rem = a % b;\n\
    \            a = b;\n            b = rem;\n            gcd++;\n        }\n   \
    \     return gcd;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0caa4mi9.java:25)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a%b == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (true) {\n            if (b == 0)\n                return a;\n\
    \            int temp = a;\n            a = b;\n            b = temp % b;\n  \
    \      }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while(a != 0 && b != 0) {\n            int rem = a % b;\n           \
    \ a = b;\n            b = rem;\n        }\n        return a;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        Stack<Integer> stack = new Stack<>();\n\n        // First check if a\
    \ and b are both non-negative\n        if (a < 0 || b < 0) {\n            return\
    \ -1;\n        }\n\n        // Find the lowest common multiple of the two\n  \
    \      while (b != 0) {\n            if (a > b) {\n                a = a - b;\n\
    \            } else {\n                b = b - a;\n            }\n           \
    \ stack.push(b);\n        }\n\n        // If a was 0 and b is positive, a is the\
    \ highest common multiple\n        if (a * 2 > 0 && stack.peek() > 0) {\n    \
    \        a = stack.peek();\n        }\n\n        return a;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0) {\n            int r1 = a % b;\n            int r2 = b\
    \ % a;\n            if (r1 == r2) {\n                return r1;\n            }\n\
    \            a = r1;\n            b = r2;\n        }\n        return a;\n}\n \
    \   public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppr61cr7b.java:27)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int r = a % b;\n        if (b == 0) {\n            return r;\n      \
    \  }\n        else{\n            return greatestCommonDivisor(b, r);\n       \
    \ }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmpzmybyt83.java:15)\n\tat Problem.greatestCommonDivisor(tmpzmybyt83.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpzmybyt83.java:20)\n\tat Problem.greatestCommonDivisor(tmpzmybyt83.java:20)\n\
    \tat Problem.main(tmpzmybyt83.java:24)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) return a;\n        return greatestCommonDivisor(b, a % b);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a%b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (true) {\n            if (b == 0)\n                return a;\n\
    \            int tmp = a;\n            a = b;\n            b = tmp % b;\n    \
    \    }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        else {\n   \
    \         return greatestCommonDivisor(b, a%b);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a<0)\n            return 0;\n        else if (b<0)\n            return\
    \ 0;\n        else if (a==0 && b==0)\n            return 1;\n        else if (b==0)\n\
    \            return a;\n        else if (a==0)\n            return b;\n      \
    \  else \n            return greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int t = b;\n            b = a % b;\n  \
    \          a = t;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        return greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int count = 0;\n        if (a < b) {\n            count++;\n        \
    \    a %= b;\n        }\n        if (a < b && b > 0) {\n            count++;\n\
    \            b %= a;\n        }\n        while (a != 0) {\n            count++;\n\
    \            a /= b;\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011161
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int c;\n        while (b > 0) {\n            c = a % b;\n           \
    \ a = b;\n            b = c;\n        }\n        return a;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        return greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0)\n            return b;\n        return greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmpsiuxqcgu.java:17)\n\tat Problem.greatestCommonDivisor(tmpsiuxqcgu.java:17)\n\
    \tat Problem.greatestCommonDivisor(tmpsiuxqcgu.java:17)\n\tat Problem.greatestCommonDivisor(tmpsiuxqcgu.java:17)\n\
    \tat Problem.main(tmpsiuxqcgu.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) return a;\n        return greatestCommonDivisor(b, a % b);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int n = a;\n        while (n != 0) {\n            int x = b;\n      \
    \      while (x != 0) {\n                if (n % x == 0)\n                   \
    \ x = x / 2;\n                else\n                    x = x * 2;\n         \
    \   }\n            a = a;\n            n = n - b;\n        }\n        return a;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011161
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return (a * b / gcd(a, b));\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxmrintmr.java:15: error: cannot find symbol\n        return (a\
    \ * b / gcd(a, b));\n                        ^\n  symbol:   method gcd(int,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a > 0)\n            if (b > 0) {\n                while (a >=\
    \ b)\n                    a -= b;\n                b = a % b;\n            }\n\
    \            else {\n                while (a >= 1)\n                    a -=\
    \ 1;\n            }\n        return b;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ge55dqu.java:28)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        if (a == 0)\n           \
    \ return b;\n\n        return greatestCommonDivisor(b, a % b);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a>b) {\n            int temp = a;\n            a = b;\n         \
    \   b = temp;\n        }\n        int[] a1 = new int[a/b + 1];\n        int[]\
    \ b1 = new int[b/a + 1];\n        for (int i = 0; i <= a1/b1.length; i++) {\n\
    \            a1[i] = i;\n        }\n        for (int i = 0; i <= b1/a1.length;\
    \ i++) {\n            b1[i] = i;\n        }\n        int j = 0;\n        while\
    \ (a1[j] <= b1) {\n            j++;\n        }\n        int gcd = 0;\n       \
    \ for (int i = 0; i <= j; i++) {\n            gcd = Math.max(a1[i], b1[b1/a1.length\
    \ - i - 1]);\n        }\n        return gcd;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqoiogc0q.java:22: error: bad operand types for binary operator\
    \ '/'\n        for (int i = 0; i <= a1/b1.length; i++) {\n                   \
    \            ^\n  first type:  int[]\n  second type: int\n/tmp/tmpqoiogc0q.java:25:\
    \ error: bad operand types for binary operator '/'\n        for (int i = 0; i\
    \ <= b1/a1.length; i++) {\n                               ^\n  first type:  int[]\n\
    \  second type: int\n/tmp/tmpqoiogc0q.java:29: error: bad operand types for binary\
    \ operator '<='\n        while (a1[j] <= b1) {\n                     ^\n  first\
    \ type:  int\n  second type: int[]\n/tmp/tmpqoiogc0q.java:34: error: bad operand\
    \ types for binary operator '/'\n            gcd = Math.max(a1[i], b1[b1/a1.length\
    \ - i - 1]);\n                                       ^\n  first type:  int[]\n\
    \  second type: int\n4 errors\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            if (a % b == 0)\n                return\
    \ b;\n            b /= 2;\n        }\n        return 1;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalvp13iz.java:23)\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int r = a % b;\n        return (r == 0) ? b : greatestCommonDivisor(b,\
    \ r);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Return the GCD of a and b\n        // >>> greatestCommonDivisor(4,\
    \ 3)\n        // 1\n        // >>> greatestCommonDivisor(12, 17)\n        // 3\n\
    \        if (a == 0) {\n            return b;\n        }\n        if (b == 0)\
    \ {\n            return a;\n        }\n        return greatestCommonDivisor(a\
    \ % b, b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\
    \tat Problem.greatestCommonDivisor(tmpkqvcuke9.java:26)\n\tat Problem."
  stdout: ''
  timestamp: 1660011157
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 0;\n        while (a != 0) {\n            if (b == 0) {\n \
    \               break;\n            }\n            int temp = a;\n           \
    \ a = b;\n            b = temp % b;\n            gcd = (gcd > a) ? gcd : a;\n\
    \        }\n        return gcd;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt179v845.java:28)\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int r = a;\n        while (b > 0) {\n            r = r * b % a;\n   \
    \         --b;\n        }\n        return r;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ongiujk.java:23)\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int r;\n        while (a != 0) {\n            r = a % b;\n          \
    \  a = b;\n            b = r;\n        }\n        return b;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmpt47eftyw.java:17)\n\tat Problem.main(tmpt47eftyw.java:24)\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Math.abs(a * b / gcd(a, b));\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq9y4amd5.java:15: error: cannot find symbol\n        return Math.abs(a\
    \ * b / gcd(a, b));\n                                ^\n  symbol:   method gcd(int,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return greatestCommonDivisor(a, b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpy0ytmlu7.java:15)\n\tat Problem."
  stdout: ''
  timestamp: 1660011158
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int[] aInt = new int[a];\n        int[] bInt = new int[b];\n\n      \
    \  for (int i = 0; i < a; i++) {\n            aInt[i] = (int) Math.pow(a, i);\n\
    \        }\n        for (int i = 0; i < b; i++) {\n            bInt[i] = (int)\
    \ Math.pow(b, i);\n        }\n        for (int i = 1; i < a; i++) {\n        \
    \    for (int j = 1; j < b; j++) {\n                if (aInt[i] % bInt[j] == 0)\
    \ {\n                    return (int) Math.pow(a, b);\n                }\n   \
    \         }\n        }\n        return 1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwztmcik.java:35)\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Integer.valueOf(a).divideAndRemainder(Integer.valueOf(b)).stream().mapToInt(i\
    \ -> Integer.valueOf(1)).max().getAsInt();\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppy6b9zch.java:15: error: cannot find symbol\n        return Integer.valueOf(a).divideAndRemainder(Integer.valueOf(b)).stream().mapToInt(i\
    \ -> Integer.valueOf(1)).max().getAsInt();\n                                 ^\n\
    \  symbol:   method divideAndRemainder(Integer)\n  location: class Integer\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int d = 1;\n        while (a > 0 && b > 0) {\n            int t = a %\
    \ b;\n            a = b;\n            b = t;\n            ++d;\n        }\n  \
    \      return d;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeihtjw_n.java:25)\n"
  stdout: ''
  timestamp: 1660011158
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int g = 1, q = 0, r;\n        while (b != 0) {\n            r = a % b;\n\
    \            a = b;\n            b = r;\n            g++;\n        }\n       \
    \ return g;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpde42a13e.java:25)\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b ? greatestCommonDivisor(b, a % b) : a;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkp47sq8x.java:15: error: incompatible types: int cannot be converted\
    \ to boolean\n        return b ? greatestCommonDivisor(b, a % b) : a;\n      \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        else {\n   \
    \         return greatestCommonDivisor(b, a % b);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011157
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a%b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a * b / gcd(a, b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpef2d7xhc.java:15: error: cannot find symbol\n        return a *\
    \ b / gcd(a, b);\n                       ^\n  symbol:   method gcd(int,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int remainder = 0;\n        while (b != 0) {\n            remainder =\
    \ b;\n            b = a % b;\n            a = remainder;\n        }\n        return\
    \ a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011158
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // If no divisor, return 1 as the answer \n        if (b == 0)\n    \
    \        return a;\n        // Recursive call \n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011158
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int n = a;\n        int m = b;\n        while (m != 0) {\n          \
    \  n %= m;\n            m = m % n;\n        }\n        return n;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmpcekg9wbo.java:19)\n\tat Problem.main(tmpcekg9wbo.java:24)\n"
  stdout: ''
  timestamp: 1660011158
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int d = 1;\n        while (b > 0) {\n            d = (a % b) + d;\n \
    \           a = b;\n            b = d / b;\n        }\n        return d;\n}\n\
    \    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq_9zfoub.java:24)\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Math.max(a, b) / Math.min(a, b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2q5nqtt.java:18)\n"
  stdout: ''
  timestamp: 1660011158
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        if (b == 0) return a;\n        return\
    \ greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while(a % b != 0) {\n            a /= b;\n        }\n        return a;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8pgwkomh.java:21)\n"
  stdout: ''
  timestamp: 1660011158
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        if (a % b == 0)\n       \
    \     return greatestCommonDivisor(b, a%b);\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011158
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int remainder = a % b;\n            a =\
    \ b;\n            b = remainder;\n        }\n        return a;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011158
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        Set<Integer> set = new HashSet<Integer>();\n        int n = a;\n    \
    \    while (n != 0) {\n            set.add(n);\n            n = n / 2;\n     \
    \   }\n        set.remove(b);\n        return set.stream().reduce(1, (a, b) ->\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpel4nhtpz.java:22: error: variable a is already defined in method\
    \ greatestCommonDivisor(int,int)\n        return set.stream().reduce(1, (a, b)\
    \ -> a % b);\n                                       ^\n/tmp/tmpel4nhtpz.java:22:\
    \ error: variable b is already defined in method greatestCommonDivisor(int,int)\n\
    \        return set.stream().reduce(1, (a, b) -> a % b);\n                   \
    \                       ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011158
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0) {\n            if (b%a != 0)\n                a = a /\
    \ 2;\n            else\n                b = b / 2;\n        }\n        return\
    \ b;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011163
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        if (a == 0)\n           \
    \ return b;\n        return greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011159
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0 || b == 0) {\n            return 0;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjs37y3xy.java:21)\n"
  stdout: ''
  timestamp: 1660011158
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int m = a;\n        int n = b;\n        int r = 1;\n        while ( m\
    \ != 0 ) {\n            int t = m % n;\n            if( t > 0 ) r = t * r;\n \
    \           m = n;\n            n = t;\n        }\n        return r;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmpwstji1zg.java:19)\n\tat Problem.main(tmpwstji1zg.java:27)\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1, lcm = (a > b) ? b : a;\n        while (gcd != 1) {\n   \
    \         int t = lcm;\n            lcm = a / t;\n            a = b;\n       \
    \     b = t;\n            gcd = (a > b) ? a : b;\n        }\n        return lcm;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2_goa7h0.java:26)\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int r = a % b;\n        if (b != 0) {\n            while (true) {\n \
    \               int div = a / b;\n                if (r < b)\n               \
    \     break;\n                r = b;\n                b = div;\n            }\n\
    \        }\n        return b;\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk571t6_2.java:28)\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int temp = a % b;\n            a = b;\n\
    \            b = temp;\n        }\n        return a;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011159
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        Integer gcd = (a, b) -> (b == 0) ? a : greatestCommonDivisor(b, a % b);\n\
    \        return gcd.intValue();\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8dozfxqb.java:15: error: incompatible types: Integer is not a functional\
    \ interface\n        Integer gcd = (a, b) -> (b == 0) ? a : greatestCommonDivisor(b,\
    \ a % b);\n                      ^\n/tmp/tmp8dozfxqb.java:15: error: variable\
    \ a is already defined in method greatestCommonDivisor(int,int)\n        Integer\
    \ gcd = (a, b) -> (b == 0) ? a : greatestCommonDivisor(b, a % b);\n          \
    \             ^\n/tmp/tmp8dozfxqb.java:15: error: variable b is already defined\
    \ in method greatestCommonDivisor(int,int)\n        Integer gcd = (a, b) -> (b\
    \ == 0) ? a : greatestCommonDivisor(b, a % b);\n                          ^\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        Set<Integer> set = new HashSet<>();\n        while (b > 0) {\n      \
    \      if (set.contains(b % a)) {\n                b = (b % a); //remove a from\
    \ b\n            } else {\n                set.add(a);\n                a = b;\n\
    \            }\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011164
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != b) {\n            if (a > b) {\n                a -= b;\n\
    \            } else {\n                b -= a;\n            }\n        }\n   \
    \     return a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011159
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return (a/b) *\n                greatestCommonDivisor(b, a % b);\n}\n\
    \    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmp_7hcvmfi.java:15)\n\tat Problem.greatestCommonDivisor(tmp_7hcvmfi.java:16)\n\
    \tat Problem.greatestCommonDivisor(tmp_7hcvmfi.java:16)\n\tat Problem.greatestCommonDivisor(tmp_7hcvmfi.java:16)\n\
    \tat Problem.main(tmp_7hcvmfi.java:19)\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int r = a % b;\n        while (r != 0) {\n            int tmp = b;\n\
    \            b = a;\n            a = tmp;\n            r = a % b;\n        }\n\
    \        return b;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011164
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return (int) Math.max(\n            a,\n            b\n        ) / gcd(\n\
    \            Math.abs(a),\n            Math.abs(b)\n        );\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjpiwtkk9.java:18: error: cannot find symbol\n        ) / gcd(\n\
    \            ^\n  symbol:   method gcd(int,int)\n  location: class Problem\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660011158
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Check if a is even\n        if (a % 2 == 0)\n            return greatestCommonDivisor(b,\
    \ a / 2);\n        // Check if b is even\n        if (b % 2 == 0)\n          \
    \  return greatestCommonDivisor(a, b / 2);\n        // Both are odd\n        if\
    \ (a == b) return a;\n\n        // Compute GCD using a recurrence relation\n \
    \       return greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\
    \tat Problem.greatestCommonDivisor(tmpij9jcaa_.java:20)\n\tat Problem."
  stdout: ''
  timestamp: 1660011159
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // if (a == 0) return b;\n        // if (b == 0) return a;\n        //\
    \ if (a > b) return greatestCommonDivisor(b, a);\n        // return greatestCommonDivisor(a,\
    \ b);\n        return greatestCommonDivisor2(a, b);\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprm08by4m.java:19: error: cannot find symbol\n        return greatestCommonDivisor2(a,\
    \ b);\n               ^\n  symbol:   method greatestCommonDivisor2(int,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 0, n = Math.abs(a) + Math.abs(b);\n        while (n > 0) {\n\
    \            int rem = n % b;\n            gcd = b + gcd;\n            n = rem;\n\
    \        }\n        if (a < 0 && b < 0)\n            gcd = -b;\n        return\
    \ gcd;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011164
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b > 0) {\n            int temp = b;\n            b = a % b;\n\
    \            a = temp;\n        }\n        return a;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011159
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0 || b == 0)\n            return 0;\n        int r = a % b;\n\
    \        for (int i = 1; i <= b; i++)\n            if (r % i == 0)\n         \
    \       r = r / i;\n        return r;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9e85dr18.java:25)\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a * b == 0) {\n            return 0;\n        }\n        if (a *\
    \ b == -1) {\n            return b;\n        }\n        while (a != 1) {\n   \
    \         if (b % a == 0) {\n                a = a / b;\n            }\n     \
    \       else if (a % b == 0) {\n                b = b / a;\n            }\n  \
    \          else if (b * a > Integer.MAX_VALUE) {\n                return Integer.MAX_VALUE;\n\
    \            }\n            else {\n                a = a / b;\n             \
    \   b = b / a;\n            }\n        }\n        return b;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmpy9qgvpjf.java:33)\n\tat Problem.main(tmpy9qgvpjf.java:39)\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Math.abs(a * b) /\n               (((Math.abs(a) * Math.abs(b))\
    \ % 2 == 0) ? 1 : Math.abs(a) %\n               (Math.abs(b)));\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3gtdkvak.java:20)\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int div = a;\n        while(b > 0) {\n            int temp = b;\n   \
    \         while(temp > 0) {\n                if(temp % div == 0) {\n         \
    \           break;\n                }\n                temp /= div;\n        \
    \    }\n            div = b;\n            b = temp;\n        }\n        return\
    \ div;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppxvnxtrc.java:30)\n"
  stdout: ''
  timestamp: 1660011160
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Math.min(a, b) / Math.gcd(a, b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0oyv8e5y.java:15: error: cannot find symbol\n        return Math.min(a,\
    \ b) / Math.gcd(a, b);\n                                    ^\n  symbol:   method\
    \ gcd(int,int)\n  location: class Math\n1 error\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b > 0) {\n            int r = a % b;\n            a = b;\n   \
    \         b = r;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        if (b == 0)\
    \ {\n            return a;\n        }\n        if (a > b) {\n            swap(a,\
    \ b);\n        }\n        while (b != 0) {\n            int r = a % b;\n     \
    \       a = b;\n            b = r;\n        }\n        return a;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwk9axy5.java:22: error: cannot find symbol\n            swap(a,\
    \ b);\n            ^\n  symbol:   method swap(int,int)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011160
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Your code here\n        if (a == 0) return b;\n        if (b == 0)\
    \ return a;\n        return greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011160
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int c;\n        for (int d = 1; a > 0 && d < b; d++) {\n            if\
    \ (a % d == 0 && b % d == 0)\n                c = d;\n            else if (a %\
    \ d == 0 && b % d != 0)\n                c = d;\n            else if (a % d !=\
    \ 0 && b % d == 0)\n                c = d;\n        }\n        return c;\n}\n\
    \    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl7clee24.java:24: error: variable c might not have been initialized\n\
    \        return c;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011159
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) return a;\n        return greatestCommonDivisor(b, a%b);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011160
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        while (a != 0) {\n            if (a & 1 == 1) {\n\
    \                gcd = (gcd >> 1) | (a & b);\n            }\n            a = a\
    \ >>> 1;\n        }\n        return gcd;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp22qos281.java:17: error: bad operand types for binary operator\
    \ '&'\n            if (a & 1 == 1) {\n                  ^\n  first type:  int\n\
    \  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011160
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int r = 1;\n        while (b != 0) {\n            if (a > b) {\n    \
    \            r++;\n                a %= b;\n            }\n            b--;\n\
    \        }\n        return r;\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfck6po1n.java:26)\n"
  stdout: ''
  timestamp: 1660011160
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a%b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int greatestDivisor = 1;\n        while (b != 0) {\n            if (b%a\
    \ == 0)\n                greatestDivisor = a;\n            a = a % b;\n      \
    \      b = b % greatestDivisor;\n        }\n        return greatestDivisor;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmg0xb9zr.java:26)\n"
  stdout: ''
  timestamp: 1660011160
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        while (b > 0) {\n            if (b % 2 == 1) {\n\
    \                gcd = b / 2;\n            }\n            b = b / 2;\n       \
    \ }\n        return gcd;\n}\n    public static void main(String[] args) {\n  \
    \  assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gq5h64f.java:25)\n"
  stdout: ''
  timestamp: 1660011160
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int divisor = 1;\n        while (a != 0) {\n            divisor = divisor\
    \ * b;\n            int temp = a;\n            a = b / divisor;\n            b\
    \ = temp;\n        }\n        return divisor;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphgyjyeuo.java:25)\n"
  stdout: ''
  timestamp: 1660011160
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        else {\n            return\
    \ greatestCommonDivisor(b, a%b);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011160
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Math.abs(a) < (Math.abs(b)) ? a : b;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx_khqm1b.java:18)\n"
  stdout: ''
  timestamp: 1660011160
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a<b) throw new IllegalArgumentException(\"The smallest divisor cannot\
    \ be greater than the biggest.\");\n        while (b != 0) {\n            int\
    \ r = a % b;\n            a = b;\n            b = r;\n        }\n        return\
    \ a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: The smallest\
    \ divisor cannot be greater than the biggest.\n\tat Problem.greatestCommonDivisor(tmpynzzab7i.java:15)\n\
    \tat Problem.main(tmpynzzab7i.java:24)\n"
  stdout: ''
  timestamp: 1660011160
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a * b / gcd(a, b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpef2d7xhc.java:15: error: cannot find symbol\n        return a *\
    \ b / gcd(a, b);\n                       ^\n  symbol:   method gcd(int,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011157
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0) {\n            if (b == 0)\n                return a;\n\
    \            int remainder = a % b;\n            a = b;\n            b = remainder;\n\
    \        }\n        return b;\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011160
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            int tmp = a;\n            a = b;\n        \
    \    b = tmp;\n        }\n        while (a != 0) {\n            if (a % b == 0)\
    \ {\n                a = a / b;\n            } else {\n                a = b;\n\
    \            }\n            b = b % a;\n        }\n        return b;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmpg2on4a_t.java:21)\n\tat Problem.main(tmpg2on4a_t.java:31)\n"
  stdout: ''
  timestamp: 1660011160
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (true) {\n            if (b == 0) {\n                return a;\n\
    \            }\n            int temp = a;\n            a = b;\n            b =\
    \ temp;\n        }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011166
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        boolean flag = true;\n        int result = 1;\n        while (a > 0 &&\
    \ flag) {\n            if (a % b == 0)\n                flag = false;\n      \
    \      else {\n                result = b;\n                b += 1;\n        \
    \    }\n            a -= 1;\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8g0t4o1v.java:29)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        int r = a %\
    \ b;\n        while (a > 0 && b > 0) {\n            int c = a % b;\n         \
    \   a = b;\n            b = c;\n        }\n        return b;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0fosma6.java:27)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int result = a;\n        while (b != 0) {\n            if (b >= result)\
    \ {\n                result %= b;\n            } else {\n                result\
    \ %= b;\n                result += b;\n            }\n            b /= 2;\n  \
    \      }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzcm78jp.java:28)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return (b == 0) ? a : greatestCommonDivisor(b, a % b);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int greatestCommonDivisor = 1;\n        while (b != 0) {\n          \
    \  while (a != 0) {\n                greatestCommonDivisor = a % greatestCommonDivisor;\n\
    \                a = a / 2;\n            }\n            while (greatestCommonDivisor\
    \ != 0) {\n                greatestCommonDivisor = greatestCommonDivisor % b;\n\
    \                greatestCommonDivisor = greatestCommonDivisor / 2;\n        \
    \    }\n            b = b / 2;\n        }\n        return greatestCommonDivisor;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmpw6kcvp5v.java:18)\n\tat Problem.main(tmpw6kcvp5v.java:30)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        long result = 1L;\n        while (b != 0) {\n            long oldResult\
    \ = result;\n            result = a % b;\n            a = b;\n            b =\
    \ oldResult;\n        }\n        return (int) result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6r34i2ql.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            b = oldResult;\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Math.max(a, b) / Math.min(a, b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2q5nqtt.java:18)\n"
  stdout: ''
  timestamp: 1660011158
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0) {\n            if (b == 0) {\n                return a;\n\
    \            }\n            int t = b;\n            while (t != 0) {\n       \
    \         a = a % t;\n                t = t / 2;\n            }\n        }\n \
    \       return a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqesyx3m1.java:28)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int greatest;\n        while (a != 0) {\n            greatest = a;\n\
    \            while (a != 0) {\n                if (b != 0) {\n               \
    \     greatest = Math.min(greatest, b);\n                }\n                a\
    \ = a % b;\n                b = b;\n            }\n            a = a;\n      \
    \      int temp;\n            do {\n                temp = a;\n              \
    \  a = b;\n                b = temp % b;\n            } while (a != 0);\n    \
    \    }\n        return greatest;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxa58cdt4.java:33: error: variable greatest might not have been\
    \ initialized\n        return greatest;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int maxDividend = Math.max(a, b);\n        int maxDivisor = Math.min(a,\
    \ b);\n        while (b != 0) {\n            if (a % b == 0) return b;\n     \
    \       b /= 2;\n        }\n        return maxDividend;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2vnjzxp7.java:24)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Write your code in here\n        int x = 0, y = 1;\n        while\
    \ (a != 0) {\n            int temp = a;\n            a = b%a;\n            b =\
    \ temp;\n        }\n        while (b != 0) {\n            int temp = b;\n    \
    \        b = a%b;\n            a = temp;\n        }\n        return a;\n}\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011161
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0) {\n            int remainder = a % b;\n            a =\
    \ b;\n            b = remainder;\n        }\n        return b;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmph54mofx8.java:16)\n\tat Problem.main(tmph54mofx8.java:23)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int r = a % b;\n        while (a / b != r) {\n            r = b % a;\n\
    \        }\n        return b;\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011166
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a%b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int res = 1;\n        for (int i = 2; i <= Math.sqrt(b); i++) {\n   \
    \         if (b % i == 0) {\n                res = i;\n                break;\n\
    \            }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuket_uoo.java:26)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int temp = 0;\n        int remainder = 0;\n        while (a != 0) {\n\
    \            temp = a % b;\n            remainder = temp * b;\n            a =\
    \ a / b;\n            b = remainder;\n        }\n        return b;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi2qrn581.java:26)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Math.max(a, b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cw7etxn.java:18)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b > 0) {\n            int r = a % b;\n            a = b;\n   \
    \         b = r;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int max = 0;\n        while (b != 0) {\n            if (a % b == 0)\n\
    \                max = b;\n            else\n                max = (b - 1) % a;\n\
    \            a--;\n            b--;\n        }\n        return max;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprjot_emp.java:28)\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return (a * b) / GCD(abs(a), abs(b));\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpon8vw7l8.java:15: error: cannot find symbol\n        return (a\
    \ * b) / GCD(abs(a), abs(b));\n                             ^\n  symbol:   method\
    \ abs(int)\n  location: class Problem\n/tmp/tmpon8vw7l8.java:15: error: cannot\
    \ find symbol\n        return (a * b) / GCD(abs(a), abs(b));\n               \
    \                      ^\n  symbol:   method abs(int)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011161
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0) {\n            int temp = b;\n            b = a % b;\n\
    \            a = temp;\n        }\n        return b;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.greatestCommonDivisor(tmp556q7qt_.java:17)\n\tat Problem.main(tmp556q7qt_.java:23)\n"
  stdout: ''
  timestamp: 1660011162
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int r = a % b;\n        while (r != 0) {\n            a /= b;\n     \
    \       b /= r;\n            r = a % b;\n        }\n        return b;\n}\n   \
    \ public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb1k1u2j6.java:24)\n"
  stdout: ''
  timestamp: 1660011162
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int r = a % b;\n            a = b;\n  \
    \          b = r;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return Math.abs(b / a); // this line is unchanged\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxf890ibg.java:18)\n"
  stdout: ''
  timestamp: 1660011162
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int temp = b;\n            b = a % b;\n\
    \            a = temp;\n        }\n        return a;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011162
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        System.out.println(a);\n        System.out.println(b);\n        if (a\
    \ == 0) {\n            return b;\n        } else if (b == 0) {\n            return\
    \ a;\n        }\n        int rem = a;\n        do {\n            if (rem == 0)\
    \ {\n                return b;\n            }\n            if (b == 0 || rem %\
    \ b == 0) {\n                return rem;\n            }\n            int temp\
    \ = b;\n            b = rem / temp;\n            rem = temp;\n        }\n    \
    \    while (a != rem);\n        return b;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6j16bqy.java:38)\n"
  stdout: '3

    7

    '
  timestamp: 1660011162
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int result = a % b;\n        for (int i = 1; i < b; i++) {\n        \
    \    if (result % i == 0) {\n                result = result / i;\n          \
    \  }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7xmkv3e.java:25)\n"
  stdout: ''
  timestamp: 1660011162
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) return a;\n        return greatestCommonDivisor(b, a % b);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011154
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int temp = b;\n            b = a % b;\n\
    \            a = temp;\n        }\n        return a;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011162
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a==0 || b==0) return 0;\n        return Math.gcd(Math.abs(a), Math.abs(b));\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprz8kvglr.java:16: error: cannot find symbol\n        return Math.gcd(Math.abs(a),\
    \ Math.abs(b));\n                   ^\n  symbol:   method gcd(int,int)\n  location:\
    \ class Math\n1 error\n"
  stdout: ''
  timestamp: 1660011162
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (b == 0)\n            return a;\n        else\n            return\
    \ greatestCommonDivisor(b, a%b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int result = 0;\n        int x = 0, y = 0;\n\n        while (true) {\n\
    \            if (a == 0)\n                return b;\n            if (b == 0)\n\
    \                return a;\n            if (a > b) {\n                a = a -\
    \ b;\n                y = y - 1;\n            } else {\n                b = b\
    \ - a;\n                x = x - 1;\n            }\n            if (x != 0)\n \
    \               a = a / x;\n            else\n                b = b / y;\n   \
    \         result = result > a ? result : a;\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjubhptjl.java:38)\n"
  stdout: ''
  timestamp: 1660011162
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int res = 1;\n        while (b != 0) {\n            if (a % b == 0) {\n\
    \                res = b;\n            }\n            b = b % a;\n           \
    \ a = a;\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011167
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int res = 1;\n        while (b) {\n            if (b % a == 0) {\n  \
    \              res = a;\n                break;\n            }\n            a\
    \ = a + 1;\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwryobx8p.java:16: error: incompatible types: int cannot be converted\
    \ to boolean\n        while (b) {\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011162
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            if (a % b == 0) {\n                return\
    \ b;\n            }\n            b /= 2;\n        }\n        return a;\n}\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9voq86dg.java:24)\n"
  stdout: ''
  timestamp: 1660011162
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int rem = a % b;\n            a = b;\n\
    \            b = rem;\n        }\n        return a;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011162
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if(b == 0)\n            return a;\n        else\n            return greatestCommonDivisor(b,\
    \ a%b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011162
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // write your code in Java SE 8\n        return b == 0 ? a : greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011162
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int greatestCommonDivisor = 0;\n        int gcd = 1;\n        while (b\
    \ > 0) {\n            if (a > b) {\n                a = a - b;\n             \
    \   greatestCommonDivisor = gcd - 1;\n            } else if (b > a) {\n      \
    \          b = b - a;\n                greatestCommonDivisor = greatestCommonDivisor\
    \ + 1;\n            }\n            gcd = gcd*a;\n        }\n        return greatestCommonDivisor;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011167

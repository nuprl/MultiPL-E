language: java
name: HumanEval_34_unique
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Map<Integer, Integer> counts = new HashMap<>();\n\
    \        for(Integer i : l) {\n            if(counts.get(i) == null) {\n     \
    \           counts.put(i, 1);\n            } else {\n                counts.put(i,\
    \ counts.get(i) + 1);\n            }\n        }\n        ArrayList<Integer> result\
    \ = new ArrayList<>(counts.keySet());\n        Collections.sort(result);\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011667
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> set = new HashSet<Integer>(l);\n\
    \        return new ArrayList<Integer>(set);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> set = new HashSet<Integer>();\n\
    \        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for (Integer\
    \ i : l)\n            if (!set.add(i))\n                ans.add(i);\n        return\
    \ ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygqfg7p7.java:21)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new LinkedHashSet<>(l);\n\
    \        ArrayList<Integer> ans = new ArrayList<>(set);\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        HashSet<Integer> set = new HashSet<>();\n        for (Integer i : l)\
    \ {\n            if (set.contains(i)) {\n                continue;\n         \
    \   }\n            set.add(i);\n            result.add(i);\n        }\n      \
    \  return result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl68efs24.java:25)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<>();\n\
    \        HashSet<Integer> set = new HashSet<>();\n        \n        for(Integer\
    \ el : l) {\n            if(!set.add(el)) {\n                res.add(el);\n  \
    \          }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8cyij273.java:24)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        for (Integer i : l)\n            if (result.indexOf(i) < 0)\n       \
    \         result.add(i);\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmkdr5h6x.java:20)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        // Sort, since we don't want to count duplicates\n        Collections.sort(l);\n\
    \        for(Integer i : l) {\n            if(result.size() <= i) result.add(i);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmx98862k.java:22)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashMap<Integer, Boolean> map = new\
    \ HashMap<Integer, Boolean>();\n        for (int i : l)\n            if (!map.containsKey(i))\n\
    \                map.put(i, true);\n        ArrayList<Integer> res = new ArrayList<Integer>(map.keySet());\n\
    \        res.sort();\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdejf31pe.java:18: error: method sort in class ArrayList<E> cannot\
    \ be applied to given types;\n        res.sort();\n           ^\n  required: Comparator<?\
    \ super Integer>\n  found:    no arguments\n  reason: actual and formal argument\
    \ lists differ in length\n  where E is a type-variable:\n    E extends Object\
    \ declared in class ArrayList\n1 error\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        int i = 0;\n        while (i < l.size()) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n            i++;\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj472qs77.java:24)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        ArrayList<Integer> u = new ArrayList<Integer>();\n        for (Integer\
    \ i : l) {\n            if (hs.contains(i)) {\n                continue;\n   \
    \         }\n            hs.add(i);\n            u.add(i);\n        }\n      \
    \  return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpknn7rvl8.java:25)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for(int i : l) {\n            if(!u.contains(i)) {\n                u.add(i);\n\
    \            }\n        }\n        return u;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0wcn8m07.java:22)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n\
    \        for (Integer i : l)\n            if (a.contains(i))\n               \
    \ continue;\n            else\n                a.add(i);\n        return a;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9wgnbx0y.java:22)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> unique = new HashSet<>();\n\
    \        for (Integer i : l) unique.add(i);\n        return new ArrayList<>(unique);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        List<Integer> toRemove = new ArrayList<Integer>();\n        for (Integer\
    \ i : l) {\n            if (!res.contains(i)) {\n                res.add(i);\n\
    \            } else {\n                toRemove.add(i);\n            }\n     \
    \   }\n        for (Integer i : toRemove) {\n            l.remove(i);\n      \
    \  }\n        return res;\n}\n    public static void main(String[] args) {\n \
    \   assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz45p9wk4.java:28)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        for(int i = 0; i < l.size(); i++)\n            if(!u.contains(l.get(i)))\n\
    \                u.add(l.get(i));\n        return u;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph26ki3lj.java:20)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (Integer i : l) {\n            if (!result.contains(i)) {\n     \
    \           result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++)\n            if (!u.contains(l.get(i)))\n\
    \                u.add(l.get(i));\n        return u;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_y7b6_e.java:20)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> r = new ArrayList<>();\n\
    \        for(Integer x: l)\n            if (!r.contains(x))\n                r.add(x);\n\
    \        return r;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu46ejvi3.java:20)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        l.sort(Comparator.naturalOrder());\n        for (int i = 0; i < l.size();\
    \ i++)\n            if (i > 0) {\n                if (l.get(i) == l.get(i - 1))\n\
    \                    i--;\n                else\n                    result.add(l.get(i));\n\
    \            }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011672
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> r = new ArrayList<Integer>(s);\n        return r;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        if (l.size() == 0) return l;\n     \
    \   ArrayList<Integer> unique = new ArrayList<Integer>();\n        for (Integer\
    \ i : l) if (unique.contains(i)) i--;\n        else unique.add(i);\n        return\
    \ unique;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbsv2c4c5.java:20)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ u = new ArrayList<>();\n        for (Integer e : l)\n            if (!u.contains(e))\n\
    \                u.add(e);\n        return u;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        for(Integer i : l) {\n            if(u.contains(i))\n               \
    \ continue;\n            u.add(i);\n        }\n        return u;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3nzcff2.java:22)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            for (int j = i + 1; j < l.size(); j++) {\n                if\
    \ (l.get(i).equals(l.get(j))) {\n                    l.remove(i);\n          \
    \          break;\n                }\n            }\n            result.add(l.get(i));\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr8hzw7v5.java:27)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        Map<Integer, Integer> indexMap = new HashMap<>();\n        for (int i\
    \ = 0; i < l.size(); i++) {\n            Integer value = l.get(i);\n         \
    \   if (indexMap.containsKey(value)) {\n                indexMap.put(value, indexMap.get(value)\
    \ + 1);\n            } else {\n                indexMap.put(value, 1);\n     \
    \           result.add(value);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm1poxsib.java:27)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> u = new ArrayList<Integer>(hs.size());\n        hs.forEach(u::add);\n\
    \        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        Set<Integer> temp = new HashSet<Integer>();\n        for (Integer i :\
    \ l) {\n            if (temp.contains(i)) {\n                continue;\n     \
    \       }\n            res2.add(i, i);\n            temp.add(i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4b7h5853.java:19: error: cannot find symbol\n            res2.add(i,\
    \ i);\n            ^\n  symbol:   variable res2\n  location: class Problem\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> uniques = new ArrayList<Integer>();\n\
    \        for (Integer i : l) {\n            if (!uniques.contains(i)) {\n    \
    \            uniques.add(i);\n            }\n        }\n        return uniques;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6w0lj4p6.java:22)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<>();\n\
    \        for(Integer i: l)\n            hs.add(i);\n        return new ArrayList<Integer>(hs);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        if (l.isEmpty())\n            return\
    \ l;\n        ArrayList<Integer> x = new ArrayList<Integer>();\n        for (Integer\
    \ i : l)\n            if (!x.contains(i))\n                x.add(i);\n       \
    \ return x;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgojg_kb.java:22)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result=new ArrayList<>(l);\n\
    \        \n        Collections.sort(l);\n        \n        for(Integer i : l)\
    \ {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        \n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa4lo8vq9.java:26)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> u = new HashSet<Integer>();\n\
    \        ArrayList<Integer> uList = new ArrayList<>();\n        for (Integer i\
    \ : l) {\n            if (!u.contains(i))\n                uList.add(i);\n   \
    \         u.add(i);\n        }\n        return uList;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9itmfy8i.java:23)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Map<Integer, Integer> map = new HashMap<>();\n\
    \        for (Integer i : l)\n            map.put(i, map.getOrDefault(i, 0) +\
    \ 1);\n        return map.entrySet().stream().sorted().map(e -> e.getValue()).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.util.HashMap$Node\
    \ cannot be cast to class java.lang.Comparable (java.util.HashMap$Node and java.lang.Comparable\
    \ are in module java.base of loader 'bootstrap')\n\tat java.base/java.util.Comparators$NaturalOrderComparator.compare(Comparators.java:47)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1307)\n\
    \tat java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:353)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)\n\
    \tat Problem.unique(tmp89y9x4j2.java:16)\n\tat Problem.main(tmp89y9x4j2.java:19)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        for (Integer i : l) {\n            if (!hs.add(i))\n                l.add(i);\n\
    \        }\n        return new ArrayList<Integer>(hs);\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.unique(tmpjrsv83in.java:14)\n\
    \tat Problem.main(tmpjrsv83in.java:21)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<>();\n\
    \        for(Integer i : l) set.add(i);\n        return new ArrayList<>(set);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> list = new ArrayList<Integer>(l);\n\
    \        Collections.sort(list);\n        return list;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_kv7lx3r.java:18)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> unique = new HashSet<>(l);\n\
    \        ArrayList<Integer> res = new ArrayList<>(unique);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011669
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>(l);\n\
    \        ArrayList<Integer> v = new ArrayList<>();\n        Collections.sort(u);\n\
    \        for (int i = 0; i < u.size(); i++) {\n            if (!v.contains(u.get(i)))\
    \ {\n                v.add(u.get(i));\n            }\n        }\n        return\
    \ v;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011669
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        HashSet<Integer>\
    \ h = new HashSet<>();\n        for(Integer i : l) {\n            if(!h.contains(i))\
    \ {\n                h.add(i);\n            }\n        }\n        return new ArrayList<Integer>(h);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        l.stream().distinct().forEach(e -> u.add(e));\n        return u;\n}\n\
    \    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8t5qliqc.java:18)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // TODO Auto-generated method stub\n\
    \        int len = l.size();\n        ArrayList<Integer> r = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < len; i++) {\n            if(!r.contains(l.get(i)))\
    \ {\n                r.add(l.get(i));\n            }\n        }\n        return\
    \ r;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppxfybck2.java:24)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (Integer i : l) {\n            if (!res.contains(i)) {\n        \
    \        res.add(i);\n            }\n        }\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplz6bn2l8.java:22)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ ret = new ArrayList<Integer>();\n        for(int i = 0; i < l.size(); i++){\n\
    \            if(!ret.contains(l.get(i)))\n                ret.add(l.get(i));\n\
    \        }\n        return ret;\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // return l if l's length is 0\n   \
    \     if (l.size() == 0) {\n            return l;\n        }\n        // create\
    \ new list with unique elements\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        for (Integer i : l) {\n            if(!u.contains(i)){\n            \
    \    u.add(i);\n            }\n        }\n        return u;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwrurqglb.java:27)\n"
  stdout: ''
  timestamp: 1660011669
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> set = new HashSet<Integer>();\n\
    \        ArrayList<Integer> res = new ArrayList<Integer>();\n        l.forEach(i->\
    \ set.add(i));\n        set.forEach(i-> res.add(i));\n        return res;\n}\n\
    \    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null); // sort the list\n   \
    \     ArrayList<Integer> unique = new ArrayList<>();\n        Collections.sort(l);\n\
    \        for(int i=0; i<l.size(); i++) {\n            if (!unique.add(l.get(i)))\
    \ break; // if it wasn't unique, don't add it (break the loop)\n        }\n  \
    \      return unique;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqs1hf237.java:22)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<>();\n\
    \        ArrayList<Integer> results = new ArrayList<>();\n        for (Integer\
    \ i : l) {\n            if (!set.contains(i)) {\n                set.add(i);\n\
    \                results.add(i);\n            }\n        }\n        return results;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6zeizw0.java:24)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> r = new ArrayList<Integer>(l);\n\
    \        Collections.sort(r);\n        return r;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkmehvnnz.java:18)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        for (Integer i : l) {\n            if (!u.contains(i))\n            \
    \    u.add(i);\n        }\n        return u;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp046nh0er.java:21)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> set = new HashSet<>();\n\
    \        l.stream().forEach(x -> set.add(l));\n        ArrayList<Integer> unique\
    \ = new ArrayList<>(set);\n        return unique;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0a4dzp11.java:14: error: incompatible types: ArrayList<Integer>\
    \ cannot be converted to Integer\n        l.stream().forEach(x -> set.add(l));\n\
    \                                        ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> seen = new HashSet<Integer>();\n\
    \        for(Integer i : l)\n            if(seen.add(i))\n                l.add(i);\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.unique(tmpwpe1g4il.java:14)\n\
    \tat Problem.main(tmpwpe1g4il.java:20)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        if (l==null) return null;\n        l.sort();\n\
    \        Set<Integer> set = new HashSet<Integer>();\n        for (int i : l)\n\
    \            if (set.contains(i)) continue;\n            set.add(l);\n       \
    \     return new ArrayList<Integer>(set);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9ap9v7vh.java:14: error: method sort in class ArrayList<E> cannot\
    \ be applied to given types;\n        l.sort();\n         ^\n  required: Comparator<?\
    \ super Integer>\n  found:    no arguments\n  reason: actual and formal argument\
    \ lists differ in length\n  where E is a type-variable:\n    E extends Object\
    \ declared in class ArrayList\n/tmp/tmp9ap9v7vh.java:18: error: incompatible types:\
    \ ArrayList<Integer> cannot be converted to Integer\n            set.add(l);\n\
    \                    ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> seen = new HashSet<Integer>();\n\
    \        for (Integer i : l) {\n            if (!seen.contains(i)) {\n       \
    \         l.add(i);\n                seen.add(i);\n            }\n        }\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.unique(tmp9n1vc_ao.java:14)\n\
    \tat Problem.main(tmp9n1vc_ao.java:23)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream()\n                .sorted(Comparator.naturalOrder())\n\
    \                .distinct()\n                .collect(toList());\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9i5m0sw7.java:16: error: cannot find symbol\n                .collect(toList());\n\
    \                         ^\n  symbol:   method toList()\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (Integer i : l) {\n            if (!result.contains(i)) {\n     \
    \           result.add(i);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqwuygtv.java:22)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream().sorted().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ l2 = new ArrayList<>();\n        for (Integer i : l)\n            l2.add(i);\n\
    \        return l2;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrs9pq8_.java:20)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> l2 = new ArrayList<Integer>();\n\
    \        HashSet<Integer> hs = new HashSet<Integer>();\n        l.stream().filter(x\
    \ -> !hs.add(x)).forEach(x -> l2.add(x));\n        return l2;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt7m99psk.java:19)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        l.stream()\n         .distinct()\n         .forEach(e -> u.add(e));\n\
    \        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpor1glhao.java:20)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        Collections.sort(l);\n        int last = Integer.MIN_VALUE;\n       \
    \ Integer current;\n        for(Integer i : l) {\n            if(i.intValue()\
    \ == last) {\n                continue;\n            }\n            result.add(i);\n\
    \            last = i.intValue();\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        if (l.size() > 1)\n            for (int\
    \ i = 0; i < l.size(); i++)\n                for (int j = i+1; j < l.size(); j++)\n\
    \                    if (l.get(i) == l.get(j))\n                        l.remove(j);\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpncmbm1vy.java:21)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        HashSet<Integer> set = new HashSet<Integer>();\n        for (Integer\
    \ i : l) {\n            if (!set.contains(i))\n                result.add(i);\n\
    \            else\n                set.add(i);\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnjka08q.java:24)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // Create an array of booleans that\
    \ will be used to record if an element\n        // is unique\n        boolean\
    \ [] check = new boolean [l.size()];\n        // Initialize the first element\
    \ to false\n        check[0] = false;\n        // For each element in the list\n\
    \        for (int i = 0; i < l.size(); i++) {\n            // Check if the current\
    \ element has already been checked\n            if (check[i]) {\n            \
    \    continue;\n            }\n            // If so, add it to the result list\n\
    \            check[i] = true;\n            l.add(i);\n        }\n        // Return\
    \ the result list\n        return l;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 9 out of bounds for length 9\n\tat Problem.unique(tmpzyun3pyd.java:21)\n\
    \tat Problem.main(tmpzyun3pyd.java:32)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        for(Integer i : l)\n            if(!result.contains(i))\n           \
    \     result.add(i);\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcfeeainr.java:20)\n"
  stdout: ''
  timestamp: 1660011670
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        for(Integer i : l)\n            hs.add(i);\n        return new ArrayList<Integer>(hs);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011670
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n\
    \        boolean first = true;\n        for(int i = 0; i < l.size(); i++) {\n\
    \            if (a.contains(l.get(i))) {\n                first = false;\n   \
    \         }\n            a.add(l.get(i));\n        }\n        if (first) {\n \
    \           a.add(l.get(0));\n        }\n        return a;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozrs_ud7.java:27)\n"
  stdout: ''
  timestamp: 1660011671
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        for(Integer i: l) {\n            if(!res.contains(i))\
    \ {\n                res.add(i);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011671
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream()\n                .sorted(Comparator.naturalOrder())\n\
    \                .collect(Collectors.toCollection(ArrayList::new));\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_hxu7lvm.java:18)\n"
  stdout: ''
  timestamp: 1660011671
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        List<Integer> result = new ArrayList<>(l);\n\
    \        Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphzgrbgep.java:15: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011671
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<>();\n\
    \        for(Integer i : l)\n            if(!set.add(i))\n                l.add(i);\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.unique(tmpd0aoguj6.java:14)\n\
    \tat Problem.main(tmpd0aoguj6.java:20)\n"
  stdout: ''
  timestamp: 1660011671
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        List<Integer> list = new ArrayList<>();\n\
    \        list.add(0);\n        for (Integer num : l) list.add(num);\n        list.sort(null);\n\
    \        ArrayList<Integer> result = new ArrayList<>();\n        for (Integer\
    \ num : list) {\n            if (!result.contains(num)) {\n                result.add(num);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011671
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        l.forEach(x -> hs.add(x));\n        List<Integer> list = hs.stream().mapToObj(i\
    \ -> i).sorted().collect(Collectors.toList());\n        return list;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_dn7mdzs.java:15: error: cannot find symbol\n        List<Integer>\
    \ list = hs.stream().mapToObj(i -> i).sorted().collect(Collectors.toList());\n\
    \                                        ^\n  symbol:   method mapToObj((i)->i)\n\
    \  location: interface Stream<Integer>\n/tmp/tmp_dn7mdzs.java:16: error: incompatible\
    \ types: List<Integer> cannot be converted to ArrayList<Integer>\n        return\
    \ list;\n               ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011672
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> unique = new ArrayList<>();\n\
    \        Iterator<Integer> it = l.iterator();\n        while (it.hasNext()) {\n\
    \            Integer n = it.next();\n            if (!unique.contains(n)) {\n\
    \                unique.add(n);\n            }\n        }\n        return unique;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcaa407dm.java:24)\n"
  stdout: ''
  timestamp: 1660011672
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> set = new HashSet<Integer>();\n\
    \        Iterator<Integer> iter = l.iterator();\n        while(iter.hasNext())\
    \ {\n            set.add( iter.next() );\n        }\n        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        Iterator<Integer> iter2 = set.iterator();\n\
    \        while(iter2.hasNext()) {\n            res.add(iter2.next());\n      \
    \  }\n        return res;\n}\n    public static void main(String[] args) {\n \
    \   assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011672
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        if (l == null)\n            throw new\
    \ NullPointerException();\n        l.sort(Comparator.naturalOrder());\n      \
    \  ArrayList<Integer> res = new ArrayList<>();\n        for (Integer e : l) {\n\
    \            if (!res.contains(e)) {\n                res.add(e);\n          \
    \  }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011671
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0;\
    \ i < l.size(); i++) {\n            Integer num = l.get(i);\n            if (map.containsKey(num))\
    \ {\n                Integer count = map.get(num);\n                map.put(num,\
    \ count + 1);\n            } else {\n                map.put(num, 1);\n      \
    \      }\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet())\
    \ {\n            if (entry.getValue() == 1)\n                continue;\n     \
    \       result.add(entry.getKey());\n        }\n        return result;\n}\n  \
    \  public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxszrnt6_.java:32)\n"
  stdout: ''
  timestamp: 1660011671
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> al = new ArrayList<Integer>();\n\
    \        l.sort();\n        for (Integer i : l) {\n            al.add(i);\n  \
    \      }\n        return al;\n}\n    public static void main(String[] args) {\n\
    \    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjp0ozgs5.java:14: error: method sort in class ArrayList<E> cannot\
    \ be applied to given types;\n        l.sort();\n         ^\n  required: Comparator<?\
    \ super Integer>\n  found:    no arguments\n  reason: actual and formal argument\
    \ lists differ in length\n  where E is a type-variable:\n    E extends Object\
    \ declared in class ArrayList\n1 error\n"
  stdout: ''
  timestamp: 1660011671
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<Integer>();\n\
    \        l.forEach(n -> {\n            if (!set.contains(n)) set.add(n);\n   \
    \     });\n        return set.toArray(new ArrayList<Integer>(set));\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmzzxijgx.java:17: error: no suitable method found for toArray(ArrayList<Integer>)\n\
    \        return set.toArray(new ArrayList<Integer>(set));\n                  ^\n\
    \    method Collection.<T#1>toArray(IntFunction<T#1[]>) is not applicable\n  \
    \    (cannot infer type-variable(s) T#1\n        (argument mismatch; ArrayList<Integer>\
    \ cannot be converted to IntFunction<T#1[]>))\n    method Set.<T#2>toArray(T#2[])\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to T#2[]))\n  where T#1,T#2\
    \ are type-variables:\n    T#1 extends Object declared in method <T#1>toArray(IntFunction<T#1[]>)\n\
    \    T#2 extends Object declared in method <T#2>toArray(T#2[])\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011672
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        if (l.isEmpty()) {\n            return\
    \ l;\n        }\n        HashSet<Integer> s = new HashSet<>();\n        for (Integer\
    \ i : l) {\n            if (!s.contains(i)) {\n                s.add(i);\n   \
    \         }\n        }\n        return new ArrayList<Integer>(s);\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011672
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<>();\n\
    \        for (int i : l) {\n            if (!hs.add(i)) {\n                hs.add(i);\n\
    \            }\n        }\n        return new ArrayList<>(hs);\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011672
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hashset = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> sortedList = new ArrayList<Integer>(l);\n        sortedList.sort(null);\n\
    \        sortedList.removeAll(hashset);\n        return sortedList;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9f_9v8n0.java:20)\n"
  stdout: ''
  timestamp: 1660011672
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> unique = new ArrayList<>();\n\
    \        Iterator<Integer> it = l.iterator();\n        while (it.hasNext()) {\n\
    \            Integer next = it.next();\n            int index = unique.indexOf(next);\n\
    \            if (index == -1)\n                unique.add(next);\n        }\n\
    \        return unique;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5dnccslp.java:24)\n"
  stdout: ''
  timestamp: 1660011672
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort();\n        ArrayList<Integer>\
    \ n = new ArrayList<>();\n        for (Integer i : l) if (!n.contains(i)) n.add(i);\n\
    \        return n;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpudi0_knq.java:13: error: method sort in class ArrayList<E> cannot\
    \ be applied to given types;\n        l.sort();\n         ^\n  required: Comparator<?\
    \ super Integer>\n  found:    no arguments\n  reason: actual and formal argument\
    \ lists differ in length\n  where E is a type-variable:\n    E extends Object\
    \ declared in class ArrayList\n1 error\n"
  stdout: ''
  timestamp: 1660011672
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        List<Integer> result = new ArrayList<>();\n\
    \        l.forEach( x -> result.add(x));\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4lt_8l66.java:16: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011672
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n\
    \        \n        for(int i = 0; i < l.size(); i++) {\n            if(!list.contains(l.get(i)))\
    \ {\n                list.add(l.get(i));\n            }\n        }\n        return\
    \ list;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmyop3w7v.java:23)\n"
  stdout: ''
  timestamp: 1660011672
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<>();\n\
    \        for (Integer i : l) {\n            set.add(i);\n        }\n        ArrayList<Integer>\
    \ results = new ArrayList<>();\n        for (Integer i : set) {\n            results.add(i);\n\
    \        }\n        return results;\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011672
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<Integer>();\n\
    \        for(Integer i : l) {\n            s.add(i);\n        }\n        return\
    \ new ArrayList<Integer>(s);\n}\n    public static void main(String[] args) {\n\
    \    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011672
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<>();\n\
    \        for (int i = 0; i < l.size(); ++i) {\n            if (!hs.add(l.get(i)))\
    \ {\n                ArrayList<Integer> u = new ArrayList<>();\n             \
    \   u.addAll(hs);\n                u.add(l.get(i));\n                hs = u;\n\
    \            }\n        }\n        return hs.stream().map(Object::toString).collect(Collectors.toList());\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn51a_sef.java:19: error: incompatible types: ArrayList<Integer>\
    \ cannot be converted to HashSet<Integer>\n                hs = u;\n         \
    \            ^\n/tmp/tmpn51a_sef.java:22: error: incompatible types: inference\
    \ variable R has incompatible bounds\n        return hs.stream().map(Object::toString).collect(Collectors.toList());\n\
    \                                                        ^\n    equality constraints:\
    \ List<T#2>\n    lower bounds: ArrayList<Integer>,Object\n  where R,A,T#1,T#2\
    \ are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    T#1 extends Object declared in interface Stream\n    T#2\
    \ extends Object declared in method <T#2>toList()\n2 errors\n"
  stdout: ''
  timestamp: 1660011672
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> unique = new ArrayList<>();\n\
    \        Set<Integer> set = new HashSet<>();\n        for (Integer i : l) {\n\
    \            if (set.contains(i)) {\n                continue;\n            }\n\
    \            set.add(i);\n            unique.add(i);\n        }\n        return\
    \ unique;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fexpkbu.java:25)\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Arrays.sort(l);\n        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        Set<Integer> set = new HashSet<>();\n    \
    \    for (Integer ele : l) {\n            if (!set.contains(ele)) {\n        \
    \        res.add(ele);\n                set.add(ele);\n            }\n       \
    \ }\n        return res;\n}\n    public static void main(String[] args) {\n  \
    \  assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz5dedzkx.java:13: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        HashSet<Integer> set = new HashSet<Integer>();\n        l.stream().forEach(val\
    \ -> set.add(val));\n        l.stream().filter(val -> !set.contains(val)).forEach(val\
    \ -> u.add(val));\n        l.stream().filter(val -> set.contains(val)).forEach(val\
    \ -> {\n            u.remove(val);\n            set.add(val);\n        });\n \
    \       return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgc1z4rlh.java:24)\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashMap<Integer, Integer> hashMap =\
    \ new HashMap<Integer, Integer>();\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \n        l.stream().forEach(integer -> {\n            if (hashMap.get(integer)\
    \ == null) {\n                hashMap.put(integer, 1);\n            } else {\n\
    \                hashMap.put(integer, hashMap.get(integer) + 1);\n           \
    \ }\n        });\n\n        hashMap.values().stream().forEach(integer -> {\n \
    \           if (integer == 1) {\n                result.add(integer);\n      \
    \      }\n        });\n\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8_o_qcm.java:33)\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<Integer>();\n\
    \        l.forEach((element) -> set.add(element));\n        return new ArrayList<>(set);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Map<Integer, Integer> m = new HashMap<Integer,\
    \ Integer>();\n        for(Integer i : l)\n            m.put(i, m.getOrDefault(i,\
    \ 0) + 1);\n        return new ArrayList<Integer>(m.keySet());\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>(l);\n\
    \        Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp928n226k.java:18)\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        for (Integer e : l) {\n            if (!result.contains(e))\
    \ {\n                result.add(e);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        boolean done = false;\n        for (Integer i : l) {\n            if\
    \ (done) result.add(i);\n            else if (!result.contains(i)) {\n       \
    \         done = true;\n                result.add(i);\n            }\n      \
    \  }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqm9j049p.java:25)\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        l.stream().distinct().forEach((x) -> ret.add(x));\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmgxdu70h.java:18)\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        HashSet<Integer>\
    \ h = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++)\n  \
    \          h.add(l.get(i));\n        ArrayList<Integer> l1 = new ArrayList<Integer>();\n\
    \        for (Integer e : h)\n            l1.add(e);\n        return l1;\n}\n\
    \    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> uniques = new HashSet<Integer>();\n\
    \        for (Integer i : l)\n            if (uniques.add(i))\n              \
    \  uniques.add(i);\n        return new ArrayList<Integer>(uniques);\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>(l.size());\n\
    \        for (Integer i : l)\n            if (!result.contains(i))\n         \
    \       result.add(i);\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeho6h4mn.java:20)\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        for (Integer element : l) {\n            if (!result.contains(element))\
    \ {\n                result.add(element);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7osv_0q.java:22)\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> unique = new ArrayList<Integer>();\n\
    \        Collections.sort(l);\n        for (Integer i : l) {\n            if (!unique.contains(i))\n\
    \                unique.add(i);\n        }\n        return unique;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<>();\n\
    \        for (int i : l)\n            if (!hs.add(i))\n                h.add(hs.add(i));\n\
    \        return new ArrayList<Integer>(hs);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8j4jq1d5.java:16: error: cannot find symbol\n                h.add(hs.add(i));\n\
    \                ^\n  symbol:   variable h\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        for (Integer i : l) {\n            if (hs.contains(i)) continue;\n  \
    \          hs.add(i);\n        }\n        return new ArrayList<>(hs);\n}\n   \
    \ public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ list = new ArrayList<>();\n        list.add(0);\n        for(int i = 1; i <\
    \ l.size(); i++) {\n            Integer element = l.get(i);\n            if(list.contains(element))\n\
    \                continue;\n            list.add(element);\n        }\n      \
    \  return list;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<Integer>();\n\
    \        l.forEach(v->set.add(v));\n        l.forEach(v->{if(!set.contains(v))\
    \ set.remove(v); });\n        ArrayList<Integer> ret = new ArrayList<Integer>(set);\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        HashSet<Integer>\
    \ hs = new HashSet<>();\n        for (Integer i : l) {\n            hs.add(i);\n\
    \        }\n        return new ArrayList<>(hs);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for(int i : l) {\n            if(!u.contains(i)) {\n                u.add(i);\n\
    \            }\n        }\n        Collections.sort(u);\n        return u;\n}\n\
    \    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<>();\n\
    \        // We use a Set to keep track of unique elements\n        Set<Integer>\
    \ set = new HashSet<>();\n\n        // Add elements from l to set\n        for\
    \ (Integer i : l) {\n            if(!set.contains(i)) {\n                ret.add(i);\n\
    \                set.add(i);\n            }\n        }\n        // Return sorted\
    \ unique elements\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmfctgkor.java:28)\n"
  stdout: ''
  timestamp: 1660011673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // sort list\n        Collections.sort(l);\n\
    \n        // create list with unique values\n        ArrayList<Integer> uniqueList\
    \ = new ArrayList<>(l);\n\n        // sort list\n        Collections.sort(uniqueList);\n\
    \n        return uniqueList;\n}\n    public static void main(String[] args) {\n\
    \    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53jfekey.java:25)\n"
  stdout: ''
  timestamp: 1660011674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<>();\n\
    \        for (Integer i : l) {\n            hs.add(i);\n        }\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        for (Integer i : hs) {\n            result.add(i);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011674
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> r = new ArrayList<Integer>();\n\
    \        for(Integer e: l) {\n            if(!r.contains(e)) r.add(e);\n     \
    \   }\n        return r;\n}\n    public static void main(String[] args) {\n  \
    \  assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0hyden5.java:20)\n"
  stdout: ''
  timestamp: 1660011674
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        l.sort(new Comparator<Integer>() {\n            public int compare(Integer\
    \ x, Integer y) {\n                return x-y;\n            }\n        });\n \
    \       int i=0;\n        while(i < l.size()) {\n            if (u.contains(l.get(i)))\
    \ {\n                l.remove(i);\n            } else {\n                u.add(l.get(i));\n\
    \            }\n            i++;\n        }\n        return l;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vf7d6k4.java:31)\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        if (l.size() == 0) {\n            return\
    \ new ArrayList<Integer>();\n        }\n\n        HashSet<Integer> h = new HashSet<Integer>();\n\
    \        l.forEach((i) -> h.add(Integer.valueOf(i)));\n        return new ArrayList<Integer>(h);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> results = new ArrayList<Integer>();\n\
    \n        for (Integer element : l) {\n            if (results.contains(element))\
    \ {\n                continue;\n            }\n            results.add(element);\n\
    \        }\n\n        return results;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp6xmumh4.java:25)\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        result.addAll(l.stream().distinct().collect(Collectors.toList()));\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzxqgrs3t.java:18)\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (Integer i : l) {\n            if (!u.contains(i)) {\n          \
    \      u.add(i);\n            }\n        }\n        return u;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph48frtfz.java:22)\n"
  stdout: ''
  timestamp: 1660011674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> u = new HashSet<Integer>();\n\
    \        for (Integer i : l) {\n            if (!u.contains(i))\n            \
    \    u.add(i);\n        }\n        return new ArrayList<Integer>(u);\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n\
    \        HashSet<Integer> hashSet = new HashSet<Integer>();\n        for(Integer\
    \ i: l) {\n            if(!hashSet.contains(i)) {\n                list.add(i);\n\
    \                hashSet.add(i);\n            }\n        }\n        return list;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxrx3_w6e.java:24)\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        if (l == null || l.size() == 0) {\n\
    \            return new ArrayList<>();\n        }\n        Set<Integer> result\
    \ = new HashSet<Integer>(l);\n        result.retainAll(l);\n        return new\
    \ ArrayList<>(result);\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> seen = new HashSet<>();\n\
    \        for(Integer i : l) {\n            if(seen.contains(i)) continue;\n  \
    \          seen.add(i);\n            l.add(i);\n        }\n        return l;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.unique(tmpfan_8w7u.java:14)\n\
    \tat Problem.main(tmpfan_8w7u.java:22)\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> result = new ArrayList<Integer>(s);\n        ArrayList<Integer>\
    \ sorted = new ArrayList<Integer>(l);\n        Collections.sort(sorted);\n   \
    \     return sorted;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4w1fqgtk.java:20)\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> result = new ArrayList<Integer>(set);\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> uniques = new LinkedHashSet<>();\n\
    \        uniques.addAll(l);\n        ArrayList<Integer> uniqueList = new ArrayList<>(uniques);\n\
    \        Collections.sort(uniqueList);\n        return uniqueList;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        Set<Integer> set = new HashSet<Integer>();\n\n        for(Integer item\
    \ : l)\n            if(!set.contains(item))\n                ret.add(item);\n\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfpf2l4r3.java:23)\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        if (l.size() == 0)\n            return\
    \ l;\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i\
    \ = 0; i < l.size(); i++) {\n            map.put(l.get(i), i);\n        }\n  \
    \      ArrayList<Integer> uniques = new ArrayList<>();\n        for (Integer i\
    \ : map.keySet()) {\n            if (!uniques.contains(i)) {\n               \
    \ uniques.add(i);\n            }\n        }\n        return uniques;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<Integer>();\n\
    \        ArrayList<Integer> ret = new ArrayList<Integer>();\n        for(int i\
    \ : l)\n            set.add(l.indexOf(i));\n        for(Integer i : set)\n   \
    \         ret.add(i);\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfc33_5s7.java:22)\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<>(l);\n\
    \        return new ArrayList<>(set);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!u.contains(i)) {\n              \
    \  u.add(i);\n            }\n        }\n        return u;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqvvssqru.java:22)\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream()\n                .distinct()\n\
    \                .sorted()\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        for (Integer i : l) {\n            hs.add(i);\n        }\n        return\
    \ new ArrayList<Integer>(hs);\n}\n    public static void main(String[] args) {\n\
    \    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.stream().sorted().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx7hkd12h.java:17)\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> uniques = new HashSet<>();\n\
    \        for(Integer i : l)\n            uniques.add(i);\n        return new ArrayList<>(uniques);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Map<Integer, Integer> count = new HashMap<>();\n\
    \        l.forEach((x) -> count.merge(x, 1, Integer::sum));\n        l.forEach((x)\
    \ -> count.merge(x, 1, Integer::sum));\n        ArrayList<Integer> result = new\
    \ ArrayList<>(count.keySet());\n        result.sort((a, b) -> Integer.compare(count.get(a),\
    \ count.get(b)));\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqipzm_4a.java:21)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < l.size(); i++) {\n            if(!u.contains(l.get(i)))\n\
    \                u.add(l.get(i));\n        }\n        return u;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq_g1pq_m.java:21)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        List<Integer> result = new ArrayList<Integer>();\n\
    \        for(Integer i : l)\n            if(result.contains(i))\n            \
    \    continue;\n            else\n                result.add(i);\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp87vepk5o.java:20: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> h = new HashSet<Integer>();\n\
    \        for (Integer i : l)\n            if (h.add(i))\n                l.add(i);\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.unique(tmp06vzdnzo.java:14)\n\
    \tat Problem.main(tmp06vzdnzo.java:20)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>(l);\n\
    \        for(int i : l) {\n            if(!result.contains(i)) {\n           \
    \     result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09mlizvu.java:23)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int count = 0;\n        for (int i = 0; i < l.size(); i++) {\n      \
    \      if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \                count++;\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqz5o7b1_.java:24)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        Map<Integer, Integer> map = new HashMap<>();\n        for(Integer i :\
    \ l) {\n            if(map.containsKey(i)) {\n                Integer previous\
    \ = map.get(i);\n                map.put(i, previous + 1);\n            } else\
    \ {\n                map.put(i, 1);\n            }\n        }\n        for(Integer\
    \ i : map.keySet()) {\n            if(map.get(i) > 1) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5vsr5dl.java:31)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        l.stream().filter(u -> !result.contains(u)).sorted().forEach(result ->\
    \ result.add(u));\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl2aclia3.java:14: error: variable result is already defined in\
    \ method unique(ArrayList<Integer>)\n        l.stream().filter(u -> !result.contains(u)).sorted().forEach(result\
    \ -> result.add(u));\n                                                       \
    \              ^\n/tmp/tmpl2aclia3.java:14: error: cannot find symbol\n      \
    \  l.stream().filter(u -> !result.contains(u)).sorted().forEach(result -> result.add(u));\n\
    \                                                                            \
    \              ^\n  symbol:   variable u\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<>();\n\
    \        ArrayList<Integer> a = new ArrayList<>(l);\n        a.sort(null);\n \
    \       a.forEach(x -> {\n            if (!set.contains(x)) {\n              \
    \  set.add(x.intValue());\n                a.add(x);\n            }\n        });\n\
    \        return a;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1513)\n\tat Problem.unique(tmprkniimd8.java:16)\n\
    \tat Problem.main(tmprkniimd8.java:25)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        for (int i : l) {\n            if (hs.add(i)) {\n                l.add(i);\n\
    \            }\n        }\n        return l;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.unique(tmpl3tbw4_y.java:14)\n\
    \tat Problem.main(tmpl3tbw4_y.java:22)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<Integer>();\n\
    \        l.stream().forEach(v -> set.add(v));\n        return set.stream().sorted().collect(Collectors.toCollection(ArrayList<Integer>::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        for(Integer i : l)\n            if(!u.contains(i)) u.add(i);\n      \
    \  return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdywkz1f1.java:19)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        for(Integer i : l)\n            if(!hs.contains(i)) hs.add(i);\n    \
    \    return new ArrayList<Integer>(hs);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        ArrayList<Integer>\
    \ u = new ArrayList<>();\n        Set<Integer> set = new HashSet<>();\n      \
    \  for (Integer i : l)\n            if (!set.add(i))\n                u.add(i);\n\
    \        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz6ior9sk.java:22)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for(int i : l)\n            if(!u.contains(i))\n                u.add(i);\n\
    \        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1y4uqa0a.java:20)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (Integer i : l) {\n            if (!ans.contains(i)) {\n        \
    \        ans.add(i);\n            }\n        }\n        return ans;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93n_n2dz.java:22)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        for (int i : l) u.add(i);\n        Set<Integer> set = new LinkedHashSet<Integer>(l);\n\
    \        ArrayList<Integer> r = new ArrayList<>(set);\n        r.sort(null);\n\
    \        return r;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        // Using LinkedHashMap to maintain insertion order\n        LinkedHashMap<Integer,\
    \ Integer> m = new LinkedHashMap<>();\n        // Using stream to convert list\
    \ into map entries\n        l.stream().forEach(e -> m.put(e, m.get(e) + 1));\n\
    \        // Converting map entries into sorted list\n        m.entrySet().stream().sorted(Map.Entry.<Integer,\
    \ Integer>comparingByValue()\n                .reversed()).forEach(e -> result.add(e.getKey()));\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Integer.intValue()\" because the return value of \"java.util.LinkedHashMap.get(Object)\"\
    \ is null\n\tat Problem.lambda$unique$0(tmp9pdie0bl.java:17)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\
    \tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\
    \tat Problem.unique(tmp9pdie0bl.java:17)\n\tat Problem.main(tmp9pdie0bl.java:24)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<>(l);\n\
    \        return hs.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011677
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> results = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> resultSet = new ArrayList<Integer>();\n        for\
    \ (int i : l) {\n            if (!resultSet.contains(i)) {\n                resultSet.add(i);\n\
    \                results.add(i);\n            }\n        }\n        return results;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpplqep06f.java:24)\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        final Set<Integer> seen = new HashSet<>();\n\
    \        final ArrayList<Integer> list = new ArrayList<>(l);\n        Collections.sort(list);\n\
    \        for (Integer i : list) {\n            if (seen.contains(i)) {\n     \
    \           continue;\n            }\n            seen.add(list);\n          \
    \  list.add(i);\n        }\n        return list;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpww51h3pb.java:20: error: incompatible types: ArrayList<Integer>\
    \ cannot be converted to Integer\n            seen.add(list);\n              \
    \       ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<>();\n\
    \        for (int i=0;i<l.size();i++)\n            for (int j=i;j<l.size();j++)\
    \ {\n                if (l.get(i) == l.get(j))\n                    break;\n \
    \               else if (l.get(i) < l.get(j))\n                    ret.add(l.get(i));\n\
    \                else\n                    ret.add(l.get(j));\n            }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkbmn2il4.java:26)\n"
  stdout: ''
  timestamp: 1660011677
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<>();\n\
    \        HashSet<Integer> set = new HashSet<>();\n        for (int i : l) {\n\
    \            if (!set.contains(i)) {\n                res.add(i);\n          \
    \      set.add(i);\n            }\n        }\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb8gvp6g9.java:24)\n"
  stdout: ''
  timestamp: 1660011677
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // Create set to hold unique elements\n\
    \        Set<Integer> u = new HashSet<>();\n        // Copy array elements\n \
    \       List<Integer> unsorted = new ArrayList<>(l);\n        Collections.sort(unsorted);\n\
    \        // Copy unique elements into set\n        for (Integer val : unsorted)\
    \ {\n            if (u.contains(val)) {\n                continue;\n         \
    \   }\n            u.add(val);\n        }\n        // Create new array\n     \
    \   ArrayList<Integer> usorted = new ArrayList<>(l);\n        // Copy unique elements\
    \ into new array\n        for (Integer val : u) {\n            usorted.add(val);\n\
    \        }\n        return usorted;\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3m00v4sw.java:34)\n"
  stdout: ''
  timestamp: 1660011677
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // Create new ArrayList to hold unique\
    \ elements\n        ArrayList<Integer> u = new ArrayList<>();\n\n        // Iterate\
    \ through original list and add unique elements to new list\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i))) {\n    \
    \            u.add(l.get(i));\n            }\n        }\n\n        return u;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8hx29vsw.java:26)\n"
  stdout: ''
  timestamp: 1660011677
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<>(l);\n\
    \        Collections.sort(res);\n        return res;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6gdhnpnh.java:18)\n"
  stdout: ''
  timestamp: 1660011677
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        List<Integer>\
    \ result = new ArrayList<>();\n        HashSet<Integer> hashSet = new HashSet<>();\n\
    \        for (Integer i : l) {\n            if (!hashSet.contains(i)) {\n    \
    \            result.add(i);\n                hashSet.add(i);\n            }\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpip6s0rpo.java:22: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011677
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        final ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (Integer element : l) {\n            if (!u.contains(element)) {\n\
    \                u.add(element);\n            }\n        }\n        return u;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfvxoher.java:22)\n"
  stdout: ''
  timestamp: 1660011677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<Integer>(l);\n\
    \        return new ArrayList<Integer>(set);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011677
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Map<Integer, Integer> map = new HashMap<>();\n\
    \        l.forEach(x -> {\n            if (map.containsKey(x)) {\n           \
    \     map.put(x, map.get(x) + 1);\n            } else {\n                map.put(x,\
    \ 1);\n            }\n        });\n        Set<Entry<Integer, Integer>> set =\
    \ map.entrySet();\n        ArrayList<Integer> result = new ArrayList<>();\n  \
    \      Iterator<Entry<Integer, Integer>> iter = set.iterator();\n        while\
    \ (iter.hasNext()) {\n            Entry<Integer, Integer> entry = iter.next();\n\
    \            result.add(entry.getKey());\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr76z0jqz.java:21: error: cannot find symbol\n        Set<Entry<Integer,\
    \ Integer>> set = map.entrySet();\n            ^\n  symbol:   class Entry\n  location:\
    \ class Problem\n/tmp/tmpr76z0jqz.java:23: error: cannot find symbol\n       \
    \ Iterator<Entry<Integer, Integer>> iter = set.iterator();\n                 ^\n\
    \  symbol:   class Entry\n  location: class Problem\n/tmp/tmpr76z0jqz.java:25:\
    \ error: cannot find symbol\n            Entry<Integer, Integer> entry = iter.next();\n\
    \            ^\n  symbol:   class Entry\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        return\
    \ l.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n}\n\
    \    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<>();\n\
    \        for (Integer i : l) {\n            set.add(i);\n        }\n        ArrayList<Integer>\
    \ unique = new ArrayList<>(set);\n        unique.removeAll(Collections.singleton(Integer.MIN_VALUE));\n\
    \        Collections.sort(unique);\n        return unique;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        Set<Integer> s = new HashSet<Integer>(l);\n        for(Integer x : l)\
    \ {\n            if (!s.contains(x)) {\n                s.add(x);\n          \
    \      u.add(x);\n            }\n        }\n        return u;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwqsv7gi9.java:24)\n"
  stdout: ''
  timestamp: 1660011678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<>();\n\
    \        ArrayList<Integer> u = new ArrayList<>(l);\n        u.sort(Comparator.reverseOrder());\n\
    \        for(Integer i : u) {\n            if(!set.contains(i)) {\n          \
    \      set.add(i);\n            }\n        }\n        return new ArrayList<Integer>(set);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> unique = new ArrayList<Integer>(l);\n\
    \        Collections.sort(unique);\n        return unique;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmporivp8cv.java:18)\n"
  stdout: ''
  timestamp: 1660011678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        l.stream().sorted().distinct().forEach((e) -> res.add(e));\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        List<Integer> temp = new ArrayList<>();\n\
    \        l.stream().distinct().forEach(x -> temp.add(x));\n        return new\
    \ ArrayList<>(temp);\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp55m84xva.java:18)\n"
  stdout: ''
  timestamp: 1660011678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        ArrayList<Integer> res = new ArrayList<Integer>();\n        for(Integer\
    \ i : l) hs.add(i);\n        for(Integer i : hs) res.add(i);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0kbf9c09.java:16)\n"
  stdout: ''
  timestamp: 1660011678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream().distinct().sorted().collect(ArrayList::new,\
    \ ArrayList::add, ArrayList::addAll);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream().distinct().sorted().collect(toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuhj1xgxu.java:13: error: cannot find symbol\n        return l.stream().distinct().sorted().collect(toCollection(ArrayList::new));\n\
    \                                                      ^\n  symbol:   method toCollection(ArrayList::new)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        if (l.size() == 0) {\n            return\
    \ l;\n        }\n        ArrayList<Integer> r = new ArrayList<>();\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.contains(l.get(i + 1))\
    \ && l.get(i + 1) != l.get(i)) {\n                r.add(l.get(i));\n         \
    \   }\n        }\n        return r;\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6wi62kny.java:25)\n"
  stdout: ''
  timestamp: 1660011678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Arrays.sort(l);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            boolean duplicate = false;\n            for (int j = i; j < l.size();\
    \ j++) {\n                if (l.get(i) == l.get(j)) {\n                    duplicate\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!duplicate)\n                result.add(l.get(i));\n        }\n \
    \       return result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgzg4gk1_.java:13: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> unique = new ArrayList<>();\n\
    \        for (Integer i : l)\n            if (unique.contains(i))\n          \
    \      continue;\n            else\n                unique.add(i);\n        return\
    \ unique;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8cz8vx5.java:22)\n"
  stdout: ''
  timestamp: 1660011678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            int el = l.get(i);\n\
    \            boolean contains = false;\n            for (int j = 0; j < u.size();\
    \ j++) {\n                if (el == u.get(j)) {\n                    contains\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!contains) {\n                u.add(el);\n            }\n       \
    \ }\n        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph2nrz8m5.java:30)\n"
  stdout: ''
  timestamp: 1660011678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        // remove duplicates\n        Set<Integer> set = new HashSet<Integer>(l);\n\
    \        res=new ArrayList<Integer>(set);\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        for (int i : l)\n            hs.add(i);\n        ArrayList<Integer> result\
    \ = new ArrayList<Integer>(hs);\n        Collections.sort(result);\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011679
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> h = new HashSet<Integer>();\n\
    \        ArrayList<Integer> s = new ArrayList<Integer>();\n        for(int i :\
    \ l)\n            h.add(l.indexOf(i));\n            Iterator<Integer> it = h.iterator();\n\
    \            while(it.hasNext()) {\n                s.add(it.next());\n      \
    \      }\n        return s;\n}\n    public static void main(String[] args) {\n\
    \    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8cfhwmxi.java:24)\n"
  stdout: ''
  timestamp: 1660011679
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> uniqueSet = new HashSet<Integer>();\n\
    \        l.stream().mapToInt(Integer::intValue).forEach(uniqueSet::add);\n   \
    \     ArrayList<Integer> unique = new ArrayList<Integer>(uniqueSet);\n       \
    \ Collections.sort(unique);\n        return unique;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011679
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // Add this class to the list of classes\n\
    \        Problem.class.getMethod(\"unique\", List.class).invoke(null, l);\n  \
    \      return null;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1gwimpqt.java:14: error: unreported exception NoSuchMethodException;\
    \ must be caught or declared to be thrown\n        Problem.class.getMethod(\"\
    unique\", List.class).invoke(null, l);\n                               ^\n/tmp/tmp1gwimpqt.java:14:\
    \ error: unreported exception IllegalAccessException; must be caught or declared\
    \ to be thrown\n        Problem.class.getMethod(\"unique\", List.class).invoke(null,\
    \ l);\n                                                            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            for (int j = i; j <\
    \ l.size(); j++) {\n                if (l.get(i).compareTo(l.get(j)) == 0) {\n\
    \                    ret.add(l.get(i));\n                    j--;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ ret;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fmeoeym.java:26)\n"
  stdout: ''
  timestamp: 1660011679
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<>();\n\
    \        l.forEach(i -> s.add(i));\n        return new ArrayList<Integer>(s);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011679
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> u = new ArrayList<Integer>();\n        u.addAll(s);\n\
    \        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011679
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> l2 = new ArrayList<>();\n\
    \        for(Integer i : l) {\n            if (!l2.contains(i)) {\n          \
    \      l2.add(i);\n            }\n        }\n        return l2;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphe5b8bfk.java:22)\n"
  stdout: ''
  timestamp: 1660011679
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ u = new ArrayList<Integer>(l);\n        Collections.reverse(u);\n        return\
    \ u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ziajqy6.java:19)\n"
  stdout: ''
  timestamp: 1660011679
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<>();\n\
    \        l.stream().distinct().forEach(u::add);\n        l.sort(Integer::compareTo);\n\
    \        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_8_stct0.java:19)\n"
  stdout: ''
  timestamp: 1660011679
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            boolean found = false;\n\
    \            for (int j = 0; j < res.size(); j++) {\n                if (l.get(i)\
    \ == res.get(j)) {\n                    found = true;\n                    break;\n\
    \                }\n            }\n            if (!found) {\n               \
    \ res.add(l.get(i));\n            }\n        }\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssgsvvmb.java:29)\n"
  stdout: ''
  timestamp: 1660011679
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> hs = new HashSet<Integer>();\n\
    \        for (Integer i : l) {\n            if (!hs.add(i)) {\n              \
    \  return l;\n            }\n        }\n        return l;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwtaq6xcs.java:22)\n"
  stdout: ''
  timestamp: 1660011679
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<>();\n\
    \        for(Integer i : l) set.add(i);\n        return new ArrayList<>(set);\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011669
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> a = new ArrayList<>();\n\
    \        for(Integer i : l) {\n            if(!a.contains(i)) {\n            \
    \    a.add(i);\n            }\n        }\n        return a;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe032xh4w.java:22)\n"
  stdout: ''
  timestamp: 1660011679
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        \n        // add all the element in the list\n        result.addAll(l);\n\
    \n        Collections.sort(result);\n        \n        // remove the duplicate\
    \ entries\n        Set<Integer> set = new HashSet<Integer>();\n        set.addAll(result);\n\
    \        result.clear();\n        result.addAll(set);\n        \n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011679
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        int i = 0;\n        for (; i < l.size(); i++) {\n            if (i ==\
    \ 0 || l.get(i) != l.get(i-1)) {\n                ret.add(l.get(i));\n       \
    \     }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6s3ql4hm.java:23)\n"
  stdout: ''
  timestamp: 1660011679
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        List<Integer> result = new ArrayList<>();\n\
    \        l.forEach(e -> result.add(e));\n        Collections.sort(result);\n \
    \       return result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxhc27pm5.java:16: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011679
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            for (int j = i+1; j\
    \ < l.size(); j++) {\n                if (l.get(i).compareTo(l.get(j)) < 0) {\n\
    \                    ret.add(l.get(i));\n                    i = j;\n        \
    \        }\n            }\n        }\n        return ret;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgjqmvts1.java:25)\n"
  stdout: ''
  timestamp: 1660011679

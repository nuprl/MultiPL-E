language: java
name: HumanEval_63_fibfib
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n==0)\n            return 0;\n        if(n==1)\n\
    \            return 1;\n        if(n==2)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpesflydjt.java:31)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1 || n == 2) {\n           \
    \ return n;\n        } else if (n % 2 == 0) {\n            return fibfib(n / 2)\
    \ + fibfib((n / 2) - 1);\n        } else {\n            return fibfib(n / 3) +\
    \ fibfib((n / 3) - 1);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiy01wj2d.java:31)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\n\
    \        if (n == 1) {\n            return 0;\n        }\n        if (n == 2)\
    \ {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011692
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        if (n == 3) return 2;\n        return\
    \ fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuzma61xg.java:31)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 1)\n            return 0;\n        if\
    \ (n == 2)\n            return 1;\n        return fibfib(n - 1) + fibfib(n - 2)\
    \ + fibfib(n - 3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpv14ke5mw.java:22)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.java:26)\n\tat Problem.fibfib(tmpv14ke5mw.java:26)\n\
    \tat Problem.fibfib(tmpv14ke5mw.j"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // TODO: Write the code here\n        if(n == 0){\n\
    \            return 0;\n        }\n        if(n > 0 && n <= 3){\n            return\
    \ n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcdtde8cv.java:32)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbujw4731.java:27)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 0)\n            return -1;\n        if\
    \ (n == 0 || n == 1)\n            return 0;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjjlq60hv.java:29)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\
    \ else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n  \
    \          return 1;\n        } else if (n >= 3) {\n            return fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3);\n        } else {\n            throw new\
    \ RuntimeException(\"Cannot compute fibfib(\" + n + \")\");\n        }\n}\n  \
    \  public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmgkkt6nd.java:36)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // Write your code here\n        int result = 0,\
    \ f1 = 1;\n        for (int i = 1; i <= n; i++) {\n            result += f1;\n\
    \            f1 = f1 * f1;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprac001bj.java:31)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int result = 0;\n        for(int i = 0; i < n;\
    \ i++) {\n            result = result + i;\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkzvnz6h4.java:31)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n == 0) {\n            return 0;\n        }\n\
    \        if(n == 1) {\n            return 0;\n        }\n        if(n == 2) {\n\
    \            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        return (int) Math.pow(Math.E, n - 1) + \n     \
    \       (int) Math.pow(Math.E, n - 2) + \n            (int) Math.pow(Math.E, n\
    \ - 3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdni1bpn9.java:27)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 2) return n;\n        int fib1 = fibfib(n-1)\
    \ + fibfib(n-2);\n        int fib2 = fibfib(n-3) + fibfib(n-2);\n        int fib3\
    \ = fibfib(n-1) + fibfib(n-2);\n        return fib1 + fib2 + fib3;\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy8uvn8iz.java:29)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int[] a = new int[n];\n        for (int i = 0;\
    \ i < n; i++) {\n            a[i] = fib(i);\n        }\n        return a[n];\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphxzud6fi.java:24: error: cannot find symbol\n            a[i] =\
    \ fib(i);\n                   ^\n  symbol:   method fib(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return n;\n\
    \        }\n        int a = fibfib(n-2);\n        int b = fibfib(n-3);\n     \
    \   return a + b + fibfib(n-4);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.java:25)\n\tat Problem.fibfib(tmp4_najt4w.java:25)\n\
    \tat Problem.fibfib(tmp4_najt4w.j"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // write your code for function here\n        return\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp69of882i.java:26)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n <= 1)\n            return 0;\n        return\
    \ fibfib(n-2) + fibfib(n-1);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu3p98v1h.java:27)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibfib[] = new int[n + 1];\n        fibfib[0]\
    \ = 0;\n        fibfib[1] = 0;\n        fibfib[2] = 1;\n        fibfib[3] = fibfib[2]\
    \ + fibfib[1];\n        for (int i = 4; i <= n; i++) {\n            fibfib[i]\
    \ = fibfib[i - 1] + fibfib[i - 2];\n        }\n        return fibfib[n];\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 3 out of bounds for length 3\n\tat Problem.fibfib(tmpsmekshde.java:26)\n\
    \tat Problem.main(tmpsmekshde.java:33)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n < 1 || n > 99) throw new IllegalArgumentException(\"\
    n must be between 1 and 99\");\n        // Create a map with keys the current\
    \ value and the value plus the current value\n        Map<Integer, Integer> fib\
    \ = IntStream.range(0,n).boxed().collect(Collectors.toMap(i -> i, i -> i+i));\n\
    \        // Iterate over the map and return the key corresponding to the value\
    \ plus itself\n        return fib.get(fib.values().stream().mapToInt(Integer::intValue).sum());\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Integer.intValue()\" because the return value of \"java.util.Map.get(Object)\"\
    \ is null\n\tat Problem.fibfib(tmpc2mc01_i.java:26)\n\tat Problem.main(tmpc2mc01_i.java:29)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 3) {\n            return 0;\n        }\n\
    \        if (n == 3) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe95875z8.java:31)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\
    \ else if (n <= 2) {\n            return 1;\n        } else {\n            return\
    \ fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_b__be_3.java:32)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0) {\n            return 0;\n        }\
    \ else if (n == 1) {\n            return 0;\n        } else if (n == 2) {\n  \
    \          return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\tat Problem.fibfib(tmpsmvq_gf8.java:24)\n\
    \tat Problem.fibfib(tmpsmvq_gf8.j"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibfib = 0;\n        fibfib = 0;\n        return\
    \ fibfib;\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplt_0sgik.java:27)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibonacci = 0;\n        if (n == 0) {\n   \
    \         fibonacci = 0;\n        }\n        else if (n == 1) {\n            fibonacci\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibonacci = 1;\n  \
    \      }\n        else if (n == 3) {\n            fibonacci = 1;\n        }\n\
    \        else {\n            fibonacci = fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n        }\n        return fibonacci;\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        return fibfib0(n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmh5i3rww.java:22: error: cannot find symbol\n        return fibfib0(n);\n\
    \               ^\n  symbol:   method fibfib0(int)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 3) {\n            return 0;\n        }\n\
    \        return fibfib(n-3) + fibfib(n-2) + fibfib(n-1);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptzk5id8x.java:28)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int ret = 0;\n        for(int i=1; i<=n; i++) {\n\
    \            ret = ret + i;\n        }\n        return ret;\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpecp0dk3r.java:29)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz59_yrka.java:32)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\n\
    \        if (n == 1) {\n            return 1;\n        }\n        if (n == 2)\
    \ {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv31cb750.java:35)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        Stack<Integer> s = new Stack<>();\n        int\
    \ fibonacci = 1;\n        int fibfib = 0;\n\n        // The first fibonacci number\
    \ is the fibonacci number itself, as it is equal to itself,\n        // or 0.\
    \ The second is the second fibonacci number which is the sum of both numbers,\n\
    \        // so 1 + 2 = 3.\n        if (n == 0) {\n            fibonacci = 0;\n\
    \            fibfib = 0;\n        }\n\n        // The third fibonacci number is\
    \ the sum of the second and first fibonacci number, so\n        // 3 + 1 = 4.\n\
    \        else if(n == 1) {\n            fibonacci = 0;\n            fibfib = 0;\n\
    \        }\n\n        // The third fibonacci number is the sum of the second and\
    \ third fibonacci number, so\n        // 4 + 3 = 7.\n        else if(n == 2) {\n\
    \            fibonacci = 0;\n            fibfib = 1;\n        }\n\n        //\
    \ The third fibonacci number is the sum of the second and forth fibonacci number,\
    \ so\n        // 7 + 4 = 11.\n        else if(n >= 3) {\n            fibonacci\
    \ = fibfib(n - 2) + fibfib(n - 1);\n            fibfib = fibfib + fibfib(n - 3);\n\
    \        }\n\n        // The fourth fibonacci number is the sum of the third and\
    \ forth fibonacci number, so\n        // 11 + 7 = 14.\n        else if(n >= 4)\
    \ {\n            fibonacci = fibfib(n - 3) + fibfib(n - 2);\n            fibfib\
    \ = fibfib + fibfib(n - 4);\n        }\n\n        // The fifth fibonacci number\
    \ is the sum of the fourth and fifth fibonacci number, so\n        // 14 + 11\
    \ = 19\n        else if(n >= 5) {\n            fibonacci = fibfib(n - 4) + fibfib(n\
    \ - 3);\n            fibfib = fibfib + fibfib(n - 5);\n        }\n\n        //\
    \ The sixth fibonacci number is the sum of the fifth and sixth fibonacci number,\
    \ so\n        // 19 + 14 = 25.\n        else if(n >= 6) {\n            fibonacci\
    \ = fibfib(n - 5) + fibfib(n - 4);\n            fibfib = fibfib + fibfib(n - 6);\n\
    \        }\n\n        // The seventh fibonacci number is the sum of the sixth\
    \ and seventh fibonacci number, so\n        // 25 + 19 = 29.\n        else if(n\
    \ >= 7) {\n            fibonac\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnv65p3bi.java:79: error: not a statement\n            fibonac\n\
    \            ^\n/tmp/tmpnv65p3bi.java:79: error: ';' expected\n            fibonac\n\
    \                   ^\n/tmp/tmpnv65p3bi.java:81: error: illegal start of expression\n\
    \    public static void main(String[] args) {\n    ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\n\
    \        if (n == 1) {\n            return 0;\n        }\n        if (n == 2)\
    \ {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011692
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n==0){\n            return 0;\n        }\n \
    \       if(n==1){\n            return 0;\n        }\n        if(n==2){\n     \
    \       return 1;\n        }\n        return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        Integer result = new Integer(0);\n        for(int\
    \ i = 2; i <= n; i++) {\n            result = result + new Integer(i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwq86xz_i.java:29)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\
    \ else if (n == 1) {\n            return 0;\n        } else if (n == 2) {\n  \
    \          return 1;\n        }\n        return fibfib(n - 1) + fibfib(n - 2)\
    \ + fibfib(n - 3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n==0 || n==1 || n==2)\n            return n;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8rr1z9dt.java:27)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 0)\n            throw new IllegalArgumentException();\n\
    \        if (n <= 3)\n            return 0;\n        if (n > 3)\n            return\
    \ fibfib(n - 3) + fibfib(n - 2) + fibfib(n - 1);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpgsjrld9u.java:28: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // write your solution here\n        return 0;\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt6mdlaxd.java:26)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 2)\n            return 0;\n        if\
    \ (n == 3)\n            return 1;\n        if (n == 0)\n            return 0;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5xmgtk61.java:31)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0)\n            return 0;\n        else\
    \ if (n == 1)\n            return 1;\n        else if (n == 2)\n            return\
    \ 1;\n        else return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3kuoa1e.java:32)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0) {\n            return 0;\n        }\n\
    \        if (n <= 1) {\n            return 1;\n        }\n        return fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzlq4xmaj.java:32)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if ( n<0 ) {\n            throw new ArithmeticException(\"\
    n must be non-negative\");\n        }\n        if ( n==0 ) {\n            return\
    \ 0;\n        }\n        if ( n==1 ) {\n            return 0;\n        }\n   \
    \     if ( n==2 ) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 2) return 0;\n        return fibfib(n\
    \ - 2) + fibfib(n - 3) + fibfib(n - 4);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1r0qwd5b.java:26)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n==0)\n            return 0;\n        if(n==1)\n\
    \            return 1;\n        if(n==2)\n            return 1;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpua9cqvw1.java:32)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int a = 0, b = 1;\n        for (int i = 1; i <=\
    \ n; i++) {\n            a = b;\n            b = a + b;\n        }\n        return\
    \ a;\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpio7j6xj1.java:30)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // write your code here\n        if(n<=3){\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu_kz3cs9.java:29)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-2) + fibfib(n-1);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbv7expeu.java:28)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n == 0) return 0;\n        if(n == 1) return\
    \ 0;\n        if(n == 2) return 1;\n        if(n < 1) throw new RuntimeException(\"\
    Invalid input \" + n + \" < 1\");\n        \n        \n        Stack<Integer>\
    \ fib = new Stack<Integer>();\n        \n        \n        \n        \n      \
    \  \n        int value = fibfib(n-1);\n        int value2 = fibfib(n-2);\n   \
    \     int value3 = fibfib(n-3);\n        \n        if(fib.size() == 3){\n    \
    \        int value4 = (Integer)fib.pop();\n            int value5 = (Integer)fib.pop();\n\
    \            int value6 = (Integer)fib.pop();\n            int value = value4\
    \ + value5 + value6;\n        }\n        fib.push(value);\n        fib.push(value2);\n\
    \        fib.push(value3);\n        \n        \n        \n        \n        return\
    \ fib.pop();\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd0n8t_9l.java:42: error: variable value is already defined in method\
    \ fibfib(int)\n            int value = value4 + value5 + value6;\n           \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0)\n            return 0;\n        else\
    \ if (n == 1)\n            return 1;\n        else\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpuhj38zug.java:22)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.java:27)\n\tat Problem.fibfib(tmpuhj38zug.java:27)\n\
    \tat Problem.fibfib(tmpuhj38zug.j"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        List<Integer> fibbonacci = new ArrayList<>();\n\
    \        fibbonacci.add(0);\n        fibbonacci.add(1);\n        int fibfib2 =\
    \ 1;\n        int fibfib3 = 1;\n        for (int i = 2; i <= n; i++) {\n     \
    \       fibfib2 = fibfib3;\n            fibfib3 = fibfib2 + fibfib3;\n       \
    \     fibbonacci.add(i);\n        }\n        return fibbonacci.get(n - 1);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfp09i5bc.java:38)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\n\
    \        if (n == 1) {\n            return 1;\n        }\n        if (n == 2)\
    \ {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv31cb750.java:35)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n==0) {\n            return 0;\n        }\n\
    \        if(n==1) {\n            return 0;\n        }\n        if(n==2) {\n  \
    \          return 1;\n        }\n        return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n <= 0) return 0;\n        if(n <= 2) return\
    \ 1;\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpla2rsj3_.java:28)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 2) {\n            return 0;\n        }\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9asi9bb1.java:28)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.j"
  stdout: ''
  timestamp: 1660011813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n == 0) {\n            return 0;\n        }\
    \ else if(n == 1) {\n            return 0;\n        } else if(n == 2) {\n    \
    \        return 1;\n        } else if(n == 3) {\n            return 1;\n     \
    \   } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  \
    \      }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 1) {\n            return 0;\n        }\
    \ else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n      \
    \  }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.java:25)\n\tat Problem.fibfib(tmppj4yhtgz.java:25)\n\
    \tat Problem.fibfib(tmppj4yhtgz.j"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long l1 = fibfib(n-1);\n        long l2 = fibfib(n-2);\n \
    \       long l3 = fibfib(n-3);\n        long l4 = l1 + l2 + l3;\n        return\
    \ (int)Math.ceil(l4);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp5v0n3zt3.java:22)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\tat Problem.fibfib(tmp5v0n3zt3.java:25)\n\
    \tat Problem.fibfib(tmp5v0n3zt3.j"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\n\
    \        if (n == 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.java:28)\n\tat Problem.fibfib(tmppzjn1qt7.java:28)\n\
    \tat Problem.fibfib(tmppzjn1qt7.j"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 1) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0emxqmn.java:26)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        ArrayList list = new ArrayList();\n        for\
    \ (int i = 0; i < n; i++) {\n            list.add(i);\n        }\n        int\
    \ sum = 0;\n        for (Object object : list) {\n            int index = (int)\
    \ object;\n            sum += (index * index) % 12;\n        }\n        System.out.println(sum);\n\
    \        return sum;\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_1dggqg7.java:37)\n"
  stdout: '1

    0

    18

    '
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\tat Problem.fibfib(tmpqkkw9b6_.java:25)\n\
    \tat Problem.fibfib(tmpqkkw9b6_.j"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        long fibfib0 = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        for (int i = 3;\
    \ i <= n; i++) {\n            fibfib1 = fibfib2;\n            fibfib2 = fibfib3;\n\
    \            fibfib3 = fibfib1 + fibfib2 + fibfib3;\n            fibfib0 = fibfib1\
    \ + fibfib2;\n        }\n        return (int)fibfib0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6xa8hkw.java:35)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.j"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 1) {\n            return 0;\n        }\n\
    \        if (n == 2) {\n            return 1;\n        }\n        int fib = fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3);\n        return fib;\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.java:28)\n\tat Problem.fibfib(tmp888ntit2.java:28)\n\
    \tat Problem.fibfib(tmp888ntit2.j"
  stdout: ''
  timestamp: 1660011814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        } else if (n == 2) {\n            return 1;\n        } else {\n     \
    \       return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n        }\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0)\n            return 0;\n\n        if\
    \ (n == 1)\n            return 0;\n        return fib(n - 1) + fib(n - 2) + fib(n\
    \ - 3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpayb7mefs.java:27: error: cannot find symbol\n        return fib(n\
    \ - 1) + fib(n - 2) + fib(n - 3);\n               ^\n  symbol:   method fib(int)\n\
    \  location: class Problem\n/tmp/tmpayb7mefs.java:27: error: cannot find symbol\n\
    \        return fib(n - 1) + fib(n - 2) + fib(n - 3);\n                      \
    \      ^\n  symbol:   method fib(int)\n  location: class Problem\n/tmp/tmpayb7mefs.java:27:\
    \ error: cannot find symbol\n        return fib(n - 1) + fib(n - 2) + fib(n -\
    \ 3);\n                                         ^\n  symbol:   method fib(int)\n\
    \  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n==0) return 0;\n        if(n==1) return 0;\n\
    \        if(n==2) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // Your code goes here\n        if (n <= 2) {\n\
    \            return 0;\n        } else if (n <= 5) {\n            return 1;\n\
    \        } else {\n            int x = fibfib(n-2);\n            int y = fibfib(n-3);\n\
    \            int z = fibfib(n-1);\n            return x + y + z;\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ns1lbgs.java:35)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 1) {\n            return 0;\n        }\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7kb3nayx.java:28)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0) {\n            return 0;\n        }\
    \ else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n      \
    \  }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2kl3ua8.java:29)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // Your code here\n        if (n == 0 || n == 1\
    \ || n == 2){\n            return 0;\n        }\n        return fibfib(n - 1)\
    \ + fibfib(n - 2) + fibfib(n - 3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpseu1mk_1.java:29)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibfib = 0;\n        if (n == 0)\n        \
    \    fibfib = 0;\n        if (n == 1)\n            fibfib = 0;\n        if (n\
    \ == 2)\n            fibfib = 1;\n        if (n == 3)\n            fibfib = 3;\n\
    \        if (n == 4)\n            fibfib = 7;\n        if (n == 5)\n         \
    \   fibfib = 11;\n        if (n == 6)\n            fibfib = 15;\n        if (n\
    \ == 7)\n            fibfib = 31;\n        if (n == 8)\n            fibfib = 120;\n\
    \        return fibfib;\n}\n    public static void main(String[] args) {\n   \
    \ assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxa8oz2jy.java:46)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 0) {\n            throw new RuntimeException(\"\
    Cannot compute fibfib number for n < 0!\");\n        }\n        if (n == 0) {\n\
    \            return 0;\n        } else if (n == 1) {\n            return 1;\n\
    \        } else if (n == 2) {\n            return 1;\n        } else if (n % 2\
    \ == 0) {\n            return fibfib(n-1) + fibfib(n-2);\n        } else {\n \
    \           return fibfib(n-1) + fibfib(n-3);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4c48753s.java:39)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int[] arr = new int[n];\n        Arrays.fill(arr,\
    \ 0);\n        arr[0] = arr[1] = 1;\n        arr[2] = arr[3] = 2;\n        for\
    \ (int i = 4; i <= n; i++) {\n            arr[i] = arr[i - 1] + arr[i - 2] + arr[i\
    \ - 3];\n        }\n        return arr[n];\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 3 out of bounds for length 2\n\tat Problem.fibfib(tmpi4xliim8.java:25)\n\
    \tat Problem.main(tmpi4xliim8.java:32)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int result;\n        if (n < 3) {\n           \
    \ result = 0;\n        } else if (n == 3) {\n            result = 1;\n       \
    \ } else if (n % 2 == 0) {\n            result = fibfib(n - 1) + fibfib(n - 2);\n\
    \        } else {\n            result = fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv4zu3obo.java:35)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0) return 0;\n        if (n <= 1) return\
    \ 0;\n        return fibfib(n-2) + fibfib(n-3) + fibfib(n-4);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpskkmpkp3.java:27)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0)\n            return 0;\n\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0kxdijk1.java:28)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int i, count = 1;\n        for (i = 2; i <= n;\
    \ i++) {\n            count += 2;\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp43jsqzbh.java:29)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // Write your code here\n        if(n == 0)\n \
    \           return 0;\n        if(n == 1)\n            return 1;\n        if(n\
    \ == 2)\n            return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8y7lpuu4.java:33)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\n\
    \        if (n == 1) {\n            return 0;\n        }\n        if (n == 2)\
    \ {\n            return 1;\n        }\n        int result = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\n\
    \        if (n == 1) {\n            return 1;\n        }\n        if (n == 2)\
    \ {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv31cb750.java:35)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        Map<Integer, Integer> map = new HashMap<>();\n\
    \        map.put(0, 0);\n        map.put(1, 0);\n        map.put(2, 1);\n    \
    \    map.put(n, map.get(n-1) + map.get(n-2) + map.get(n-3));\n        return map.get(n);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Integer.intValue()\" because the return value of \"java.util.Map.get(Object)\"\
    \ is null\n\tat Problem.fibfib(tmplga97572.java:26)\n\tat Problem.main(tmplga97572.java:30)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n == 0) return 0;\n        if(n == 1) return\
    \ 0;\n        if(n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n == 0) return 0;\n        if(n == 1) return\
    \ 0;\n        if(n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int[] arr = new int[n];\n        int arr0 = 0;\n\
    \        int arr1 = 1;\n        int arr2 = 2;\n        arr[0] = arr0;\n      \
    \  arr[1] = arr1;\n        arr[2] = arr2;\n        for (int i = 0; i < n; i++)\n\
    \            arr[i] = arr[i - 1] + arr[i - 2] + arr[i - 3];\n        return arr[n];\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 2 out of bounds for length 2\n\tat Problem.fibfib(tmphljbal__.java:28)\n\
    \tat Problem.main(tmphljbal__.java:34)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibfib = 0;\n        if (n == 0)\n        \
    \    fibfib = 0;\n        else if (n == 1)\n            fibfib = 1;\n        else\
    \ if (n == 2)\n            fibfib = 1;\n        else\n            fibfib = (fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3));\n\n        return fibfib;\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2gd0awtk.java:36)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 2;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprhfv2c5_.java:31)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n<0) return -1;\n        if(n==0) return 0;\n\
    \        if(n==1) return 0;\n        return fibfib(n-1)+fibfib(n-2);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqdw_3p80.java:28)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n == 0)\n            return 0;\n        if(n\
    \ == 1)\n            return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.java:26)\n\tat Problem.fibfib(tmp2lkzkabs.java:26)\n\
    \tat Problem.fibfib(tmp2lkzkabs.j"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        ArrayList <Integer> fibonacci = new ArrayList <Integer>\
    \ (n);\n        fibonacci.add (0);\n        fibonacci.add (1);\n        for (int\
    \ i = 2; i < n; i++) {\n            fibonacci.add((fibonacci.get((i - 1)) + fibonacci.get((i\
    \ - 2))));\n        }\n        return fibonacci.get(n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.fibfib(tmponz1pvb5.java:28)\n\tat Problem.main(tmponz1pvb5.java:31)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n >= 1 && n <= 2) {\n            return n;\n\
    \        } else if (n >= 3) {\n            return fibfib(n - 1) + fibfib(n - 2)\
    \ + fibfib(n - 3);\n        } else {\n            return 0;\n        }\n}\n  \
    \  public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnyi96zke.java:31)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0)\n            return 0;\n        else\
    \ if (n == 1)\n            return 1;\n        else if (n == 2)\n            return\
    \ 1;\n        else\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnikn0jan.java:33)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return n;\n\
    \        } else if (n == 2) {\n            return 1;\n        } else {\n     \
    \       return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmn4dq4q.java:32)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1 || n == 2) {\n           \
    \ return n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx02c8vra.java:28)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 1) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0emxqmn.java:26)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // Your code here\n        if (n == 0)\n      \
    \      return 0;\n        if (n == 1)\n            return 0;\n        if (n ==\
    \ 2)\n            return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n<2) return 0;\n        if(n==2) return 1;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fib_num_0 = 1;\n        int fib_num_1 = 1;\n\
    \        int fib_num_2 = 1;\n        if (n < 0) {\n            throw new ArithmeticException(\"\
    Negative numbers not allowed\");\n        } else {\n            while (n > 0)\
    \ {\n                fib_num_0 = fib_num_1 + fib_num_2;\n                fib_num_1\
    \ = fib_num_2;\n                fib_num_2 = fib_num_0;\n                --n;\n\
    \            }\n        }\n        return fib_num_0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0p77c4p0.java:38)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\n\
    \        if (n == 1) {\n            return 0;\n        }\n        if (n == 2)\
    \ {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011692
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int[] fibfib = new int[n + 1];\n        fibfib[0]\
    \ = 0;\n        fibfib[1] = 0;\n        fibfib[2] = 1;\n        int i = 2;\n \
    \       while (fibfib[i] <= n) {\n            fibfib[i] = fibfib[i-2] + fibfib[i-1]\
    \ + fibfib[i-3];\n            i += 1;\n        }\n        return fibfib[n];\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index -1 out of bounds for length 3\n\tat Problem.fibfib(tmp9ve9fedl.java:28)\n\
    \tat Problem.main(tmp9ve9fedl.java:34)\n"
  stdout: ''
  timestamp: 1660011815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011693
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        switch (n) {\n        case 0:\n            return\
    \ 0;\n        case 1:\n            return 0;\n        case 2:\n            return\
    \ 1;\n        default:\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 0) {\n            throw new IllegalArgumentException();\n\
    \        }\n        int curVal = 0;\n        int prevVal = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            curVal = prevVal + curVal;\n            prevVal\
    \ = curVal;\n        }\n        return curVal;\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01xiswqr.java:34)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n <= 0) {\n            return 0;\n        }\
    \ else if(n <= 2) {\n            return 0;\n        } else {\n            return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx1cv0srl.java:31)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0) {\n            return 0;\n        }\
    \ else if (n == 1 || n == 2) {\n            return 1;\n        } else {\n    \
    \        return fibfib(n - 1) + fibfib(n-2) + fibfib(n-3);\n        }\n}\n   \
    \ public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplbbijh8y.java:32)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n == 0)\n            return 0;\n        else\
    \ if (n == 1)\n            return 1;\n        else\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.java:27)\n\tat Problem.fibfib(tmp96cb14do.java:27)\n\
    \tat Problem.fibfib(tmp96cb14do.j"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        return fibfib(n-1);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.java:22)\n\tat Problem.fibfib(tmpoigbkg4f.java:22)\n\
    \tat Problem.fibfib(tmpoigbkg4f.j"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // TODO: replace this with your code here\n   \
    \     return 0;\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ncgdag_.java:26)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n >= 0 && n <= 1) return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.java:23)\n\tat Problem.fibfib(tmpe38oq5yd.java:23)\n\
    \tat Problem.fibfib(tmpe38oq5yd.j"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1 || n == 2) {\n           \
    \ return 0;\n        }\n        long start = 0;\n        long end = 0;\n     \
    \   int result = fibfib(n);\n        start = fibfib(n-1);\n        end = fibfib(n-2);\n\
    \        result += start + end;\n        return (int) result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpynwegvo7.java:34)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 1) {\n            return 0;\n        }\n\
    \        if (n == 2) {\n            return 1;\n        }\n        if (n == 0)\
    \ {\n            return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n < 0) throw new IllegalArgumentException(\"\
    The Fibonacci sequence is defined uppon fibfib(0), fibfib(1), fibfib(2), and fibfib(3)\"\
    );\n        if(n <= 1) return 0;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: The Fibonacci\
    \ sequence is defined uppon fibfib(0), fibfib(1), fibfib(2), and fibfib(3)\n\t\
    at Problem.fibfib(tmpljoy6qax.java:22)\n\tat Problem.fibfib(tmpljoy6qax.java:24)\n\
    \tat Problem.main(tmpljoy6qax.java:27)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n<2) return 0;\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_0t_7eiu.java:26)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 1) {\n            return 0;\n        }\
    \ else if (n == 0) {\n            return 0;\n        } else if (n == 2) {\n  \
    \          return 1;\n        } else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int result = 1;\n        for (int i = 0; i <= n;\
    \ i++) {\n            result = result + fibfib(i-1);\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6cj7d4v.java:29)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 1)\n            return 0;\n        else\
    \ if (n == 0)\n            return 1;\n        else if (n == 2)\n            return\
    \ 1;\n        else if (n <= 3)\n            return fibfib(n - 1) + fibfib(n -\
    \ 2) + fibfib(n - 3);\n        else\n            return fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3);\n}\n    public static void main(String[] args) {\n   \
    \ assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6npkwd1.java:36)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 1) return 0;\n        List<Integer> result\
    \ = new ArrayList<>();\n        result.add(0);\n        result.add(1);\n     \
    \   for (int i = 2; i < n; i++) {\n            result.add(result.get(i - 1) +\
    \ result.get(i - 2) + result.get(i - 3));\n        }\n        return result.get(n\
    \ - 1);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ -1 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.fibfib(tmpyj1nvzuo.java:27)\n\tat Problem.main(tmpyj1nvzuo.java:34)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 3)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6tvs6o2.java:27)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if ( n <= 1 ) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppzi1jyb8.java:26)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        return (int) Math.pow(fib(n), 3);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowduxu5m.java:22: error: cannot find symbol\n        return (int)\
    \ Math.pow(fib(n), 3);\n                              ^\n  symbol:   method fib(int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 1) {\n            return 0;\n        }\n\
    \        if (n >= 2) {\n            return 1;\n        }\n        int sum = 0;\n\
    \        for (int i = 1; i <= n; i++) {\n            int tmp = fibfib(i-1);\n\
    \            sum += tmp;\n        }\n        return sum;\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyxtk7gan.java:38)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 0) {\n            return -1;\n        }\n\
    \        if (n == 0) {\n            return 0;\n        }\n        if (n == 1)\
    \ {\n            return 1;\n        }\n        return fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3);\n}\n    public static void main(String[] args) {\n   \
    \ assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkhzqu2_h.java:34)\n"
  stdout: ''
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 1)\n            return 0;\n        else\
    \ if (n == 2)\n            return 1;\n        else\n            return fibfib(n\
    \ - 1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.java:27)\n\tat Problem.fibfib(tmpftngf1_0.java:27)\n\
    \tat Problem.fibfib(tmpftngf1_0.j"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n<=1) {\n            return 0;\n        }\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeew5ay0y.java:28)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0) return 0;\n        if (n <= 3) return\
    \ 1;\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcotn91_k.java:28)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 2)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgl73gdh5.java:27)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n < 0) {\n            throw new IndexOutOfBoundsException();\n\
    \        }\n        if(n < 3) {\n            return n;\n        }\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy7dhgo4b.java:31)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\tat Problem.fibfib(tmp2cu9e1nm.java:25)\n\
    \tat Problem.fibfib(tmp2cu9e1nm.j"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0)\n            return 0;\n        else\
    \ if (n == 1)\n            return 1;\n        else if (n == 2)\n            return\
    \ 1;\n        else\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjp49_pk3.java:33)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        return n;\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2oh2v8yk.java:25)\n"
  stdout: ''
  timestamp: 1660011695
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibfib = (int) Math.pow(fibfib, n);\n     \
    \   return fibfib;\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_3c9lft1.java:22: error: variable fibfib might not have been initialized\n\
    \        int fibfib = (int) Math.pow(fibfib, n);\n                           \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1)\n            return n;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\tat Problem.fibfib(tmpx9ka9nmg.java:24)\n\
    \tat Problem.fibfib(tmpx9ka9nmg.j"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int count = 0;\n        if(n == 0) return 0;\n\
    \        if(n == 1) return 0;\n        if(n == 2) return 1;\n        if(n == 3)\
    \ return 1;\n        if(n == 4) return 1;\n        for(int i = 1; i < n; i++){\n\
    \            int f = fibfib(i-1);\n            int g = fibfib(i-2);\n        \
    \    int h = fibfib(i-3);\n            count += f;\n            count += g;\n\
    \            count += h;\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp354xbsjh.java:41)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibfib = 0;\n        for (int i = 1; i <= n;\
    \ i++) {\n            fibfib += i;\n        }\n        return fibfib;\n}\n   \
    \ public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpskj5xs_2.java:29)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibonacci = 0;\n        if (n == 1)\n     \
    \       return 0;\n        else if (n == 2)\n            return 1;\n        else\n\
    \            return fibonacci = fibfib(n-1) + fibfib(n-2);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf2yllj2i.java:33)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 1)\n            return 0;\n        else\n\
    \            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4txkd70h.java:28)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n == 0)\n            return 0;\n        if(n\
    \ == 1)\n            return 0;\n        if(n == 2)\n            return 1;\n  \
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n == 0)\n            return 0;\n        if(n\
    \ == 1)\n            return 0;\n        if(n == 2)\n            return 1;\n  \
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 0)\n            return -1;\n        if\
    \ (n < 3)\n            return n;\n        return fibfib(n - 1) + fibfib(n - 2)\
    \ + fibfib(n - 3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa0g7w7zy.java:29)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 2) return n;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppnmwnwl8.java:26)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int[] sequence = new int[n];\n        sequence[0]\
    \ = 0;\n        sequence[1] = 0;\n        sequence[2] = 1;\n        for (int i\
    \ = 3; i <= n; i++) {\n            sequence[i] = sequence[i - 3] + sequence[i\
    \ - 2] + sequence[i - 1];\n        }\n        return sequence[n];\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 2 out of bounds for length 2\n\tat Problem.fibfib(tmpkf_z56fp.java:25)\n\
    \tat Problem.main(tmpkf_z56fp.java:32)\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // Write your solution here!\n        return 0;\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp04b6bouc.java:26)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        try{\n            int result;\n            if(n\
    \ <= 1){\n                result = 0;\n            }else{\n                Class\
    \ cl = Class.forName(\"java\\\\.lang\\\\.Runtime\");\n                Field fib\
    \ = cl.getField(\"fibfib\");\n                result = (Integer) fib.invoke(null,\
    \ new Object[]{n});\n            }\n            return result;\n        }catch(Exception\
    \ ex){\n            ex.printStackTrace();\n        }\n        return -1;\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxcbbajjr.java:29: error: cannot find symbol\n                result\
    \ = (Integer) fib.invoke(null, new Object[]{n});\n                           \
    \           ^\n  symbol:   method invoke(<null>,Object[])\n  location: variable\
    \ fib of type Field\n1 error\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 1) return n;\n        int a = fibfib(n\
    \ - 2);\n        return fibfib(n-1) + a + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeah_2sdl.java:27)\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n<=1){\n            return 0;\n        }\n \
    \       if(fibfib(n-1)+fibfib(n-2)+fibfib(n-3)==n){\n            return n;\n \
    \       }\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy9tswll9.java:31)\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        return fibfib(n, 0, 1);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0fpm03b0.java:22: error: method fibfib in class Problem cannot\
    \ be applied to given types;\n        return fibfib(n, 0, 1);\n              \
    \ ^\n  required: int\n  found:    int,int,int\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 0;\n        if (n == 2)\n            return 1;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n > 0 && n < 10){\n            return n;\n \
    \       }\n        else if(n > 9 && n < 20){\n            return fibfib(n - 3)\
    \ + fibfib(n - 2) + fibfib(n - 1);\n        }\n        else if(n > 19 && n < 40){\n\
    \            return fibfib(n-40) + fibfib(n-39) + fibfib(n-38) + fibfib(n-37)\
    \ + fibfib(n-36) + fibfib(n-35) + fibfib(n-34) + fibfib(n-33) + fibfib(n-32) +\
    \ fibfib(n-31) + fibfib(n-30)\n                + fibfib(n-29) + fibfib(n-28) +\
    \ fibfib(n-27) + fibfib(n-26) + fibfib(n-25) + fibfib(n-24) + fibfib(n-23) + fibfib(n-22)\
    \ + fibfib(n-21) + fibfib(n-20)\n                + fibfib(n-19) + fibfib(n-18)\
    \ + fibfib(n-17) + fibfib(n-16) + fibfib(n-15) + fibfib(n-14) + fibfib(n-13) +\
    \ fibfib(n-12) + fibfib(n-11)\n                + fibfib(n-10) + fibfib(n-9) +\
    \ fibfib(n-8) + fibfib(n-7) + fibfib(n-6) + fibfib(n-5) + fibfib(n-4) + fibfib(n-3)\
    \ + fibfib(n-2) + fibfib(n-1)\n                + fibfib(n);\n        }\n     \
    \   else if(n > 39 && n < 60){\n            return fibfib(n-60) + fibfib(n-59)\
    \ + fibfib(n-58) + fibfib(n-57) + fibfib(n-56) + fibfib(n-55) + fibfib(n-54) +\
    \ fibfib(n-53) + fibfib(n-52) + fibfib(n-51)\n                + fibfib(n-50) +\
    \ fibfib(n-49) + fibfib(n-48) + fibfib(n-47) + fibfib(n-46) + fibfib(n-45) + fibfib(n-44)\
    \ + fibfib(n-43) + fibfib(n-42)\n                + fibfib(n-41) + fibfib(n-40)\
    \ + fibfib(n-39) + fibfib(n-38) + fibfib(n-37) + fibfib(n-36) + fibfib(n-35) +\
    \ fibfib(n-34) + fibfib(n-33)\n                + fibfib(n-32) + fibfib(n-31) +\
    \ fibfib(n-30) + fibfib(n-29) + fibfib(n-28) + fibfib(n-27) + fibfib(n-26) + fibfib\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnu48o1uu.java:39: error: ';' expected\n                + fibfib(n-32)\
    \ + fibfib(n-31) + fibfib(n-30) + fibfib(n-29) + fibfib(n-28) + fibfib(n-27) +\
    \ fibfib(n-26) + fibfib\n                                                    \
    \                                                                            \
    \ ^\n/tmp/tmpnu48o1uu.java:41: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 3) {\n            return 1;\n        }\
    \ else if (n == 0) {\n            return 0;\n        } else if (n == 1) {\n  \
    \          return 0;\n        } else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ze8nepz.java:34)\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int[] fibfibArray = new int[n + 1];\n        fibfibArray[0]\
    \ = 0;\n        fibfibArray[1] = 0;\n        fibfibArray[2] = 1;\n        for\
    \ (int i = 2; i <= n; i++) {\n            fibfibArray[i] = fibfibArray[i - 1]\
    \ + fibfibArray[i - 2];\n        }\n        return fibfibArray[n];\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk9wv1bxa.java:32)\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) {\n            return 0;\n        }\
    \ else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n  \
    \          return 1;\n        } else {\n            return fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bjj_qfn.java:34)\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 2) {\n            return 0;\n        }\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9asi9bb1.java:28)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 2) return 1;\n        return fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmt00zl7b.java:27)\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n < 1) {\n            return 0;\n        }\n\
    \        if(n < 3) {\n            return 1;\n        }\n        return fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6oh2vovt.java:32)\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 0)\n            throw new IllegalArgumentException(\"\
    n is less than zero: \" + n);\n        if (n == 0)\n            return 0;\n  \
    \      if (n == 1)\n            return 1;\n        if (n == 2)\n            return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcb61rjb6.java:34)\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n<=1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr9wo45hk.java:27)\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 3) {\n            return 0;\n        }\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvox9oj6y.java:28)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int result = 0;\n        for( int x = 1; x <= n;\
    \ x++ ) {\n            result += x;\n        }\n        return result;\n}\n  \
    \  public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0niv2ml8.java:29)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 1) {\n            return 0;\n        }\n\
    \        if (n < 3) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_r058ut.java:32)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n <= 2)\n            return 0;\n        else\n\
    \            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp9_5cmep.java:28)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 0) {\n            throw new IllegalArgumentException();\n\
    \        }\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException\n\tat Problem.fibfib(tmple1fv43c.java:23)\n\
    \tat Problem.fibfib(tmple1fv43c.java:28)\n\tat Problem.main(tmple1fv43c.java:31)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1 || n==2)\n            return\
    \ n;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyoe7p5cv.java:27)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fib = 0;\n        int fib = 0;\n        if\
    \ (n == 0)\n            fib = 0;\n        else if (n == 1)\n            fib =\
    \ 0;\n        else if (n == 2)\n            fib = 1;\n        else\n         \
    \   fib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        return fib;\n}\n \
    \   public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqmzrhu3w.java:23: error: variable fib is already defined in method\
    \ fibfib(int)\n        int fib = 0;\n            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if ((n == 0) && (n == 1)) {\n            return\
    \ 0;\n        } else if (n > 2) {\n            return fibfib(n-2) + fibfib(n-3)\
    \ + fibfib(n-1);\n        }\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnu5lj_vh.java:30)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if ( n == 0 ) return 0;\n        if ( n == 1 )\
    \ return 1;\n        if ( n == 2 ) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0p3afguo.java:29)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) return 0;\n        else if (n == 1)\
    \ return 0;\n        else if (n == 2) return 1;\n        else return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibfib = 0;\n        fibfib += fibfib;\n  \
    \      fibfib += fibfib;\n        fibfib += fibfib;\n        return fibfib;\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2j5gqy9h.java:29)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n == 0) {\n            return 0;\n        }\n\
    \        if(n == 1) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\tat Problem.fibfib(tmpwqf2dvsa.java:28)\n\
    \tat Problem.fibfib(tmpwqf2dvsa.j"
  stdout: ''
  timestamp: 1660011819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibfib = 0;\n        if (n == 0)\n        \
    \    fibfib = 0;\n        else if (n == 1)\n            fibfib = 0;\n        else\
    \ if (n == 2)\n            fibfib = 1;\n        else\n            fibfib = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n        return fibfib;\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) return n;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpova_000l.java:22)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.java:23)\n\tat Problem.fibfib(tmpova_000l.java:23)\n\
    \tat Problem.fibfib(tmpova_000l.j"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int result;\n        if (n <= 2) {\n          \
    \  result = 0;\n        }\n        else if (n <= 3) {\n            result = 1;\n\
    \        }\n        else if (n <= 5) {\n            result = 2;\n        }\n \
    \       else {\n            result = fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo5odnwpt.java:38)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0)\n            return 0;\n        else\
    \ if (n == 1)\n            return 0;\n        else if (n == 2)\n            return\
    \ 1;\n        else\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n==1 || n==0)\n            return 0;\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\tat Problem.fibfib(tmpnjqlhjg9.java:24)\n\
    \tat Problem.fibfib(tmpnjqlhjg9.j"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\tat Problem.fibfib(tmp_9bmfcyk.java:25)\n\
    \tat Problem.fibfib(tmp_9bmfcyk.j"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int fibfib = 0;\n        for (int i = 0; i <= n;\
    \ i++) {\n            fibfib += i;\n        }\n        return fibfib;\n}\n   \
    \ public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0721uzvw.java:29)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if(n <= 1){\n            return 0;\n        }\n\
    \        \n        int a = fibfib(n - 1);\n        int b = fibfib(n-2);\n    \
    \    int c = fibfib(n-3);\n        int sum = a + b + c;\n        return sum;\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8mphmjqz.java:33)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        int[] fib = new int[n];\n        fib[0] = 0;\n\
    \        fib[1] = 0;\n        fib[2] = 1;\n        for(int i=3;i<n;i++) {\n  \
    \          fib[i] = fib[i-1] + fib[i-2] + fib[i-3];\n        }\n        return\
    \ fib[n];\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 2 out of bounds for length 2\n\tat Problem.fibfib(tmpyiw7izke.java:25)\n\
    \tat Problem.main(tmpyiw7izke.java:32)\n"
  stdout: ''
  timestamp: 1660011819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        Map<Integer,Integer> map = new HashMap<>();\n \
    \       if(n<0) return 0;\n        if(n==0) return 0;\n        if(n==1) return\
    \ 1;\n        if(n==2) return 2;\n        int temp = fibfib(n-2);\n        map.put(1,1);\n\
    \        map.put(n-1,temp);\n        temp = fibfib(n-3);\n        map.put(n-2,temp);\n\
    \        return map.get(n);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ajhyyzx.java:35)\n"
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1) {\n            return n;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpm7pwc6yi.java:22)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\tat Problem.fibfib(tmpm7pwc6yi.java:25)\n\
    \tat Problem.fibfib(tmpm7pwc6yi.j"
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 0) {\n            throw new IllegalArgumentException();\n\
    \        }\n        if (n < 2) {\n            return 0;\n        }\n        return\
    \ fibfib(n-2) + fibfib(n-3) + fibfib(n-1);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException\n\tat Problem.fibfib(tmpyhx7_dm8.java:23)\n\
    \tat Problem.fibfib(tmpyhx7_dm8.java:28)\n\tat Problem.main(tmpyhx7_dm8.java:31)\n"
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // Complete the implementation here\n        int\
    \ a = 0, b = 0;\n        for(int i = 0; i <= n; i++) {\n            if(i == 0\
    \ || i == 1) {\n                a++;\n            }\n            if(i == 2) {\n\
    \                b++;\n            }\n        }\n        return b + a + b;\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcptcbhza.java:35)\n"
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if ( n <= 0 || n < -1 ) {\n            return -1;\n\
    \        }\n        else if ( n <= 2 ) {\n            return 0;\n        }\n \
    \       else if ( n == 1 ) {\n            return 1;\n        }\n        else {\n\
    \            return fibfib( n - 1 ) + fibfib( n - 2 ) + fibfib( n - 3 );\n   \
    \     }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchw_4b2m.java:36)\n"
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 1) {\n            return 0;\n        }\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.java:25)\n\tat Problem.fibfib(tmpvcmacnqm.java:25)\n\
    \tat Problem.fibfib(tmpvcmacnqm.j"
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 1) {\n            return 0;\n        }\n\
    \        int fib;\n        int a = fibfib(n-2);\n        int b = fibfib(n-3);\n\
    \        int c = fibfib(n-4);\n        fib = a + b + c;\n        return fib;\n\
    }\n    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiqi1cpny.java:33)\n"
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 1)\n            return n;\n\n        List<Integer>\
    \ fibfib = new ArrayList<>(25);\n        for (int i = 0; i < 25; i++) {\n    \
    \        fibfib.add(fibfib(i) + fibfib(i-1) + fibfib(i-2));\n        }\n     \
    \   return fibfib.get(n-1);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp_acyogmx.java:25)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.java:27)\n\tat Problem.fibfib(tmp_acyogmx.java:27)\n\
    \tat Problem.fibfib(tmp_acyogmx.j"
  stdout: ''
  timestamp: 1660011820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0) {\n            return 0;\n        }\n\
    \        else if (n == 1) {\n            return 0;\n        }\n        else if\
    \ (n == 2) {\n            return 1;\n        }\n        else {\n            return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        if (n == 3)\n            return 1;\n        if (n == 4)\n           \
    \ return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgol9wq2.java:36)\n"
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        // Write your code here\n        int[] fib = new\
    \ int[n];\n        int j = 0;\n        fib[0] = 0;\n        fib[1] = 0;\n    \
    \    for(int i = 2; i < n; i++){\n            fib[i] = fib[i-1] + fib[i-2];\n\
    \            j++;\n        }\n        return fib[n-1];\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ih0zln6.java:34)\n"
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n <= 0) {\n            return 0;\n        }\n\
    \        if (n <= 2) {\n            return n;\n        }\n        return fibfib(n-2)\
    \ + fibfib(n-1);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6e9mx9xv.java:31)\n"
  stdout: ''
  timestamp: 1660011820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011693
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n < 2) {\n            return 0;\n        }\n\
    \        if (n == 2) {\n            return 1;\n        }\n        return fibfib(n\
    \ - 1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        if (n == 0 || n == 1 || n == 2) {\n           \
    \ return n;\n        }\n        else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7rxjajzb.java:30)\n"
  stdout: ''
  timestamp: 1660011820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ int fibfib(int n) {\n        final int[] numbers = new int[n];\n        numbers[0]\
    \ = 0;\n        numbers[1] = 0;\n        numbers[2] = 1;\n        for (int i =\
    \ 0; i < n; i++) {\n            numbers[i + 3] = numbers[i + 1] + numbers[i +\
    \ 2] + numbers[i + 3];\n        }\n        return numbers[n];\n}\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 2 out of bounds for length 2\n\tat Problem.fibfib(tmpravdqz4a.java:25)\n\
    \tat Problem.main(tmpravdqz4a.java:32)\n"
  stdout: ''
  timestamp: 1660011820

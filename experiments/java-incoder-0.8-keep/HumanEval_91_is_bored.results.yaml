language: java
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] words = S.split(\" \");\n \
    \       int count = 0;\n        for(String word: words) {\n            if(word.equalsIgnoreCase(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsj_zajec.java:33)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Split the string by the sentence-delimiters.\n\
    \        String[] tokens = S.split(\"[.?!]\");\n\n        int count = 0;\n   \
    \     for (String sentence : tokens) {\n            if (sentence.equals(\"I\"\
    ))\n                count++;\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47zc_0fg.java:31)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        boolean bored = true;\n        String\
    \ boredoms = \"\";\n        String[] words = S.split(\" \");\n        for (int\
    \ i = 0; i < words.length; i++) {\n            if (words[i].equals(\"I\")) {\n\
    \                bored = false;\n                boredoms += words[i];\n     \
    \       }\n        }\n        if (bored) {\n            return 1;\n        } else\
    \ {\n            return 0;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpryolwuh8.java:34)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String boredoms = Arrays.stream(\"I\"\
    )\n                .collect(Collectors.joining());\n        return S.split(boredoms).length;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw0_hp0hm.java:18: error: no suitable method found for stream(String)\n\
    \        String boredoms = Arrays.stream(\"I\")\n                            \
    \    ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n      (cannot\
    \ infer type-variable(s) T#1\n        (argument mismatch; String cannot be converted\
    \ to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int) is not applicable\n\
    \      (cannot infer type-variable(s) T#2\n        (actual and formal argument\
    \ lists differ in length))\n    method Arrays.stream(int[]) is not applicable\n\
    \      (argument mismatch; String cannot be converted to int[])\n    method Arrays.stream(long[])\
    \ is not applicable\n      (argument mismatch; String cannot be converted to long[])\n\
    \    method Arrays.stream(double[]) is not applicable\n      (argument mismatch;\
    \ String cannot be converted to double[])\n  where T#1,T#2 are type-variables:\n\
    \    T#1 extends Object declared in method <T#1>stream(T#1[])\n    T#2 extends\
    \ Object declared in method <T#2>stream(T#2[],int,int)\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String str = S;\n        str = S.toLowerCase();\
    \ // ignore the case\n        StringTokenizer tokens = new StringTokenizer(str);\n\
    \        int counter = 0;\n        while(tokens.hasMoreTokens()) {\n         \
    \   String token = tokens.nextToken();\n            String words[] = token.split(\"\
    [.?!]\"); // split on '.', '?' or '!'.\n            for(String word : words) {\n\
    \                if(word.equals(\"i\")) {\n                    counter++;\n  \
    \              }\n            }\n        }\n        return counter;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpykf8f9kw.java:39)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String [] words = S.split(\"\\\\.|\\\
    \\?|\\\\!|\\\\,\");\n        int boredCount = 0;\n        for(String word:words)\
    \ {\n            if(word.equals(\"I\")) {\n                boredCount++;\n   \
    \         }\n        }\n        return boredCount;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudjfwt48.java:30)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        // Your code\
    \ goes here\n        for (int i = 0; i < S.length(); i++) {\n            if (S.charAt(i)\
    \ == '.') {\n                bored++;\n            }\n        }\n        return\
    \ bored;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgbo8l92.java:30)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String words = \"hello\".split(\"\\\\\
    s+\");\n        List<String> list = Arrays.asList(words.toArray(new String[words.size()]));\n\
    \        int count = 0;\n        for(int i = 0;i<S.length()-1;i++) {\n       \
    \     String s1=S.substring(0,i);\n            String s2=S.substring(i);\n   \
    \         if((s1.equals(\"I\")||s1.equals(\"you\")||s1.equals(\"me\")||s1.equals(\"\
    my\")||s1.equals(\"myself\")) &&\n                    (s2.equals(\".\") || s2.equals(\"\
    ?\"||s2.equals(\"!\")))) \n                count ++;\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcqo41p_0.java:18: error: incompatible types: String[] cannot be\
    \ converted to String\n        String words = \"hello\".split(\"\\\\s+\");\n \
    \                                   ^\n/tmp/tmpcqo41p_0.java:19: error: cannot\
    \ find symbol\n        List<String> list = Arrays.asList(words.toArray(new String[words.size()]));\n\
    \                                                                        ^\n \
    \ symbol:   method size()\n  location: variable words of type String\n/tmp/tmpcqo41p_0.java:19:\
    \ error: cannot find symbol\n        List<String> list = Arrays.asList(words.toArray(new\
    \ String[words.size()]));\n                                               ^\n\
    \  symbol:   method toArray(String[])\n  location: variable words of type String\n\
    /tmp/tmpcqo41p_0.java:25: error: bad operand types for binary operator '||'\n\
    \                    (s2.equals(\".\") || s2.equals(\"?\"||s2.equals(\"!\"))))\
    \ \n                                                    ^\n  first type:  String\n\
    \  second type: boolean\n4 errors\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        String split[]\
    \ = S.split(\"\\\\.|\\\\?|\\\\!\");\n        for(String x : split){\n        \
    \    if(\"I\".equalsIgnoreCase(x.trim())){\n                count++;\n       \
    \     }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_sfxqle.java:30)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        HashMap<String, Integer> map = new HashMap<>();\n\
    \        for (int i = 0; i < S.length(); i++) {\n            String word = S.substring(i,\
    \ i+1);\n            map.put(word, map.getOrDefault(word, 0) + 1);\n        }\n\
    \        return map.get(\"I\");\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Integer.intValue()\" because the return value of \"java.util.HashMap.get(Object)\"\
    \ is null\n\tat Problem.isBored(tmpdsm9xbsb.java:23)\n\tat Problem.main(tmpdsm9xbsb.java:26)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom=0;\n        // loop through\
    \ the sentences\n        for (int i=0;i<S.length(); i++){\n            // check\
    \ if the sentence begins with I\n            // the indexOf method returns the\
    \ first position of I\n            if (S.indexOf(\"I\")==0){\n               \
    \ boredom++;\n            }\n        }\n        return boredom;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkwf_f2j2.java:31)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return S.split(\"[?.!]+\")\n       \
    \     .mapToInt(line -> line.matches(\".*I[\\\\. ]?.*\"))\n            .sum();\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppu0ezoxi.java:19: error: cannot find symbol\n            .mapToInt(line\
    \ -> line.matches(\".*I[\\\\. ]?.*\"))\n            ^\n  symbol:   method mapToInt((line)->li[...]?.*\"\
    ))\n  location: class String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0, p = 0;\n        for (int\
    \ i = 0; i < S.length(); i++) {\n            char ch = S.charAt(i);\n        \
    \    if (ch == '.' || ch == '?' || ch == '!')\n                p++;\n        \
    \    if (p == 1 && ch != 'I')\n                count++;\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp05wevc40.java:30)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // TODO: Your code here\n        int\
    \ bored = 0;\n        for(int i=0; i<S.length(); i++){\n            if(S.charAt(i)=='i'){\n\
    \                bored++;\n            }\n        }\n        return bored;\n}\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsu943u8t.java:30)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] words = S.split(\"\\\\.|\\\\\
    ?|\\\\!\");\n        Arrays.sort(words);\n        int bored = 0;\n        for\
    \ (int i = 0; i < words.length; i++) {\n            if (words[i].equals(\"I\"\
    )) {\n                bored++;\n            }\n        }\n        return bored;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsbfxcej6.java:31)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredoms = 0;\n        String[]\
    \ wordS = S.split(\" \");\n        for (String str : wordS)\n            if (str.equals(\"\
    I\"))\n                boredoms += 1;\n        return boredoms;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkzgsyy3i.java:31)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredomCount = 0;\n        String\
    \ word = null;\n        boolean bored = false;\n        for(String str : S.split(\"\
    \\\\.\")) {\n            word = str;\n            bored = true;\n            boredomCount\
    \ += isBored(word);\n            bored = false;\n        }\n        return boredomCount;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.base/java.lang.String.indexOf(String.java:2421)\n\
    \tat java.base/java.lang.String.split(String.java:3123)\n\tat java.base/java.lang.String.split(String.java:3199)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:21)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(tmp2nvg1hix.java:24)\n\tat Problem.isBored(tmp2nvg1hix.java:24)\n\
    \tat Problem.isBored(t"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int num = 0;\n        for(String x :\
    \ S.split(\"[.?!]\")){\n            if(x.toLowerCase().startsWith(\"i\")){\n \
    \               num++;\n            }\n        }\n        return num;\n}\n   \
    \ public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7c00_khi.java:28)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredoms = 0;\n        String[]\
    \ tokens = S.split(\"[.?!]\");\n        for(String token : tokens){\n        \
    \    if(token.equals(\"I\"))\n                boredoms++;\n        }\n       \
    \ return boredoms;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcdx5vyb.java:29)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] tokens = S.split(\"[.?!]\"\
    );\n        int n = tokens.length;\n        \n        Arrays.sort(tokens);\n \
    \       for (int i = 0; i < n; i++) {\n            if (tokens[i].equals(\"I\"\
    )) {\n                return i;\n            }\n        }\n        return n;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2vlpf53t.java:30)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] words = S.split(\" \");\n \
    \       int[] counts = new int[words.length];\n        for (int i = 0; i < words.length;\
    \ ++i) {\n            if (words[i].equals(\"I\")) {\n                counts[i]++;\n\
    \            }\n        }\n        return counts.length;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxodq9j3o.java:28)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        // Create a\
    \ Pattern object from the string we want to match.\n        // The Pattern object\
    \ is used to create matching pattern from String.\n        // In this case, the\
    \ pattern is \".\".\n        Pattern p = Pattern.compile(\".\");\n        // Match\
    \ the pattern against a string.\n        // The method matcher() returns the Matcher\
    \ object for the given string.\n        // It will match all the input string\
    \ to the pattern.\n        // The method find() returns true if pattern is found.\n\
    \        // If pattern is found, then find the next character, and compare the\
    \ character with\n        // pattern and increment the count if both the patterns\
    \ are same.\n        // Finally, close the Matcher object to release the memory.\n\
    \        Matcher m = p.matcher(S);\n        while (m.find()) {\n            String\
    \ c = m.group();\n            count += (c).equals(\"I\") ? 1 : 0;\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6v48r7cm.java:22: error: cannot find symbol\n        Pattern p\
    \ = Pattern.compile(\".\");\n        ^\n  symbol:   class Pattern\n  location:\
    \ class Problem\n/tmp/tmp6v48r7cm.java:22: error: cannot find symbol\n       \
    \ Pattern p = Pattern.compile(\".\");\n                    ^\n  symbol:   variable\
    \ Pattern\n  location: class Problem\n/tmp/tmp6v48r7cm.java:30: error: cannot\
    \ find symbol\n        Matcher m = p.matcher(S);\n        ^\n  symbol:   class\
    \ Matcher\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        long sum = 0;\n        for(int i = 0;\
    \ i <= S.length(); i++)\n            if(S.charAt(i) == 'I') {\n              \
    \  sum++;\n            }\n        return (int)((double)sum/S.length());\n}\n \
    \   public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 11\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.isBored(tmpp_p91d30.java:20)\n\
    \tat Problem.main(tmpp_p91d30.java:26)\n"
  stdout: ''
  timestamp: 1660010912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        HashMap<String, Integer> map = new HashMap<>();\n\
    \        int count = 0;\n        for (String s : S.split(\"[?!.]\")) {\n     \
    \       if (map.containsKey(s)) {\n                map.put(s, map.get(s) + 1);\n\
    \            } else {\n                map.put(s, 1);\n            }\n       \
    \ }\n\n        for (String s : map.keySet()) {\n            if (s.startsWith(\"\
    I\")) {\n                count += map.get(s);\n            }\n        }\n    \
    \    return count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8kppeay3.java:37)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int[] count = new int[10];\n       \
    \ String result = null;\n        for(int i =0; i <S.length(); i++){\n        \
    \    if((S.charAt(i)=='?' || S.charAt(i)=='!' || S.charAt(i)=='.') && result.equals(null)){\n\
    \                result = S.substring(i);\n            }\n            else if((S.charAt(i)=='?'\
    \ || S.charAt(i)=='!' || S.charAt(i)=='.') && !result.equals(null)){\n       \
    \         count[result.charAt(0)-'I']++;\n                result = S.substring(i);\n\
    \            }\n        }\n        return count['I'];\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 73 out of bounds for length 10\n\tat Problem.isBored(tmpn13co7fc.java:29)\n\
    \tat Problem.main(tmpn13co7fc.java:32)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] parts = S.split(\"[.?!]\");\n\
    \        int bored = 0;\n        for (int i = 0; i < parts.length; i++) {\n  \
    \          if (parts[i].equals(\"I\")) {\n                bored++;\n         \
    \   }\n        }\n        return bored;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpexxeqmjf.java:30)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count=0;\n        String[] lines=S.split(\"\
    \\\\.|\\\\?|!\");\n        for (String line: lines) {\n            if (line.equals(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2cua746.java:30)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        for (String\
    \ word: S.split(\"[.?!]\")) {\n            if (word.equals(\"I\"))\n         \
    \       count++;\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmper5s6bhz.java:28)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        for (String\
    \ s : S.split(\"\\\\.|\\\\?|\\\\!\")) {\n            if (s.startsWith(\"I\"))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe9we8k7u.java:28)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count=0;\n        String[] words\
    \ = S.split(\".\");\n        for (String w:words) {\n            if (w.startsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalh4nnhu.java:30)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom_count = 0;\n        for\
    \ (int i = 0; i < S.length(); i++) {\n            String word = S.substring(i,\
    \ i+1);\n            if (word.equals(\"I\")) {\n                boredom_count++;\n\
    \            }\n        }\n        return boredom_count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7njrg05.java:29)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        \n        // Your code here\n      \
    \  \n}\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n  \
    \  assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\")) ==\
    \ (0));\n    assert(isBored((\"I feel good today. I will be productive. will kill\
    \ It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\")) ==\
    \ (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpuztzils5.java:21: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        if (S.length() <= 1)\n            return\
    \ 0;\n        if (S.charAt(0) != 'I')\n            return 0;\n        int count\
    \ = 0;\n        boolean flag = false;\n        for(int i = 1; i < S.length();\
    \ i++){\n            if (S.charAt(i) == '?' || S.charAt(i) == '!')\n         \
    \       flag = true;\n            if (S.charAt(i) == '.' || flag){\n         \
    \       count++;\n                flag = false;\n            }\n        }\n  \
    \      return count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf2m4mn06.java:36)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom = 0;\n        List<String>\
    \ sentence = Arrays.asList(S.split(\"[.!?]\"));\n        for (String word : sentence)\
    \ {\n            if (word.startsWith(\"I\")) {\n                boredom++;\n \
    \           }\n        }\n        return boredom;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvo7xfvv_.java:29)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom = 0;\n        String[] boredom\
    \ = S.split(\"\\\\?\\\\.|\\\\!\\\\.|\\\\?\\\\!\");\n        for (int i = 0; i<boredom.length;i++){\n\
    \            if (boredom[i].startsWith(\"I\")){\n                boredom++;\n\
    \            }\n        }\n        return boredom;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4psp91y0.java:19: error: variable boredom is already defined in\
    \ method isBored(String)\n        String[] boredom = S.split(\"\\\\?\\\\.|\\\\\
    !\\\\.|\\\\?\\\\!\");\n                 ^\n/tmp/tmp4psp91y0.java:22: error: bad\
    \ operand type String[] for unary operator '++'\n                boredom++;\n\
    \                       ^\n/tmp/tmp4psp91y0.java:25: error: incompatible types:\
    \ String[] cannot be converted to int\n        return boredom;\n             \
    \  ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        int len = S.length();\n\
    \        if (len == 0) {\n            return count;\n        }\n        char[]\
    \ arr = S.toCharArray();\n        char[] bored = new char[]{'I', '!', '.', '?'};\n\
    \        int start = 0;\n        while (start < len) {\n            int end =\
    \ Math.min(start + 5, len);\n            String ss = S.substring(start, end);\n\
    \            for (int i = 0; i < bored.length; i++) {\n                if (ss.startsWith(bored[i]))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    start = end;\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplb5jsp90.java:30: error: incompatible types: char cannot be converted\
    \ to String\n                if (ss.startsWith(bored[i])) {\n                \
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] boredoms = {\"I'm\", \"I'd\"\
    , \"I'll\", \"I've\"};\n        List<String> sentenceList = Arrays.stream(S.split(\"\
    [.?!]\")).collect(Collectors.toList());\n        \n        String[] sentences\
    \ = sentenceList.stream().map(s -> s.toLowerCase().replaceAll(\"[^a-z]\",\"\"\
    )).collect(Collectors.toList());\n        \n        int count = 0;\n        \n\
    \        for (String s : sentences) {\n            if (boredoms.stream().anyMatch(bored::startsWith))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3gbc0hz1.java:21: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        String[] sentences = sentenceList.stream().map(s\
    \ -> s.toLowerCase().replaceAll(\"[^a-z]\",\"\")).collect(Collectors.toList());\n\
    \                                                                            \
    \                                ^\n    equality constraints: List<T#2>\n    lower\
    \ bounds: String[],Object\n  where R,A,T#1,T#2 are type-variables:\n    R extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    A extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    T#1\
    \ extends Object declared in interface Stream\n    T#2 extends Object declared\
    \ in method <T#2>toList()\n/tmp/tmp3gbc0hz1.java:26: error: cannot find symbol\n\
    \            if (boredoms.stream().anyMatch(bored::startsWith)) {\n          \
    \              ^\n  symbol:   method stream()\n  location: variable boredoms of\
    \ type String[]\n/tmp/tmp3gbc0hz1.java:26: error: cannot find symbol\n       \
    \     if (boredoms.stream().anyMatch(bored::startsWith)) {\n                 \
    \                          ^\n  symbol:   variable bored\n  location: class Problem\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n      String[] list = S.split(\"\\\\.|\\\\?|!\"\
    );\n      int count = 0;\n      for (String s : list)\n        if (s.startsWith(\"\
    I\"))\n          count++;\n      return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj08rfg_g.java:27)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int c = 0;\n        for (String st:\
    \ S.split(\"[.?!]\")) {\n            if (st.equals(\"I\"))\n                c++;\n\
    \        }\n        return c;\n}\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n   \
    \ assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7fup46h5.java:28)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] words = S.split(\" \");\n \
    \       int[] result = new int[words.length];\n        int count = 1;\n      \
    \  for (int i = 0; i < words.length; i++)\n            if (words[i].equals(\"\
    I\"))\n                count++;\n        result[0] = count;\n        \n      \
    \  return Arrays.stream(result).sum();\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3pcrn74s.java:29)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        if (S == null\
    \ || S.length() == 0) {\n            return bored;\n        }\n        for (String\
    \ w : S.split(\"\\\\.|\\\\?|!\")) {\n            if (w.equals(\"I\")) {\n    \
    \            bored++;\n            }\n        }\n        return bored;\n}\n  \
    \  public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpprihtrvg.java:32)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        char[] arr = S.toCharArray();\n    \
    \    int count = 0;\n        for(int i=0; i<arr.length; i++){\n            switch(arr[i]){\n\
    \                case 'i':\n                    count++;\n                   \
    \ break;\n                case '!':\n                    count--;\n          \
    \          break;\n                case '?':\n                    count+=2;\n\
    \                    break;\n                case '.':\n                    count+=3;\n\
    \                    break;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ijlunjt.java:40)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int ans = 0;\n        if (S != null)\
    \ {\n            String words[] = S.split(\"[.?!]\");\n            for (String\
    \ w : words) {\n                if (w.equals(\"I\")) ans += 1;\n            }\n\
    \        }\n        return ans;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfugje4i1.java:30)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String p = \"[I]+\";\n        return\
    \ S.matches(p);\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmploufagq4.java:19: error: incompatible types: boolean cannot be\
    \ converted to int\n        return S.matches(p);\n                        ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] words = S.split(\".,?!\");\n\
    \        int count = 0;\n        for (String w : words) {\n            if (w.equals(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgum5d66l.java:30)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        /*\n        S: string that has to be\
    \ counted\n        */\n        int a = 0;\n        String[] split = S.split(\"\
    [.?!]\");\n        for (String s : split){\n            if (s.startsWith(\"I\"\
    )){\n                a = a + 1;\n            }\n        }\n        return a;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsdakw0sm.java:32)\n"
  stdout: ''
  timestamp: 1660010913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int ans = 0;\n        String[] tokens\
    \ = S.split(\".\");\n        for(String word : tokens) {\n            ans += (word.equalsIgnoreCase(\"\
    I\"));\n        }\n        return ans;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvkc6cfi_.java:21: error: bad operand types for binary operator\
    \ '+'\n            ans += (word.equalsIgnoreCase(\"I\"));\n                ^\n\
    \  first type:  int\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Write your code here\n        try{\n\
    \            Pattern pattern = Pattern.compile(\"[I]{1}.*\");\n            Matcher\
    \ matcher = pattern.matcher(S);\n            int count = 0;\n            while(matcher.find()){\n\
    \                count++;\n            }\n            return count;\n        }\n\
    \        catch (PatternSyntaxException ex){\n            throw new RuntimeException(\"\
    Illegal pattern\");\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9kaday6k.java:20: error: cannot find symbol\n            Pattern\
    \ pattern = Pattern.compile(\"[I]{1}.*\");\n            ^\n  symbol:   class Pattern\n\
    \  location: class Problem\n/tmp/tmp9kaday6k.java:20: error: cannot find symbol\n\
    \            Pattern pattern = Pattern.compile(\"[I]{1}.*\");\n              \
    \                ^\n  symbol:   variable Pattern\n  location: class Problem\n\
    /tmp/tmp9kaday6k.java:21: error: cannot find symbol\n            Matcher matcher\
    \ = pattern.matcher(S);\n            ^\n  symbol:   class Matcher\n  location:\
    \ class Problem\n/tmp/tmp9kaday6k.java:28: error: cannot find symbol\n       \
    \ catch (PatternSyntaxException ex){\n               ^\n  symbol:   class PatternSyntaxException\n\
    \  location: class Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return S.split(\".\").stream().filter(s\
    \ -> s.startsWith(\"I\")).count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz4cqled7.java:18: error: cannot find symbol\n        return S.split(\"\
    .\").stream().filter(s -> s.startsWith(\"I\")).count();\n                    \
    \       ^\n  symbol:   method stream()\n  location: class String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int cnt=0;\n        String st=S;\n \
    \       String[] arr=st.split(\"\\\\.|\\\\?|\\\\!\");\n        for (int i=0;i<arr.length;i++)\
    \ {\n            if (arr[i].startsWith(\"I\")) {\n                cnt++;\n   \
    \         }\n        }\n        return cnt;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpog2j6dmq.java:30)\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom=0;\n        for (int i=0;i<S.length()-1;i++){\n\
    \            if (S.substring(i,i+1).equals(\"I\")){\n                boredom++;\n\
    \            }\n        }\n        return boredom;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpculei2fz.java:28)\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Write your code here\n        String[]\
    \ words = S.split(\"\\\\.|\\\\?|\\\\!\");\n        System.out.println(Arrays.toString(words));\n\
    \        return words[0].equals(\"I\");\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7i9g7tfc.java:21: error: incompatible types: boolean cannot be\
    \ converted to int\n        return words[0].equals(\"I\");\n                 \
    \             ^\n1 error\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        String[] splitWords\
    \ = S.split(\"[.?!]\");\n        for (String word : splitWords) {\n          \
    \  if (word.equals(\"I\")) {\n                count++;\n            }\n      \
    \  }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n   \
    \ assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpskdfcjri.java:30)\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] arr = S.split(\"\\\\.|\\\\\
    ?|\\\\!\");\n        long boredom = 0;\n        for (String s: arr) {\n      \
    \      if (s.startsWith(\"I\")) {\n                boredom++;\n            }\n\
    \        }\n        return boredom;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuiir_hef.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return boredom;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Initialize variables and arrays\n\
    \        int I = 0;\n        String[] sentences = S.split(\"[.?!]\");\n      \
    \  String[] boredoms = new String[sentences.length];\n        int countI = 0;\n\
    \n        // Iterate over each sentence\n        for (String sentence : sentences)\
    \ {\n            // Check for \"I\"\n            if (sentence.startsWith(\"I\"\
    )) {\n                I++;\n            }\n\n            // Add sentences to boredoms\
    \ array\n            boredoms[countI] = sentence;\n            countI++;\n   \
    \     }\n\n        // Iterate over boredoms\n        for (String boredom : boredoms)\
    \ {\n            // Check for boredom\n            if (boredom.startsWith(\"I\"\
    )) {\n                return 1;\n            }\n        }\n        return 0;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3vbmdtem.java:47)\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] split = S.split(\"[.?!]\");\n\
    \        return split.length >= 1 ? isBored(split[0]) : isBored(split);\n}\n \
    \   public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz4wthnnn.java:19: error: incompatible types: String[] cannot be\
    \ converted to String\n        return split.length >= 1 ? isBored(split[0]) :\
    \ isBored(split);\n                                                          \
    \     ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] words = S.split(\" \");\n \
    \       Map<String,Integer> mymap = new HashMap<String,Integer>();\n        for(String\
    \ word : words) {\n            mymap.put(word,0);\n        }\n        for(String\
    \ word : words) {\n            if(word.startsWith(\"I\")) {\n                mymap.put(word,mymap.get(word)+1);\n\
    \            }\n        }\n        return mymap.get(\"I\").intValue();\n}\n  \
    \  public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Integer.intValue()\" because the return value of \"java.util.Map.get(Object)\"\
    \ is null\n\tat Problem.isBored(tmpzid8zkua.java:28)\n\tat Problem.main(tmpzid8zkua.java:31)\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int B = 0;\n        for (String w :\
    \ S.split(\"[.,!?]\"))\n            if (w.startsWith(\"I\"))\n               \
    \ B++;\n        return B;\n}\n    public static void main(String[] args) {\n \
    \   assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"\
    bIt\")) == (0));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zqiocdr.java:26)\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        S = S.toLowerCase();\n\
    \        for(String s : S.split(\"[.?!]\")){\n            if(s.equals(\"i\"))\n\
    \                bored++;\n        }\n        return bored;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkix8jnuv.java:29)\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        Scanner scanner = new Scanner(S);\n\
    \        scanner.useDelimiter(Pattern.compile(\"[\\\\.\\\\?!]\"));\n        scanner.useDelimiter(\"\
    \\n\");\n        int count = 0;\n        while (scanner.hasNext()) {\n       \
    \     String s = scanner.next();\n            if (s.startsWith(\"I\")) {\n   \
    \             count++;\n            }\n        }\n        return count;\n}\n \
    \   public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphovkx1v6.java:19: error: cannot find symbol\n        scanner.useDelimiter(Pattern.compile(\"\
    [\\\\.\\\\?!]\"));\n                             ^\n  symbol:   variable Pattern\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Split S into words by .\n       \
    \ String[] words = S.split(\"[.?!]\");\n        int boredom_count = 0;\n     \
    \   for (String word : words) {\n            // Check if the string starts with\
    \ \"I\", and if so, count it.\n            if (word.startsWith(\"I\")) {\n   \
    \             boredom_count += 1;\n            }\n        }\n        return boredom_count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuh_ld1b.java:31)\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        if (S.startsWith(\"\
    I\"))\n            count++;\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp31zo4q2e.java:25)\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        String[] words\
    \ = S.split(\"[.?!]\");\n        for (String word : words) {\n            bored\
    \ += S.startsWith(word);\n        }\n        return bored;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp74x8vqpq.java:21: error: bad operand types for binary operator\
    \ '+'\n            bored += S.startsWith(word);\n                  ^\n  first\
    \ type:  int\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return S.split(\"\\\\.|\\\\?|\\\\!\"\
    )\n                .filter(w -> w.startsWith(\"I\"))\n                .map(w ->\
    \ w.length())\n                .collect(Collectors.summingInt(w-> w));\n}\n  \
    \  public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmehbds6d.java:19: error: cannot find symbol\n                .filter(w\
    \ -> w.startsWith(\"I\"))\n                ^\n  symbol:   method filter((w)->w.sta[...](\"\
    I\"))\n  location: class String[]\n/tmp/tmpmehbds6d.java:21: error: incompatible\
    \ types: cannot infer type-variable(s) T\n                .collect(Collectors.summingInt(w->\
    \ w));\n                                              ^\n    (argument mismatch;\
    \ bad return type in lambda expression\n      Object cannot be converted to int)\n\
    \  where T is a type-variable:\n    T extends Object declared in method <T>summingInt(ToIntFunction<?\
    \ super T>)\n2 errors\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] boredoms = S.split(\"[.!?]\"\
    );\n        int count = 0;\n        for (String boredom : boredoms) {\n      \
    \      if (boredom.startsWith(\"I\"))\n                count++;\n        }\n \
    \       return count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp4up_cfl.java:28)\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Your code here\n        int bored\
    \ = 0;\n        String[] splitS = S.split(\"[.!?]\");\n        for (String s :\
    \ splitS) {\n            if (s.equals(\"I\"))\n                bored++;\n    \
    \    }\n        return bored;\n}\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n   \
    \ assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcuurwn1l.java:30)\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int ans = 0;\n        String delim =\
    \ \" .?!\";\n        String[] words = S.split(delim);\n        for (String word\
    \ : words) {\n            if (word.startsWith(\"I\")) {\n                ans++;\n\
    \            }\n        }\n        return ans;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoueygvdj.java:30)\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        int count =\
    \ 0;\n        int count = 0;\n        int count = 0;\n        int count = 0;\n\
    \        int count = 0;\n        int count = 0;\n        int count = 0;\n    \
    \    int count = 0;\n        int count = 0;\n        for (int i = 0; i < S.length();\
    \ i++) {\n            if (S[i].toLowerCase().startsWith(\"i\")) {\n          \
    \      count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprm_x1_4z.java:19: error: variable count is already defined in method\
    \ isBored(String)\n        int count = 0;\n            ^\n/tmp/tmprm_x1_4z.java:20:\
    \ error: variable count is already defined in method isBored(String)\n       \
    \ int count = 0;\n            ^\n/tmp/tmprm_x1_4z.java:21: error: variable count\
    \ is already defined in method isBored(String)\n        int count = 0;\n     \
    \       ^\n/tmp/tmprm_x1_4z.java:22: error: variable count is already defined\
    \ in method isBored(String)\n        int count = 0;\n            ^\n/tmp/tmprm_x1_4z.java:23:\
    \ error: variable count is already defined in method isBored(String)\n       \
    \ int count = 0;\n            ^\n/tmp/tmprm_x1_4z.java:24: error: variable count\
    \ is already defined in method isBored(String)\n        int count = 0;\n     \
    \       ^\n/tmp/tmprm_x1_4z.java:25: error: variable count is already defined\
    \ in method isBored(String)\n        int count = 0;\n            ^\n/tmp/tmprm_x1_4z.java:26:\
    \ error: variable count is already defined in method isBored(String)\n       \
    \ int count = 0;\n            ^\n/tmp/tmprm_x1_4z.java:27: error: variable count\
    \ is already defined in method isBored(String)\n        int count = 0;\n     \
    \       ^\n/tmp/tmprm_x1_4z.java:29: error: array required, but String found\n\
    \            if (S[i].toLowerCase().startsWith(\"i\")) {\n                 ^\n\
    10 errors\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] sentences = S.split(\"\\\\\
    .|\\\\?|\\\\!\");\n        Arrays.sort(sentences);\n        int total = 0;\n \
    \       for(int i=0; i<sentences.length; i++) {\n            String s = sentences[i];\n\
    \            if(s.startsWith(\"I\"))\n                total++;\n        }\n  \
    \      return total;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo7po18r7.java:30)\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        \n        // Declare a variable for\
    \ the number of boredoms we've seen so far.\n        int boredoms = 0, i;\n  \
    \      \n        // Check whether the sentence begins with \"I\".\n        if\
    \ (S.startsWith(\"I\")) {\n            \n            // Iterate over all the characters\
    \ in the sentence.\n            for (i = 0; i < S.length(); i++) {\n         \
    \       \n                // Check if the current character is '.'.\n        \
    \        if (S.charAt(i) == '.') {\n                    \n                   \
    \ // If so, check if the current word is a boredom sentence.\n               \
    \     if (S.substring(i+1, i+3) == \"boredom\") {\n                        \n\
    \                        // If so, increment the number of boredoms.\n       \
    \                 boredoms++;\n                    }\n                }\n    \
    \        }\n        }\n        \n        // Return the number of boredoms.\n \
    \       return boredoms;\n}\n    public static void main(String[] args) {\n  \
    \  assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"\
    bIt\")) == (0));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqq4m83na.java:47)\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] tokens = S.split(\" \");\n\
    \        return tokens.stream().filter(w -> w.startsWith(\"I\")).count();\n}\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0_xy9omo.java:19: error: cannot find symbol\n        return tokens.stream().filter(w\
    \ -> w.startsWith(\"I\")).count();\n                     ^\n  symbol:   method\
    \ stream()\n  location: variable tokens of type String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String boredoms = S.replaceAll(\"\\\\\
    .\\\\.|\\\\.|\\\\?|\\\\.\", \".\")\n            .replaceAll(\"\\\\s+\", \" \"\
    ).trim();\n        Map<String, Integer> boredomMap = new HashMap<>();\n      \
    \  for (String boredy : boredoms.split(\" \")) {\n            boredomMap.computeIfAbsent(boredy,\
    \ (boredy) -> 1);\n        }\n        return boredomMap.entrySet().stream().filter(e\
    \ -> e.getKey().equals(\"I\"))\n            .count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp30zt4nqr.java:22: error: variable boredy is already defined in\
    \ method isBored(String)\n            boredomMap.computeIfAbsent(boredy, (boredy)\
    \ -> 1);\n                                                ^\n/tmp/tmp30zt4nqr.java:25:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \        .count();\n                  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        S = S.toLowerCase();\n\
    \        for (String st : S.split(\"[.?!]\"))\n            if (st.startsWith(\"\
    i\")) {\n                count++;\n            }\n        return count;\n}\n \
    \   public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfnn8jhpn.java:28)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] split = S.split(\"\\\\.|\\\\\
    ?|!\");\n        int boredoms = 0;\n        for (String word : split) {\n    \
    \        if (word.equals(\"I\")) {\n                boredoms += 1;\n         \
    \   }\n        }\n        return boredoms;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcszzyj8.java:30)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] arr=S.split(\"[.!?]\");\n \
    \       if(arr[0].toLowerCase().equals(\"i\")){\n            return 1;\n     \
    \   }\n        return 0;\n}\n    public static void main(String[] args) {\n  \
    \  assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"\
    bIt\")) == (0));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvtoq4ja7.java:27)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String boredom = \"[?.!]\";\n      \
    \  int bored = 0;\n        String[] sentences = S.split(\"\\\\.|\\\\?|\\\\!\"\
    );\n        for (String s : sentences) {\n            if (bored.contains(\"I\"\
    )) {\n                if (s.startsWith(\"I\")) {\n                    bored +=\
    \ 1;\n                }\n            } else if (s.startsWith(\"I\")) {\n     \
    \           bored += 1;\n            }\n        }\n        return bored;\n}\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpksuh77_0.java:22: error: int cannot be dereferenced\n         \
    \   if (bored.contains(\"I\")) {\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String boredom_str = null;\n       \
    \ String[] boredoms = {\"I\", \"you\", \"he's\", \"she's\", \"it's\"};\n     \
    \   int boredom = 0;\n        for (int i = 1; i < S.length(); i++) {\n       \
    \     boredom_str = S.substring(0,i);\n            if (boredoms.contains(boredom_str))\
    \ {\n                boredom++;\n            }\n        }\n        return boredom;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxwpb5_qz.java:23: error: cannot find symbol\n            if (boredoms.contains(boredom_str))\
    \ {\n                        ^\n  symbol:   method contains(String)\n  location:\
    \ variable boredoms of type String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        // Iterate through\
    \ all the words\n        for(String word : S.split(\"\\\\W+\")) {\n          \
    \  // If it starts with a 'I'\n            if(word.startsWith(\"I\")) {\n    \
    \            bored++;\n            }\n        }\n        return bored;\n}\n  \
    \  public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpim_pjibo.java:30)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] words = S.split(\"[\\.\\?!]\"\
    );\n        int boredoms = 0;\n        for (String word : words) {\n         \
    \   if (word.equalsIgnoreCase(\"I\")) {\n                boredoms++;\n       \
    \     }\n        }\n        return boredoms;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3jkodxn2.java:18: error: illegal escape character\n        String[]\
    \ words = S.split(\"[\\.\\?!]\");\n                                    ^\n/tmp/tmp3jkodxn2.java:18:\
    \ error: illegal escape character\n        String[] words = S.split(\"[\\.\\?!]\"\
    );\n                                      ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        // Find how\
    \ many \".\" appear in the string.\n        for (int i = 0; i < S.length(); i++)\
    \ {\n            if (S.charAt(i) == '.') {\n                count++;\n       \
    \     }\n        }\n        // For each character in the string, if it's a \"\
    .\", increment the counter.\n        for (int i = 0; i < S.length(); i++) {\n\
    \            if (S.charAt(i) == '.') {\n                count++;\n           \
    \ }\n        }\n        // The character \".\" appears at least twice in the string.\n\
    \        System.out.println(count);\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvrcnh4k.java:38)\n"
  stdout: '0

    0

    0

    '
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] tokens = S.split(\"[.?!]\"\
    );\n        int count = 0;\n        for (String token : tokens) {\n          \
    \  if (token.equals(\"I\"))\n                count++;\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcyuoo0b0.java:29)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] A = S.split(\"\\\\.|\\\\?|\\\
    \\!\");\n        boolean b = false;\n        for (String w : A) {\n          \
    \  if (w.equals(\"I\"))\n                b = true;\n        }\n        return\
    \ b ? A.size() : -1;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfa7av2u1.java:24: error: cannot find symbol\n        return b ?\
    \ A.size() : -1;\n                    ^\n  symbol:   method size()\n  location:\
    \ variable A of type String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        int start =\
    \ 0;\n        for(int i = S.length()-1; i >= 0 ; i--){\n            if(S.charAt(i)\
    \ == 'I' || S.charAt(i) == '.' || S.charAt(i) == '!' || S.charAt(i) == '?'){\n\
    \                if(S.charAt(i) == 'I'){\n                    start++;\n     \
    \           }\n                bored++;\n                if(start >= 3){\n   \
    \                 break;\n                }\n            }\n        }\n      \
    \  return bored;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0y0lm54o.java:35)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        String[] words\
    \ = S.split(\"[.?!]\");\n        for (int i = 0; i < words.length; i++) {\n  \
    \          if (words[i].equals(\"I\")) {\n                count++;\n         \
    \   }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp95qyi_ri.java:30)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int b = 0;\n        String w = S.toLowerCase();\n\
    \        String[] spl = w.split(\"\\\\.|\\\\?|\\\\!\");\n        for (String s\
    \ : strArrToList(spl)) {\n            if (s.startsWith(\"i\")) {\n           \
    \     b++;\n            }\n        }\n        return b;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2tiy_2i2.java:21: error: cannot find symbol\n        for (String\
    \ s : strArrToList(spl)) {\n                        ^\n  symbol:   method strArrToList(String[])\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        Map<String,Integer> wordCounts = new\
    \ HashMap<>();\n        for (String word : S.split(\"[!?.]\"))\n            if\
    \ (word.length() > 0)\n                wordCounts.put(word, wordCounts.getOrDefault(word,\
    \ 0)+1);\n        int boredom = 0;\n        for (String word : wordCounts.keySet())\n\
    \            if (word.startsWith(\"I\"))\n                boredom++;\n       \
    \ return boredom;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpagjhtx_g.java:30)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] sentence = S.split(\".,!?\"\
    );\n        Stream<String> boredom = Arrays.stream(sentence);\n        boredom.filter(x\
    \ -> x.equals(\"I\")).count();\n        boredom.filter(x -> x.equals(\".\")).count();\n\
    \        boredom.filter(x -> x.equals(\"!\")).count();\n        boredom.filter(x\
    \ -> x.equals(\"?\")).count();\n        return boredom.count();\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdbqkce77.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return boredom.count();\n                        \
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredomCount = 0;\n        String\
    \ word = \"\";\n        String[] sentence = S.split(\".,!?\");\n        for(String\
    \ s : sentence) {\n            if(s.startsWith(\"I\")) {\n                boredomCount++;\n\
    \            }\n            word = s;\n        }\n        return boredomCount;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ba3ergd.java:31)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom_cnt = 0;\n        for (String\
    \ t : S.split(\"[.!?]\")) { // split into sentences and check for boredom\n  \
    \          if (t.startsWith(\"I\")) {\n                boredom_cnt++;\n      \
    \      }\n        }\n        return boredom_cnt;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j4vvyis.java:28)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        for (int i =\
    \ 0; i < S.length(); i++) {\n            if (S[i].equals(\"I\") && !S[i + 1].equals(\"\
    .\") && !S[i + 2].equals(\"?\") && !S[i + 3].equals(\"!\")) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ad04axm.java:20: error: array required, but String found\n   \
    \         if (S[i].equals(\"I\") && !S[i + 1].equals(\".\") && !S[i + 2].equals(\"\
    ?\") && !S[i + 3].equals(\"!\")) {\n                 ^\n/tmp/tmp8ad04axm.java:20:\
    \ error: array required, but String found\n            if (S[i].equals(\"I\")\
    \ && !S[i + 1].equals(\".\") && !S[i + 2].equals(\"?\") && !S[i + 3].equals(\"\
    !\")) {\n                                      ^\n/tmp/tmp8ad04axm.java:20: error:\
    \ array required, but String found\n            if (S[i].equals(\"I\") && !S[i\
    \ + 1].equals(\".\") && !S[i + 2].equals(\"?\") && !S[i + 3].equals(\"!\")) {\n\
    \                                                               ^\n/tmp/tmp8ad04axm.java:20:\
    \ error: array required, but String found\n            if (S[i].equals(\"I\")\
    \ && !S[i + 1].equals(\".\") && !S[i + 2].equals(\"?\") && !S[i + 3].equals(\"\
    !\")) {\n                                                                    \
    \                    ^\n4 errors\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom = 0;\n        int count\
    \ = 0;\n        // iterate over each word in the string\n        for (String w\
    \ : S.split(\"\\\\s\")) {\n            // If word starts with \"I\"\n        \
    \    if (w.startsWith(\"I\")) {\n                // add one to boredom count\n\
    \                boredom++;\n                // iterate over each character in\
    \ the word and see if any are boredom\n                // sentences contain the\
    \ '.', '?' or '!' character so we need to check\n                // this for every\
    \ character in the word\n                for (char c : w.toCharArray()) {\n  \
    \                  // check to see if the character is a '.', '?' or '!'\n   \
    \                 if (c == '.' || c == '?' || c == '!') {\n                  \
    \      count++;\n                    }\n                }\n            }\n   \
    \     }\n        // return the number of boredoms found\n        return boredom;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplkp1g3wi.java:42)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        String[] split1\
    \ = S.split(\".\");\n        String[] split2 = split1[0].split(\"[?|!]\");\n \
    \       Arrays.stream(split2).forEach(s -> {\n            if (s.startsWith(\"\
    I\")) {\n                count++;\n            }\n        });\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjc7rb6zm.java:23: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n                count++;\n  \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom = 0;\n        if (S.equals(\"\
    .\")) return boredom++;\n        if (S.equals(\"?\") || S.equals(\"!\")) return\
    \ boredom++;\n        S.split(\"\\\\.|\\\\?|!\");\n        for (int i = 0; i <=\
    \ S.length(); i++) {\n            if (S[i].toLowerCase().startsWith(\"i\"))\n\
    \                boredom++;\n        }\n        return boredom;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkwgj7y4_.java:23: error: array required, but String found\n   \
    \         if (S[i].toLowerCase().startsWith(\"i\"))\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int counter = 0;\n        String[] wordList\
    \ = S.split(\" \");\n        for (String word : wordList) {\n            if (word.startsWith(\"\
    I\")) {\n                counter++;\n            }\n        }\n        return\
    \ counter;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk8051aj7.java:29)\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] arr = S.split(\"[.!?]\");\n\
    \        return arr.stream().filter(s -> s.equals(\"I\")).count();\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbmurdojl.java:19: error: cannot find symbol\n        return arr.stream().filter(s\
    \ -> s.equals(\"I\")).count();\n                  ^\n  symbol:   method stream()\n\
    \  location: variable arr of type String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        for (String\
    \ word : S.split(\" \")) {\n            if (word.startsWith(\"I\")) {\n      \
    \          bored++;\n            }\n        }\n        return bored;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfb4lbsin.java:28)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return S.count(\"I\");\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjhz_vc20.java:18: error: cannot find symbol\n        return S.count(\"\
    I\");\n                ^\n  symbol:   method count(String)\n  location: variable\
    \ S of type String\n1 error\n"
  stdout: ''
  timestamp: 1660010916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        String[] split\
    \ = S.split(\"\\\\.|\\\\?|\\\\!\");\n        for(String s: split){\n         \
    \   if(s.equals(\"I\"))\n                bored++;\n        }\n        return bored;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw0c7x7pq.java:29)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count=0;\n        S.toCharArray().forEach(x->\
    \ {\n            if (x.equals(\".\")) {\n                count++;\n          \
    \  }\n            if (x.equals(\"?\")) {\n                count++;\n         \
    \   }\n            if (x.equals(\"!\")) {\n                count++;\n        \
    \    }\n        });\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn2_goc3p.java:19: error: cannot find symbol\n        S.toCharArray().forEach(x->\
    \ {\n                       ^\n  symbol:   method forEach((x)->{ if [...]; } })\n\
    \  location: class char[]\n1 error\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        String[] splitted\
    \ = S.split(\"\\\\.|\\\\?|!\");\n        splitted = Arrays.stream(splitted).filter(s\
    \ -> !s.isEmpty()).distinct().toArray(String[]::new);\n        for(String s :\
    \ splitted) {\n            if (s.startsWith(\"I\"))\n                bored++;\n\
    \        }\n        return bored;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0bmpi_jw.java:29)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        ArrayList<String> list = new ArrayList<>(Arrays.asList(S.split(\"\
    \\\\. ?!\")));\n        int count = 0;\n        for(String s:list){\n        \
    \    if(s.equals(\"I\")){\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39ksri3h.java:30)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredomCount = 0;\n        String[]\
    \ sentences = S.split(\"[.?!]\");\n\n        for (String sentence : sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredomCount++;\n\
    \            }\n        }\n        return boredomCount;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2zc8v23.java:30)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // TODO: Implement this method!\n}\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpm5p_r1xq.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        /*\n         * Write your code here\n\
    \         */\n        String boredom = \"\";\n        for (int i = 0; i < S.length();\
    \ i++) {\n            if (S.substring(i, i + 1).equals(\".\")) {\n           \
    \     boredom += S.substring(i, i + 1);\n            }\n        }\n        String\
    \ start = boredom.substring(0,2);\n        String end = boredom.substring(boredom.length()\
    \ - 1, boredom.length());\n        int count = 0;\n        if (boredom.startsWith(start))\
    \ {\n            count = boredom.substring(1,boredom.length() - 1).split(end).length;\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end 2, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.isBored(tmpbcnzkimk.java:27)\n\
    \tat Problem.main(tmpbcnzkimk.java:36)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = (S.length() - S.split(\"\
    [.?!]\").length - 1) / 2;\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpen_l4trg.java:22)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String [] array = S.split(\"[.?!]\"\
    );\n        int sum = 0;\n        for (String t : array) {\n            if (t.equals(\"\
    I\"))\n                sum += 1;\n        }\n        return sum;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqgtslx94.java:29)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        for(String word:S.split(\"\
    \ \")) {\n            if(word.equals(\"I\"))\n                count++;\n     \
    \   }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n   \
    \ assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgqmbp2h.java:31)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] S = S.split(\"[.!?]+\");\n\
    \        int ans = 0;\n        for(int i=0;i<S.length;i++){\n            if(S[i].startsWith(\"\
    I\")){\n                ans++;\n            }\n        }\n        return ans;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiqs5doy7.java:18: error: variable S is already defined in method\
    \ isBored(String)\n        String[] S = S.split(\"[.!?]+\");\n               \
    \  ^\n/tmp/tmpiqs5doy7.java:18: error: cannot find symbol\n        String[] S\
    \ = S.split(\"[.!?]+\");\n                      ^\n  symbol:   method split(String)\n\
    \  location: variable S of type String[]\n2 errors\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        for (String\
    \ sentence : S.split(\"[.?!]\"))\n            if (sentence.startsWith(\"I\"))\n\
    \                count++;\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvuen9hkw.java:26)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        for(String word\
    \ : S.split(\" \")){\n            if(word.startsWith(\"I\")){\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo7lzvxo7.java:28)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        ArrayList arr1=new ArrayList();\n  \
    \      ArrayList arr2=new ArrayList();\n        ArrayList arr3=new ArrayList();\n\
    \        int n=0,count=0,c=0;\n        int i=0,j=0,k=0,l=0;\n        String x,a;\n\
    \        x=S.split(\"\\\\.|\\\\?|\\\\!\");\n        \n        for (String y:x){\n\
    \            for (String z:x){\n                if (z.equals(y)){\n          \
    \          arr1.add(y);\n                }\n            }\n        }\n       \
    \ \n        for (String z:arr1){\n            for (String y:x){\n            \
    \    if (z.equals(y)){\n                    arr2.add(z);\n                }\n\
    \            }\n        }\n        \n        for (String z:arr2){\n          \
    \  for (String y:x){\n                if (z.equals(y)){\n                    arr3.add(z);\n\
    \                }\n            }\n        }\n        \n        for (String z:arr3){\n\
    \            for (String y:x){\n                if (z.equals(y)){\n          \
    \          count++;\n                }\n            }\n        }\n        \n \
    \       return count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqoj2_79r.java:24: error: incompatible types: String[] cannot be\
    \ converted to String\n        x=S.split(\"\\\\.|\\\\?|\\\\!\");\n           \
    \      ^\n/tmp/tmpqoj2_79r.java:26: error: for-each not applicable to expression\
    \ type\n        for (String y:x){\n                      ^\n  required: array\
    \ or java.lang.Iterable\n  found:    String\n/tmp/tmpqoj2_79r.java:27: error:\
    \ for-each not applicable to expression type\n            for (String z:x){\n\
    \                          ^\n  required: array or java.lang.Iterable\n  found:\
    \    String\n/tmp/tmpqoj2_79r.java:34: error: incompatible types: Object cannot\
    \ be converted to String\n        for (String z:arr1){\n                     \
    \ ^\n/tmp/tmpqoj2_79r.java:35: error: for-each not applicable to expression type\n\
    \            for (String y:x){\n                          ^\n  required: array\
    \ or java.lang.Iterable\n  found:    String\n/tmp/tmpqoj2_79r.java:42: error:\
    \ incompatible types: Object cannot be converted to String\n        for (String\
    \ z:arr2){\n                      ^\n/tmp/tmpqoj2_79r.java:43: error: for-each\
    \ not applicable to expression type\n            for (String y:x){\n         \
    \                 ^\n  required: array or java.lang.Iterable\n  found:    String\n\
    /tmp/tmpqoj2_79r.java:50: error: incompatible types: Object cannot be converted\
    \ to String\n        for (String z:arr3){\n                      ^\n/tmp/tmpqoj2_79r.java:51:\
    \ error: for-each not applicable to expression type\n            for (String y:x){\n\
    \                          ^\n  required: array or java.lang.Iterable\n  found:\
    \    String\nNote: /tmp/tmpqoj2_79r.java uses unchecked or unsafe operations.\n\
    Note: Recompile with -Xlint:unchecked for details.\n9 errors\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n      Pattern bored = Pattern.compile(\"(?<=^|\\\
    \\s)\\\\bI\\\\b\");\n      Matcher matcher = bored.matcher(S);\n      int count\
    \ = 0;\n      while (matcher.find()) {\n        count++;\n      }\n      return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqpx28fmt.java:18: error: cannot find symbol\n      Pattern bored\
    \ = Pattern.compile(\"(?<=^|\\\\s)\\\\bI\\\\b\");\n      ^\n  symbol:   class\
    \ Pattern\n  location: class Problem\n/tmp/tmpqpx28fmt.java:18: error: cannot\
    \ find symbol\n      Pattern bored = Pattern.compile(\"(?<=^|\\\\s)\\\\bI\\\\\
    b\");\n                      ^\n  symbol:   variable Pattern\n  location: class\
    \ Problem\n/tmp/tmpqpx28fmt.java:19: error: cannot find symbol\n      Matcher\
    \ matcher = bored.matcher(S);\n      ^\n  symbol:   class Matcher\n  location:\
    \ class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        try{\n        String[] lines = S.split(\"\
    \\\\.|\\\\?|!\");\n        Arrays.stream(lines).filter(x -> x.equals(\"I\")).count();\n\
    \        }catch(NullPointerException e){\n            System.out.println(\"String\
    \ is null\");\n        }\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjye_83df.java:29)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return S.split(\"[.?,!]\").length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5hkssgw1.java:23)\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Your code here!\n        int count\
    \ = 0;\n        S = S.toLowerCase();\n        String[] array = S.split(\" \");\n\
    \        for(String s : array){\n            if(s.equals(\"i\")) count++;\n  \
    \      }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp02g09g2e.java:33)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return count_boredom(S).length();\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprbfgt8yq.java:18: error: cannot find symbol\n        return count_boredom(S).length();\n\
    \               ^\n  symbol:   method count_boredom(String)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        List<String> list = S.split(\"\\\\.|\\\
    \\?|\\\\!\");\n        List<String> bored = new ArrayList<String>();\n       \
    \ for (String s : list) {\n            if (s.equals(\"I\"))\n                bored.add(s);\n\
    \        }\n        int bored_counter = bored.size();\n        return bored_counter;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3lgxlcgn.java:18: error: incompatible types: String[] cannot be\
    \ converted to List<String>\n        List<String> list = S.split(\"\\\\.|\\\\\
    ?|\\\\!\");\n                                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        ArrayList<String> bored = new ArrayList<String>();\n\
    \        for(String word : S.split(\"\\\\s+\")) \n            if(word.startsWith(\"\
    I\"))\n                bored.add(word);\n        return bored.size();\n}\n   \
    \ public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpld4vv4ki.java:26)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        for (int i =\
    \ 0; i<S.length();i++) {\n            if (S.charAt(i) == '.' || S.charAt(i) ==\
    \ '?' || S.charAt(i) == '!') {\n                count++;\n            }\n    \
    \    }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n   \
    \ assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjzf21a0_.java:28)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Write your code here\n        int\
    \ boredoms = 0 ;\n        String[] arr1 = S.split(\" \");\n        for(String\
    \ str : arr1){\n            if(str.startsWith(\"I\")){\n                boredoms\
    \ ++; \n            }\n        }\n        return boredoms;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzdgdlpuo.java:30)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        String [] words\
    \ = S.split(\"\\\\.|\\\\?|\\\\!\");\n        for (String wd : words) {\n     \
    \       if (wd.equals(\"I\")) {\n                count++;\n            }\n   \
    \     }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq0eyayp1.java:30)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int i = 0;\n        for ( int j=0; j<S.length();\
    \ j++ ) {\n            char a = S.charAt(j);\n            if ( a == '.' ) {\n\
    \                i++;\n            }\n            if ( a == '?' || a == '!' )\
    \ {\n                i++;\n            }\n        }\n        return i;\n}\n  \
    \  public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1ns_kfu.java:32)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Your code here\n        String[]\
    \ words = S.split(\"[.!?]\");\n        int count = 0;\n        for(String word\
    \ : words) {\n            if(word.equals(\"I\")) count++;\n        }\n       \
    \ return count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_w112oar.java:29)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int i=0;\n        while(!S.isEmpty()){\n\
    \            if(S.startsWith(\"I\")){\n                i++;\n            }\n \
    \           S=S.substring(1);\n        }\n        return i;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphrmpb84p.java:29)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        if (S == null || S.length() == 0) return\
    \ 0;\n        boolean startsWithI = false;\n        for (char c : S.toCharArray())\
    \ {\n            switch (c) {\n                case 'I':\n                   \
    \ if (startsWithI) return 0;\n                    startsWithI = true;\n      \
    \              break;\n                case '.':\n                case '?':\n\
    \                case '!':\n                    startsWithI = false;\n       \
    \             break;\n                default:\n                    break;\n \
    \           }\n        }\n        return 1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk5tnfm2r.java:38)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        Set<String> sentences = new HashSet<>();\n\
    \        for (String sentence : S.split(\"[\\\\.,?!]\"))\n            sentences.add(sentence.trim());\n\
    \        int bored = 0;\n        for (String sentence : sentences) {\n       \
    \     if (sentence.startsWith(\"I\"))\n                bored++;\n        }\n \
    \       return bored;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbzbgxe3z.java:30)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int b=0;\n        for (String s:S.split(\"\
    [.!?]\"))\n            if (s.equals(\"I\"))\n                b++;\n        return\
    \ b;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa_9lpjug.java:27)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        boolean bored = false;\n        int\
    \ boredom_count = 0;\n\n        for (int i = 0; i < S.length(); i++) {\n     \
    \       String word = S.substring(i, i+1);\n            if (word.equals(\"I\"\
    )) {\n                bored = true;\n            }\n            if (word.equals(\"\
    .\")) {\n                bored = true;\n            }\n            if (word.equals(\"\
    ?\")) {\n                bored = true;\n            }\n            if (word.equals(\"\
    !\")) {\n                bored = true;\n            }\n        }\n\n        if\
    \ (bored) {\n            boredom_count++;\n        }\n        return boredom_count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprzu4d27t.java:44)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] boredom = {\"I\", \"I'm\",\
    \ \"I'll\", \"I've\", \"Ill\", \"I'd\", \"it's\", \"its\", \"it'll\"};\n     \
    \   Map<String, Integer> map = new TreeMap<>();\n        for(String str : boredom)\n\
    \            map.put(str,0);\n        int sum = 0;\n        for(String str : S.split(Pattern.quote(\"\
    .\")+Pattern.quote(\"?\")+Pattern.quote(\"!\")))\n            sum += map.get(str);\n\
    \        return sum;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaug1emit.java:23: error: cannot find symbol\n        for(String\
    \ str : S.split(Pattern.quote(\".\")+Pattern.quote(\"?\")+Pattern.quote(\"!\"\
    )))\n                                 ^\n  symbol:   variable Pattern\n  location:\
    \ class Problem\n/tmp/tmpaug1emit.java:23: error: cannot find symbol\n       \
    \ for(String str : S.split(Pattern.quote(\".\")+Pattern.quote(\"?\")+Pattern.quote(\"\
    !\")))\n                                                    ^\n  symbol:   variable\
    \ Pattern\n  location: class Problem\n/tmp/tmpaug1emit.java:23: error: cannot\
    \ find symbol\n        for(String str : S.split(Pattern.quote(\".\")+Pattern.quote(\"\
    ?\")+Pattern.quote(\"!\")))\n                                                \
    \                       ^\n  symbol:   variable Pattern\n  location: class Problem\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int counter = 0;\n        String[] lines\
    \ = S.split(\"[.!?]\");\n        for (String s : lines) {\n            if (s.toLowerCase().startsWith(\"\
    i\")) {\n                counter++;\n            }\n        }\n        return\
    \ counter;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3u72uzo3.java:29)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredoms = 0;\n        if (S ==\
    \ null || S.length() < 1)\n            return boredoms;\n        for (int i=0;\
    \ i<S.length(); i++)\n        {\n            if (S.charAt(i) == 'I')\n       \
    \     {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5yth2rr9.java:32)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String boredom = \"I\";\n        return\
    \ S.split(\"\\\\.|\\\\?|\\\\!\")\n                .map(w -> w.startsWith(boredom)\
    \ ? 1 : 0)\n                .sum();\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi68qrxj6.java:20: error: cannot find symbol\n                .map(w\
    \ -> w.startsWith(boredom) ? 1 : 0)\n                ^\n  symbol:   method map((w)->w.sta[...]1\
    \ : 0)\n  location: class String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredomCount = 0;\n        String[]\
    \ words = S.split(\"[.!?]\");\n        for (String word : words) {\n         \
    \   if (word.equals(\"I\")) {\n                boredomCount += 1;\n          \
    \  }\n        }\n        return boredomCount;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiy1sjsw9.java:30)\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        S += \".\";\n        S += \"?\";\n \
    \       S += \"!\";\n        String[] words = S.split(\"[.!?]\");\n        int\
    \ bored = 0;\n        for (String w : words) {\n            if (w.equals(\"I\"\
    )) {\n                bored++;\n            }\n        }\n        return bored;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0oviphhy.java:33)\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] words = S.split(\" \");\n \
    \       int boredom = 0;\n        for(int i = 0; i < words.length; ++i)\n    \
    \        boredom += words[i].equals(\"I\");\n        return boredom;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp80kc4ivd.java:21: error: bad operand types for binary operator\
    \ '+'\n            boredom += words[i].equals(\"I\");\n                    ^\n\
    \  first type:  int\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660010918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] sentence = S.split(\"[.?!]\"\
    );\n        int count = 0;\n        for (int i = 0; i < sentence.length; i++)\
    \ {\n            if (sentence[i].startsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphis298ji.java:29)\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int num = 0;\n        String[] words\
    \ = S.split(\"[.!?]\");\n        for (String word : words) {\n            if (word.startsWith(\"\
    I\")) {\n                num++;\n            }\n        }\n        return num;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqth3f0rq.java:29)\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] arr = S.split(\"[.?!]\");\n\
    \        return arr.stream().filter(e -> e.equals(\"I\")).count();\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpamw7apfp.java:19: error: cannot find symbol\n        return arr.stream().filter(e\
    \ -> e.equals(\"I\")).count();\n                  ^\n  symbol:   method stream()\n\
    \  location: variable arr of type String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        ArrayList arr = new ArrayList();\n \
    \       for (int i = 0; i < S.length(); i++)\n            arr.add(S.charAt(i));\n\
    \        ArrayList arr = new ArrayList();\n        int boredom = 0;\n        char\
    \ firstChar = ' ';\n        boolean firstCharIs = true;\n        for (int i =\
    \ 0; i < S.length(); i++) {\n            if (S.charAt(i) == '?' || S.charAt(i)\
    \ == '.' || S.charAt(i) == '!')\n                boredom++;\n            boolean\
    \ firstCharIs = true;\n            for (int j = 0; j < arr.size(); j++) {\n  \
    \              if (firstCharIs) {\n                    if (S.charAt(i) == arr.get(j))\n\
    \                        firstCharIs = false;\n                } else {\n    \
    \                if (S.charAt(i) == '.' || S.charAt(i) == '!' || S.charAt(i) ==\
    \ '?')\n                        firstCharIs = true;\n                }\n     \
    \       }\n        }\n        return boredom;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzzv_jygb.java:21: error: variable arr is already defined in method\
    \ isBored(String)\n        ArrayList arr = new ArrayList();\n                \
    \  ^\n/tmp/tmpzzv_jygb.java:28: error: variable firstCharIs is already defined\
    \ in method isBored(String)\n            boolean firstCharIs = true;\n       \
    \             ^\n/tmp/tmpzzv_jygb.java:31: error: bad operand types for binary\
    \ operator '=='\n                    if (S.charAt(i) == arr.get(j))\n        \
    \                            ^\n  first type:  char\n  second type: Object\nNote:\
    \ /tmp/tmpzzv_jygb.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\n3 errors\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        if (S == null || S.length() <= 1)\n\
    \            return 0;\n        List<String> list = S.split(\"\\\\.|[?!]\");\n\
    \        return list.stream().filter(s -> s.equals(\"I\")).count();\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeohvbhh7.java:20: error: incompatible types: String[] cannot be\
    \ converted to List<String>\n        List<String> list = S.split(\"\\\\.|[?!]\"\
    );\n                                   ^\n/tmp/tmpeohvbhh7.java:21: error: incompatible\
    \ types: possible lossy conversion from long to int\n        return list.stream().filter(s\
    \ -> s.equals(\"I\")).count();\n                                             \
    \                ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        if (S == null || S.isEmpty()) return\
    \ 0;\n        String first_word = S.split(\" \")[0];\n        int count = 0;\n\
    \        for (int i = 0; i < S.length(); i++) {\n            if (S.charAt(i) ==\
    \ '.' || S.charAt(i) == '?' || S.charAt(i) == '!') {\n                count++;\n\
    \            }\n            if (S.charAt(i) == first_word.charAt(0)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf57lrdz1.java:32)\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        for(int i =\
    \ 0; i<S.length(); i++){\n            if(S.charAt(i) != 'I')\n               \
    \ continue;\n            String temp = S.substring(0,i);\n            if(temp.equals(\"\
    I\"))\n                continue;\n            if(temp.equals(\"!\") || temp.equals(\"\
    ?\"))\n                continue;\n            temp = temp.substring(1);\n    \
    \        while(temp.length() > 0){\n                if(temp.equals(\".\"))\n \
    \                   continue;\n                if(temp.equals(\"?\"))\n      \
    \              continue;\n                if(temp.equals(\"!\"))\n           \
    \         continue;\n                bored++;\n                temp = temp.substring(1);\n\
    \            }\n        }\n        return bored;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 1, end 0, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat java.base/java.lang.String.substring(String.java:2680)\n\
    \tat Problem.isBored(tmpnkq0n0z3.java:27)\n\tat Problem.main(tmpnkq0n0z3.java:43)\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String boredoms = \"I\";\n        int\
    \ boredom_count = 0;\n        if (S.contains(boredoms)) {\n            S = S.split(\"\
    \\\\.|\\\\?|\\\\!\");\n            boredom_count = S.length;\n        }\n    \
    \    return boredom_count;\n}\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n   \
    \ assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ufxsaod.java:21: error: incompatible types: String[] cannot be\
    \ converted to String\n            S = S.split(\"\\\\.|\\\\?|\\\\!\");\n     \
    \                  ^\n/tmp/tmp0ufxsaod.java:22: error: cannot find symbol\n  \
    \          boredom_count = S.length;\n                             ^\n  symbol:\
    \   variable length\n  location: variable S of type String\n2 errors\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        S = S.toLowerCase();\n\
    \        for(int i = 0; i < S.length(); i++)\n            if(S.charAt(i) != 'i')\n\
    \                count++;\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2iktts4u.java:26)\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom = 0;\n        String start\
    \ = \"I\";\n        String end = \".,?,!\";\n        String[] words = S.split(\"\
    \ \");\n        for (String word : words) {\n            String temp = word.toLowerCase();\n\
    \            if (temp.startsWith(start) && temp.endsWith(end)) {\n           \
    \     boredom++;\n            }\n        }\n        return boredom;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd8nrtbq.java:33)\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String pattern = \"(^I+.)\";\n     \
    \   return Pattern.matches(pattern,S).length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8mx858bn.java:19: error: cannot find symbol\n        return Pattern.matches(pattern,S).length();\n\
    \               ^\n  symbol:   variable Pattern\n  location: class Problem\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        HashMap<String, Integer> countMap =\
    \ new HashMap<>();\n        String[] splits = S.split(\"[.?!]\");\n        for\
    \ (String s : splits) {\n            String[] words = s.split(\"\\\\s\");\n  \
    \          for (String word : words) {\n                if (countMap.containsKey(word))\
    \ {\n                    int count = countMap.get(word);\n                   \
    \ countMap.put(word, count + 1);\n                } else {\n                 \
    \   countMap.put(word, 1);\n                }\n            }\n        }\n    \
    \    int count = 0;\n        for (String word : countMap.keySet()) {\n       \
    \     if (countMap.get(word) == 1) {\n                count++;\n            }\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjc7bgata.java:40)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        Map<String, Integer> m = new HashMap<>();\n\
    \n        String[] words = S.split(\"\\\\.|\\\\?|!\");\n        for (String word\
    \ : words) {\n            int count = 0;\n            if (m.containsKey(word))\n\
    \                count = m.get(word);\n            m.put(word, count + 1);\n \
    \       }\n\n        return m.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfeld205.java:31)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredoms = 0;\n        // Your code\
    \ goes here.\n        return boredoms;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr68yuflk.java:25)\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredoms = 0;\n        // Declare\
    \ a String to hold the sentence and an int to hold the boredoms count\n      \
    \  String[] sentence = S.split(\"[.?!]\");\n        for (String word: sentence)\
    \ {\n            if (word.startsWith(\"I\")) boredoms++;\n        }\n        return\
    \ boredoms;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61va_2bm.java:28)\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // TODO: Write your code to count the\
    \ number of boredoms.\n        // Ask if you have any questions.\n        return\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0wi2tz8.java:25)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        // your code\
    \ goes here\n        String[] words = S.split(\"\\\\.|\\\\?|!\");\n        for\
    \ (String word : words) {\n            if (word.equals(\"I\")) {\n           \
    \     count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1zgxnipf.java:31)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return S.split(\" \").stream().filter(s\
    \ -> s.startsWith(\"I\"))\n                .count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1bnvorh2.java:18: error: cannot find symbol\n        return S.split(\"\
    \ \").stream().filter(s -> s.startsWith(\"I\"))\n                           ^\n\
    \  symbol:   method stream()\n  location: class String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010919
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] S1 = S.split(\".\");\n    \
    \    String[] S2 = S.split(\"?\");\n        String[] S3 = S.split(\"!\");\n  \
    \      int[] count = {0, 0, 0};\n        for (int i = 0; i < S1.length; i++) {\n\
    \            if (S1[i].equals(\"I\")) {\n                count[0]++;\n       \
    \     } else if (S2[i].equals(\"I\")) {\n                count[1]++;\n       \
    \     } else if (S3[i].equals(\"I\")) {\n                count[2]++;\n       \
    \     }\n        }\n        return count[0] + count[1] + count[2];\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.regex.PatternSyntaxException: Dangling\
    \ meta character '?' near index 0\n?\n^\n\tat java.base/java.util.regex.Pattern.error(Pattern.java:2028)\n\
    \tat java.base/java.util.regex.Pattern.sequence(Pattern.java:2203)\n\tat java.base/java.util.regex.Pattern.expr(Pattern.java:2069)\n\
    \tat java.base/java.util.regex.Pattern.compile(Pattern.java:1783)\n\tat java.base/java.util.regex.Pattern.<init>(Pattern.java:1430)\n\
    \tat java.base/java.util.regex.Pattern.compile(Pattern.java:1069)\n\tat java.base/java.lang.String.split(String.java:3153)\n\
    \tat java.base/java.lang.String.split(String.java:3199)\n\tat Problem.isBored(tmpygvme7a9.java:19)\n\
    \tat Problem.main(tmpygvme7a9.java:34)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom = 0;\n        for (String\
    \ w : S.split(\" \")) {\n            if (w.startsWith(\"I\")) {\n            \
    \    boredom++;\n            }\n        }\n        return boredom;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl_j0dame.java:28)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int counter = 0;\n        int index\
    \ = 0;\n        while (index < S.length()) {\n            if (S.charAt(index)\
    \ == '.' || S.charAt(index) == '?' || S.charAt(index) == '!') {\n            \
    \    counter++;\n            }\n            index++;\n        }\n        return\
    \ counter;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0l13_y33.java:30)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Declare variables\n        int boredomCount\
    \ = 0;\n        String str = new String(S.trim());\n        String firstWord =\
    \ str.substring(0, str.indexOf('.'));\n        String remainingWords = str.substring(str.indexOf('.')\
    \ + 1);\n        String boredomString = \"\";\n        // Write your logic here\n\
    \        if (boredomString.isEmpty()) {\n            if (firstWord.equals(\"I\"\
    )) {\n                boredomCount = 1;\n            } else {\n              \
    \  boredomCount = 0;\n            }\n        } else {\n            boredomCount\
    \ = 1;\n        }\n        return boredomCount;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 11\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.isBored(tmp2nlz9hnd.java:21)\n\
    \tat Problem.main(tmp2nlz9hnd.java:37)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return S.contains(\"I\") ? 0 : 1;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1iuuhywi.java:21)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // The map will count the boredoms in\
    \ all the sentences in the text\n        Map<String, Integer> boredMap = new HashMap<>();\n\
    \        // Iterate over all the sentences in the text to count the boredoms\n\
    \        for (String sentence : S.split(\"[.?!]+\")) {\n            // Iterate\
    \ over all the words in the sentence\n            for (String word : sentence.split(\"\
    \ \")) {\n                // If the word is a boredom then increment the counter\n\
    \                if (word.startsWith(\"I\")) {\n                    int boredoms\
    \ = boredMap.compute(word, (key, value) -> value == null ? 1 : value + 1);\n \
    \                   boredMap.put(word, boredoms);\n                }\n       \
    \     }\n        }\n        // Return the counter of boredoms found\n        return\
    \ boredMap.values().stream().reduce(0, (accumulator, value) -> accumulator + value);\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkjc54j5q.java:36)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom = 0;\n        String[] array\
    \ = S.split(\"\\\\.|\\\\?|\\\\!\");\n        for (String s : array) {\n      \
    \      if (s.startsWith(\"I\")) {\n                boredom++;\n            }\n\
    \        }\n        return boredom;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8ygetiv.java:29)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        String[] tokens\
    \ = S.split(\"[.?!]\");\n        for (String word : tokens) {\n            if\
    \ (word.startsWith(\"I\"))\n                count++;\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgzuru087.java:28)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] arr = S.split(\"\\\\?\\\\!\\\
    \\.\");\n        List<String> list = Arrays.stream(arr).filter(a -> a.startsWith(\"\
    I\")).collect(Collectors.toList());\n        return list.size();\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplygqs3dz.java:24)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        List<String> words = Arrays.asList(S.split(\"\
    \ \"));\n        boolean firstSentence = true;\n        int boredomCount = 0;\n\
    \        for (String w : words) {\n            // boredom if first sentence\n\
    \            if (firstSentence) {\n                boredomCount += 1;\n      \
    \          firstSentence = false;\n                continue;\n            }\n\n\
    \            // boredom if not first sentence\n            if (!firstSentence)\
    \ {\n                if (w.equals(\"I\")) {\n                    boredomCount\
    \ += 1;\n                }\n            }\n        }\n        return boredomCount;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkb14_m33.java:39)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        try{\n            Pattern p1 = Pattern.compile(\"\
    [.?!]\");\n            Matcher m1 = p1.matcher(S);\n            Matcher p2 = Pattern.compile(\"\
    ^I\");\n            Matcher m2 = p2.matcher(S);\n            if(m1.find() && m2.find()){\n\
    \                return 1;\n            }else if(m1.find()){\n               \
    \ return 0;\n            }else{\n                return 0;\n            }\n  \
    \      }catch (Exception ex){\n            return 0;\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6hmeyjco.java:19: error: cannot find symbol\n            Pattern\
    \ p1 = Pattern.compile(\"[.?!]\");\n            ^\n  symbol:   class Pattern\n\
    \  location: class Problem\n/tmp/tmp6hmeyjco.java:19: error: cannot find symbol\n\
    \            Pattern p1 = Pattern.compile(\"[.?!]\");\n                      \
    \   ^\n  symbol:   variable Pattern\n  location: class Problem\n/tmp/tmp6hmeyjco.java:20:\
    \ error: cannot find symbol\n            Matcher m1 = p1.matcher(S);\n       \
    \     ^\n  symbol:   class Matcher\n  location: class Problem\n/tmp/tmp6hmeyjco.java:21:\
    \ error: cannot find symbol\n            Matcher p2 = Pattern.compile(\"^I\");\n\
    \            ^\n  symbol:   class Matcher\n  location: class Problem\n/tmp/tmp6hmeyjco.java:21:\
    \ error: cannot find symbol\n            Matcher p2 = Pattern.compile(\"^I\");\n\
    \                         ^\n  symbol:   variable Pattern\n  location: class Problem\n\
    /tmp/tmp6hmeyjco.java:22: error: cannot find symbol\n            Matcher m2 =\
    \ p2.matcher(S);\n            ^\n  symbol:   class Matcher\n  location: class\
    \ Problem\n6 errors\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return S.startsWith(\"I\") ? 1 : 0;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdaajp16b.java:22)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        Map<String, Integer> boredom = new HashMap<>();\n\
    \        for (String word : S.split(\" \")) {\n            if (word.startsWith(\"\
    I\")) {\n                boredom.put(word, boredom.get(word) + 1);\n         \
    \   }\n        }\n        return boredom.values().stream().mapToInt(i -> i).sum();\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Integer.intValue()\" because the return value of \"java.util.Map.get(Object)\"\
    \ is null\n\tat Problem.isBored(tmpyxo8r7dz.java:21)\n\tat Problem.main(tmpyxo8r7dz.java:28)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        String[] words\
    \ = S.split(\"[.?!]\");\n        for(int i = 0; i < words.length; i++) {\n   \
    \         if(words[i].equals(\"I\")) {\n                bored++;\n           \
    \ }\n        }\n        return bored;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkmqem_3a.java:30)\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom = 0;\n        for (int i\
    \ = 0; i < S.length(); i++) {\n            if (S[i].equals(\"I\")) {\n       \
    \         boredom++;\n            } else {\n                if (boredom != 0)\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \        return boredom;\n}\n    public static void main(String[] args) {\n  \
    \  assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"\
    bIt\")) == (0));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpotw3pcnr.java:20: error: array required, but String found\n   \
    \         if (S[i].equals(\"I\")) {\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660010920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredoms = 0;\n        String[]\
    \ words = S.split(\" \");\n        for (String w : words) {\n            if (w.equals(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n}\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n\
    \    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"bIt\"))\
    \ == (0));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpto1bmfmx.java:33)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        String[] sarray\
    \ = S.split(\" \");\n        for (int i = 0; i < sarray.length; i++) {\n     \
    \       if (sarray[i] == \"I\") {\n                bored++;\n            }\n \
    \       }\n        return bored;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp37edf6aw.java:30)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] tokens = S.split(\"\\\\.|\\\
    \\?|\\\\!\");\n        List<String> list = new ArrayList<>(Arrays.asList(tokens));\n\
    \        list.sort(Comparator.reverseOrder());\n        if (list.stream().anyMatch(s\
    \ -> s.equals(\"I\"))) {\n            return 0;\n        } else {\n          \
    \  return 1;\n        }\n}\n    public static void main(String[] args) {\n   \
    \ assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n    assert(isBored((\"\
    bIt\")) == (0));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4s0cb4q.java:28)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n      int count = 0;\n      for(String sentence\
    \ : S.split(\"[\\\\.\\\\?!]\")) {\n        if(sentence.startsWith(\"I\")) {\n\
    \          count += 1;\n        }\n      }\n      return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwhv3ubs0.java:28)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] arr = S.split(\"[.?!]\");\n\
    \        int ans = 0;\n        for (int i = 0; i < arr.length; i++) {\n      \
    \      if (arr[i].equals(\"I\")) {\n                ans++;\n            }\n  \
    \      }\n        return ans;\n}\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n   \
    \ assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2lrp42w.java:30)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int[] bored = { 0, 0, 0 };\n       \
    \ // Count occurrences of I\n        for(int i = 0; i<S.length(); i++) {\n   \
    \         if((S.charAt(i) == 'I') && (S.charAt(i+1) == 'I')) {\n             \
    \   bored[0]++;\n            }\n        }\n        // Count occurrences of .\n\
    \        for(int i = 0; i<S.length(); i++) {\n            if(S.charAt(i) == '.')\
    \ {\n                bored[1]++;\n            }\n        }\n        // Count occurrences\
    \ of ? and !\n        for(int i = 0; i<S.length(); i++) {\n            if(S.charAt(i)\
    \ == '?' || S.charAt(i) == '!') {\n                bored[2]++;\n            }\n\
    \        }\n        return bored[0];\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvva3m1ob.java:42)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return S.length() - S.indexOf(\"I\"\
    .charAt(0)) == S\n                .indexOf(\"I\".charAt(0))? 1 : 0;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ur4l3tp.java:24)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return S\n            .chars()\n   \
    \         .filter(x -> Character.isLetter(x) && x != '?')\n            .filter(x\
    \ -> x != '!')\n            .filter(x -> x == 'I')\n            .count();\n}\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ggxncxj.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n            .count();\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Your code here\n        return 0;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9y_4uci7.java:24)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bored = 0;\n        List<String>\
    \ array = Arrays.asList(S.split(\" \"));\n        for(String s : array) {\n  \
    \          if(s.startsWith(\"I\")) {\n                bored += 1;\n          \
    \  }\n        }\n        return bored;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq05yrs1n.java:29)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        StringTokenizer st = new StringTokenizer(S,\
    \ \".?!\");\n        List<String> words = new ArrayList<String>();\n        while\
    \ (st.hasMoreTokens()) {\n            words.add(st.nextToken());\n        }\n\
    \        boredomCount(words, S);\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl98p2o5j.java:23: error: cannot find symbol\n        boredomCount(words,\
    \ S);\n        ^\n  symbol:   method boredomCount(List<String>,String)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String boredoms = Arrays.stream(S).filter(s\
    \ -> s.startsWith(\"I\")).collect(Collectors.joining(\".\"));\n        int bored\
    \ = S.split(boredoms).length + 1;\n        return bored;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgd63ziuc.java:18: error: no suitable method found for stream(String)\n\
    \        String boredoms = Arrays.stream(S).filter(s -> s.startsWith(\"I\")).collect(Collectors.joining(\"\
    .\"));\n                                ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; String cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; String cannot be converted to int[])\n\
    \    method Arrays.stream(long[]) is not applicable\n      (argument mismatch;\
    \ String cannot be converted to long[])\n    method Arrays.stream(double[]) is\
    \ not applicable\n      (argument mismatch; String cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] words = S.split(\".?!\");\n\
    \        int boredoms = 0;\n        for(String word : words)\n        {\n    \
    \        if(word.equals(\"I\"))\n            {\n                boredoms += 1;\n\
    \            }\n        }\n        return boredoms;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjl_catgp.java:32)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Create an empty list\n        List<String>\
    \ boredoms = new ArrayList<String>();\n        // Add all words that start with\
    \ \"I\" to the list\n        boredoms.addAll(S.split(\"[^I]\"));\n        // Return\
    \ the size of that list\n        return boredoms.size();\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjtshl5wp.java:21: error: incompatible types: String[] cannot be\
    \ converted to Collection<? extends String>\n        boredoms.addAll(S.split(\"\
    [^I]\"));\n                               ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n      if(S==null || S.trim().isEmpty()) {\n\
    \          return 0;\n      }\n      // The pattern for boredom is I\n      Matcher\
    \ m = Pattern.compile(\"\\\\bI\\\\b\").matcher(S);\n      // We return count from\
    \ matcher\n      return m.find() ? 1 : 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxnz8t2jo.java:22: error: cannot find symbol\n      Matcher m =\
    \ Pattern.compile(\"\\\\bI\\\\b\").matcher(S);\n      ^\n  symbol:   class Matcher\n\
    \  location: class Problem\n/tmp/tmpxnz8t2jo.java:22: error: cannot find symbol\n\
    \      Matcher m = Pattern.compile(\"\\\\bI\\\\b\").matcher(S);\n            \
    \      ^\n  symbol:   variable Pattern\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] arr;\n        String[] arr2;\n\
    \        String[] arr3;\n        int count = 0;\n        arr = S.split(\"\\\\\
    .|\\\\?|!\");\n        for (int i = 0; i < arr.length; i++) {\n            if\
    \ (arr[i].equals(\"I\") && arr[i + 1].equals(\".\") && arr[i + 2].equals(\".\"\
    )) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cbixkpe.java:33)\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int counter = 0;\n        String[] words\
    \ = S.split(\" \");\n        for(String word : words){\n            if(word.startsWith(\"\
    I\")){\n                counter++;\n            }\n        }\n        return counter;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpch0ghv7d.java:29)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] arr = S.split(\"\\\\.|\\\\\
    ?|!\");\n        int count = 0;\n        for (String i : arr) {\n            if\
    \ (i.equals(\"I\"))\n                count++;\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp87cjoq2p.java:29)\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // split string with \".\", \"?\" and\
    \ \"!\" characters\n        String[] lines = S.split(\"[\\\\.?!]\");\n       \
    \ // iterate over each line and check if the first word starts with \"I\"\n  \
    \      Map<String, Integer> count = new HashMap<>();\n        for (String line\
    \ : lines) {\n            String word = line.substring(0,1).toLowerCase();\n \
    \           if (count.containsKey(word)) {\n                count.put(word, count.getOrDefault(word,\
    \ 0) + 1);\n            } else {\n                count.put(word, 1);\n      \
    \      }\n        }\n        // return if all words are present and if bored words\
    \ count equals to total words\n        return count.values().stream().allMatch(i\
    \ -> i == count.getOrDefault(i, 0)) \n            && count.size() == lines.size();\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb0rblc3x.java:32: error: cannot find symbol\n            && count.size()\
    \ == lines.size();\n                                    ^\n  symbol:   method\
    \ size()\n  location: variable lines of type String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        // Your code here!\n        int boredom\
    \ = 0;\n        S = S.toLowerCase();\n        String[] split = S.split(Pattern.quote(\"\
    .\"));\n        StringBuilder str = new StringBuilder();\n        Arrays.sort(split);\n\
    \        for (String s : split) {\n            if (s.startsWith(\"i\")) {\n  \
    \              str.insert(0, s);\n            }\n        }\n        for (int i\
    \ = 1; i < str.length(); i++) {\n            if (str.toString().charAt(i) != '.'\
    \ && str.toString().charAt(i) != '?' && str.toString().charAt(i) != '!') {\n \
    \               boredom++;\n            }\n        }\n        return boredom;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo09iyj4c.java:21: error: cannot find symbol\n        String[] split\
    \ = S.split(Pattern.quote(\".\"));\n                                 ^\n  symbol:\
    \   variable Pattern\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int bCount = 0;\n        String[] tokens\
    \ = S.split(\"[.?!]\");\n        for (String s : tokens) {\n            if (s.equals(\"\
    I\")) {\n                bCount++;\n            }\n        }\n        return bCount;\n\
    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0));\n    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"\
    I love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcb_su62z.java:30)\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredom = 0;\n        S = S.toLowerCase();\n\
    \        char[] SArray = S.toCharArray();\n        Arrays.sort(SArray);\n    \
    \    if (SArray[0] == 'i') {\n            boredom++;\n        }\n        if (SArray[1]\
    \ == 'i') {\n            boredom++;\n        }\n        if (SArray[2] == 'i')\
    \ {\n            boredom++;\n        }\n        if (SArray[3] == 'i') {\n    \
    \        boredom++;\n        }\n        return boredom;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0));\n    assert(isBored((\"I\
    \ love It !\")) == (1));\n    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprrjlpser.java:39)\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] tokens = S.split(\"[.?!]\"\
    );\n        HashMap<String, Integer> map = new HashMap<>();\n        for(String\
    \ token : tokens) {\n            if(map.containsKey(token))\n                map.put(token,\
    \ map.get(token) + 1);\n            else\n                map.put(token, 1);\n\
    \        }\n        int boredom = -1;\n        for(String token : map.keySet())\
    \ {\n            if(token.equals(\"I\"))\n                boredom = map.get(token);\n\
    \        }\n        return boredom;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjlwfb_mg.java:34)\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        StringTokenizer STokenizer = new StringTokenizer(S);\n\
    \        int boredoms = 0;\n        int count = 0;\n        while(STokenizer.hasMoreTokens())\
    \ {\n            String token = STokenizer.nextToken();\n            count++;\n\
    \            if(token.equals(\"I\")) {\n                boredoms++;\n        \
    \    }\n        }\n        return boredoms;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp886gfnq0.java:36)\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] boredoms = {\"I\", \"you\"\
    , \"your\", \"its\", \"it's\", \"he\", \"she\", \"it's\",\n                \"\
    it\", \"it's\", \"the\", \"'s\", \"an\", \"my\", \"our\", \"who\", \"myself\"\
    , \"you're\", \"ours\",\n                \"ourselves\", \"you\", \"you're\", \"\
    we\", \"us\", \"ourselves\", \"what\", \"who\", \"why\", \"how\",\n          \
    \      \"can\", \"could\", \"should\", \"ought\", \"is\", \"will\", \"are\", \"\
    am\", \"is\", \"are\", \"was\", \"were\",\n                \"be\", \"been\", \"\
    being\", \"have\", \"has\", \"had\", \"do\", \"does\", \"did\", \"doe\", \"would\"\
    ,\n                \"should\", \"can't\", \"cannot\", \"must\", \"must've\", \"\
    need\", \"ought\", \"i'm\", \"i've\", \"let's\",\n                \"like\", \"\
    don't\", \"liked\", \"didn't\", \"doesn't\", \"don't\", \"did\", \"didn't\", \"\
    won't\", \"would've\",\n                \"should've\", \"could've\", \"couldn't\"\
    , \"wouldn't\", \"don't\", \"doesn't\", \"doesn't\", \"haven't\",\n          \
    \      \"haven't've\", \"he's\", \"she's\", \"it's\", \"it's\", \"i've\", \"i've\"\
    , \"you've\", \"you've\", \"that's\",\n                \"thats\", \"i'm\", \"\
    i'm\", \"i\", \"you\", \"you\", \"you're\", \"you're\", \"we're\", \"we're\",\
    \ \"we\",\n                \"you've\", \"you've\", \"that's\", \"thats\", \"i've\"\
    , \"i've\", \"i'm\", \"i'm\", \"my\", \"my\",\n                \"is\", \"is\"\
    , \"is\", \"i\", \"you\", \"you\", \"you're\", \"you're\", \"we're\", \"we're\"\
    , \"we\"};\n        final Pattern regex = Pattern.compile(\"I\");\n        Matcher\
    \ regexMatcher = regex.matcher(S);\n        int count = 0;\n        while (regexMatcher.find())\
    \ {\n            count++;\n            S += \" \";\n            regexMatcher =\
    \ regex.matcher(S);\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4mlvo9bv.java:30: error: cannot find symbol\n        final Pattern\
    \ regex = Pattern.compile(\"I\");\n              ^\n  symbol:   class Pattern\n\
    \  location: class Problem\n/tmp/tmp4mlvo9bv.java:30: error: cannot find symbol\n\
    \        final Pattern regex = Pattern.compile(\"I\");\n                     \
    \         ^\n  symbol:   variable Pattern\n  location: class Problem\n/tmp/tmp4mlvo9bv.java:31:\
    \ error: cannot find symbol\n        Matcher regexMatcher = regex.matcher(S);\n\
    \        ^\n  symbol:   class Matcher\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int boredoms = 0;\n        boolean first\
    \ = true;\n        String[] parts = S.split(\"[.!?]\");\n        for (String part\
    \ : parts) {\n            if(!first) {\n                boredoms += part[0].equals(\"\
    I\") ? 1 : 0;\n            } else {\n                first = false;\n        \
    \    }\n        }\n        return boredoms;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6kqxazfj.java:23: error: array required, but String found\n   \
    \             boredoms += part[0].equals(\"I\") ? 1 : 0;\n                   \
    \             ^\n1 error\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int b = 0;\n        for(int i=0; i<S.length();\
    \ i++){\n            if(S.charAt(i) == '.'){\n                if(S.charAt(i+1)\
    \ == '?' || S.charAt(i+1) == '!'){\n                    b++;\n               \
    \ }\n            }\n        }\n        return b;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpeiv6ka.java:31)\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] boredoms = {\"I\",\"a.\",\"\
    an.\"};\n        int bored = 0;\n        for(String s : boredoms)\n        {\n\
    \            int index = S.indexOf(s, 0);\n            if(index != -1)\n     \
    \       {\n                bored++;\n                S.delete(index, s.length());\n\
    \            }\n        }\n        return bored;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlz49n26.java:26: error: cannot find symbol\n                S.delete(index,\
    \ s.length());\n                 ^\n  symbol:   method delete(int,int)\n  location:\
    \ variable S of type String\n1 error\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        String[] splitS = S.split(\"[.!?]\"\
    );\n        int bored = 0;\n        for (String sentence : splitS) {\n       \
    \     if (sentence.startsWith(\"I\")) {\n                bored += 1;\n       \
    \     }\n        }\n        return bored;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnfb5ast5.java:29)\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        Scanner s = new Scanner(S.toUpperCase());\n\
    \        while(s.hasNext()) {\n            String word = s.next().toLowerCase();\n\
    \            if(word.startsWith(\"I\")) {\n                return 1;\n       \
    \     }\n        }\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw3ycygs1.java:30)\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        int count = 0;\n        String[] words\
    \ = S.split(\"\\\\.|\\\\?|\\\\!\");\n        for(String w : words) {\n       \
    \     if(w.equals(\"I\")) {\n                count += 1;\n            }\n    \
    \    }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n   \
    \ assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2gf4od6.java:30)\n"
  stdout: ''
  timestamp: 1660010922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    // 1\n    public\
    \ static int isBored(String S) {\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0));\n    assert(isBored((\"I love It !\")) == (1));\n\
    \    assert(isBored((\"bIt\")) == (0));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2));\n    assert(isBored((\"You and\
    \ I are going for a walk\")) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy2p5hszv.java:23)\n"
  stdout: ''
  timestamp: 1660010803

name: HumanEval_58_common
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<>();\n        for(Integer\
    \ i : l1) {\n            if(l2.contains(i))\n                list.add(i);\n  \
    \      }\n        Collections.sort(list);\n        return list;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbolb7dbl.java:22: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set1 = new HashSet<>();\n        HashSet<Integer>\
    \ set2 = new HashSet<>();\n        ArrayList<Integer> list = new ArrayList<>();\n\
    \n        // add common elements to set1 and set2\n        for(int i = 0; i <\
    \ l1.size(); i++) {\n            set1.add(l1.get(i));\n            set2.add(l2.get(i));\n\
    \        }\n\n        // remove from set1 those common elements from set2\n  \
    \      set1.removeAll(set2);\n\n        // add from set1 those common elements\
    \ from set2\n        set1.addAll(set2);\n\n        // add remaining from set1\
    \ to list\n        list = set1;\n\n        return list;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdes694_9.java:32: error: incompatible types: HashSet<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        list = set1;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n        for (int\
    \ i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size(); j++)\
    \ {\n                if (l1.get(i) == l2.get(j)) {\n                    common.add(l1.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(common);\n\
    \        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm076xai8.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        Iterator<Integer>\
    \ it1 = l1.iterator();\n        Iterator<Integer> it2 = l2.iterator();\n     \
    \   while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                res.add(it1.next());\n            }\n        }\n        return\
    \ res;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpazzttfan.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<>(l1);\n        Set<Integer> set2\
    \ = new HashSet<>(l2);\n        ArrayList<Integer> common = new ArrayList<>();\n\
    \        for(Integer n : set1) {\n            for(Integer m : set2) {\n      \
    \          if(n == m)\n                    common.add((Integer)n);\n         \
    \   }\n        }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp54uvm9py.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // sort lists first\n        ArrayList<Integer> sortedL1 = new ArrayList<>(l1);\n\
    \        Collections.sort(sortedL1);\n        ArrayList<Integer> sortedL2 = new\
    \ ArrayList<>(l2);\n        Collections.sort(sortedL2);\n\n        // iterate\
    \ through sorted lists and find common elements\n        for(int i = 0; i < sortedL1.size();\
    \ i++) {\n            for(int j = 0; j < sortedL2.size(); j++) {\n           \
    \     if(sortedL1.get(i) == sortedL2.get(j)) {\n                    return new\
    \ ArrayList<Integer>();\n                }\n            }\n        }\n       \
    \ // if all elements were found in one of the lists, return the list\n       \
    \ return sortedL1;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n \
    \   public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv9c4o47w.java:31: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Map<Integer, Integer> map = new HashMap<>();\n        l1.stream().forEach(e\
    \ -> map.put(e, l1.indexOf(e)));\n        l2.stream().forEach(e -> map.put(e,\
    \ l2.indexOf(e)));\n        ArrayList<Integer> result = new ArrayList<>();\n \
    \       for (Integer key : map.keySet())\n            if (!result.contains(key))\n\
    \                result.add(key);\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmz5zcx83.java:23: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // We create an array for the output list to store our results.\n\
    \        ArrayList<Integer> result = new ArrayList<>();\n        // If we can't\
    \ find one element in the other list, there's no common elements.\n        if\
    \ (l1 == null || l2 == null || l1.size() == 0 || l2.size() == 0) {\n         \
    \   return result;\n        }\n        // For each element in the first list,\
    \ we look through the second list.\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            int match = -1;\n            // Look through the second list\
    \ to see if we've found one that shares its first element\n            // with\
    \ the current element.\n            for (int j = 0; j < l2.size(); j++) {\n  \
    \              if (l2.get(j) == l1.get(i)) {\n                    match = j;\n\
    \                    break;\n                }\n            }\n            //\
    \ If we found one, we add it to the output.\n            if (match != -1) {\n\
    \                result.add(l1.get(i));\n            }\n        }\n        //\
    \ Return our result.\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprrw35g35.java:39: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Your code here...\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        if (l1.size() > l2.size())\n            return result;\n        Iterator<Integer>\
    \ itr1 = l1.iterator();\n        Iterator<Integer> itr2 = l2.iterator();\n   \
    \     while (itr1.hasNext() && itr2.hasNext()) {\n            if (itr1.next()\
    \ == itr2.next())\n                result.add(itr1.next());\n        }\n     \
    \   if (itr1.hasNext())\n            result.addAll(itr1.next());\n        if (itr2.hasNext())\n\
    \            result.addAll(itr2.next());\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqkjulgev.java:26: error: no suitable method found for addAll(Integer)\n\
    \            result.addAll(itr1.next());\n                  ^\n    method Collection.addAll(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; Integer cannot\
    \ be converted to Collection<? extends Integer>)\n    method List.addAll(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; Integer cannot\
    \ be converted to Collection<? extends Integer>)\n    method AbstractCollection.addAll(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; Integer cannot\
    \ be converted to Collection<? extends Integer>)\n    method ArrayList.addAll(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; Integer cannot\
    \ be converted to Collection<? extends Integer>)\n/tmp/tmpqkjulgev.java:28: error:\
    \ no suitable method found for addAll(Integer)\n            result.addAll(itr2.next());\n\
    \                  ^\n    method Collection.addAll(Collection<? extends Integer>)\
    \ is not applicable\n      (argument mismatch; Integer cannot be converted to\
    \ Collection<? extends Integer>)\n    method List.addAll(Collection<? extends\
    \ Integer>) is not applicable\n      (argument mismatch; Integer cannot be converted\
    \ to Collection<? extends Integer>)\n    method AbstractCollection.addAll(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; Integer cannot\
    \ be converted to Collection<? extends Integer>)\n    method ArrayList.addAll(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; Integer cannot\
    \ be converted to Collection<? extends Integer>)\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        if (l1 == null || l2 == null) {\n            return null;\n     \
    \   }\n        ArrayList<Integer> common = new ArrayList<>();\n        for (Integer\
    \ i : l1) {\n            if (l2.contains(i)) {\n                common.add(i);\n\
    \                l2.remove(i);\n            }\n        }\n        common.addAll(l2);\n\
    \        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdq9nh8z5.java:27: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        Set\
    \ s1=new HashSet(l1);\n        Set s2=new HashSet(l2);\n        Iterator i1 =\
    \ s1.iterator();\n        Iterator i2 = s2.iterator();\n        while (i1.hasNext()\
    \ && i2.hasNext()) {\n            if (!i1.next() && i2.next()) {\n           \
    \     result.add(i2.next());\n            }\n            else if (!i2.next() &&\
    \ i1.next()) {\n                result.add(i1.next());\n            }\n      \
    \      else if (i1.next() && i2.next()) {\n                if (!i1.next().equals(i2.next()))\
    \ {\n                    result.add(i1.next());\n                }\n         \
    \   }\n        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_3zpk9t_.java:21: error: bad operand type Object for unary operator\
    \ '!'\n            if (!i1.next() && i2.next()) {\n                ^\n/tmp/tmp_3zpk9t_.java:22:\
    \ error: no suitable method found for add(Object)\n                result.add(i2.next());\n\
    \                      ^\n    method Collection.add(Integer) is not applicable\n\
    \      (argument mismatch; Object cannot be converted to Integer)\n    method\
    \ List.add(Integer) is not applicable\n      (argument mismatch; Object cannot\
    \ be converted to Integer)\n    method AbstractCollection.add(Integer) is not\
    \ applicable\n      (argument mismatch; Object cannot be converted to Integer)\n\
    \    method AbstractList.add(Integer) is not applicable\n      (argument mismatch;\
    \ Object cannot be converted to Integer)\n    method ArrayList.add(Integer) is\
    \ not applicable\n      (argument mismatch; Object cannot be converted to Integer)\n\
    /tmp/tmp_3zpk9t_.java:24: error: bad operand type Object for unary operator '!'\n\
    \            else if (!i2.next() && i1.next()) {\n                     ^\n/tmp/tmp_3zpk9t_.java:25:\
    \ error: no suitable method found for add(Object)\n                result.add(i1.next());\n\
    \                      ^\n    method Collection.add(Integer) is not applicable\n\
    \      (argument mismatch; Object cannot be converted to Integer)\n    method\
    \ List.add(Integer) is not applicable\n      (argument mismatch; Object cannot\
    \ be converted to Integer)\n    method AbstractCollection.add(Integer) is not\
    \ applicable\n      (argument mismatch; Object cannot be converted to Integer)\n\
    \    method AbstractList.add(Integer) is not applicable\n      (argument mismatch;\
    \ Object cannot be converted to Integer)\n    method ArrayList.add(Integer) is\
    \ not applicable\n      (argument mismatch; Object cannot be converted to Integer)\n\
    /tmp/tmp_3zpk9t_.java:27: error: bad operand types for binary operator '&&'\n\
    \            else if (i1.next() && i2.next()) {\n                            \
    \   ^\n  first type:  Object\n  second type: Object\n/tmp/tmp_3zpk9t_.java:29:\
    \ error: no suitable method found for add(Object)\n                    re"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ set1 = new HashSet<Integer>(l1);\n        HashSet<Integer> set2 = new HashSet<Integer>(l2);\n\
    \        set1.removeAll(l2);\n        set2.removeAll(l1);\n        set1.retainAll(l2);\n\
    \        set2.retainAll(l1);\n        set1.removeAll(l2);\n        set2.removeAll(l1);\n\
    \        set1.removeAll(l2);\n        set2.removeAll(l1);\n        set1.removeAll(l2);\n\
    \        \n        Iterator<Integer> iter1 = set1.iterator();\n        Iterator<Integer>\
    \ iter2 = set2.iterator();\n        while(iter1.hasNext()) {\n            while(iter2.hasNext())\
    \ {\n                if(iter1.next() == iter2.next()) {\n                    common.add(iter1.next());\n\
    \                    iter1.remove();\n                    iter2.remove();\n  \
    \              }\n            }\n        }\n        return common;\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1zutf_56.java:40: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> common = new HashSet<>();\n        for (int i = 0; i\
    \ < l1.size(); i++) {\n            if (common.contains(l1.get(i)))\n         \
    \       continue;\n            common.add(l1.get(i));\n        }\n        for\
    \ (int i = 0; i < l2.size(); i++) {\n            if (common.contains(l2.get(i)))\n\
    \                continue;\n            common.add(l2.get(i));\n        }\n  \
    \      ArrayList<Integer> res = new ArrayList<>();\n        for (int i : common)\
    \ {\n            res.add(i);\n        }\n        return res;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptb0hwb_g.java:31: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return IntStream.range(0, Math.min(l1.size(), l2.size()))\n     \
    \           .filter(i -> l1.get(i) == l2.get(i))\n                .distinct()\n\
    \                .sorted()\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprizu2g2p.java:19: error: method collect in interface IntStream\
    \ cannot be applied to given types;\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    \                ^\n  required: Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>\n\
    \  found: Collector<Object,CAP#1,Collection<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n        int index\
    \ = 0;\n        int i = 0;\n        int j = 0;\n        while (l1.size() > i &&\
    \ l2.size() > j) {\n            if (l1.get(i) == l2.get(j)) {\n              \
    \  common.add(l1.get(i));\n                i++;\n                j++;\n      \
    \      } else if (l1.get(i) < l2.get(j)) {\n                i++;\n           \
    \ } else {\n                j++;\n            }\n        }\n        return common;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz8thrwvo.java:31: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> common = new ArrayList<>();\n        if (l1.size()\
    \ > l2.size()) {\n            Collections.sort(l2);\n        }\n        else {\n\
    \            Collections.sort(l1);\n        }\n        for (int i = 0; i < l1.size();\
    \ i++) {\n            if (l1.get(i) == l2.get(i)) {\n                common.add(l1.get(i));\n\
    \            }\n        }\n        Collections.sort(common);\n        ArrayList<Integer>\
    \ result = new ArrayList<>(common.size());\n        Collections.reverse(common);\n\
    \        result.addAll(common);\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph0mmyspp.java:32: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n        for(Integer\
    \ x: l1){\n            for(Integer y: l2){\n                if(x.equals(y)){\n\
    \                    a.add(x);\n                }\n            }\n        }\n\
    \        return a;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n \
    \   public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps0dojr6k.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n\n        for(int i : l1) {\n            for(int\
    \ j : l2) {\n                if(i == j)\n                    res.add(i);\n   \
    \         }\n        }\n\n        return res;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp44m9h1wz.java:28: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<>();\n        HashSet<Integer>\
    \ set = new HashSet<>();\n        for (Integer i : l1)\n            list.add(i);\n\
    \        for (Integer i : l2)\n            list.remove(i);\n        set.addAll(list);\n\
    \        return list.stream().sorted().collect(Collectors.toList());\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_xg0t3q9.java:22: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return list.stream().sorted().collect(Collectors.toList());\n\
    \                                             ^\n    equality constraints: List<Integer>\n\
    \    upper bounds: ArrayList<Integer>,Object\n  where R,A,T are type-variables:\n\
    \    R extends Object declared in method <R,A>collect(Collector<? super T,A,R>)\n\
    \    A extends Object declared in method <R,A>collect(Collector<? super T,A,R>)\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        Set<Integer>\
    \ set1 = new HashSet<>(l1);\n        set1.removeAll(l2);\n        set1.forEach(i\
    \ -> result.add(i));\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9vbn9odx.java:20: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> hs = new HashSet<>();\n        for( int i : l1 )\
    \ {\n            hs.add( i );\n        }\n        for( int i : l2 ) {\n      \
    \      hs.add( i );\n        }\n        return hs.stream()\n            .distinct()\n\
    \            .collect(Collectors.toCollection(ArrayList::new));\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplu32hru4.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Collections.sort(l1);\n        Collections.sort(l2);\n\n        ArrayList<Integer>\
    \ c = new ArrayList<Integer>();\n        boolean found = false;\n        for(int\
    \ i = 0; i < l1.size() && !found; i++) {\n            for(int j = 0; j < l2.size()\
    \ && !found; j++) {\n                if(l1.get(i) == l2.get(j)) {\n          \
    \          found = true;\n                    c.add(l1.get(i));\n            \
    \    }\n            }\n        }\n        return c;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxvjr7gmb.java:29: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Write your code here.\n        int size1 = l1.size();\n      \
    \  int size2 = l2.size();\n        int []arr1 = new int[size1];\n        int []arr2\
    \ = new int[size2];\n        int index1 = 0;\n        int index2 = 0;\n      \
    \  int size = 0;\n        for(int i=0;i<size1;i++){\n            arr1[i] = l1.get(i);\n\
    \        }\n        for(int i=0;i<size2;i++){\n            arr2[i] = l2.get(i);\n\
    \        }\n        for(int i=0;i<size1;i++){\n            for(int j=0;j<size2;j++){\n\
    \                size = arr1[i];\n                for(int k=0;k<size;k++){\n \
    \                   if(arr1[i] == arr2[j]){\n                        index1++;\n\
    \                        index2++;\n                        break;\n         \
    \           }\n                    index2++;\n                }\n            \
    \    if(index1 == size){\n                    Arrays.sort(arr1);\n           \
    \         index1--;\n                    index2--;\n                }\n      \
    \          if(index2 == size){\n                    Arrays.sort(arr2);\n     \
    \               index1--;\n                    index2--;\n                }\n\
    \            }\n        }\n        ArrayList<Integer> result = new ArrayList<>(size1);\n\
    \        for(int i=0;i<size1;i++){\n            for(int j=0;j<size2;j++){\n  \
    \              if(arr1[i] == arr2[j]){\n                    result.add(arr1[i]);\n\
    \                    result.add(arr2[j]);\n                    break;\n      \
    \          }\n            }\n        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuyqlr2j9.java:63: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<>(l1);\n        Set<Integer> set2\
    \ = new HashSet<>(l2);\n        set1.retainAll(set2);\n        return set1.stream().distinct().collect(toList());\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl5jauckm.java:18: error: cannot find symbol\n        return set1.stream().distinct().collect(toList());\n\
    \                                                ^\n  symbol:   method toList()\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> h1 = new HashSet<>(l1);\n        HashSet<Integer>\
    \ h2 = new HashSet<>(l2);\n        ArrayList<Integer> results = new ArrayList<>();\n\
    \        while (h1.size() != 0 && h2.size() != 0) {\n            if (h1.contains(h2.get(0)))\
    \ {\n                h1.remove(h2.get(0));\n            } else {\n           \
    \     h2.remove(0);\n            }\n        }\n        while (h1.size() != 0)\
    \ {\n            h1.remove(0);\n        }\n        while (h2.size() != 0) {\n\
    \            h2.remove(0);\n        }\n        return results;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4qeqodef.java:19: error: cannot find symbol\n            if (h1.contains(h2.get(0)))\
    \ {\n                              ^\n  symbol:   method get(int)\n  location:\
    \ variable h2 of type HashSet<Integer>\n/tmp/tmp4qeqodef.java:20: error: cannot\
    \ find symbol\n                h1.remove(h2.get(0));\n                       \
    \     ^\n  symbol:   method get(int)\n  location: variable h2 of type HashSet<Integer>\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n\n       \
    \ if (l1 == null || l2 == null) {\n            return common;\n        }\n\n \
    \       // Create auxiliary lists list1 and list2, and sort them.\n        Arrays.sort(l1);\n\
    \        Arrays.sort(l2);\n        if (l1.equals(l2)) {\n            return common;\n\
    \        }\n\n        Iterator<Integer> it1 = l1.iterator();\n        Iterator<Integer>\
    \ it2 = l2.iterator();\n        while (it1.hasNext() && it2.hasNext()) {\n   \
    \         if (it1.next() == it2.next()) {\n                common.add(it1.next());\n\
    \            }\n        }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm89cn6zj.java:22: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l1);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmpm89cn6zj.java:23: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l2);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayLis"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<>();\n        if (l1 == null\
    \ || l2 == null || l1.size() == 0 || l2.size() == 0) return list;\n        for(int\
    \ i=0;i<l1.size();i++) {\n            for (int j=0; j<l2.size(); j++) {\n    \
    \            if (l1.get(i).equals(l2.get(j))) {\n                    list.add(l1.get(i));\n\
    \                    l1.remove(i);\n                    l2.remove(j);\n      \
    \              break;\n                }\n            }\n        }\n        return\
    \ list;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6fhwpz53.java:28: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        l1 = l1.stream().sorted().distinct().collect(Collectors.toList());\n\
    \        l2 = l2.stream().sorted().distinct().collect(Collectors.toList());\n\
    \        int i = 0;\n        int j = 0;\n        ArrayList<Integer> result = new\
    \ ArrayList<>();\n        while ((i < l1.size()) && (j < l2.size())) {\n     \
    \       if (l1.get(i) == l2.get(j)) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            }\n            else if\
    \ (l1.get(i) < l2.get(j)) {\n                i++;\n            }\n           \
    \ else {\n                j++;\n            }\n        }\n        return result;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0xhre42v.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        l1 = l1.stream().sorted().distinct().collect(Collectors.toList());\n\
    \                                                    ^\n    equality constraints:\
    \ List<Integer>\n    upper bounds: ArrayList<Integer>,Object\n  where R,A,T are\
    \ type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n/tmp/tmp0xhre42v.java:16:\
    \ error: incompatible types: inference variable R has incompatible bounds\n  \
    \      l2 = l2.stream().sorted().distinct().collect(Collectors.toList());\n  \
    \                                                  ^\n    equality constraints:\
    \ List<Integer>\n    upper bounds: ArrayList<Integer>,Object\n  where R,A,T are\
    \ type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // sort both\n        Collections.sort(l1);\n        Collections.sort(l2);\n\
    \        // iterate through both\n        int i = 0;\n        int j = 0;\n   \
    \     int k = 0;\n        ArrayList<Integer> common = new ArrayList<Integer>();\n\
    \        while (i < l1.size() && j < l2.size()) {\n            while (l1.get(i)\
    \ == l2.get(j)) {\n                j++;\n                i++;\n            }\n\
    \            if (j == l2.size()) {\n                common.add(l1.get(i));\n \
    \               i++;\n            }\n            if (i == l1.size()) {\n     \
    \           common.add(l2.get(j));\n                j++;\n            }\n    \
    \    }\n        // done\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnrmi9s9d.java:39: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        for(int i=0;i<(l1.size()-l2.size());i++)\
    \ {\n            int c = (l1.get(i) + l2.get(i))/2;\n            if (l1.get(i)\
    \ == c) common.add(l2.get(i));\n            if (l2.get(i) == c) common.add(l1.get(i));\n\
    \        }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr1rh10aq.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        if (l1.isEmpty())\
    \ return l3;\n        if (l2.isEmpty()) return l3;\n        if (l1.size() < l2.size())\
    \ swap(l1, l2, l3);\n        Collections.sort(l1);\n        Collections.sort(l2);\n\
    \        int i = 0;\n        int j = l1.size() - 1;\n        while (i < l1.size()\
    \ && j < l2.size()) {\n            if (l1.get(i) == l2.get(j)) {\n           \
    \     l3.add(l1.get(i));\n                i++;\n                j--;\n       \
    \     } else if (l1.get(i) < l2.get(j)) {\n                i++;\n            }\
    \ else {\n                j--;\n            }\n        }\n        return l3;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk7vzc6s4.java:18: error: cannot find symbol\n        if (l1.size()\
    \ < l2.size()) swap(l1, l2, l3);\n                                   ^\n  symbol:\
    \   method swap(ArrayList<Integer>,ArrayList<Integer>,ArrayList<Integer>)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i\
    \ = 0; i < l1.size(); i++) {\n            int n1 = l1.get(i);\n            for\
    \ (int j = 0; j < l2.size(); j++) {\n                int n2 = l2.get(j);\n   \
    \             if (n1 == n2) list.add(n2);\n            }\n        }\n        Collections.sort(list);\n\
    \        return list;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpemwvwrw0.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<>(l1);\n        Set<Integer> set2\
    \ = new HashSet<>(l2);\n        ArrayList<Integer> ans = new ArrayList<>(l1.size());\n\
    \        for (Integer x : set1) {\n            if (!set2.contains(x)) {\n    \
    \            ans.add(x);\n            }\n        }\n        for (Integer x : set2)\
    \ {\n            if (!set1.contains(x)) {\n                ans.add(x);\n     \
    \       }\n        }\n        return ans;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgd6j9xco.java:29: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>(l1);\n       \
    \ ArrayList<Integer> toDelete = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    common.remove(l1.get(i));\n           \
    \         if (toDelete.size() > 0) {\n                        toDelete.remove(l1.get(i));\n\
    \                    }\n                    break;\n                }\n      \
    \      }\n        }\n        common.retainAll(l2);\n        if (!common.isEmpty())\
    \ {\n            toDelete.addAll(common);\n            toDelete.retainAll(l1);\n\
    \            result.addAll(toDelete);\n            result.addAll(l1);\n      \
    \  }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppwt61i9o.java:37: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n\n        HashMap<Integer,\
    \ Integer> map = new HashMap<>();\n        for(Integer i: l1)\n            map.put(i,\
    \ map.getOrDefault(i, 0) + 1);\n        for(Integer i: l2)\n            map.put(i,\
    \ map.getOrDefault(i, 0) - 1);\n\n        Set<Entry<Integer, Integer>> set = map.entrySet();\n\
    \        for(Entry<Integer, Integer> e: set)\n            if(!common.isEmpty()\
    \ && common.get(common.size() - 1) == e.getKey())\n                common.add(e.getKey());\n\
    \        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt_ykg9o8.java:23: error: cannot find symbol\n        Set<Entry<Integer,\
    \ Integer>> set = map.entrySet();\n            ^\n  symbol:   class Entry\n  location:\
    \ class Problem\n/tmp/tmpt_ykg9o8.java:24: error: cannot find symbol\n       \
    \ for(Entry<Integer, Integer> e: set)\n            ^\n  symbol:   class Entry\n\
    \  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> cList = new ArrayList<>();\n        for (int i\
    \ = 0; i < Math.min(l1.size(), l2.size()); i++) {\n            if (l1.get(i) ==\
    \ l2.get(i)) cList.add(l1.get(i));\n        }\n        ArrayList<Integer> common\
    \ = new ArrayList<>(cList);\n        Collections.sort(common);\n        return\
    \ common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpavbvi4gp.java:22: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        if (l1.size()\
    \ != l2.size()) {\n            return ans;\n        }\n        LinkedHashMap<Integer,\
    \ Integer> hm = new LinkedHashMap<Integer, Integer>();\n        for (Integer i\
    \ : l1) {\n            hm.put(i, 1);\n        }\n        for (Integer i : l2)\
    \ {\n            if (hm.containsKey(i)) {\n                int val = hm.get(i);\n\
    \                hm.put(i, val + 1);\n            } else {\n                ans.add(i);\n\
    \                hm.put(i, 1);\n            }\n        }\n        return ans;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj8vtnadj.java:33: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Map<Integer, Integer> map = new HashMap<>();\n        for(Integer\
    \ i : l1){\n            if(map.get(i) == null){\n                map.put(i, 1);\n\
    \            } else {\n                map.put(i, map.get(i) + 1);\n         \
    \   }\n        }\n        for(Integer i : l2){\n            if(map.get(i) == null){\n\
    \                map.put(i, 1);\n            } else {\n                map.put(i,\
    \ map.get(i) + 1);\n            }\n        }\n\n        return new ArrayList<>(map.keySet());\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw9hry_4l.java:32: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Arrays.sort(l1);\n        Arrays.sort(l2);\n        int i = 0, j\
    \ = 0;\n        ArrayList result = new ArrayList();\n        while (i < l1.length\
    \ && j < l2.length) {\n            if (l1.get(i) == l2.get(j))\n             \
    \   result.add(l1.get(i));\n            i++;\n            j++;\n        }\n  \
    \      if (i == l1.length)\n            result.addAll(l2);\n        if (j == l2.length)\n\
    \            result.addAll(l1);\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppqx5x4cv.java:15: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l1);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmppqx5x4cv.java:16: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l2);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayLis"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        for\
    \ (Integer num1 : l1) {\n            for (Integer num2 : l2) {\n             \
    \   if (num1 == num2) {\n                    list.add(num1);\n               \
    \ }\n            }\n        }\n        list.sort((a, b) -> a - b);\n        return\
    \ list;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgtgw0av6.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> commonList = new ArrayList<>();\n        int commonCount\
    \ = 0;\n        if (l1.size() > l2.size()) {\n            for (int i = 0; i <\
    \ l1.size() && commonCount < l2.size(); i++) {\n                if (l1.get(i)\
    \ == l2.get(commonCount)) {\n                    commonList.add(l1.get(i));\n\
    \                    commonCount++;\n                }\n            }\n      \
    \  } else if (l1.size() < l2.size()) {\n            for (int i = 0; i < l2.size()\
    \ && commonCount < l1.size(); i++) {\n                if (l1.get(i) == l2.get(commonCount))\
    \ {\n                    commonList.add(l1.get(i));\n                    commonCount++;\n\
    \                }\n            }\n        } else {\n            for (int i =\
    \ 0; i < l1.size(); i++) {\n                for (int j = 0; j < l2.size(); j++)\
    \ {\n                    if (l1.get(i) == l2.get(j)) {\n                     \
    \   commonList.add(l1.get(i));\n                        commonCount++;\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ commonList;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdnub3ror.java:42: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Write your code here\n        HashMap<Integer,Integer> h1 = new\
    \ HashMap<Integer,Integer>();\n        HashMap<Integer,Integer> h2 = new HashMap<Integer,Integer>();\n\
    \        for (Integer i : l1) {\n            h1.put(i, 1);\n        }\n      \
    \  for (Integer i : l2) {\n            h2.put(i, 1);\n        }\n        Set<Integer>\
    \ common = new HashSet<Integer>(h1.keySet());\n        for (Integer i : h2.keySet())\
    \ {\n            if(common.contains(i)) {\n                continue;\n       \
    \     }\n            h1.put(i, h2.get(i));\n        }\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>(h1.values());\n        Collections.sort(result);\n\
    \        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7izmjg8h.java:34: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> h1 = new HashSet<>(l1);\n        HashSet<Integer>\
    \ h2 = new HashSet<>(l2);\n        ArrayList<Integer> common = new ArrayList<>();\n\
    \n        h1.retainAll(h2);\n        h2.retainAll(h1);\n\n        h1.forEach((Integer\
    \ it) -> {\n            if (!common.contains(it)) {\n                common.add(it);\n\
    \            }\n        });\n\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb94t5lcw.java:29: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ v = new ArrayList<Integer>();\n        for (Integer x : l1) {\n            if\
    \ (l2.contains(x))\n                u.add(x);\n        }\n        for (Integer\
    \ x : l2) {\n            if (l1.contains(x))\n                v.add(x);\n    \
    \    }\n        u.retainAll(v);\n        ArrayList<Integer> common = new ArrayList<Integer>(u.size());\n\
    \        for (int i = 0; i < u.size(); i++) {\n            common.add(u.get(i));\n\
    \        }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp89d5qs50.java:31: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> hash = new HashSet<Integer>();\n        l1.forEach(elem\
    \ -> hash.add(elem));\n        l2.forEach(elem -> hash.add(elem));\n\n       \
    \ return new ArrayList<Integer>(hash);\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3bufwiqf.java:20: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        if (l1.size() != l2.size()) {\n            throw new IllegalArgumentException();\n\
    \        }\n\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(i))\
    \ {\n                result.add(l1.get(i));\n            }\n        }\n\n    \
    \    return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcwx8zajo.java:27: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> answer = new ArrayList<Integer>();\n        Set<Integer>\
    \ common = new HashSet<Integer>();\n\n        // Add elements from l1 to common,\
    \ remove from l1.\n        Set<Integer> set = new HashSet<Integer>();\n      \
    \  for (int i = 0; i <l1.size(); i++)\n        {\n            int val = l1.get(i);\n\
    \            if (!set.contains(val))\n            {\n                set.add(val);\n\
    \                common.add(val);\n            }\n        }\n        l1.removeAll(common);\n\
    \n        // Add elements from l2 to common, remove from l2.\n        set = new\
    \ HashSet<Integer>();\n        for (int i = 0; i <l2.size(); i++)\n        {\n\
    \            int val = l2.get(i);\n            if (!set.contains(val))\n     \
    \       {\n                set.add(val);\n                common.add(val);\n \
    \           }\n        }\n        l2.removeAll(common);\n\n        for (int i\
    \ = 0; i <l1.size(); i++)\n        {\n            int val = l1.get(i);\n     \
    \       if (!set.contains(val))\n            {\n                set.add(val);\n\
    \                common.add(val);\n            }\n        }\n        l1.removeAll(common);\n\
    \        for (int i = 0; i <l2.size(); i++)\n        {\n            int val =\
    \ l2.get(i);\n            if (!set.contains(val))\n            {\n           \
    \     set.add(val);\n                common.add(val);\n            }\n       \
    \ }\n        l2.removeAll(common);\n\n        // Add remaining elements of l1\
    \ and l2 to answer.\n        for (int i = 0; i < l1.size(); i++)\n        {\n\
    \            answer.add(l1.get(i));\n        }\n        for (int i = 0; i < l2.size();\
    \ i++)\n        {\n            answer.add(l2.get(i));\n        }\n\n        //\
    \ Sort the list.\n        Collections.sort(answer);\n        return answer;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9d9yuahf.java:78: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int c = 0;\n        while (l1.get(c) <\
    \ l2.get(c)) {\n            if (l1.get(c) < l2.get(c)) {\n                l3.add(l1.get(c));\n\
    \                l1.remove(c);\n            } else {\n                l3.add(l2.get(c));\n\
    \                l2.remove(c);\n            }\n            c++;\n        }\n \
    \       while (l1.get(c) < l2.get(c)) {\n            l3.add(l1.get(c));\n    \
    \        l1.remove(c);\n            c++;\n        }\n        while (l2.get(c)\
    \ < l1.get(c)) {\n            l3.add(l2.get(c));\n            l2.remove(c);\n\
    \            c++;\n        }\n        return l3;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkde1u_en.java:40: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> result = new ArrayList<>();\n        Set<Integer> set1\
    \ = new HashSet<>(l1);\n        Set<Integer> set2 = new HashSet<>(l2);\n     \
    \   set1.removeAll(set2);\n        result.addAll(set1);\n        set2.removeAll(set1);\n\
    \        result.addAll(set2);\n        System.out.println(result);\n        return\
    \ result;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2i_vut8j.java:23: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Create two empty sets, l1 and l2, and add the elements to these\
    \ sets.\n        Set<Integer> set1 = new HashSet<Integer>(l1);\n        Set<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        \n        // The resulting intersection\
    \ of sets contains only the elements that are in both\n        Set<Integer> intersection\
    \ = new HashSet<Integer>(set1.retainAll(set2));\n\n        // The resulting difference\
    \ of the sets contains all elements that are in only one of the lists.\n     \
    \   Set<Integer> difference = new HashSet<Integer>(set1.removeAll(set2));\n  \
    \      \n        // The resulting union contains all elements that exist in both\
    \ lists.\n        Set<Integer> union = new HashSet<Integer>(set1).addAll(set2);\n\
    \        \n        // Add all elements from the first list to the resulting union.\n\
    \        union.addAll(l1);\n        \n        // Add all elements from the second\
    \ list to the resulting union.\n        union.addAll(l2);\n        \n        //\
    \ Sort the resulting union and return the result.\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>(union);\n        result.sort(new Comparator<Integer>()\
    \ {\n            public int compare(Integer i1, Integer i2) {\n              \
    \  return i1.compareTo(i2);\n            }\n        });\n        \n        return\
    \ result;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp384fc93k.java:20: error: no suitable constructor found for HashSet(boolean)\n\
    \        Set<Integer> intersection = new HashSet<Integer>(set1.retainAll(set2));\n\
    \                                    ^\n    constructor HashSet.HashSet(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; boolean cannot\
    \ be converted to Collection<? extends Integer>)\n    constructor HashSet.HashSet(int)\
    \ is not applicable\n      (argument mismatch; boolean cannot be converted to\
    \ int)\n/tmp/tmp384fc93k.java:23: error: no suitable constructor found for HashSet(boolean)\n\
    \        Set<Integer> difference = new HashSet<Integer>(set1.removeAll(set2));\n\
    \                                  ^\n    constructor HashSet.HashSet(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; boolean cannot\
    \ be converted to Collection<? extends Integer>)\n    constructor HashSet.HashSet(int)\
    \ is not applicable\n      (argument mismatch; boolean cannot be converted to\
    \ int)\n/tmp/tmp384fc93k.java:26: error: incompatible types: boolean cannot be\
    \ converted to Set<Integer>\n        Set<Integer> union = new HashSet<Integer>(set1).addAll(set2);\n\
    \                                                              ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Arrays.sort(l1);\n        Arrays.sort(l2);\n        ArrayList<Integer>\
    \ common = new ArrayList<Integer>();\n        Iterator<Integer> it1 = l1.iterator();\n\
    \        Iterator<Integer> it2 = l2.iterator();\n        int index = 0;\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                common.add(it1.next());\n                it1.remove();\n\
    \                it2.remove();\n            } else {\n                if (it1.next()\
    \ < it2.next()) {\n                    index++;\n                }\n         \
    \   }\n        }\n        while (it1.hasNext()) {\n            common.add(it1.next());\n\
    \            it1.remove();\n        }\n        while (it2.hasNext()) {\n     \
    \       common.add(it2.next());\n            it2.remove();\n        }\n      \
    \  return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbppwz7rr.java:15: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l1);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmpbppwz7rr.java:16: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l2);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayLis"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        if\
    \ (l1.size() != l2.size()) {\n            return common;\n        }\n        for\
    \ (Integer i : l1) {\n            Boolean found = false;\n            for (Integer\
    \ j : l2) {\n                if (i == j) {\n                    found = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!found) {\n                common.add(i);\n            }\n        }\n     \
    \   return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n \
    \   public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppjywrf9e.java:32: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<>();\n        \n        final\
    \ Set<Integer> set1 = new HashSet<>(l1);\n        final Set<Integer> set2 = new\
    \ HashSet<>(l2);\n        \n        for(int x : set1) {\n            if(set2.contains(x))\
    \ {\n                res.add(x);\n            }\n        }\n        \n       \
    \ for(int x : set2) {\n            if(set1.contains(x)) {\n                res.add(x);\n\
    \            }\n        }\n        \n        return res;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg0wqygas.java:33: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> uc = new ArrayList<>(l1);\n        uc.retainAll(l2);\n\
    \        uc.sort(new Comparator<Integer>() {\n            @Override\n        \
    \    public int compare(Integer a, Integer b) {\n                return Integer.compare(a,\
    \ b);\n            }\n        });\n        return uc;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6yj3lyq0.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<>(l1);\n        Set<Integer> set2\
    \ = new HashSet<>(l2);\n        Set<Integer> intersection = new HashSet<>();\n\
    \        intersection.addAll(set2);\n        set1.retainAll(set2);\n        intersection.retainAll(set1);\n\
    \        ArrayList<Integer> result = new ArrayList<>();\n        result.addAll(set1);\n\
    \        result.addAll(intersection);\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf6zra3yt.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Write your code here\n        ArrayList<Integer> result = new\
    \ ArrayList<>();\n        for(int i = 0; i < l1.size(); i++) {\n            for(int\
    \ j = 0; j < l2.size(); j++) {\n                if(l1.get(i) == l2.get(j)) {\n\
    \                    result.add(l1.get(i));\n                    l1.remove(i);\n\
    \                    l2.remove(j);\n                }\n            }\n       \
    \ }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn4avy251.java:27: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        if\
    \ (l1.size() < l2.size()) {\n            common.addAll(l2);\n            common.removeAll(l1);\n\
    \            return common;\n        }\n        common.addAll(l1);\n        common.removeAll(l2);\n\
    \        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd79xesrm.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        l1.stream().filter(x->!set.add(x)).forEach(result::add);\n\
    \        l2.stream().filter(x->!set.add(x)).forEach(result::add);\n        return\
    \ result;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptfadgr_4.java:20: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        List<Integer>\
    \ l3 = new ArrayList<Integer>();\n        l3.addAll(l1);\n        l3.addAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l3.removeAll(l1);\n\
    \        l3.removeAll(l2);\n        l3.removeAll(l1);\n        l3.removeAll(l2);\n\
    \        l3.removeAll(l1);\n        l3.removeAll(l2);\n        l\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpncua3vef.java:87: error: not a statement\n        l\n        ^\n\
    /tmp/tmpncua3vef.java:87: error: ';' expected\n        l\n         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        // Initialize\
    \ counters\n        long count = 0;\n        long count2 = 0;\n        long count3\
    \ = 0;\n        long count4 = 0;\n        long count5 = 0;\n        long count6\
    \ = 0;\n        long count7 = 0;\n        long count8 = 0;\n        long count9\
    \ = 0;\n        long count10 = 0;\n        long count11 = 0;\n        long count12\
    \ = 0;\n        // Compare each element of l1 to each element of l2\n        for\
    \ (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size();\
    \ j++) {\n                if (l1.get(i) == l2.get(j)) {\n                    //\
    \ Add element to list\n                    count++;\n                }\n     \
    \       }\n        }\n        // Compare each element of l1 to each element of\
    \ l2\n        for (int i = 0; i < l1.size(); i++) {\n            for (int j =\
    \ 0; j < l2.size(); j++) {\n                if (l1.get(i) < l2.get(j)) {\n   \
    \                 // Add element to list\n                    count5++;\n    \
    \            }\n            }\n        }\n        // Compare each element of l1\
    \ to each element of l2\n        for (int i = 0; i < l1.size(); i++) {\n     \
    \       for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i) >\
    \ l2.get(j)) {\n                    // Add element to list\n                 \
    \   count6++;\n                }\n            }\n        }\n        // Compare\
    \ each element of l1 to each element of l2\n        for (int i = 0; i < l1.size();\
    \ i++) {\n            for (int j = 0; j < l2.size(); j++) {\n                if\
    \ (l1.get(i) == l2.get(j)) {\n                    // Add element to list\n   \
    \                 count7++;\n                }\n            }\n        }\n   \
    \     // Compare each element of l1 to each element of l2\n        for (int i\
    \ = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size(); j++)\
    \ {\n                if (l1.get(i) < l2.get(j)) {\n                    // Add\
    \ element to list\n                    count8++;\n                }\n        \
    \    }\n        }\n        // Compare each element of l1 to each element of l2\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j\
    \ < l2.size(); j++) {\n                if (l1.get(i) > l2.get(j)) {\n        \
    \            // Add element to list\n                    count9++;\n         \
    \       }\n            }\n        }\n        // Compare each element of l1 to\
    \ each element of l2\n        for (int i = 0; i < l1.size(); i++) {\n        \
    \    for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i) == l2.get(j))\
    \ {\n                    // Add element to list\n                    count10++;\n\
    \                }\n            }\n        }\n        // Compare each element\
    \ of l1 to each element of l2\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppuo6fa5i.java:95: error: ')' expected\n                if (l1.get(i\n\
    \                            ^\n/tmp/tmppuo6fa5i.java:98: error: illegal start\
    \ of expression\n    public static void main(String[] args) {\n    ^\n/tmp/tmppuo6fa5i.java:98:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmppuo6fa5i.java:98: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmppuo6fa5i.java:98: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmppuo6fa5i.java:98: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmppuo6fa5i.java:105: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n\n        // Find\
    \ common elements with linear time complexity\n        boolean same = true;\n\
    \        int len1 = l1.size();\n        int len2 = l2.size();\n        for (int\
    \ i = 0; i < Math.min(len1, len2); i++) {\n            boolean found = false;\n\
    \            for (int j = 0; j < len2; j++) {\n                if (l1[i] == l2[j])\
    \ {\n                    result.add(l1[i]);\n                    found = true;\n\
    \                    break;\n                }\n            }\n            if(!found){\n\
    \                same = false;\n                break;\n            }\n      \
    \  }\n        if(!same){\n            result.addAll(l1);\n            result.addAll(l2);\n\
    \        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgim8bak5.java:24: error: array required, but ArrayList<Integer>\
    \ found\n                if (l1[i] == l2[j]) {\n                      ^\n/tmp/tmpgim8bak5.java:24:\
    \ error: array required, but ArrayList<Integer> found\n                if (l1[i]\
    \ == l2[j]) {\n                               ^\n/tmp/tmpgim8bak5.java:25: error:\
    \ array required, but ArrayList<Integer> found\n                    result.add(l1[i]);\n\
    \                                 ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        if (l1.size() != l2.size())\n            throw new RuntimeException(\"\
    Two lists must contain the same number of elements.\");\n        List<Integer>\
    \ common = new ArrayList<>();\n        for (Integer i : l1) {\n            for\
    \ (Integer j : l2) {\n                if (i == j)\n                    common.add(i);\n\
    \            }\n        }\n        return common.stream().sorted().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp98pwbsxj.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return IntStream.range(0, l1.size())\n                .filter(i ->\
    \ l2.contains(l1.get(i)))\n                .sorted()\n                .distinct()\n\
    \                .collect(Collectors.toCollection(ArrayList::new));\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp74ldiqkc.java:19: error: method collect in interface IntStream\
    \ cannot be applied to given types;\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    \                ^\n  required: Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>\n\
    \  found: Collector<Object,CAP#1,Collection<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size();\
    \ j++) {\n                if (l1.get(i) == l2.get(j)) {\n                    list.add(l1.get(i));\n\
    \                    list.remove(l1.get(i));\n                    list.remove(l1.get(i));\n\
    \                    list.remove(l1.get(i));\n                }\n            }\n\
    \        }\n        return list;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbg10je49.java:27: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Create a result list to return\n        ArrayList<Integer> result\
    \ = new ArrayList<>();\n        // Get the minimum length of the lists\n     \
    \   int minLength = Math.min(l1.size(), l2.size());\n        // Loop through each\
    \ of the lists once, putting the common elements in the result list\n        for\
    \ (int i = 0; i < minLength; i++) {\n            int l1c = (i < l1.size()) ? l1.get(i)\
    \ : -1;\n            int l2c = (i < l2.size()) ? l2.get(i) : -1;\n           \
    \ if (l1c == l2c) {\n                result.add(l1c);\n            }\n       \
    \ }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl0j28ox6.java:28: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> result = new ArrayList<Integer>();\n        for (Integer\
    \ val1 : l1) {\n            for (Integer val2 : l2) {\n                if (val1.equals(val2))\
    \ {\n                    result.add(val1);\n                    break;\n     \
    \           }\n            }\n        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3n9t3qry.java:24: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set = new HashSet<Integer>();\n        for (int i =\
    \ 0; i < l1.size(); i++)\n            if (l1.get(i).compareTo(l2.get(i)) > 0)\n\
    \                set.remove(l1.get(i));\n        for (int i = 0; i < l2.size();\
    \ i++)\n            if (l2.get(i).compareTo(l1.get(i)) > 0)\n                set.remove(l2.get(i));\n\
    \        return set.stream().sorted().distinct().toArray();\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmputpdms29.java:22: error: incompatible types: Object[] cannot be\
    \ converted to ArrayList<Integer>\n        return set.stream().sorted().distinct().toArray();\n\
    \                                                       ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n\n        for (Integer\
    \ a : l1) {\n            for (Integer b : l2) {\n                if (a == b) continue;\n\
    \                else if (a > b) result.add(a);\n                else if (a <\
    \ b) result.add(b);\n            }\n        }\n\n        return result;\nreturn\
    \ new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp_ymhpa4.java:26: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        if (l1.size() > l2.size()) {\n            int temp = l2.size();\n\
    \            l2 = new ArrayList<>(l1);\n            l1.clear();\n            l2.trimToSize();\n\
    \            l1.trimToSize();\n            l1.addAll(temp);\n            l1.trimToSize();\n\
    \        }\n        ArrayList<Integer> resultList = new ArrayList<>();\n     \
    \   for (Integer i: l1) {\n            boolean isCommon = false;\n           \
    \ for (Integer j: l2) {\n                if (i == j) isCommon = true;\n      \
    \      }\n            if (isCommon) {\n                resultList.add(i);\n  \
    \          }\n        }\n        return resultList;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpys8krtvp.java:21: error: no suitable method found for addAll(int)\n\
    \            l1.addAll(temp);\n              ^\n    method Collection.addAll(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; int cannot be\
    \ converted to Collection<? extends Integer>)\n    method List.addAll(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; int cannot be\
    \ converted to Collection<? extends Integer>)\n    method AbstractCollection.addAll(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; int cannot be\
    \ converted to Collection<? extends Integer>)\n    method ArrayList.addAll(Collection<?\
    \ extends Integer>) is not applicable\n      (argument mismatch; int cannot be\
    \ converted to Collection<? extends Integer>)\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ hs = new HashSet<Integer>(l1);\n        for (int i : l2) {\n            if (hs.contains(i))\
    \ {\n                result.add(i);\n                hs.remove(i);\n         \
    \   }\n        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgbs6hfi3.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> common = new ArrayList<>(l1);\n        Collections.sort(common);\n\
    \        List<Integer> result = new ArrayList<>(l2);\n        Collections.sort(result);\n\
    \        int size = l1.size();\n        int j = 0;\n        for (int i = 0; i\
    \ < size; i++) {\n            while (j != -1 && l1.get(j) < l2.get(j)) {\n   \
    \             j--;\n            }\n            if (j != -1) {\n              \
    \  result.add(l1.get(j));\n                j++;\n            }\n        }\n  \
    \      return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5igt60j6.java:30: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        int\
    \ i=0;\n        while (l1.get(i).equals(l2.get(i)))\n        {\n            i++;\n\
    \        }\n        result.add(l1.get(i));\n        i--;\n        while (i >=\
    \ 0) {\n            int j = i;\n            while (j < l1.size() && l1.get(j).equals(l2.get(j)))\n\
    \            {\n                j++;\n            }\n            int k = 0;\n\
    \            while (k < l1.size() && l1.get(k).equals(l2.get(k)))\n          \
    \  {\n                k++;\n            }\n            if (k > j) result.add(l1.get(j));\n\
    \            if (k < i) result.add(l1.get(i));\n            i--;\n        }\n\
    \        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpci4p1mn4.java:39: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return Stream.zip(l1.stream(), l2.stream()).filter(x -> x._1 == x._2).distinct().map(x\
    \ -> x._1).sorted().collect(Collectors.toList());\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy14oqtgm.java:15: error: cannot find symbol\n        return Stream.zip(l1.stream(),\
    \ l2.stream()).filter(x -> x._1 == x._2).distinct().map(x -> x._1).sorted().collect(Collectors.toList());\n\
    \                     ^\n  symbol:   method zip(Stream<Integer>,Stream<Integer>)\n\
    \  location: interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(int i\
    \ = 0; i < l1.size() && i < l2.size(); i++) {\n            if(l1.get(i) == l2.get(i))\
    \ {\n                result.add(l1.get(i));\n            }\n        }\n      \
    \  return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsi4yitqs.java:22: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        Set<Integer>\
    \ set = new HashSet<>();\n        // Iterate through first list and add unique\
    \ numbers to set\n        l1.forEach(v -> set.add(v));\n        // Iterate through\
    \ second list and add unique numbers to set\n        l2.forEach(v -> set.add(v));\n\
    \        // Iterate through set and add the numbers to result\n        set.forEach(v\
    \ -> result.add(v));\n        // Return sorted unique common elements for two\
    \ lists.\n        return result.stream().distinct().sorted().toArray();\nreturn\
    \ new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp83_fzskg.java:24: error: incompatible types: Object[] cannot be\
    \ converted to ArrayList<Integer>\n        return result.stream().distinct().sorted().toArray();\n\
    \                                                          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        //\
    \ Create a hash of two arrays.\n        HashMap<Integer, Integer> map = new HashMap<>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            Integer key = l1.get(i);\n\
    \            map.put(key, map.getOrDefault(key, 0) + l2.get(i));\n        }\n\
    \        // Sort the hashmap by value.\n        Map<Integer, Integer> sortedMap\
    \ = map.entrySet().stream()\n                .sorted(Map.Entry.comparingByValue())\n\
    \                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue,\
    \ (v1, v2) -> v1, LinkedHashMap::new));\n        // Create a set to remove duplicates.\n\
    \        HashSet<Integer> set = new HashSet<Integer>(sortedMap.keySet());\n  \
    \      // Reverse the sorted map to remove duplicates.\n        Map<Integer, Integer>\
    \ reversedMap = sortedMap.entrySet().stream().collect(Collectors.toMap(Map.Entry::getValue,\n\
    \                Map.Entry::getKey, (v1, v2) -> v2, LinkedHashMap::new));\n  \
    \      // Add the unique elements to the result array.\n        for (Integer key\
    \ : reversedMap.keySet()) {\n            common.add(key);\n        }\n       \
    \ return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n   \
    \ public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg7es43sx.java:36: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set = new HashSet<>();\n        List<Integer> list =\
    \ new ArrayList<>(l1);\n        Collections.sort(list);\n        list.retainAll(l2);\n\
    \        list.retainAll(set);\n        ArrayList<Integer> list1 = new ArrayList<>(list);\n\
    \        list1.removeAll(set);\n        Collections.sort(list1);\n        return\
    \ list1;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuhzzc7k1.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> commonSet = new HashSet<>();\n        commonSet.addAll(l1);\n\
    \        commonSet.addAll(l2);\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        result.addAll(l1);\n        result.addAll(l2);\n        result.retainAll(commonSet);\n\
    \        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpki152scc.java:23: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n\n        // Return\
    \ sorted unique common elements for two lists.\n        // >>> common([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n        // [1, 5, 653]\n       \
    \ // >>> common([5, 3, 2, 8], [3, 2])\n        // [2, 3]\n        \n        if(l1.isEmpty()\
    \ && l2.isEmpty()) return result;\n\n        if(l1.isEmpty() || l2.isEmpty())\
    \ return result;\n\n        if(l1.get(0) < l2.get(0)) result.set(0, l1.get(0));\n\
    \        \n        for(int i = 1; i < Math.min(l1.size(), l2.size()); i++) {\n\
    \            if(l1.get(i) == l2.get(i)) continue;\n            if(l1.get(i) <\
    \ l2.get(i)) result.set(i, l1.get(i));\n        }\n        \n        return result;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx9bzaoht.java:35: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        for\
    \ (int i : l1) {\n            for (int j : l2) {\n                if (i == j)\
    \ {\n                    common.add(j);\n                }\n            }\n  \
    \      }\n        Collections.sort(common);\n        return common;\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt9ogqjnh.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        for\
    \ (Integer i : l1) {\n            for (Integer j : l2) {\n                if (i.equals(j))\
    \ {\n                    common.add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw4h6gpfz.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n\n        Integer\
    \ c = 0;\n        Integer r1 = 0;\n        Integer r2 = 0;\n\n        int n =\
    \ l1.size();\n        int m = l2.size();\n        int a = 0;\n        int b =\
    \ 0;\n        boolean found = false;\n        for (int i = 0; i < n; i++) {\n\
    \            while (!found && a < m) {\n                if (l1.get(i) == l2.get(a))\
    \ {\n                    found = true;\n                    result.add(l1.get(i));\n\
    \                    r1 = i;\n                    r2 = a;\n                  \
    \  c++;\n                }\n                a++;\n            }\n            if\
    \ (found) {\n                break;\n            }\n        }\n        if (!found)\
    \ {\n            for (int i = 0; i < m; i++) {\n                while (!found\
    \ && b < n) {\n                    if (l2.get(i) == l1.get(b)) {\n           \
    \             found = true;\n                        result.add(l2.get(i));\n\
    \                        r1 = i;\n                        r2 = b;\n          \
    \              c++;\n                    }\n                    b++;\n       \
    \         }\n                if (found) {\n                    break;\n      \
    \          }\n            }\n        }\n        System.out.println(c);\n     \
    \   return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n \
    \   public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc1d3olzc.java:60: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        Set<Integer>\
    \ s1=new HashSet<Integer>(l1);\n        Set<Integer> s2=new HashSet<Integer>(l2);\n\
    \        Set<Integer> commonElements = s1.stream()\n        .filter(e -> s2.contains(e))\n\
    \        .collect(Collectors.toSet());\n        for (Integer common : commonElements)\
    \ {\n            l3.add(common);\n        }\n        return l3;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpffptxl2q.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        Collections.addAll(common, l1);\n    \
    \    Collections.addAll(common, l2);\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj_5wk9qj.java:18: error: method addAll in class Collections cannot\
    \ be applied to given types;\n        Collections.addAll(common, l1);\n      \
    \             ^\n  required: Collection<? super T>,T[]\n  found: ArrayList<Integer>,ArrayList<Integer>\n\
    \  reason: inferred type does not conform to upper bound(s)\n    inferred: ArrayList<Integer>\n\
    \    upper bound(s): Integer,Object\n  where T is a type-variable:\n    T extends\
    \ Object declared in method <T>addAll(Collection<? super T>,T...)\n/tmp/tmpj_5wk9qj.java:19:\
    \ error: method addAll in class Collections cannot be applied to given types;\n\
    \        Collections.addAll(common, l2);\n                   ^\n  required: Collection<?\
    \ super T>,T[]\n  found: ArrayList<Integer>,ArrayList<Integer>\n  reason: inferred\
    \ type does not conform to upper bound(s)\n    inferred: ArrayList<Integer>\n\
    \    upper bound(s): Integer,Object\n  where T is a type-variable:\n    T extends\
    \ Object declared in method <T>addAll(Collection<? super T>,T...)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        Set<Integer>\
    \ s1=new HashSet<>(l1);\n        Set<Integer> s2=new HashSet<>(l2);\n        while(!s1.isEmpty()\
    \ && !s2.isEmpty()) {\n            int e1 = s1.iterator().next();\n          \
    \  int e2 = s2.iterator().next();\n            if (e1 == e2) result.add(e1);\n\
    \            else if (e1 < e2) s1.remove(e2);\n            else s2.remove(e1);\n\
    \        }\n        while (!s1.isEmpty()) result.add(s1.iterator().next());\n\
    \        while (!s2.isEmpty()) result.add(s2.iterator().next());\n        return\
    \ result;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwt75iukh.java:28: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\n       \
    \ HashMap<Integer,Integer> h1 = new HashMap<Integer,Integer>();\n        HashMap<Integer,Integer>\
    \ h2 = new HashMap<Integer,Integer>();\n        for(int i = 0; i < l1.size();\
    \ i++){\n            h1.put(l1.get(i), i);\n        }\n        for(int i = 0;\
    \ i < l2.size(); i++){\n            h2.put(l2.get(i), i);\n        }\n\n     \
    \   for(int key : h1.keySet()){\n            if(h2.containsKey(key)){\n      \
    \          Integer val1 = h1.get(key);\n                Integer val2 = h2.get(key);\n\
    \                if(val1 != val2){\n                    result.add(val1);\n  \
    \                  result.add(val2);\n                }\n            }\n     \
    \   }\n\n        return result; \nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvzgwpnbo.java:38: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n\n        // Sort\
    \ the two lists.\n        List<Integer> sorted = l1.stream().sorted().collect(Collectors.toList());\n\
    \        List<Integer> sorted2 = l2.stream().sorted().collect(Collectors.toList());\n\
    \n        Integer current;\n        Integer next1 = sorted.get(0), next2 = sorted2.get(0);\n\
    \        boolean flag = true;\n        while (flag) {\n            flag = false;\n\
    \            for (int i = 0; i < sorted.size(); i++) {\n                current\
    \ = sorted1.get(0);\n                if (next1 < current && next2 < current) {\n\
    \                    result.add(sorted1.get(i));\n                    next1 =\
    \ current;\n                    next2 = current;\n                    flag = true;\n\
    \                } else if (next1 > current) {\n                    result.add(current);\n\
    \                    next1 = current;\n                    next2 = sorted2.get(i);\n\
    \                    flag = true;\n                } else if (next2 > current)\
    \ {\n                    result.add(current);\n                    next1 = sorted1.get(i);\n\
    \                    next2 = current;\n                    flag = true;\n    \
    \            }\n            }\n        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppn7fxch_.java:27: error: cannot find symbol\n                current\
    \ = sorted1.get(0);\n                          ^\n  symbol:   variable sorted1\n\
    \  location: class Problem\n/tmp/tmppn7fxch_.java:29: error: cannot find symbol\n\
    \                    result.add(sorted1.get(i));\n                           \
    \    ^\n  symbol:   variable sorted1\n  location: class Problem\n/tmp/tmppn7fxch_.java:40:\
    \ error: cannot find symbol\n                    next1 = sorted1.get(i);\n   \
    \                         ^\n  symbol:   variable sorted1\n  location: class Problem\n\
    3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<>(l1);\n        Set<Integer> set2\
    \ = new HashSet<>(l2);\n        Set<Integer> commonSet = new HashSet<>();\n  \
    \      commonSet.addAll(set1);\n        commonSet.addAll(set2);\n        ArrayList<Integer>\
    \ result = new ArrayList<>(commonSet);\n        Collections.sort(result);\n  \
    \      return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4porc3ku.java:23: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> h1 = new HashSet<>(l1);\n        HashSet<Integer>\
    \ h2 = new HashSet<>(l2);\n\n        h1.retainAll(h2);\n        return h1.stream().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_b6j_alv.java:20: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Create two sets containing all elements in l1 and l2.\n      \
    \  Set<Integer> s1 = new HashSet<>(l1);\n        Set<Integer> s2 = new HashSet<>(l2);\n\
    \n        // Create two new lists containing the remaining elements of either\
    \ set.\n        ArrayList<Integer> result = new ArrayList<>(s1);\n        result.addAll(s2);\n\
    \n        // Sort and return the result.\n        return result.stream().sorted(Collections.naturalOrder()).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqglj001y.java:24: error: cannot find symbol\n        return result.stream().sorted(Collections.naturalOrder()).collect(Collectors.toCollection(ArrayList::new));\n\
    \                                                 ^\n  symbol:   method naturalOrder()\n\
    \  location: class Collections\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        Arrays.sort(l1);\n\
    \        Arrays.sort(l2);\n        ans.add(l1.get(0));\n        ans.add(l2.get(0));\n\
    \        int l1 = l1.get(1);\n        int l2 = l2.get(1);\n        boolean done\
    \ = false;\n        int len1 = l1.length;\n        int len2 = l2.length;\n   \
    \     int k = 0;\n        int i = 0;\n        int j = 0;\n        while (i < len1\
    \ && j < len2 && l1.get(i) == l2.get(j)) {\n            i++;\n            j++;\n\
    \        }\n        if (i == len1) {\n            while (j < len2) {\n       \
    \         ans.add(l2.get(j));\n                j++;\n            }\n         \
    \   return ans;\n        } else if (j == len2) {\n            while (i < len1)\
    \ {\n                ans.add(l1.get(i));\n                i++;\n            }\n\
    \            return ans;\n        }\n        while (l1.get(i) == l2.get(j)) {\n\
    \            i++;\n            j++;\n        }\n        if (l1.get(i) < l2.get(j))\
    \ {\n            ans.add(l1.get(i));\n            i = i + 1;\n        } else {\n\
    \            ans.add(l2.get(j));\n            j = j + 1;\n        }\n        while\
    \ (i < len1) {\n            ans.add(l1.get(i));\n            i++;\n        }\n\
    \        while (j < len2) {\n            ans.add(l2.get(j));\n            j++;\n\
    \        }\n        return ans;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_fwhk3o7.java:16: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l1);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmp_fwhk3o7.java:17: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l2);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayLis"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        int i=0;\n\
    \        while (l1.size() != 0) {\n            while (l2.size() != 0 && l1.get(i).equals(l2.get(0)))\
    \ {\n                res.add(l1.get(i++));\n                l2.remove(0);\n  \
    \          }\n            i++;\n        }\n        return res;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcfu3xgtb.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Arrays.sort(l1);\n        Arrays.sort(l2);\n        ArrayList<Integer>\
    \ result = new ArrayList<>(l1);\n        for (int i = 0; i < l2.size(); i++) {\n\
    \            boolean found = false;\n            for (int j = 0; j < result.size();\
    \ j++) {\n                if (result.get(j) == l2.get(i)) {\n                \
    \    found = true;\n                    break;\n                }\n          \
    \  }\n            if (!found) {\n                result.add(l2.get(i));\n    \
    \        }\n        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsftdlwua.java:15: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l1);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmpsftdlwua.java:16: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l2);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayLis"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Create a Set of all elements. O(n log n) time\n        HashSet<Integer>\
    \ set1 = new HashSet<>(l1);\n        HashSet<Integer> set2 = new HashSet<>(l2);\n\
    \        ArrayList<Integer> result = new ArrayList<>();\n        // For each element\
    \ in the first set\n        for (Integer e : set1) {\n            // If the element\
    \ is in the second set, add\n            if (set2.contains(e)) {\n           \
    \     result.add(e);\n            }\n        }\n        // Return the result\n\
    \        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphv1xsh_p.java:28: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> common = new HashSet<>();\n\n        for(int x: l1)\
    \ {\n            if(l2.contains(x)){\n                common.add(l2.get(x));\n\
    \                l2.remove(x);\n            }\n        }\n\n        return l1.stream()\n\
    \                .filter(x -> common.contains(x))\n                .collect(Collectors.toCollection(ArrayList<Integer>::new));\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppc7j8erg.java:27: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> hs = new HashSet<>();\n        HashSet<Integer>\
    \ hs2 = new HashSet<>();\n        HashSet<Integer> hs3 = new HashSet<>();\n  \
    \      List<Integer> list = new ArrayList<>();\n        boolean found = false;\n\
    \        int count = 0;\n        Iterator<Integer> i1 = l1.iterator();\n     \
    \   Iterator<Integer> i2 = l2.iterator();\n\n        while (i1.hasNext() && i2.hasNext())\
    \ {\n            if (i1.next() == i2.next()) {\n                count++;\n   \
    \             hs.add(i1.next());\n            }\n            else if (i1.next()\
    \ < i2.next()) {\n                hs.add(i1.next());\n                hs2.add(i2.next());\n\
    \                found = true;\n            }\n            else if (i1.next()\
    \ > i2.next()) {\n                hs.add(1);\n                hs2.add(i2.next());\n\
    \                found = true;\n            }\n        }\n\n        for (int i\
    \ = 0; i < hs.size(); i++) {\n            if (hs.contains(i)) {\n            \
    \    if (hs2.contains(i)) {\n                    if (hs3.contains(i)) {\n    \
    \                    list.add(hs.get(i));\n                    }\n           \
    \         else {\n                        list.add(i);\n                    }\n\
    \                }\n                else {\n                    if (hs3.contains(i))\
    \ {\n                        list.add(hs.get(i));\n                    }\n   \
    \                 else {\n                        list.add(i);\n             \
    \       }\n                }\n            }\n            else {\n            \
    \    list.add(i);\n            }\n        }\n        return list;\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8zrvlpxf.java:45: error: cannot find symbol\n                 \
    \       list.add(hs.get(i));\n                                   ^\n  symbol:\
    \   method get(int)\n  location: variable hs of type HashSet<Integer>\n/tmp/tmp8zrvlpxf.java:53:\
    \ error: cannot find symbol\n                        list.add(hs.get(i));\n  \
    \                                 ^\n  symbol:   method get(int)\n  location:\
    \ variable hs of type HashSet<Integer>\n/tmp/tmp8zrvlpxf.java:64: error: incompatible\
    \ types: List<Integer> cannot be converted to ArrayList<Integer>\n        return\
    \ list;\n               ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<>();\n\n        while (l1.size()\
    \ >= 2 && l2.size() >= 2) {\n            if (l1.get(0) != l2.get(0)) {\n     \
    \           l3.add((l1.get(0)));\n                l1.remove(0);\n            \
    \    l2.remove(0);\n            } else if (l1.size() == 2 && l2.size() == 2) {\n\
    \                l3.add((l1.get(0)));\n                l1.remove(0);\n       \
    \         l2.remove(0);\n            } else if ((l1.get(0) == l2.get(0)) && (l1.get(1)\
    \ == l2.get(1))) {\n                l1.remove(0);\n                l2.remove(0);\n\
    \            } else {\n                l1.remove(0);\n                l2.remove(0);\n\
    \            }\n        }\n\n        while (l1.size() > 0) {\n            l3.add((l1.get(0)));\n\
    \            l1.remove(0);\n        }\n        while (l2.size() > 0) {\n     \
    \       l3.add((l2.get(0)));\n            l2.remove(0);\n        }\n        return\
    \ l3;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprbmfr4mv.java:44: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        Set<Integer>\
    \ commonElements = new HashSet<>();\n        // If only one list is provided,\
    \ just return that.\n        if (l1.size() < 1 || l2.size() < 1) return result;\n\
    \        // Add elements from first list to common set while adding them\n   \
    \     // to result.\n        commonElements.addAll(l1);\n        result.addAll(commonElements);\n\
    \        // If second list is empty, return result\n        if (l2.isEmpty())\
    \ return result;\n        // Add elements from second list to common set while\
    \ adding them\n        // to result.\n        commonElements.addAll(l2);\n   \
    \     result.addAll(commonElements);\n        // Remove common elements from result.\n\
    \        result.removeAll(l1);\n        result.removeAll(l2);\n        // Return\
    \ sorted unique common elements.\n        return result.stream().distinct().sorted().collect(Collectors.toList());\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphvcapldy.java:33: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return result.stream().distinct().sorted().collect(Collectors.toList());\n\
    \                                                          ^\n    equality constraints:\
    \ List<Integer>\n    upper bounds: ArrayList<Integer>,Object\n  where R,A,T are\
    \ type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> h1 = new HashSet<>();\n        HashSet<Integer>\
    \ h2 = new HashSet<>();\n        for (int i : l1) h1.add(i);\n        for (int\
    \ i : l2) h2.add(i);\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        h1.retainAll(h2);\n        h2.retainAll(h1);\n        h1.removeAll(h2);\n\
    \        h2.removeAll(h1);\n        Collections.sort(h1);\n        Collections.sort(h2);\n\
    \        for (int i : h1) result.add(i);\n        for (int i : h2) result.add(i);\n\
    \        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsfcb1ltv.java:24: error: no suitable method found for sort(HashSet<Integer>)\n\
    \        Collections.sort(h1);\n                   ^\n    method Collections.<T#1>sort(List<T#1>)\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; HashSet<Integer> cannot be converted to List<T#1>))\n    method Collections.<T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Comparable<? super T#1> declared in method\
    \ <T#1>sort(List<T#1>)\n    T#2 extends Object declared in method <T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>)\n/tmp/tmpsfcb1ltv.java:25: error: no suitable method found for sort(HashSet<Integer>)\n\
    \        Collections.sort(h2);\n                   ^\n    method Collections.<T#1>sort(List<T#1>)\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; HashSet<Integer> cannot be converted to List<T#1>))\n    method Collections.<T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Comparable<? super T#1> declared in method\
    \ <T#1>sort(List<T#1>)\n    T#2 extends Object declared in method <T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> s = new HashSet<Integer>(l1);\n        s.addAll(l2);\n\
    \        ArrayList<Integer> result = new ArrayList<>(s);\n        Collections.sort(result);\n\
    \        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpturdatzd.java:20: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        // l2\
    \ can be null if the first list has zero elements.\n        if (l2 != null) {\n\
    \            for(int i = 0; i < l1.size(); i++) {\n                if(l1.get(i)\
    \ == l2.get(i)) {\n                    l3.add(l1.get(i));\n                }\n\
    \            }\n        }\n        return l3;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp35lnrp12.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<Integer>(l1);\n        Set<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        set1.removeAll(set2);\n        set1.retainAll(set2);\n\
    \        return set1.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpukkld4w5.java:20: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Sort the two lists, preserving the order.\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        int a = 0;\n        int b = 0;\n        // Loop through first list until\
    \ it gets to end.\n        while (a < l1.size() && b < l2.size()) {\n        \
    \    if (l1.get(a) == l2.get(b)) {\n                result.add(l1.get(a));\n \
    \               a++;\n                b++;\n            } else if (l1.get(a) <\
    \ l2.get(b)) {\n                a++;\n            } else {\n                b++;\n\
    \            }\n        }\n        // If first list ran out of elements, add rest\
    \ of second list.\n        while (a < l1.size()) {\n            result.add(l1.get(a));\n\
    \            a++;\n        }\n        // If second list ran out of elements, add\
    \ rest of first list.\n        while (b < l2.size()) {\n            result.add(l2.get(b));\n\
    \            b++;\n        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxw2al16q.java:44: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        final ArrayList<Integer> result = new ArrayList<>();\n        l1.stream().filter(x\
    \ -> l2.contains(x)).forEach(x -> result.add(x));\n        return result;\nreturn\
    \ new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpji9z7p56.java:18: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<Integer>(l1);\n        Set<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        ArrayList<Integer> intersection =\
    \ new ArrayList<Integer>(set1.size());\n        intersection.addAll(set1);\n \
    \       intersection.removeAll(set2);\n        intersection.retainAll(set2);\n\
    \        intersection.removeAll(set1);\n        intersection.retainAll(set1);\n\
    \        intersection.sort(null); // sort in reverse order\n        intersection.retainAll(set1);\
    \ // get unique elements\n        return intersection;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgpohr8i1.java:26: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n\n        // Check\
    \ empty lists\n        if(l1.isEmpty() && l2.isEmpty()){\n            return common;\n\
    \        }\n        if(l1.isEmpty()){\n            return common;\n        }\n\
    \        if(l2.isEmpty()){\n            return common;\n        }\n\n        //\
    \ Find common elements (if exist)\n        for(int i = 0; i < l1.size(); i++){\n\
    \            int index = Collections.binarySearch(l1, l2.get(i));\n          \
    \  if(index != -1){\n                common.add(l1.get(i));\n                l1.remove(index);\n\
    \                l2.remove(index);\n            }\n        }\n\n        // Union\
    \ with remaining list\n        if(!l1.isEmpty()){\n            common.retainAll(l1);\n\
    \        }\n\n        if(!l2.isEmpty()){\n            common.retainAll(l2);\n\
    \        }\n        Collections.sort(common);\n        return common;\nreturn\
    \ new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptly9jfvc.java:48: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Create an empty set for returning.\n        Set<Integer> set =\
    \ new HashSet<>();\n        // Iterate over lists, adding to set.\n        for\
    \ (int i : l1) {\n            set.add(i);\n        }\n        for (int i : l2)\
    \ {\n            set.add(i);\n        }\n        // Return a sorted copy of the\
    \ set.\n        return new ArrayList<>(set);\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqfq223kl.java:26: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        Set<Integer>\
    \ set1 = new HashSet<>();\n        Set<Integer> set2 = new HashSet<>();\n\n  \
    \      Iterator<Integer> it1 = l1.iterator();\n        Iterator<Integer> it2 =\
    \ l2.iterator();\n\n        while (it1.hasNext() && it2.hasNext()) {\n       \
    \     Integer a1 = it1.next();\n            Integer a2 = it2.next();\n\n     \
    \       set1.add(a1);\n            set2.add(a2);\n        }\n        set1.removeAll(set2);\n\
    \n        // Remove duplicates from set1 so that set2 only contains distinct elements\n\
    \        set1.removeAll(set2);\n\n        for (Integer i : set1)\n           \
    \ result.add(i);\n\n        // Return sorted unique common elements\n        Collections.sort(result);\n\
    \n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n  \
    \  }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp34v2am1o.java:41: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        if (l1 == null || l2 == null) {\n            return null;\n     \
    \   }\n\n        ArrayList<Integer> list = new ArrayList<Integer>();\n       \
    \ LinkedList<Integer> list1 = new LinkedList<Integer>();\n        LinkedList<Integer>\
    \ list2 = new LinkedList<Integer>();\n\n        for (Integer x : l1) {\n     \
    \       if (list1.isEmpty() || x < list1.getFirst())\n                list1.add(x);\n\
    \            else {\n                int y = list1.getFirst();\n             \
    \   while (y != list1.getLast() && list2.isEmpty() || x < list2.getFirst()) {\n\
    \                    if (list2.isEmpty())\n                        return null;\n\
    \                    list2.add(list2.getFirst());\n                    y = list2.getFirst();\n\
    \                }\n                list2.remove(list2.getLast());\n         \
    \       if (list2.isEmpty())\n                    return null;\n            }\n\
    \        }\n\n        for (Integer x : l2) {\n            if (list2.isEmpty()\
    \ || x < list2.getFirst())\n                list2.add(x);\n            else {\n\
    \                int y = list2.getFirst();\n                while (y != list2.getLast()\
    \ && list1.isEmpty() || x < list1.getFirst()) {\n                    if (list1.isEmpty())\n\
    \                        return null;\n                    list1.add(list1.getFirst());\n\
    \                    y = list1.getFirst();\n                }\n              \
    \  list1.remove(list1.getLast());\n                if (list1.isEmpty())\n    \
    \                return null;\n            }\n        }\n        while (list1.getFirst()\
    \ != list1.getLast()) {\n            list.remove(list.getLast());\n        }\n\
    \        while (list2.getFirst() != list2.getLast()) {\n            list.remove(list.getLast());\n\
    \        }\n        return list;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps4v26_ch.java:57: error: cannot find symbol\n            list.remove(list.getLast());\n\
    \                            ^\n  symbol:   method getLast()\n  location: variable\
    \ list of type ArrayList<Integer>\n/tmp/tmps4v26_ch.java:60: error: cannot find\
    \ symbol\n            list.remove(list.getLast());\n                         \
    \   ^\n  symbol:   method getLast()\n  location: variable list of type ArrayList<Integer>\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<>();\n\n        for (int i\
    \ = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size(); j++)\
    \ {\n                if (l1.get(i) == l2.get(j)) {\n                    res.add(l1.get(i));\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     Collections.sort(res);\n        return res;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfcf1afgo.java:27: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        Set<Integer>\
    \ set1 = new HashSet<Integer>(l1);\n        Set<Integer> set2 = new HashSet<Integer>(l2);\n\
    \n        for(Integer i : set1) {\n            if(set2.contains(i)) result.add(i);\n\
    \        }\n\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp61iuz9a6.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        if (l1.equals(l2))\n            return\
    \ ret;\n        for (int i = 0; i < l1.size() && i < l2.size(); i++) {\n     \
    \       if (l1.get(i) == l2.get(i))\n                ret.add(l1.get(i));\n   \
    \     }\n        return ret;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzu30krvt.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<>();\n        IntIntMap.IntIntMap\
    \ map = new IntIntMap.IntIntMap();\n        for (Integer i : l1) {\n         \
    \   map[i] = 1;\n        }\n        for (Integer i : l2) {\n            if (map.containsKey(i))\
    \ {\n                map[i]++;\n            } else {\n                map.put(i,\
    \ 1);\n            }\n        }\n        for (Integer i : map.keySet()) {\n  \
    \          if (map.get(i) != 0) {\n                res.add(i);\n            }\n\
    \        }\n        return res;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyj56aw8c.java:16: error: package IntIntMap does not exist\n   \
    \     IntIntMap.IntIntMap map = new IntIntMap.IntIntMap();\n                 ^\n\
    /tmp/tmpyj56aw8c.java:16: error: package IntIntMap does not exist\n        IntIntMap.IntIntMap\
    \ map = new IntIntMap.IntIntMap();\n                                         \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<>();\n        if (l1 == null)\
    \ {\n            return l2;\n        } else if (l2 == null) {\n            return\
    \ l1;\n        } else {\n            for (int i = 0; i < Math.min(l1.size(), l2.size());\
    \ i++) {\n                if (l1.get(i) == l2.get(i))\n                    ret.add(l1.get(i));\n\
    \            }\n        }\n        return ret;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn_1p80pm.java:27: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        if (l1.size() != l2.size()) {\n            throw new IllegalArgumentException();\n\
    \        }\n\n        ArrayList<Integer> result = new ArrayList<>(l1.size());\n\
    \        HashMap<Integer, Integer> common = new HashMap<>();\n        for (int\
    \ elem : l1) {\n            if (common.containsKey(elem)) {\n                Integer\
    \ count = common.get(elem);\n                common.put(elem, count + 1);\n  \
    \          } else {\n                common.put(elem, 1);\n            }\n   \
    \     }\n        for (int elem : l2) {\n            if (common.containsKey(elem))\
    \ {\n                Integer count = common.get(elem);\n                common.put(elem,\
    \ count - 1);\n            } else {\n                common.put(elem, -1);\n \
    \           }\n        }\n        Set<Integer> keys = common.keySet();\n     \
    \   Collections.sort(keys);\n        for (int elem : keys) {\n            result.add(common.get(elem));\n\
    \        }\n        ArrayList<Integer> result = new ArrayList<>(result.size());\n\
    \        for (Integer c : result) {\n            if (c < 0) {\n              \
    \  result.add(0);\n            } else if (c > 0) {\n                result.add(1);\n\
    \            } else {\n                result.add(c);\n            }\n       \
    \ }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpntveqb0t.java:38: error: no suitable method found for sort(Set<Integer>)\n\
    \        Collections.sort(keys);\n                   ^\n    method Collections.<T#1>sort(List<T#1>)\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; Set<Integer> cannot be converted to List<T#1>))\n    method Collections.<T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Comparable<? super T#1> declared in method\
    \ <T#1>sort(List<T#1>)\n    T#2 extends Object declared in method <T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>)\n/tmp/tmpntveqb0t.java:42: error: variable result is already defined\
    \ in method common(ArrayList<Integer>,ArrayList<Integer>)\n        ArrayList<Integer>\
    \ result = new ArrayList<>(result.size());\n                           ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        merge(l1,\
    \ l2, result);\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1nzh1dhi.java:16: error: cannot find symbol\n        merge(l1,\
    \ l2, result);\n        ^\n  symbol:   method merge(ArrayList<Integer>,ArrayList<Integer>,ArrayList<Integer>)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Arrays.sort(l1);\n        Arrays.sort(l2);\n\n        // Use an ArrayList\
    \ so we don't waste space building the list if we don't need to.\n        ArrayList<Integer>\
    \ common = new ArrayList<Integer>();\n\n        // If l1 and l2 are of different\
    \ lengths then l1 must be shorter.\n        if (l1.size() > l2.size()) {\n   \
    \         common = l1;\n        } else {\n            common = l2;\n        }\n\
    \n        // Loop through both lists.\n        for (int i = 0; i < common.size();\
    \ i++) {\n            int temp = common.get(i);\n            int j;\n        \
    \    for (j = i + 1; j < common.size(); j++) {\n                if (temp == common.get(j))\
    \ {\n                    common.add(j, temp);\n                }\n           \
    \ }\n        }\n\n        // Sort the list and return it.\n        common.sort(null);\n\
    \        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp539d0x1n.java:15: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l1);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmp539d0x1n.java:16: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l2);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayLis"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n\n        // If the\
    \ lists are empty, return empty result.\n        if (l1.size() == 0 || l2.size()\
    \ == 0)\n            return result;\n\n        // If one list is empty, return\
    \ the other.\n        if (l1.isEmpty() && l2.isEmpty())\n            return l1;\n\
    \n        // If both lists are empty, return empty result.\n        if (l1.isEmpty()\
    \ || l2.isEmpty())\n            return l2;\n\n        final int l1Size = l1.size();\n\
    \        final int l2Size = l2.size();\n\n        // Loop through l1, and for\
    \ each element in the loop compare it to all elements in l2.\n        for (int\
    \ i = 0; i < l1Size; i++) {\n            boolean match = false;\n\n          \
    \  for (int j = 0; j < l2Size; j++) {\n                if (l1.get(i).equals(l2.get(j)))\
    \ {\n                    match = true;\n                    break;\n         \
    \       }\n            }\n\n            // If this element of l1 did not match\
    \ any element in l2, add it to result list.\n            if (!match)\n       \
    \         result.add(l1.get(i));\n        }\n\n        return result;\nreturn\
    \ new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmnzug_th.java:49: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Find all the elements in l1 that are not in the l2.\n        //\
    \ Since this is a list, we can't use .equals() because that won't work\n     \
    \   // because the lists are different.\n        ArrayList<Integer> common = new\
    \ ArrayList<Integer>(l1);\n        common.retainAll(l2);\n\n        // Now we\
    \ add the remaining elements from l2 to common\n        common.addAll(l2);\n\n\
    \        // Now we sort the common elements.\n        Collections.sort(common);\n\
    \n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n  \
    \  }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiwuo0axf.java:28: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        while(l1.size()\
    \ != 0) {\n            if(l2.contains(l1.get(0))) {\n                result.remove(l1.get(0));\n\
    \                l1.remove(0);\n            }\n        }\n        while(l2.size()\
    \ != 0) {\n            if(l1.contains(l2.get(0))) {\n                result.remove(l2.get(0));\n\
    \                l2.remove(0);\n            }\n        }\n        return result;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu_mcswpr.java:29: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ common2 = new ArrayList<Integer>();\n\n        for(int i = 0; i < l1.size();\
    \ i++){\n            if(!common2.contains(l1[i])){\n                common2.add(l1[i]);\n\
    \            }\n            if(!common.contains(l2[i])){\n                common.add(l2[i]);\n\
    \            }\n        }\n\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqmms6msw.java:19: error: array required, but ArrayList<Integer>\
    \ found\n            if(!common2.contains(l1[i])){\n                         \
    \          ^\n/tmp/tmpqmms6msw.java:20: error: array required, but ArrayList<Integer>\
    \ found\n                common2.add(l1[i]);\n                              ^\n\
    /tmp/tmpqmms6msw.java:22: error: array required, but ArrayList<Integer> found\n\
    \            if(!common.contains(l2[i])){\n                                  ^\n\
    /tmp/tmpqmms6msw.java:23: error: array required, but ArrayList<Integer> found\n\
    \                common.add(l2[i]);\n                             ^\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Build a map for each list, using their first element as a key.\n\
    \        Map<Integer, Integer> map1 = new HashMap<>();\n        for (int elem\
    \ : l1) {\n            map1.put(elem, 1);\n        }\n        Map<Integer, Integer>\
    \ map2 = new HashMap<>();\n        for (int elem : l2) {\n            map2.put(elem,\
    \ 1);\n        }\n\n        // Scan through the maps, keeping track of keys that\
    \ have matching values.\n        Set<Integer> keySet1 = map1.keySet();\n     \
    \   Set<Integer> keySet2 = map2.keySet();\n        Set<Integer> keySet = new HashSet<>(keySet1);\n\
    \        keySet.removeAll(keySet2);\n        Integer commonKey = null;\n     \
    \   for (Integer key : keySet) {\n            if (map1.get(key) == map2.get(key)\
    \ && map1.get(key) != null) {\n                commonKey = key;\n            \
    \    break;\n            }\n        }\n\n        // Return the common value if\
    \ found.\n        if (commonKey != null) {\n            ArrayList<Integer> l3\
    \ = new ArrayList<>();\n            for (Integer key : keySet) {\n           \
    \     if (map1.get(key) != null && map2.get(key) != null) {\n                \
    \    if (map1.get(key) == map2.get(key)) {\n                        l3.add(key);\n\
    \                    }\n                }\n            }\n            Collections.sort(l3);\n\
    \            return l3;\n        }\n\n        // Return an empty list if the lists\
    \ are equal.\n        return new ArrayList<>();\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn6_fa_zy.java:54: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        for(int\
    \ i = 0; i < l1.size(); i++) {\n            if(!l2.contains(l1.get(i)))\n    \
    \            list.add(l1.get(i));\n        }\n        return list;\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprim6j3gs.java:21: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList result = new ArrayList(l1);\n        Collections.sort(result);\n\
    \        Collections.sort(l2);\n        for (int i = 0; i < l1.size(); i++)\n\
    \            if (result.contains(l2.get(i))) result.remove(l2.get(i));\n     \
    \   return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n \
    \   public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo7n26we1.java:21: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\nNote: /tmp/tmpo7n26we1.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        if (l1.size()\
    \ > l2.size()) l3.addAll(l2);\n        else l3.addAll(l1);\n        l3.removeAll(l2);\n\
    \        return l3;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgwctxa6a.java:20: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        if (l1 == null || l2 == null) {\n            return null;\n     \
    \   }\n        List<Integer> list = new ArrayList<Integer>(l1);\n        list.removeAll(Arrays.asList(l2));\n\
    \        return list;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe4j49ro_.java:20: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return list;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        if (l1.size()\
    \ < 2 || l2.size() < 2) {\n            return result;\n        }\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n\n        int i = 0;\n        while (i < l1.size()\
    \ && i < l2.size()) {\n            if (l1.get(i) != l2.get(i)) {\n           \
    \     break;\n            }\n            result.add(l1.get(i));\n            i++;\n\
    \        }\n        if (i == l1.size()) {\n            result.addAll(l2);\n  \
    \      } else if (i == l2.size()) {\n            result.addAll(l1);\n        }\n\
    \        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq5fa7i8j.java:36: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<>();\n        // sort l1 and\
    \ l2 by increasing order\n        Collections.sort(l1);\n        Collections.sort(l2);\n\
    \n        // find the common elements\n        int commonIndex = -1;\n       \
    \ for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(commonIndex))\
    \ {\n                res.add(l1.get(i));\n                commonIndex++;\n   \
    \         }\n        }\n\n        return res;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9dq0didt.java:30: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Check both lists are non-null\n        if (l1 == null || l2 ==\
    \ null) {\n            return null;\n        }\n\n        // Create an array to\
    \ hold unique values\n        ArrayList<Integer> unique = new ArrayList<>();\n\
    \n        // Scan the lists for unique elements\n        for (Integer i : l1)\
    \ {\n            if (!unique.contains(i)) {\n                unique.add(i);\n\
    \            }\n        }\n        for (Integer i : l2) {\n            if (!unique.contains(i))\
    \ {\n                unique.add(i);\n            }\n        }\n\n        // Sort\
    \ the unique elements\n        Collections.sort(unique);\n\n        // Return\
    \ the unique list\n        return unique;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8uxak9oz.java:40: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // If l1 and l2 are null, return null\n        if (l1 == null ||\
    \ l2 == null) return null;\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n\
    \        // Iterate over every element in the 1st list and see if it is in l2\n\
    \        for (Integer i : l1) {\n            if (l2.contains(i)) {\n         \
    \       l3.add(i);\n            }\n        }\n        // Return the unique elements\
    \ between l1 and l3\n        return l3;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpov8ul7ah.java:26: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>(l1);\n        result.retainAll(l2);\n\
    \        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_hntz9ba.java:18: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for\
    \ (Integer i : l1) result.add(i);\n        for (Integer j : l2) if (result.contains(j))\
    \ result.remove(j);\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpejvt8y2e.java:19: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> commonElements = new ArrayList<>();\n\n      \
    \  // Iterate through first list.\n        int i = 0;\n        for (Integer element\
    \ : l1) {\n            // Iterate through second list.\n            int j = 0;\n\
    \            for (Integer element2 : l2) {\n                // If element already\
    \ exists in common elements then break.\n                if (element == element2)\n\
    \                    break;\n\n                // If element not present in both\
    \ list break.\n                else {\n                    j++;\n            \
    \    }\n            }\n            // If we haven't found any common element then\
    \ add it to list and return it.\n            if (j == 0)\n                commonElements.add(element);\n\
    \n            // If j is equal to length of second list then break.\n        \
    \    else {\n                break;\n            }\n            i++;\n       \
    \ }\n        return commonElements;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0br2rmtw.java:43: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> unique = new ArrayList<Integer>(l1);\n       \
    \ unique.removeAll(l2);\n        Collections.sort(unique);\n        return unique;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptcpbobvs.java:19: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        l1.removeAll(l2);\n        ArrayList<Integer> common = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < l1.size(); i++) {\n            int count = 0;\n  \
    \          for(int j = 0; j < l2.size(); j++) {\n                if(l1.get(i)\
    \ == l2.get(j)) {\n                    count++;\n                }\n         \
    \   }\n            if(count == l1.size()) {\n                common.add(l1.get(i));\n\
    \            }\n        }\n        System.out.println(common);\n        return\
    \ common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdplub_s1.java:30: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        for(Integer\
    \ i : l1) {\n            for(Integer j : l2) {\n                if(i != j && i\
    \ == j) {\n                    result.add(i);\n                    break;\n  \
    \              }\n            }\n        }\n        return result;\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgc5kb4ue.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        if (l1 == null || l2 == null) {\n            return null;\n     \
    \   }\n\n        // Find sizes\n        int size1 = l1.size();\n        int size2\
    \ = l2.size();\n\n        // If they have no common elements, return empty list\n\
    \        if (size1 < 1 || size2 < 1 || size1 == 0 || size2 == 0) {\n         \
    \   return new ArrayList<>();\n        }\n\n        // Find index for first element\
    \ in l2\n        int index2 = 0;\n        while (l2.get(index2++) != null) {\n\
    \        }\n\n        // Create a list to hold results\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n\n        // Iterate through l1 and l2 until l2\
    \ index reaches end of l1\n        while (index2 < size1) {\n            // Add\
    \ elements to result\n            if (l1.get(index1) == l2.get(index2)) {\n  \
    \              result.add(l1.get(index1));\n            }\n            // Skip\
    \ to next element in l1, and increment index\n            index1++;\n        }\n\
    \n        // Return result\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqe515n0p.java:39: error: cannot find symbol\n            if (l1.get(index1)\
    \ == l2.get(index2)) {\n                       ^\n  symbol:   variable index1\n\
    \  location: class Problem\n/tmp/tmpqe515n0p.java:40: error: cannot find symbol\n\
    \                result.add(l1.get(index1));\n                               \
    \   ^\n  symbol:   variable index1\n  location: class Problem\n/tmp/tmpqe515n0p.java:43:\
    \ error: cannot find symbol\n            index1++;\n            ^\n  symbol: \
    \  variable index1\n  location: class Problem\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> result = new ArrayList<>();\n        if (l1.size()\
    \ > l2.size()) {\n            Collections.sort(l1);\n            for (Integer\
    \ element : l1)\n                if (l2.contains(element))\n                 \
    \   result.add(element);\n        } else {\n            Collections.sort(l2);\n\
    \            for (Integer element : l2)\n                if (l1.contains(element))\n\
    \                    result.add(element);\n        }\n        return result;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu54b8py5.java:27: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        final Set<Integer> s1 = new LinkedHashSet<>(l1);\n        final Set<Integer>\
    \ s2 = new LinkedHashSet<>(l2);\n        final List<Integer> l3 = new ArrayList<>(s2.size());\n\
    \        for (Integer i : s1) l3.add(i);\n        for (Integer i : s2) l3.remove(i);\n\
    \        return new ArrayList<>(l3);\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz3zg86k7.java:21: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        sort(l1);\n\
    \        sort(l2);\n        for (int i = 0; i < l1.size() && i < l2.size(); i++)\n\
    \            if (l1.get(i) == l2.get(i))\n                result.add(l1.get(i));\n\
    \        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps3x7kih1.java:16: error: cannot find symbol\n        sort(l1);\n\
    \        ^\n  symbol:   method sort(ArrayList<Integer>)\n  location: class Problem\n\
    /tmp/tmps3x7kih1.java:17: error: cannot find symbol\n        sort(l2);\n     \
    \   ^\n  symbol:   method sort(ArrayList<Integer>)\n  location: class Problem\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<>();\n        \n        Set<Integer>\
    \ s1 = new HashSet<>();\n        Set<Integer> s2 = new HashSet<>();\n        \n\
    \        for(Integer i : l1) {\n            s1.add(i);\n        }\n        \n\
    \        for(Integer i : l2) {\n            s2.add(i);\n        }\n        \n\
    \        for(Integer i : s1 & s2) {\n            ret.add(i);\n        }\n    \
    \    \n        return ret;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk8em68vz.java:28: error: bad operand types for binary operator\
    \ '&'\n        for(Integer i : s1 & s2) {\n                           ^\n  first\
    \ type:  Set<Integer>\n  second type: Set<Integer>\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> temp = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ common = new ArrayList<Integer>();\n        if (l1.size() < l2.size()) {\n \
    \           return temp;\n        }\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            if (l1.get(i) == l2.get(i)) {\n                common.add(l1.get(i));\n\
    \            }\n        }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwsp55prt.java:26: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set1 = new HashSet<Integer>(l1);\n        HashSet<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        ArrayList<Integer> common = new ArrayList<Integer>();\n\
    \        Iterator<Integer> it1 = set1.iterator();\n        Iterator<Integer> it2\
    \ = set2.iterator();\n        while (it1.hasNext() && it2.hasNext()) {\n     \
    \       Integer num1 = it1.next();\n            Integer num2 = it2.next();\n \
    \           if (num1.equals(num2)) {\n                common.add(num1);\n    \
    \        }\n        }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi2qbl1rd.java:28: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // This solution uses O(N^2) space and O(M) time\n        // where\
    \ N and M are the sizes of the lists.\n        // This solution assumes that l1\
    \ and l2 are both sorted.\n        // The complexity analysis is as follows:\n\
    \        //    O(N^2): two nested loops\n        //    O(M): HashSet\n       \
    \ ArrayList<Integer> l3 = new ArrayList<>();\n        for (int i = 0; i <= l1.size()\
    \ - 1; i++) {\n            int j = 0;\n            while (j < l2.size() && l1.get(i)\
    \ == l2.get(j)) {\n                j++;\n            }\n            l3.add(l1.get(i));\n\
    \        }\n        return l3;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcig1sss6.java:30: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> list = new ArrayList<>();\n        for (int i = 0;\
    \ i < l1.size(); i++) list.add(l1.get(i));\n        for (int j = 0; j < l2.size();\
    \ j++) list.add(l2.get(j));\n        list.stream().distinct().sorted().collect(Collectors.toList());\n\
    \        return list;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp11004rvm.java:19: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return list;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set = new HashSet<Integer>();\n        for (int\
    \ i : l1)\n            set.add(l2.get(i));\n        for (int i : l2)\n       \
    \     if (!set.contains(i))\n                l1.add(i);\n        Collections.sort(l1);\n\
    \        return l1;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe2wbiufy.java:23: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // If either list is empty, return empty.\n        if (l1.isEmpty()\
    \ || l2.isEmpty()) {\n            return new ArrayList<Integer>();\n        }\n\
    \n        // Create a set to hold unique elements.\n        HashSet<Integer> set\
    \ = new HashSet<Integer>();\n\n        // Add all elements from first list to\
    \ set.\n        set.addAll(l1);\n\n        // Add all elements from second list\
    \ to set.\n        set.addAll(l2);\n\n        // Create new list for result and\
    \ add unique elements from set to\n        // result.\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>(set);\n\n        // Remove all duplicate elements\
    \ from result list.\n        Set<Integer> unique = new HashSet<Integer>(result);\n\
    \        unique.removeAll(result);\n\n        // Return result.\n        return\
    \ unique;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgzpbnfkw.java:38: error: incompatible types: Set<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return unique;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> u1 = new ArrayList<>();\n        ArrayList<Integer>\
    \ u2 = new ArrayList<>();\n        for (int i : l1) u1.add(i);\n        for (int\
    \ i : l2) u2.add(i);\n        ArrayList<Integer> common = new ArrayList<>();\n\
    \        while (!u1.isEmpty() && !u2.isEmpty()) {\n            Integer i1 = u1.get(0);\n\
    \            Integer i2 = u2.get(0);\n            if (i1 != i2) common.add(i1);\n\
    \            u1.remove(0);\n            u2.remove(0);\n        }\n        return\
    \ common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnkajr0sl.java:28: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> common = new HashSet<Integer>();\n        for (int i\
    \ : l1) {\n            if (common.contains(i))\n                continue;\n  \
    \          for (int j : l2) {\n                if (i == j)\n                 \
    \   common.add(j);\n            }\n        }\n        ArrayList<Integer> res =\
    \ new ArrayList<>(common);\n        res.sort();\n        return res;\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxs6ghf2w.java:25: error: no suitable method found for sort(no arguments)\n\
    \        res.sort();\n           ^\n    method List.sort(Comparator<? super Integer>)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method ArrayList.sort(Comparator<? super Integer>) is not applicable\n  \
    \    (actual and formal argument lists differ in length)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Write your code here.\n        if (l1.isEmpty() || l2.isEmpty())\
    \ return new ArrayList<>();\n\n        PriorityQueue<Integer> q1 = new PriorityQueue<>(l1.size());\n\
    \        PriorityQueue<Integer> q2 = new PriorityQueue<>(l2.size());\n       \
    \ List<Integer> common = new ArrayList<>();\n\n        for (Integer x : l1) {\n\
    \            q1.add(x);\n        }\n        for (Integer x : l2) {\n         \
    \   q2.add(x);\n        }\n\n        while (!q1.isEmpty() || !q2.isEmpty()) {\n\
    \            int comp = q1.isEmpty() ? -1 : q2.isEmpty() ? 1 : Integer.compare(q1.peek(),\
    \ q2.peek());\n            if (comp == 0) {\n                common.add(q1.poll());\n\
    \            } else {\n                common.add(q2.poll());\n            }\n\
    \        }\n\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpypssw3gg.java:38: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return common;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        while (l1.size() > 0 || l2.size() > 0)\
    \ {\n            if (l1.size() > 0 && l2.size() > 0) {\n                if (l1.get(0)\
    \ == l2.get(0)) {\n                    result.add(l1.get(0));\n              \
    \      l1.remove(0);\n                    l2.remove(0);\n                } else\
    \ if (l1.get(0) > l2.get(0)) {\n                    result.add(l1.get(0));\n \
    \                   l1.remove(0);\n                } else {\n                \
    \    result.add(l2.get(0));\n                    l2.remove(0);\n             \
    \   }\n            } else if (l1.size() > 0) {\n                result.add(l1.get(0));\n\
    \                l1.remove(0);\n            } else if (l2.size() > 0) {\n    \
    \            result.add(l2.get(0));\n                l2.remove(0);\n         \
    \   }\n        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2t1w8bz0.java:40: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> hs1 = new HashSet<>();\n        HashSet<Integer>\
    \ hs2 = new HashSet<>();\n        ArrayList<Integer> common = new ArrayList<>();\n\
    \        for (int i : l1) {\n            if (hs1.contains(i))\n              \
    \  hs1.remove(i);\n        }\n        for (int i : l2) {\n            if (hs2.contains(i))\n\
    \                hs2.remove(i);\n        }\n        hs1.addAll(hs2);\n       \
    \ for (Integer i : hs1) {\n            common.add(i);\n        }\n        return\
    \ common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqv6asl6o.java:31: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set1 = new HashSet<Integer>(l1);\n        HashSet<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for(Integer val : set1) {\n            if (set2.contains(val)) {\n  \
    \              res.add(val);\n                set2.remove(val);\n            }\n\
    \        }\n        for (Integer val : set2) {\n            if (set1.contains(val))\
    \ {\n                res.add(val);\n                set1.remove(val);\n      \
    \      }\n        }\n        return res;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3c47mdry.java:31: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        Arrays.sort(l1);\n\
    \        Arrays.sort(l2);\n        Set<Integer> set = new HashSet<Integer>();\n\
    \        for (int i : l1) {\n            set.add(Integer.valueOf(i));\n      \
    \  }\n        for (int i : l2) {\n            if (!set.contains(Integer.valueOf(i)))\
    \ {\n                common.add(Integer.valueOf(i));\n            }\n        }\n\
    \        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7qqxfhne.java:16: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l1);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmp7qqxfhne.java:17: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l2);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayLis"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<Integer>(l1);\n        Set<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        set1.retainAll(set2);\n        return\
    \ set1.stream().sorted().collect(Collectors.toCollection(ArrayList::new));\nreturn\
    \ new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph01vhx8r.java:19: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> c = new ArrayList<>();\n        for (int x : l1)\
    \ if (!c.contains(x)) c.add(x);\n        for (int x : l2) if (!c.contains(x))\
    \ c.add(x);\n        return c;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr283xe_6.java:19: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<>(l1);\n        Collections.sort(list);\n\
    \        list.retainAll(l2);\n        list.sort();\n        return list;\nreturn\
    \ new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp32jklk7h.java:18: error: no suitable method found for sort(no arguments)\n\
    \        list.sort();\n            ^\n    method List.sort(Comparator<? super\
    \ Integer>) is not applicable\n      (actual and formal argument lists differ\
    \ in length)\n    method ArrayList.sort(Comparator<? super Integer>) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Your code here\n        ArrayList<Integer> common = new ArrayList<Integer>();\n\
    \n        // iterate over first list l1 and add it to common\n        for (Integer\
    \ x : l1) {\n            if (common.contains(x)) continue;\n            common.add(x);\n\
    \        }\n\n        // iterate over second list l2 and add it to common\n  \
    \      for (Integer x : l2) {\n            if (common.contains(x)) continue;\n\
    \            common.add(x);\n        }\n\n        // return common list\n    \
    \    return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy2ipovkj.java:32: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n        LinkedList<Integer>\
    \ l1 = new LinkedList<>();\n        LinkedList<Integer> l2 = new LinkedList<>();\n\
    \        for(int x : l1) {\n            l1.add(x);\n        }\n        for(int\
    \ x : l2) {\n            l2.add(x);\n        }\n\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        for(int i = 0 ; i < l1.size() ; i++) {\n\
    \            for(int j = 0 ; j < l2.size() ; j++) {\n                if(l1.get(i)\
    \ == l2.get(j)) {\n                    common.add(l1.get(i));\n              \
    \      l1.remove(i);\n                    l2.remove(j);\n                    break;\n\
    \                }\n            }\n        }\n        return common;\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx2ywi3_x.java:16: error: variable l1 is already defined in method\
    \ common(ArrayList<Integer>,ArrayList<Integer>)\n        LinkedList<Integer> l1\
    \ = new LinkedList<>();\n                            ^\n/tmp/tmpx2ywi3_x.java:17:\
    \ error: variable l2 is already defined in method common(ArrayList<Integer>,ArrayList<Integer>)\n\
    \        LinkedList<Integer> l2 = new LinkedList<>();\n                      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        \n\
    \        while(l1.size() > 0 && l2.size() > 0) {\n            if(l1.get(0) !=\
    \ l2.get(0)) {\n                result.add(l1.get(0));\n                l1.remove(0);\n\
    \                l2.remove(0);\n            }\n            else {\n          \
    \      l1.remove(0);\n                l2.remove(0);\n            }\n        }\n\
    \        while(l1.size() > 0) {\n            result.add(l1.get(0));\n        \
    \    l1.remove(0);\n        }\n        while(l2.size() > 0) {\n            result.add(l2.get(0));\n\
    \            l2.remove(0);\n        }\n        \n        return result;\nreturn\
    \ new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpltlx3wvl.java:38: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        for\
    \ (Integer i : l1) {\n            boolean match = false;\n            for (Integer\
    \ j : l2) {\n                if (i == j) match = true;\n            }\n      \
    \      if (match) common.add(i);\n        }\n        return common;\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpae5v5m7e.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        Set<Integer>\
    \ set1 = new HashSet<Integer>(l1);\n        Set<Integer> set2 = new HashSet<Integer>(l2);\n\
    \        Iterator<Integer> it1 = set1.iterator();\n        while (it1.hasNext())\
    \ {\n            Integer element = it1.next();\n            if (!set2.contains(element))\
    \ {\n                common.add(element);\n            }\n        }\n        it1\
    \ = set2.iterator();\n        while (it1.hasNext()) {\n            Integer element\
    \ = it1.next();\n            if (!set1.contains(element)) {\n                common.add(element);\n\
    \            }\n        }\n        System.out.println(common);\n        return\
    \ common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq42bk9e1.java:34: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> result = new ArrayList<>();\n        int i1 = 0, i2\
    \ = 0, count1 = 0;\n        while (i1 < l1.size() && i2 < l2.size()) {\n     \
    \       if (l1.get(i1) == l2.get(i2)) {\n                count1++;\n         \
    \       result.add(l1.get(i1));\n                i++;\n                i2++;\n\
    \            } else if (count1 >= 1) {\n                i1++;\n              \
    \  count1 = 0;\n            } else if (count1 < 1) {\n                i2++;\n\
    \                count1 = 0;\n            }\n        }\n        return result;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm4cvadys.java:21: error: cannot find symbol\n                i++;\n\
    \                ^\n  symbol:   variable i\n  location: class Problem\n/tmp/tmpm4cvadys.java:31:\
    \ error: incompatible types: List<Integer> cannot be converted to ArrayList<Integer>\n\
    \        return result;\n               ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> common = new ArrayList<>(l1);\n        Collections.sort(common);\n\
    \        Collections.sort(l2);\n        if (common.equals(l2)) {\n           \
    \ return new ArrayList<>(l1);\n        }\n        Collections.sort(l1);\n    \
    \    for (int i = 0; i < l1.size() && !common.remove(l1.get(i)); ++i) {\n    \
    \        for (int j = 0; j < l2.size() && !common.remove(l2.get(j)); ++j) {\n\
    \                if (l1.get(i) == l2.get(j)) {\n                    common.add(l1.get(i));\n\
    \                }\n            }\n        }\n        return common;\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyzlbj9ep.java:29: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return common;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Use hashmap to store the unique elements.\n        HashMap<Integer,\
    \ Integer> hashMap = new HashMap<>();\n        for(int i=0; i < l1.size(); i++)\
    \ {\n            Integer element = l1.get(i);\n            Integer count = hashMap.get(element);\n\
    \            if(count == null) {\n                hashMap.put(element, 1);\n \
    \           } else {\n                hashMap.put(element, count + 1);\n     \
    \       }\n        }\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        for(int i=0; i < l2.size(); i++) {\n            Integer element = l2.get(i);\n\
    \            Integer count = hashMap.get(element);\n            if(count == null)\
    \ {\n                result.add(element);\n            } else {\n            \
    \    hashMap.remove(element);\n                hashMap.put(element, count - 1);\n\
    \            }\n        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqtn5wzl_.java:38: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> h1 = new HashSet<>(l1);\n        HashSet<Integer>\
    \ h2 = new HashSet<>(l2);\n        ArrayList<Integer> set = new ArrayList<>();\n\
    \        h1.retainAll(h2);\n        return h1;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmoxqijtu.java:19: error: incompatible types: HashSet<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return h1;\n               ^\n1\
    \ error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<>(l1);\n        Set<Integer> set2\
    \ = new HashSet<>(l2);\n        set1.removeAll(l2);\n        set2.removeAll(l1);\n\
    \        ArrayList<Integer> commonList = new ArrayList<>(set1);\n        commonList.removeAll(l2);\n\
    \        commonList.removeAll(l1);\n        return commonList;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgel1gnnc.java:23: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        if (l1.size()\
    \ != l2.size()) {\n            throw new RuntimeException(\"Lists should have\
    \ same size\");\n        }\n        int max1 = Collections.max(l1);\n        int\
    \ max2 = Collections.max(l2);\n        if (max1 < max2) {\n            Collections.sort(l1);\n\
    \            Collections.sort(l2);\n        }\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i = 0;\n        boolean found = false;\n\
    \        while (i < l1.size() && !found) {\n            if (l1.get(i) == l2.get(i))\
    \ {\n                found = true;\n            } else {\n                list.add(l1.get(i));\n\
    \            }\n            i++;\n        }\n        if (found) {\n          \
    \  return list;\n        }\n        Collections.sort(list);\n        return list;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd5exk16v.java:42: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        // sort\
    \ first list\n        l1 = sort(l1);\n        // sort second list\n        l2\
    \ = sort(l2);\n        // loop through each element of the lists\n        for(int\
    \ i=0; i<l1.size(); i++) {\n            for(int j=0; j<l2.size(); j++) {\n   \
    \             if(l1[i] == l2[j]) { // if element matches\n                   \
    \ res.add(l1[i]); // add to the list\n                    break;\n           \
    \     }\n            }\n        }\n        // return sorted list\n        return\
    \ sort(res);\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcobhr9lq.java:17: error: cannot find symbol\n        l1 = sort(l1);\n\
    \             ^\n  symbol:   method sort(ArrayList<Integer>)\n  location: class\
    \ Problem\n/tmp/tmpcobhr9lq.java:19: error: cannot find symbol\n        l2 = sort(l2);\n\
    \             ^\n  symbol:   method sort(ArrayList<Integer>)\n  location: class\
    \ Problem\n/tmp/tmpcobhr9lq.java:23: error: array required, but ArrayList<Integer>\
    \ found\n                if(l1[i] == l2[j]) { // if element matches\n        \
    \             ^\n/tmp/tmpcobhr9lq.java:23: error: array required, but ArrayList<Integer>\
    \ found\n                if(l1[i] == l2[j]) { // if element matches\n        \
    \                      ^\n/tmp/tmpcobhr9lq.java:24: error: array required, but\
    \ ArrayList<Integer> found\n                    res.add(l1[i]); // add to the\
    \ list\n                              ^\n/tmp/tmpcobhr9lq.java:30: error: cannot\
    \ find symbol\n        return sort(res);\n               ^\n  symbol:   method\
    \ sort(ArrayList<Integer>)\n  location: class Problem\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        int minL\
    \ = l1.size() > l2.size() ? l1.size() : l2.size();\n        for(int i = 0; i <\
    \ minL; i++) {\n            if(l1.get(i) == l2.get(i))\n                res.add(l1.get(i));\n\
    \        }\n        if(l1.size() > l2.size())\n            Collections.sort(res);\n\
    \        return res;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7r8ayzvn.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<Integer>(l1);\n        Set<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        ArrayList<Integer> common = new ArrayList<Integer>();\n\
    \        for (Integer x : set1) {\n            if (set2.contains(x))\n       \
    \         common.add(x);\n        }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvw0ndd1n.java:23: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Create a Set for the unique values present in both lists.\n  \
    \      Set<Integer> uniqueValuesInBothLists = new HashSet<>(l1);\n        uniqueValuesInBothLists.addAll(l2);\n\
    \n        // Create a Set for unique values only present in l1.\n        Set<Integer>\
    \ uniqueValuesInL1 = new HashSet<>();\n        for (int value : l1) {\n      \
    \      uniqueValuesInL1.add(value);\n        }\n\n        // Create a Set for\
    \ unique values only present in l2.\n        Set<Integer> uniqueValuesInL2 = new\
    \ HashSet<>();\n        for (int value : l2) {\n            uniqueValuesInL2.add(value);\n\
    \        }\n\n        // Return list of elements that are common to both lists.\n\
    \        ArrayList<Integer> commonElements = new ArrayList<>();\n        for (Integer\
    \ value : uniqueValuesInBothLists) {\n            if (uniqueValuesInL1.contains(value))\
    \ {\n                commonElements.add(value);\n            }\n            if\
    \ (uniqueValuesInL2.contains(value)) {\n                commonElements.add(value);\n\
    \            }\n        }\n        return commonElements;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdym7z080.java:42: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Write your code here.\n        return null;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9qqhrox2.java:17: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> s = new HashSet<>(l1);\n        List<Integer> result\
    \ = new ArrayList<>();\n        for(Integer i : l2) {\n            if(!s.contains(i))\
    \ {\n                result.add(i);\n                s.add(i);\n            }\n\
    \        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3fqtt6on.java:23: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        if\
    \ (l1.size() < l2.size()) {\n            Iterator<Integer> it = l1.iterator();\n\
    \            while (it.hasNext()) {\n                Integer nextVal = it.next();\n\
    \                if (!l2.contains(nextVal)) {\n                    common.add(nextVal);\n\
    \                }\n            }\n        } else {\n            Iterator<Integer>\
    \ it = l2.iterator();\n            while (it.hasNext()) {\n                Integer\
    \ nextVal = it.next();\n                if (!l1.contains(nextVal)) {\n       \
    \             common.add(nextVal);\n                }\n            }\n       \
    \ }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2inpko8c.java:34: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // return a list of common elements\n        ArrayList<Integer> list\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> list1 = new ArrayList<Integer>(l1);\n\
    \        ArrayList<Integer> list2 = new ArrayList<Integer>(l2);\n        ArrayList<Integer>\
    \ listcommon = new ArrayList<Integer>();\n        // sort the list first\n   \
    \     list1.sort(Comparator.naturalOrder());\n        list2.sort(Comparator.naturalOrder());\n\
    \        // if list 2 has more elements than list 1, then compare the last element\
    \ of list 2\n        // with all the elements of list 1\n        if (list2.size()\
    \ > list1.size()) {\n            listcommon = list1;\n            for (Integer\
    \ i : list2) {\n                listcommon.remove(listcommon.size() - 1);\n  \
    \              listcommon.add(i);\n            }\n        }\n        else {\n\
    \            listcommon = list2;\n            for (Integer i : list1) {\n    \
    \            listcommon.remove(listcommon.size() - 1);\n                listcommon.add(i);\n\
    \            }\n        }\n        // remove duplicates from common list\n   \
    \     listcommon.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \        // return common elements\n        return listcommon;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptrt3qipg.java:43: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n        ArrayList<Integer>\
    \ common2 = new ArrayList<>();\n        ArrayList<Integer> common3 = new ArrayList<>();\n\
    \        ArrayList<Integer> common4 = new ArrayList<>();\n        for (int i =\
    \ 0; i < l1.size(); i++) {\n            if (l2.contains(l1[i]))\n            \
    \    common.add(l1[i]);\n            if (l2.contains(l2[i]))\n               \
    \ common2.add(l2[i]);\n            if (l1.contains(l2[i]))\n                common3.add(l1[i]);\n\
    \            if (l1.contains(l1[i]))\n                common4.add(l1[i]);\n  \
    \      }\n        Collections.sort(common);\n        Collections.sort(common2);\n\
    \        Collections.sort(common3);\n        Collections.sort(common4);\n    \
    \    Collections.reverse(common);\n        Collections.reverse(common2);\n   \
    \     Collections.reverse(common3);\n        Collections.reverse(common4);\n \
    \       Collections.sort(common);\n        Collections.sort(common2);\n      \
    \  Collections.sort(common3);\n        Collections.sort(common4);\n        Collections.reverse(common);\n\
    \        Collections.reverse(common2);\n        Collections.reverse(common3);\n\
    \        Collections.reverse(common4);\n        ArrayList<Integer> commonList\
    \ = new ArrayList<>();\n        commonList.addAll(common);\n        commonList.addAll(common2);\n\
    \        commonList.addAll(common3);\n        commonList.addAll(common4);\n  \
    \      for (int i = 0; i < commonList.size(); i++)\n            for (int j = 0;\
    \ j < commonList.size(); j++) {\n                if (commonList.get(i) == commonList.get(j))\
    \ {\n                    commonList.remove(commonList.get(j));\n             \
    \       commonList.remove(commonList.get(i));\n                    commonList.add(0,\
    \ commonList.get(i));\n                    commonList.add(0, commonList.get(j));\n\
    \                    break;\n                }\n            }\n        Collections.sort(commonList);\n\
    \        ArrayList<Integer> commonList2 = new ArrayList<>();\n        commonList2.addAll(common);\n\
    \        commonList2.addAll(common2);\n        commonList2.addAll(common3);\n\
    \        commonList2.addAll(common4);\n        for (int i = 0; i < commonList2.size();\
    \ i++)\n            for (int j = 0; j < commonList2.size(); j++) {\n         \
    \       if (commonList2.get(i) == commonList2.get(j)) {\n                    commonList2.remove(commonList2.get(j));\n\
    \                    commonList2.remove(commonList2.get(i));\n               \
    \     commonList2.add(0, commonList2.get(i));\n                    commonList2.add(0,\
    \ commonList2.get(j));\n                    break;\n                }\n      \
    \      }\n        ArrayList<Integer> commonList3 = new ArrayList<>();\n      \
    \  commonList3.addAll(common);\n        commonList3.addAll(common2);\n       \
    \ commonList3.addAll(common3);\n        commonList3.addAll(\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp68vkh5mu.java:81: error: illegal start of expression\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n^\n/tmp/tmp68vkh5mu.java:81: error: ';'\
    \ expected\nreturn new ArrayList<Integer>(Arrays.asList());\n      ^\n/tmp/tmp68vkh5mu.java:81:\
    \ error: not a statement\nreturn new ArrayList<Integer>(Arrays.asList());\n  \
    \                  ^\n/tmp/tmp68vkh5mu.java:81: error: ';' expected\nreturn new\
    \ ArrayList<Integer>(Arrays.asList());\n                             ^\n/tmp/tmp68vkh5mu.java:81:\
    \ error: ';' expected\nreturn new ArrayList<Integer>(Arrays.asList());\n     \
    \                                        ^\n5 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n        ArrayList<Integer>\
    \ sortedL1 = new ArrayList<>(l1);\n        ArrayList<Integer> sortedL2 = new ArrayList<>(l2);\n\
    \        Collections.sort(sortedL1);\n        Collections.sort(sortedL2);\n  \
    \      Collections.reverse(sortedL1);\n        Collections.reverse(sortedL2);\n\
    \        for(int i = 0; i < sortedL1.size(); i++) {\n            int min = Math.min(sortedL1.get(i),\
    \ sortedL2.get(i));\n            for(int j = i + 1; j < sortedL1.size(); j++)\
    \ {\n                if(sortedL1.get(j) == min) {\n                    sortedL1.remove(min);\n\
    \                    break;\n                }\n            }\n            for(int\
    \ k = i + 1; k < sortedL2.size(); k++) {\n                if(sortedL2.get(k) ==\
    \ min) {\n                    sortedL2.remove(min);\n                    break;\n\
    \                }\n            }\n        }\n        for(int i = 0; i <= sortedL1.size()\
    \ - 1; i++) {\n            for(int j = 1; j <= sortedL2.size(); j++) {\n     \
    \           if(sortedL1.get(i) < sortedL2.get(j)) {\n                    common.add(sortedL1.get(i));\n\
    \                    sortedL1.remove(i);\n                    break;\n       \
    \         } else if (sortedL1.get(i) > sortedL2.get(j)) {\n                  \
    \  common.add(sortedL2.get(j));\n                    sortedL2.remove(j);\n   \
    \                 break;\n                } else {\n                    common.add(sortedL1.get(i));\n\
    \                    sortedL1.remove(i);\n                    break;\n       \
    \         }\n            }\n        }\n        Collections.sort(common);\n   \
    \     return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt9sa7h9h.java:56: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<>();\n        Arrays.sort(l1);\n\
    \        Arrays.sort(l2);\n        for (Integer i1 : l1) {\n            for (Integer\
    \ i2 : l2) {\n                if (i1 == i2) {\n                    continue;\n\
    \                }\n                if (i1 > i2) {\n                    break;\n\
    \                }\n            }\n            if (result.contains(i1)) {\n  \
    \              continue;\n            }\n            result.add(i1);\n       \
    \ }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkpfeg3_z.java:16: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l1);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Integer> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmpkpfeg3_z.java:17: error: no suitable method found for sort(ArrayList<Integer>)\n\
    \        Arrays.sort(l2);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Integer> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayLis"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        int\
    \ n = Math.min(l1.size(), l2.size());\n        int i = 0, j = 0;\n\n        while\
    \ (i < n && j < n) {\n            if (l1.get(i) == l2.get(j)) {\n            \
    \    result.add(l1.get(i));\n                i++;\n                j++;\n    \
    \        } else if (l1.get(i) > l2.get(j)) {\n                j++;\n         \
    \   } else {\n                i++;\n            }\n        }\n        return result;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp164sb18x.java:31: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<>();\n        for (Integer\
    \ i : l1) {\n            for (Integer j : l2) {\n                if (i == j)\n\
    \                    list.add(i);\n            }\n        }\n        Collections.sort(list);\n\
    \        return list;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7sfvroqf.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n        // iterate\
    \ over each element of l1\n        for(Integer i : l1) {\n            // if element\
    \ in l2 is present in common then, break\n            boolean found = false;\n\
    \            for(Integer j: l2) {\n                if(i.equals(j)) {\n       \
    \             found = true;\n                    break;\n                }\n \
    \           }\n            // if element is not present in l2, add it to common\n\
    \            if(!found) {\n                common.add(i);\n            }\n   \
    \     }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_keuxzia.java:32: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<>();\n        while (l1.size()\
    \ > 0 || l2.size() > 0) {\n            if (l1.size() == 0) {\n               \
    \ if (l2.size() == 0) return ret;\n                l2.removeAll(l1);\n       \
    \         ret.addAll(l2);\n            } else if (l2.size() == 0) {\n        \
    \        l1.removeAll(l2);\n                ret.addAll(l1);\n            } else\
    \ if (l1.get(0) == l2.get(0)) {\n                ret.add(l1.get(0));\n       \
    \         l1.removeAll(l2);\n                l2.removeAll(l1);\n            }\
    \ else if (l1.get(0) > l2.get(0)) {\n                l2.removeAll(l1);\n     \
    \           ret.addAll(l2);\n            } else {\n                l1.removeAll(l2);\n\
    \                ret.addAll(l1);\n            }\n        }\n        return ret;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbb59rjv8.java:37: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Find unique elements in a sorted array.\n        ArrayList<Integer>\
    \ u1 = new ArrayList<>(l1);\n        u1.removeAll(l2);\n        // Find unique\
    \ elements in a sorted array.\n        ArrayList<Integer> u2 = new ArrayList<>(l2);\n\
    \        u2.removeAll(l1);\n        // Add them to the sorted array.\n       \
    \ u1.retainAll(u2);\n        // Return sorted unique common elements.\n      \
    \  return u1;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfjykuf1i.java:25: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l = new ArrayList<Integer>();\n        int n =\
    \ l1.size();\n        boolean done = false;\n        while (!done) {\n       \
    \     done = true;\n            int m = 0;\n            for (int i = 0; i < n\
    \ && m < n && !done; i++) {\n                if (l1.get(i) == l2.get(m)) {\n \
    \                   l.add(l1.get(i));\n                    l.remove(i);\n    \
    \                m = m;\n                } else {\n                    done =\
    \ false;\n                }\n            }\n        }\n        return l;\nreturn\
    \ new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcwb2fyam.java:32: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO: Add your code\n        ArrayList<Integer> n = new ArrayList<Integer>();\n\
    \        int i = 0;\n        while (l1.get(i) != l2.get(i)) {\n            n.add(l1.get(i));\n\
    \            i++;\n        }\n        return n;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpna6h930_.java:23: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> commonList = new ArrayList<Integer>();\n     \
    \   HashSet<Integer> hashSet1 = new HashSet<Integer>(l1);\n        HashSet<Integer>\
    \ hashSet2 = new HashSet<Integer>(l2);\n\n        for (Integer x : hashSet1) {\n\
    \            if (hashSet2.contains(x))\n                commonList.add(x);\n \
    \       }\n        return commonList;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3m1485mk.java:24: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<>();\n        HashMap<Integer,\
    \ Integer> commonValues = new HashMap<>();\n        for (Integer i : l1) {\n \
    \           if (!commonValues.containsKey(i)) {\n                common.add(i);\n\
    \                commonValues.put(i, 1);\n            }\n            else {\n\
    \                commonValues.put(i, commonValues.get(i) + 1);\n            }\n\
    \        }\n        for (Integer i : l2) {\n            if (!commonValues.containsKey(i))\
    \ {\n                common.add(i);\n                commonValues.put(i, 1);\n\
    \            }\n            else {\n                commonValues.put(i, commonValues.get(i)\
    \ + 1);\n            }\n        }\n        Set<Integer> commonValueSet = commonValues.entrySet().stream().map(e\
    \ -> e.getKey()).collect(Collectors.toSet());\n        Collections.sort(commonValueSet);\n\
    \        for (Integer i : commonValueSet) {\n            Integer value = commonValues.get(i);\n\
    \            while (common.size() > value && common.get(common.size() - 1) !=\
    \ i) {\n                common.remove(common.size() - 1);\n            }\n   \
    \     }\n        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn9aldjfn.java:36: error: no suitable method found for sort(Set<Integer>)\n\
    \        Collections.sort(commonValueSet);\n                   ^\n    method Collections.<T#1>sort(List<T#1>)\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; Set<Integer> cannot be converted to List<T#1>))\n    method Collections.<T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Comparable<? super T#1> declared in method\
    \ <T#1>sort(List<T#1>)\n    T#2 extends Object declared in method <T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashMap<Integer, Integer> m1 = new HashMap<>();\n        HashMap<Integer,\
    \ Integer> m2 = new HashMap<>();\n        for(int i : l1) {\n            m1.put(i,\
    \ m1.getOrDefault(i, 0) + 1);\n        }\n        for(int i : l2) {\n        \
    \    m2.put(i, m2.getOrDefault(i, 0) + 1);\n        }\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        for(Integer i : m1.keySet()) {\n      \
    \      Integer count = m1.get(i);\n            Integer count2 = m2.get(i);\n \
    \           while(count2 > 0) {\n                if(!result.contains(i)) {\n \
    \                   result.add(i);\n                    break;\n             \
    \   }\n                count--;\n                count2--;\n            }\n  \
    \      }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf1_k1e3z.java:37: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        for(int\
    \ i : l1) if (l2.contains(i)) common.add(new Integer(i));\n        return common;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp010t8xdp.java:18: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> common = new ArrayList<>();\n        Set<Integer> set1\
    \ = new HashSet<>(l1);\n        Set<Integer> set2 = new HashSet<>(l2);\n     \
    \   common.addAll(set1);\n        common.addAll(set2);\n        List<Integer>\
    \ result = new ArrayList<>(common);\n        result.sort(Comparator.naturalOrder());\n\
    \        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsktbovw5.java:22: error: incompatible types: List<Integer> cannot\
    \ be converted to ArrayList<Integer>\n        return result;\n               ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Use set here to reduce duplicated element.\n        // Using set()\
    \ will also save space in long list.\n        Set<Integer> set1 = new HashSet<Integer>(l1);\n\
    \        Set<Integer> set2 = new HashSet<Integer>(l2);\n        Set<Integer> commonSet\
    \ = new HashSet<Integer>(set1);\n        commonSet.addAll(set2);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        result.addAll(set1);\n        result.addAll(set2);\n\
    \        commonSet.retainAll(result);\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6enwfe8z.java:26: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        \n        ArrayList<Integer> result = new ArrayList<>();\n      \
    \  \n        // sort both lists\n        Collections.sort(l1);\n        Collections.sort(l2);\n\
    \        \n        // create new list with common elements\n        for (Integer\
    \ elem : l1) {\n            if (l2.contains(elem)) {\n                result.add(elem);\n\
    \            }\n        }\n        return result;\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpghnc7ftu.java:29: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        int n1 = l1.size(), n2 = l2.size();\n        ArrayList<Integer> common\
    \ = new ArrayList<Integer>();\n        for (int i = 0; i < n1; ++i) {\n      \
    \      int minIndex = 0;\n            boolean found = false;\n            for\
    \ (int j = 0; j < n2; ++j) {\n                if (l1.get(i) == l2.get(j)) {\n\
    \                    found = true;\n                    minIndex = j;\n      \
    \              break;\n                }\n            }\n            if (found)\
    \ {\n                common.add(((Comparable) l1.get(i)), (Comparable) l1.get(minIndex));\n\
    \                --n1;\n                n2 = n1 - 1;\n            }\n        }\n\
    \        return common;\nreturn new ArrayList<Integer>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdo4qrndf.java:28: error: no suitable method found for add(Comparable,Comparable)\n\
    \                common.add(((Comparable) l1.get(i)), (Comparable) l1.get(minIndex));\n\
    \                      ^\n    method List.add(int,Integer) is not applicable\n\
    \      (argument mismatch; Comparable cannot be converted to int)\n    method\
    \ AbstractList.add(int,Integer) is not applicable\n      (argument mismatch; Comparable\
    \ cannot be converted to int)\n    method ArrayList.add(int,Integer) is not applicable\n\
    \      (argument mismatch; Comparable cannot be converted to int)\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for(Integer\
    \ elem : l1) {\n            for(Integer elem2 : l2) {\n                if(elem==elem2)\n\
    \                    ret.add(elem);\n            }\n        }\n        return\
    \ ret;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpprcpag70.java:23: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> result = new ArrayList<>();\n        boolean first\
    \ = false;\n        for(int i = 0; i< l1.size(); i++){\n            boolean found\
    \ = false;\n            for (int j = 0; j< l2.size(); j++){\n                if(l1[i]\
    \ == l2[j]){\n                    result.add(l1[i]);\n                    found\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if(!found){\n                result.add(l1[i]);\n                first\
    \ = true;\n            }\n        }\n        if(first){\n            return result;\n\
    \        }\n        Collections.sort(result);\n        return result;\nreturn\
    \ new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ljhhcl1.java:20: error: array required, but ArrayList<Integer>\
    \ found\n                if(l1[i] == l2[j]){\n                     ^\n/tmp/tmp6ljhhcl1.java:20:\
    \ error: array required, but ArrayList<Integer> found\n                if(l1[i]\
    \ == l2[j]){\n                              ^\n/tmp/tmp6ljhhcl1.java:21: error:\
    \ array required, but ArrayList<Integer> found\n                    result.add(l1[i]);\n\
    \                                 ^\n/tmp/tmp6ljhhcl1.java:27: error: array required,\
    \ but ArrayList<Integer> found\n                result.add(l1[i]);\n         \
    \                    ^\n/tmp/tmp6ljhhcl1.java:32: error: incompatible types: List<Integer>\
    \ cannot be converted to ArrayList<Integer>\n            return result;\n    \
    \               ^\n/tmp/tmp6ljhhcl1.java:35: error: incompatible types: List<Integer>\
    \ cannot be converted to ArrayList<Integer>\n        return result;\n        \
    \       ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> set = new ArrayList<Integer>();\n        List<Integer>\
    \ l3 = new ArrayList<Integer>();\n        for (int i = 0; i < l1.size(); i++)\
    \ {\n            l3.add(l1.get(i));\n        }\n        for (int j = 0; j < l2.size();\
    \ j++) {\n            l3.add(l2.get(j));\n        }\n        for (int k = 0; k\
    \ < l3.size(); k++) {\n            int count = 0;\n            for (int i = 0;\
    \ i < l3.size(); i++) {\n                if (l3.get(i) == l3.get(k)) {\n     \
    \               count++;\n                }\n            }\n            if (count\
    \ == l3.size()) {\n                set.add(l3.get(k));\n            }\n      \
    \  }\n        return set;\nreturn new ArrayList<Integer>(Arrays.asList());\n \
    \   }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmk9scmr3.java:35: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> common = new HashSet<Integer>(l1);\n        for (Integer\
    \ i : l2)\n            if (common.contains(i))\n                common.remove(i);\n\
    \        return Lists.newArrayList(common);\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7wow_b3z.java:19: error: cannot find symbol\n        return Lists.newArrayList(common);\n\
    \               ^\n  symbol:   variable Lists\n  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        List<Integer> a1 = new ArrayList<>(l1);\n        List<Integer> a2\
    \ = new ArrayList<>(l2);\n        a1.removeAll(a2);\n        Collections.sort(a1);\n\
    \        ArrayList<Integer> res = new ArrayList<>(a1);\n        return res;\n\
    return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp529b2v6i.java:21: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Sort the lists before comparing.\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n\n        ArrayList<Integer> common = new ArrayList<>();\n\
    \n        // Loop through the lists.\n        for(int i = 0; i < l1.size(); i++)\
    \ {\n            int j;\n            for(j = i; j < l2.size(); j++) {\n      \
    \          if(l1.get(i) == l2.get(j)) {\n                    common.add(l1.get(i));\n\
    \                }\n            }\n        }\n\n        // Remove duplicates.\n\
    \        Collections.sort(common);\n        common.remove(0);\n\n        return\
    \ common;\nreturn new ArrayList<Integer>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpltvp8p6e.java:36: error: unreachable statement\nreturn new ArrayList<Integer>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError

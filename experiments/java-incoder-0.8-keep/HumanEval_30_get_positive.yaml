name: HumanEval_30_get_positive
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return only positive numbers in the list.\n    // >>> get_positive([-1,\
  \ 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5, 3, -5, 2, -3, 3,\
  \ 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public static ArrayList<Integer>\
  \ getPositive(ArrayList<Integer> l) {\n"
tests: "return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
  \ void main(String[] args) {\n    assert(getPositive((new ArrayList<Integer>(Arrays.asList((int)-1,\
  \ (int)-2, (int)4, (int)5, (int)6)))).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
  \ (int)5, (int)6)))));\n    assert(getPositive((new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)3, (int)-5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123, (int)1, (int)-10)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)2, (int)3, (int)3, (int)9,\
  \ (int)123, (int)1)))));\n    assert(getPositive((new ArrayList<Integer>(Arrays.asList((int)-1,\
  \ (int)-2)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(getPositive((new\
  \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
  \    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

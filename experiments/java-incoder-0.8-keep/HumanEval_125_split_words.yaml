name: HumanEval_125_split_words
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string of words, return a list of words split on\
  \ whitespace, if no whitespaces exists in the text you\n    // should split on commas\
  \ ',' if no commas exists you should return the number of lower-case letters with\
  \ odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') =\
  \ 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E [\"Hello\", \"\
  world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\", \"world!\"]\n\
  \    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__int\
  \ splitWords(String txt) {\n"
tests: "return new Union_ArrayList_String__int();\n    }\n    public static void main(String[]\
  \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
  Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
  \ Union_ArrayList_String__int(Arrays.asList((String)\"Hello\", (String)\"world!\"\
  )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"\
  Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world !\"\
  )).equals((new Union_ArrayList_String__int(Arrays.asList((String)\"Hello,Hello,world\"\
  , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__int(3))));\n\
  \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__int(2))));\n\
  \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__int(1))));\n\
  \    assert(splitWords((\"\")).equals((Union_ArrayList_String__int(0))));\n    }\n\
  \n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

name: HumanEval_83_starts_one_ends
language: r
prompt: "# Given a positive integer n, return the count of the numbers of n-digit\n\
  # positive integers that start or end with 1.\nstarts_one_ends <- function(n) {"
tests: "test_humaneval <- function() {\ncandidate <- starts_one_ends\n    if(!identical(candidate(1),\
  \ 1)){quit('no', 1)}\n    if(!identical(candidate(2), 18)){quit('no', 1)}\n    if(!identical(candidate(3),\
  \ 180)){quit('no', 1)}\n    if(!identical(candidate(4), 1800)){quit('no', 1)}\n\
  \    if(!identical(candidate(5), 18000)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  if (n == 1) {\n    return(10)\n  }\n  if (n == 2) {\n    return(19)\n\
    \  }\n  if (n == 3) {\n    return(27)\n  }\n  if (n == 4) {\n    return(36)\n\
    \  }\n  if (n == 5) {\n    return(45)\n  }\n  if (n == 6) {\n    return(54)\n\
    \  }\n  if (n == 7) {\n    return(63)\n  }\n  if (n == 8) {\n    return(72)\n\
    \  }\n  if (n == 9) {\n    return(81)\n  }\n  if (n == 10) {\n    return(90)\n\
    \  }\n  if (n == 11) {\n    return(99)\n  }\n  if (n == 12) {\n    return(108)\n\
    \  }\n  if (n == 13) {\n    return(117)\n  }\n  if (n == 14) {\n    return(126)\n\
    \  }\n  if (n == 15) {\n    return(135)\n  }\n  if (n == 16) {\n    return(144)\n\
    \  }\n  if (n == 17) {\n    return(153)\n  }\n  if (n == 18) {\n    return(162)\n\
    \  }\n  if (n == 19) {\n    return(171)\n  }\n  if (n == 20) {\n    return(180)\n\
    \  }\n  if (n == 21) {\n    return(189)\n  }\n  if (n == 22) {\n    return(198)\n\
    \  }\n  if (n == 23) {\n    return(207)\n  }\n  if (n == 24) {\n    return(216)\n\
    \  }\n  if (n == 25) {\n    return(225)\n  }\n  if (n == 26) {\n    return(234)\n\
    \  }\n  if (n == 27) {\n    return(243)\n  }\n  if (n == 28) {\n    return(252)\n\
    \  }\n  if (n == 29", "\n  # Your code here\n}\n", "\n  if (n == 1) {\n    return(2)\n\
    \  }\n  return(starts_one_ends(n - 1) + 9 * (10 ^ (n - 2)))\n}\n", "\n  if (n\
    \ == 1) {\n    return(2)\n  } else {\n    return(starts_one_ends(n - 1) + 9 *\
    \ 10^(n - 2))\n  }\n}\n", "\n  if (n == 1) {\n    return(2)\n  } else {\n    return(starts_one_ends(n\
    \ - 1) + 9 * 10 ^ (n - 2))\n  }\n}\n\nstarts_one_ends(1)\nstarts_one_ends(2)\n\
    starts_one_ends(3)\nstarts_one_ends(4)\nstarts_one_ends(5)\nstarts_one_ends(6)\n\
    starts_one_ends(7)\nstarts_one_ends(8)\nstarts_one_ends(9)\nstarts_one_ends(10)\n",
  "\n    if (n == 1) {\n        return(2)\n    }\n    if (n == 2) {\n        return(10)\n\
    \    }\n    return(starts_one_ends(n - 1) + starts_one_ends(n - 2))\n}\n", "\n\
    \  if (n == 1) {\n    return(2)\n  } else {\n    return(starts_one_ends(n - 1)\
    \ + 9 * 10 ^ (n - 2))\n  }\n}\n", "\n  if (n == 1) {\n    return(2)\n  }\n  else\
    \ {\n    return(10^(n-1) + 10^(n-2))\n  }\n}\n", "\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n == 2) {\n    return(4)\n  }\n  if (n == 3) {\n    return(10)\n \
    \ }\n  return(starts_one_ends(n - 1) + starts_one_ends(n - 2))\n}\n", "\n  if\
    \ (n == 1) {\n    return(2)\n  }\n  else {\n    return(9 * 10^(n-2) + starts_one_ends(n-1))\n\
    \  }\n}\n", "\n  if (n == 1) {\n    return(2)\n  }\n  if (n == 2) {\n    return(9)\n\
    \  }\n  return(starts_one_ends(n - 1) + starts_one_ends(n - 2))\n}\n", "\n  #\
    \ The number of n-digit numbers that start with 1 is 9 * 10^(n-1)\n  # The number\
    \ of n-digit numbers that end with 1 is 10^(n-1)\n  # The number of n-digit numbers\
    \ that start and end with 1 is 10^(n-2)\n  # The number of n-digit numbers that\
    \ start or end with 1 is\n  #   9 * 10^(n-1) + 10^(n-1) - 10^(n-2)\n  9 * 10^(n-1)\
    \ + 10^(n-1) - 10^(n-2)\n}\n", "\n  # Your code here\n}\n", "\n  if (n == 1) return(2)\n\
    \  if (n == 2) return(4)\n  return(starts_one_ends(n-1) + starts_one_ends(n-2))\n\
    }\n", "\n  # Your code here\n}\n", "\n  # The number of n-digit positive integers\
    \ that start with 1 is the same as\n  # the number of (n-1)-digit positive integers.\n\
    \  start_one <- starts_one_ends(n - 1)\n  # The number of n-digit positive integers\
    \ that end with 1 is the same as the\n  # number of (n-1)-digit positive integers\
    \ that start with 1.\n  end_one <- start_one\n  # The number of n-digit positive\
    \ integers that start or end with 1 is the\n  # sum of the number of n-digit positive\
    \ integers that start with 1 and the\n  # number of n-digit positive integers\
    \ that end with 1.\n  start_one + end_one\n}\n", "\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n == 2) {\n    return(9)\n  }\n  return(starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2))\n}\n", "\n    if (n == 1) {\n        return(2)\n    }\n    else {\n  \
    \      return(9 * 10^(n-2) + 2)\n    }\n}\n", "\n  if (n == 1) {\n    return(2)\n\
    \  }\n  else {\n    return(9 * 10^(n-2) + starts_one_ends(n-1))\n  }\n}\n\nstarts_one_ends(1)\n\
    starts_one_ends(2)\nstarts_one_ends(3)\nstarts_one_ends(4)\nstarts_one_ends(5)\n\
    starts_one_ends(6)\nstarts_one_ends(7)\nstarts_one_ends(8)\nstarts_one_ends(9)\n\
    starts_one_ends(10)\n", "\n  if (n == 1) {\n    return(2)\n  }\n  if (n == 2)\
    \ {\n    return(10)\n  }\n  return(starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_26_remove_duplicates
language: r
prompt: "# From a list of integers, remove all elements that occur more than once.\n\
  # Keep order of elements left the same as in the input.\n# >>> remove_duplicates(c(1,\
  \ 2, 3, 2, 4))\n# list(1, 3, 4)\nremove_duplicates <- function(numbers) {"
tests: "test_humaneval <- function() {\ncandidate <- remove_duplicates\n    if(!identical(candidate(c()),\
  \ list())){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4)), list(1, 2,\
  \ 3, 4))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 2, 4, 3, 5)), list(1,\
  \ 4, 5))){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  unique(numbers)\n}\n", "\n    # TODO: implement this function\n\
    \    return(numbers)\n}\n", "\n  return(numbers[!duplicated(numbers)])\n}\n",
  "\n  # TODO\n}\n", "\n  # TODO: implement this function\n  return(numbers)\n}\n",
  "\n  unique(numbers)\n}\n", "\n  # TODO: implement me\n  return(numbers)\n}\n",
  "\n  unique(numbers)\n}\n", "\n  # TODO: implement this function\n  # Hint: use\
    \ the function unique()\n  return(unique(numbers))\n}\n", "\n  # your code here\n\
    }\n", "\n  # TODO: implement this function\n  return(numbers)\n}\n", "\n  return(unique(numbers))\n\
    }\n", "\n  # TODO\n}\n", "\n  # TODO: Implement this function\n  return(numbers)\n\
    }\n", "\n  unique(numbers)\n}\n", "\n  return(unique(numbers))\n}\n", "\n  return(unique(numbers))\n\
    }\n", "\n  # TODO: implement me\n  return(numbers)\n}\n", "\n  return(unique(numbers))\n\
    }\n", "\n  # YOUR CODE HERE\n  return(numbers)\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

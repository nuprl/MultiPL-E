language: r
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n    if (n == 1) {\n        return(1)\n\
    \    } else if (n == 2) {\n        return(1)\n    } else {\n        return(fib(n-1)\
    \ + fib(n-2))\n    }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n\
    \    if(!identical(candidate(10), 55)){quit('no', 1)}\n    if(!identical(candidate(1),\
    \ 1)){quit('no', 1)}\n    if(!identical(candidate(8), 21)){quit('no', 1)}\n  \
    \  if(!identical(candidate(11), 89)){quit('no', 1)}\n    if(!identical(candidate(12),\
    \ 144)){quit('no', 1)}\n}\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n    if (n == 1) {\n        return(1)\n\
    \    } else if (n == 2) {\n        return(1)\n    } else {\n        return(fib(n-1)\
    \ + fib(n-2))\n    }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n\
    \    if(!identical(candidate(10), 55)){quit('no', 1)}\n    if(!identical(candidate(1),\
    \ 1)){quit('no', 1)}\n    if(!identical(candidate(8), 21)){quit('no', 1)}\n  \
    \  if(!identical(candidate(11), 89)){quit('no', 1)}\n    if(!identical(candidate(12),\
    \ 144)){quit('no', 1)}\n}\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n < 2) {\n    return(n)\n\
    \  } else {\n    return(fib(n - 1) + fib(n - 2))\n  }\n}\n\ntest_humaneval <-\
    \ function() {\ncandidate <- fib\n    if(!identical(candidate(10), 55)){quit('no',\
    \ 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n    if(!identical(candidate(8),\
    \ 21)){quit('no', 1)}\n    if(!identical(candidate(11), 89)){quit('no', 1)}\n\
    \    if(!identical(candidate(12), 144)){quit('no', 1)}\n}\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n    if (n == 1) {\n        return(1)\n\
    \    } else if (n == 2) {\n        return(1)\n    } else {\n        return(fib(n-1)\
    \ + fib(n-2))\n    }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n\
    \    if(!identical(candidate(10), 55)){quit('no', 1)}\n    if(!identical(candidate(1),\
    \ 1)){quit('no', 1)}\n    if(!identical(candidate(8), 21)){quit('no', 1)}\n  \
    \  if(!identical(candidate(11), 89)){quit('no', 1)}\n    if(!identical(candidate(12),\
    \ 144)){quit('no', 1)}\n}\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n    if (n <= 2) {\n        return(1)\n\
    \    } else {\n        return(fib(n-1) + fib(n-2))\n    }\n}\n\ntest_humaneval\
    \ <- function() {\ncandidate <- fib\n    if(!identical(candidate(10), 55)){quit('no',\
    \ 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n    if(!identical(candidate(8),\
    \ 21)){quit('no', 1)}\n    if(!identical(candidate(11), 89)){quit('no', 1)}\n\
    \    if(!identical(candidate(12), 144)){quit('no', 1)}\n}\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nfib <- function(n) {\n  if (n == 1) {\n    return(1)\n\
    \  } else if (n == 2) {\n    return(1)\n  } else {\n    return(fib(n-1) + fib(n-2))\n\
    \  }\n}\n\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
    \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n  \
    \  if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11),\
    \ 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n\
    }\ntest_humaneval()"
  status: OK
  stderr: b'During startup - Warning message:\nSetting LC_CTYPE failed, using "C"
    \n'
  stdout: b''

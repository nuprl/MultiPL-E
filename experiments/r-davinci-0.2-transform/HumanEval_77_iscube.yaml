name: HumanEval_77_iscube
language: r
prompt: "# Write a function that takes an integer a and returns True \n# if this ingeger\
  \ is a cube of some integer number.\n# Note: you may assume the input is always\
  \ valid.\n# Examples:\n# >>> iscube(1)\n# TRUE\n# >>> iscube(2)\n# FALSE\n# >>>\
  \ iscube(-1)\n# TRUE\n# >>> iscube(64)\n# TRUE\n# >>> iscube(0)\n# TRUE\n# >>> iscube(180)\n\
  # FALSE\niscube <- function(a) {"
tests: "test_humaneval <- function() {\ncandidate <- iscube\n    if(!identical(candidate(1),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate(2), FALSE)){quit('no', 1)}\n\
  \    if(!identical(candidate(-1), TRUE)){quit('no', 1)}\n    if(!identical(candidate(64),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate(180), FALSE)){quit('no', 1)}\n\
  \    if(!identical(candidate(1000), TRUE)){quit('no', 1)}\n    if(!identical(candidate(0),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate(1729), FALSE)){quit('no', 1)}\n\
  }\ntest_humaneval()"
completions: ["\n    if (a == 0) {\n        return(TRUE)\n    }\n    if (a < 0) {\n\
    \        a = -a\n    }\n    for (i in 1:a) {\n        if (i^3 == a) {\n      \
    \      return(TRUE)\n        }\n    }\n    return(FALSE)\n}\n", "\n  if (a ==\
    \ 0) {\n    return(TRUE)\n  }\n  if (a < 0) {\n    a = -a\n  }\n  for (i in 1:a)\
    \ {\n    if (i^3 == a) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n",
  "\n    if (a == 0) {\n        return(TRUE)\n    }\n    if (a < 0) {\n        a =\
    \ -a\n    }\n    for (i in 1:a) {\n        if (i^3 == a) {\n            return(TRUE)\n\
    \        }\n    }\n    return(FALSE)\n}\n", "\n  if (a == 0) {\n    return(TRUE)\n\
    \  }\n  if (a < 0) {\n    a = -a\n  }\n  for (i in 1:a) {\n    if (i^3 == a) {\n\
    \      return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n", "\n    if (a == 0) {\n\
    \        return(TRUE)\n    }\n    if (a < 0) {\n        a = -a\n    }\n    b <-\
    \ floor(exp(log(a)/3))\n    return(b^3 == a)\n}\n", "\n  if (a == 0) {\n    return(TRUE)\n\
    \  } else if (a < 0) {\n    return(iscube(-a))\n  } else {\n    return(a == round(a\
    \ ^ (1/3)))\n  }\n}\n", "\n    if (a == 0) {\n        return(TRUE)\n    }\n  \
    \  if (a < 0) {\n        a = -a\n    }\n    for (i in 1:a) {\n        if (i^3\
    \ == a) {\n            return(TRUE)\n        }\n    }\n    return(FALSE)\n}\n",
  "\n  if (a == 0) {\n    return(TRUE)\n  }\n  if (a < 0) {\n    a = -a\n  }\n  for\
    \ (i in 1:a) {\n    if (i^3 == a) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n\
    }\n", "\n  a == round(a^(1/3))^3\n}\n", "\n  if (a == 0) {\n    return(TRUE)\n\
    \  }\n  if (a < 0) {\n    a = -a\n  }\n  for (i in 1:a) {\n    if (i^3 == a) {\n\
    \      return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n", "\n    if (a == 0) {\n\
    \        return(TRUE)\n    }\n    if (a < 0) {\n        a = -a\n    }\n    for\
    \ (i in 1:a) {\n        if (i^3 == a) {\n            return(TRUE)\n        }\n\
    \    }\n    return(FALSE)\n}\n", "\n  if (a == 0) {\n    return(TRUE)\n  }\n \
    \ if (a < 0) {\n    a = -a\n  }\n  for (i in 1:a) {\n    if (i^3 == a) {\n   \
    \   return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n", "\n  if (a == 0) {\n    return(TRUE)\n\
    \  } else if (a < 0) {\n    a <- -a\n  }\n  for (i in 1:a) {\n    if (i^3 == a)\
    \ {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n", "\n    if (a == 0)\
    \ {\n        return(TRUE)\n    }\n    if (a < 0) {\n        a = -a\n    }\n  \
    \  for (i in 1:a) {\n        if (i^3 == a) {\n            return(TRUE)\n     \
    \   }\n    }\n    return(FALSE)\n}\n", "\n  if (a == 0) {\n    return(TRUE)\n\
    \  }\n  if (a < 0) {\n    a = -a\n  }\n  if (a == 1) {\n    return(TRUE)\n  }\n\
    \  for (i in 1:a) {\n    if (i^3 == a) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n\
    }\n", "\n  if (a == 0) {\n    return(TRUE)\n  } else if (a < 0) {\n    a <- -a\n\
    \  }\n  for (i in 1:a) {\n    if (i^3 == a) {\n      return(TRUE)\n    }\n  }\n\
    \  return(FALSE)\n}\n", "\n  if (a == 0) {\n    return(TRUE)\n  }\n  if (a < 0)\
    \ {\n    a = -a\n  }\n  for (i in 1:a) {\n    if (i^3 == a) {\n      return(TRUE)\n\
    \    }\n  }\n  return(FALSE)\n}\n", "\n  if (a == 0) {\n    return(TRUE)\n  }\n\
    \  if (a < 0) {\n    a = -a\n  }\n  for (i in 1:a) {\n    if (i^3 == a) {\n  \
    \    return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n", "\n  if (a == 0) {\n   \
    \ return(TRUE)\n  }\n  if (a < 0) {\n    a = -a\n  }\n  for (i in 1:a) {\n   \
    \ if (i^3 == a) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n}\n", "\n\
    \  if(a == 0) {\n    return(TRUE)\n  }\n  if(a < 0) {\n    a = -a\n  }\n  for(i\
    \ in 1:a) {\n    if(i^3 == a) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n\
    }\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_58_common
language: r
prompt: "# Return sorted unique common elements for two lists.\n# >>> common(c(1,\
  \ 4, 3, 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121))\n# list(1, 5, 653)\n# >>> common(c(5,\
  \ 3, 2, 8), c(3, 2))\n# list(2, 3)\ncommon <- function(l1, l2) {"
tests: "test_humaneval <- function() {\ncandidate <- common\n    if(!identical(candidate(c(1,\
  \ 4, 3, 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121)), list(1, 5, 653))){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(5, 3, 2, 8), c(3, 2)), list(2, 3))){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(4, 3, 2, 8), c(3, 2, 4)), list(2, 3, 4))){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(4, 3, 2, 8), c()), list())){quit('no', 1)}\n\
  }\ntest_humaneval()"
completions: ["\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  sort(unique(c(l1,\
    \ l2)))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    # YOUR CODE\
    \ HERE\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  intersect(l1,\
    \ l2)\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    intersect(l1, l2)\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(unique(sort(intersect(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  l1 <- sort(unique(l1))\n\
    \  l2 <- sort(unique(l2))\n  l <- c()\n  for (i in l1) {\n    if (i %in% l2) {\n\
    \      l <- c(l, i)\n    }\n  }\n  return(l)\n}\n", "\n  return(sort(unique(intersect(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(intersect(l1, l2))))\n}\n", "\n  intersect(l1,\
    \ l2)\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  unique(sort(intersect(l1, l2)))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(unique(sort(intersect(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    # Your code here\n    return(sort(unique(intersect(l1,\
    \ l2))))\n}\n", "\n  unique(sort(intersect(l1, l2)))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  # Your code\
    \ here\n  # return(list())\n  sort(unique(c(l1, l2)))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    sort(unique(c(l1,\
    \ l2)))\n}\n", "\n    return(sort(unique(intersect(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  l1 <- sort(unique(l1))\n  l2 <- sort(unique(l2))\n  l <-\
    \ c()\n  for (i in l1) {\n    if (i %in% l2) {\n      l <- c(l, i)\n    }\n  }\n\
    \  return(l)\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  intersect(l1, l2)\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    sort(unique(c(l1, l2)))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(intersect(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(unique(sort(intersect(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  intersect(l1, l2)\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(unique(sort(intersect(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    sort(unique(c(l1,\
    \ l2)))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(unique(sort(intersect(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_118_get_closest_vowel
language: r
prompt: "# You are given a word. Your task is to find the closest vowel that stands\
  \ between \n# two consonants from the right side of the word (case sensitive).\n\
  # Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
  # find any vowel met the above condition. \n# You may assume that the given string\
  \ contains English letter only.\n# Example:\n# >>> get_closest_vowel('yogurt')\n\
  # 'u'\n# >>> get_closest_vowel('FULL')\n# 'U'\n# >>> get_closest_vowel('quick')\n\
  # ''\n# >>> get_closest_vowel('ab')\n# ''\nget_closest_vowel <- function(word) {"
tests: "test_humaneval <- function() {\ncandidate <- get_closest_vowel\n    if(!identical(candidate('yogurt'),\
  \ 'u')){quit('no', 1)}\n    if(!identical(candidate('full'), 'u')){quit('no', 1)}\n\
  \    if(!identical(candidate('easy'), '')){quit('no', 1)}\n    if(!identical(candidate('eAsy'),\
  \ '')){quit('no', 1)}\n    if(!identical(candidate('ali'), '')){quit('no', 1)}\n\
  \    if(!identical(candidate('bad'), 'a')){quit('no', 1)}\n    if(!identical(candidate('most'),\
  \ 'o')){quit('no', 1)}\n    if(!identical(candidate('ab'), '')){quit('no', 1)}\n\
  \    if(!identical(candidate('ba'), '')){quit('no', 1)}\n    if(!identical(candidate('quick'),\
  \ '')){quit('no', 1)}\n    if(!identical(candidate('anime'), 'i')){quit('no', 1)}\n\
  \    if(!identical(candidate('Asia'), '')){quit('no', 1)}\n    if(!identical(candidate('Above'),\
  \ 'o')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  # Your code here\n}\n", "\n  # your code here\n}\n", "\n  # your\
    \ code here\n}\n", "\n  # YOUR CODE HERE\n  word <- strsplit(word, \"\")[[1]]\n\
    \  for (i in seq_along(word)) {\n    if (word[i] %in% c(\"a\", \"e\", \"i\", \"\
    o\", \"u\")) {\n      if (i == 1) {\n        return(\"\")\n      } else if (word[i\
    \ - 1] %in% c(\"a\", \"e\", \"i\", \"o\", \"u\")) {\n        return(\"\")\n  \
    \    } else if (i == length(word)) {\n        return(\"\")\n      } else if (word[i\
    \ + 1] %in% c(\"a\", \"e\", \"i\", \"o\", \"u\")) {\n        return(\"\")\n  \
    \    } else {\n        return(word[i])\n      }\n    }\n  }\n  return(\"\")\n\
    }\n", "\n  word <- strsplit(word, \"\")[[1]]\n  vowels <- c(\"a\", \"e\", \"i\"\
    , \"o\", \"u\")\n  for (i in seq_along(word)) {\n    if (word[i] %in% vowels)\
    \ {\n      if (i == 1) {\n        return(\"\")\n      } else if (word[i-1] %in%\
    \ vowels) {\n        return(\"\")\n      } else if (i == length(word)) {\n   \
    \     return(\"\")\n      } else if (word[i+1] %in% vowels) {\n        return(\"\
    \")\n      } else {\n        return(word[i])\n      }\n    }\n  }\n  return(\"\
    \")\n}\n", "\n  # your code here\n}\n", "\n  # YOUR CODE HERE\n}\n", "\n  # YOUR\
    \ CODE HERE\n  return(NULL)\n}\n", "\n    # YOUR CODE HERE\n    # return(word)\n\
    \    vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n    word <- strsplit(word,\
    \ \"\")[[1]]\n    for (i in 1:length(word)) {\n        if (word[i] %in% vowels)\
    \ {\n            if (i == 1) {\n                return(\"\")\n            } else\
    \ if (word[i-1] %in% vowels) {\n                return(\"\")\n            } else\
    \ {\n                return(word[i])\n            }\n        }\n    }\n    return(\"\
    \")\n}\n", "\n    # YOUR CODE HERE\n    return('')\n}\n ", "\n  # Your code here\n\
    }\n", "\n  # your code here\n}\n", "\n    # your code here\n}\n", "\n  # your\
    \ code here\n}\n", "\n  word <- strsplit(word, \"\")[[1]]\n  word <- rev(word)\n\
    \  for (i in 1:length(word)) {\n    if (word[i] %in% c(\"a\", \"e\", \"i\", \"\
    o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")) {\n      if (i == length(word))\
    \ {\n        return(\"\")\n      } else if (word[i+1] %in% c(\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\", \"B\", \"C\", \"D\", \"\
    F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"Q\", \"R\", \"\
    S\", \"T\", \"V\", \"W\", \"X\", \"Y\", \"Z\")) {\n        return(word[i])\n \
    \     }\n    }\n  }\n  return(\"\")\n}\n", "\n  # YOUR CODE HERE\n  vowels <-\
    \ c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  word <- strsplit(word, \"\")[[1]]\n\
    \  for (i in 1:(length(word)-1)) {\n    if (word[i] %in% vowels) {\n      if (!word[i+1]\
    \ %in% vowels) {\n        return(word[i])\n      }\n    }\n  }\n  return(\"\"\
    )\n}\n", "\n  # your code here\n}", "\n  vowels <- c('a', 'e', 'i', 'o', 'u')\n\
    \  for (i in seq_along(word)) {\n    if (word[i] %in% vowels) {\n      if (i ==\
    \ 1) {\n        return('')\n      } else if (word[i - 1] %in% vowels) {\n    \
    \    return('')\n      } else if (i == length(word)) {\n        return('')\n \
    \     } else if (word[i + 1] %in% vowels) {\n        return('')\n      } else\
    \ {\n        return(word[i])\n      }\n    }\n  }\n  return('')\n}\n", "\n  #\
    \ YOUR CODE HERE\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  word <-\
    \ strsplit(word, \"\")[[1]]\n  for (i in 1:(length(word)-1)) {\n    if (word[i]\
    \ %in% vowels && word[i+1] %in% vowels) {\n      return(word[i])\n    }\n  }\n\
    \  return(\"\")\n}\n", "\n  vowels <- c('a', 'e', 'i', 'o', 'u')\n  for (i in\
    \ seq_along(word)) {\n    if (word[i] %in% vowels) {\n      if (i == 1) {\n  \
    \      return('')\n      } else if (word[i - 1] %in% vowels) {\n        return('')\n\
    \      } else if (i == length(word)) {\n        return('')\n      } else if (word[i\
    \ + 1] %in% vowels) {\n        return('')\n      } else {\n        return(word[i])\n\
    \      }\n    }\n  }\n  return('')\n}\n", "\n  # your code here\n}\n", "\n  #\
    \ your code here\n}\n", "\n  # your code here\n}\n", "\n  # Your code here\n}\n",
  "\n  vowels <- c('a', 'e', 'i', 'o', 'u')\n  for (i in seq_along(word)) {\n    if\
    \ (word[i] %in% vowels) {\n      if (i == 1) {\n        return('')\n      } else\
    \ if (word[i - 1] %in% vowels) {\n        return('')\n      } else if (i == length(word))\
    \ {\n        return('')\n      } else if (word[i + 1] %in% vowels) {\n       \
    \ return('')\n      } else {\n        return(word[i])\n      }\n    }\n  }\n \
    \ return('')\n}\n", "\n  vowels <- c('a', 'e', 'i', 'o', 'u')\n  for (i in seq_along(word))\
    \ {\n    if (word[i] %in% vowels) {\n      if (i == 1) {\n        return('')\n\
    \      } else if (word[i - 1] %in% vowels) {\n        return('')\n      } else\
    \ if (i == length(word)) {\n        return('')\n      } else if (word[i + 1] %in%\
    \ vowels) {\n        return('')\n      } else {\n        return(word[i])\n   \
    \   }\n    }\n  }\n  return('')\n}\n", "\n  # your code here\n}\n", "\n  # YOUR\
    \ CODE HERE\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  word <- strsplit(word,\
    \ \"\")[[1]]\n  for (i in 1:length(word)) {\n    if (word[i] %in% vowels) {\n\
    \      if (i == 1) {\n        return(\"\")\n      } else if (word[i-1] %in% vowels)\
    \ {\n        return(\"\")\n      } else {\n        return(word[i])\n      }\n\
    \    }\n  }\n  return(\"\")\n}\n", "\n  # your code here\n}\n", "\n  # your code\
    \ here\n}\n", "\n  word <- strsplit(word, \"\")[[1]]\n  vowels <- c(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n  for (i in seq_along(word)) {\n    if (word[i] %in%\
    \ vowels) {\n      if (i == 1) {\n        return(word[i])\n      } else if (word[i-1]\
    \ %in% vowels) {\n        return(word[i])\n      }\n    }\n  }\n  return(\"\"\
    )\n}\n", "\n  # your code here\n}\n", "\n  # your code here\n}\n", "\n  # Your\
    \ code here\n}\n", "\n  # your code here\n}\n", "\n  # your code here\n}\n", "\n\
    \  # your code here\n}\n", "\n  # YOUR CODE HERE\n  vowels <- c(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\")\n  for (i in 1:(nchar(word)-1)) {\n    if (word[i] %in%\
    \ vowels && word[i+1] %in% vowels) {\n      return(word[i])\n    }\n  }\n  return(\"\
    \")\n}\n", "\n  # Your code here\n}\n", "\n  # YOUR CODE HERE\n  word <- strsplit(word,\
    \ \"\")[[1]]\n  for (i in seq_along(word)) {\n    if (word[i] %in% c(\"a\", \"\
    e\", \"i\", \"o\", \"u\")) {\n      if (i == 1) {\n        return(\"\")\n    \
    \  } else if (word[i - 1] %in% c(\"a\", \"e\", \"i\", \"o\", \"u\")) {\n     \
    \   return(\"\")\n      } else if (i == length(word)) {\n        return(\"\")\n\
    \      } else if (word[i + 1] %in% c(\"a\", \"e\", \"i\", \"o\", \"u\")) {\n \
    \       return(\"\")\n      } else {\n        return(word[i])\n      }\n    }\n\
    \  }\n  return(\"\")\n}\n", "\n  vowels <- c('a', 'e', 'i', 'o', 'u')\n  for (i\
    \ in seq_along(word)) {\n    if (word[i] %in% vowels) {\n      if (i == 1) {\n\
    \        return('')\n      } else if (word[i - 1] %in% vowels) {\n        return('')\n\
    \      } else if (i == length(word)) {\n        return('')\n      } else if (word[i\
    \ + 1] %in% vowels) {\n        return('')\n      } else {\n        return(word[i])\n\
    \      }\n    }\n  }\n  return('')\n}\n", "\n  # Your code here\n  vowels <- c(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n  for (i in 1:(nchar(word) - 1)) {\n    if (word[i]\
    \ %in% vowels && word[i + 1] %in% vowels) {\n      return(word[i])\n    }\n  }\n\
    \  return(\"\")\n}\n", "\n  # your code here\n}\n", "\n  # YOUR CODE HERE\n  word\
    \ <- strsplit(word, \"\")[[1]]\n  for (i in seq_along(word)) {\n    if (word[i]\
    \ %in% c(\"a\", \"e\", \"i\", \"o\", \"u\")) {\n      if (i == 1) {\n        return(\"\
    \")\n      } else if (word[i-1] %in% c(\"a\", \"e\", \"i\", \"o\", \"u\")) {\n\
    \        return(\"\")\n      } else if (i == length(word)) {\n        return(\"\
    \")\n      } else if (word[i+1] %in% c(\"a\", \"e\", \"i\", \"o\", \"u\")) {\n\
    \        return(\"\")\n      } else {\n        return(word[i])\n      }\n    }\n\
    \  }\n  return(\"\")\n}\n", "\n  # Your code here\n}\n", "\n  vowels <- c('a',\
    \ 'e', 'i', 'o', 'u')\n  for (i in seq_along(word)) {\n    if (word[i] %in% vowels)\
    \ {\n      if (i == 1) {\n        return('')\n      } else if (word[i-1] %in%\
    \ vowels) {\n        return('')\n      } else if (i == length(word)) {\n     \
    \   return('')\n      } else if (word[i+1] %in% vowels) {\n        return('')\n\
    \      } else {\n        return(word[i])\n      }\n    }\n  }\n  return('')\n\
    }\n", "\n  # your code here\n}\n", "\n  # YOUR CODE HERE\n  word <- strsplit(word,\
    \ \"\")[[1]]\n  for (i in (length(word)-1):1) {\n    if (word[i] %in% c(\"a\"\
    , \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")) {\n      if\
    \ (!(word[i+1] %in% c(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\",\
    \ \"O\", \"U\"))) {\n        return(word[i])\n      }\n    }\n  }\n  return(\"\
    \")\n}\n", "\n  # your code here\n}\n", "\n  # YOUR CODE HERE\n  vowels <- c(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n  word <- strsplit(word, \"\")[[1]]\n  for (i\
    \ in seq_along(word)) {\n    if (word[i] %in% vowels) {\n      if (i == 1) {\n\
    \        return(\"\")\n      } else if (word[i - 1] %in% vowels) {\n        return(\"\
    \")\n      } else if (i == length(word)) {\n        return(\"\")\n      } else\
    \ if (word[i + 1] %in% vowels) {\n        return(\"\")\n      } else {\n     \
    \   return(word[i])\n      }\n    }\n  }\n  return(\"\")\n}\n", "\n  # Your code\
    \ here\n}\n", "\n  # YOUR CODE HERE\n  word <- strsplit(word, \"\")[[1]]\n  for\
    \ (i in 1:length(word)) {\n    if (word[i] %in% c(\"a\", \"e\", \"i\", \"o\",\
    \ \"u\")) {\n      if (i == 1) {\n        return(word[i])\n      } else if (i\
    \ == length(word)) {\n        return(word[i-1])\n      } else if (word[i-1] %in%\
    \ c(\"a\", \"e\", \"i\", \"o\", \"u\")) {\n        return(word[i])\n      } else\
    \ if (word[i+1] %in% c(\"a\", \"e\", \"i\", \"o\", \"u\")) {\n        return(word[i])\n\
    \      } else {\n        return(\"\")\n      }\n    }\n  }\n  return(\"\")\n}\n",
  "\n  # Your code here\n  # You may use the following code to check if a character\
    \ is a vowel\n  # is.element(char, c('a', 'e', 'i', 'o', 'u'))\n}\n", "\n  vowels\
    \ <- c('a', 'e', 'i', 'o', 'u')\n  word <- strsplit(word, \"\")[[1]]\n  for (i\
    \ in 1:(length(word)-1)) {\n    if (word[i] %in% vowels && word[i+1] %in% vowels)\
    \ {\n      return(word[i])\n    }\n  }\n  return(\"\")\n}\n", "\n  # your code\
    \ here\n}\n", "\n  # your code here\n}\n", "\n  # your code here\n}\n", "\n  #\
    \ your code here\n}\n ", "\n  # your code here\n}\n", "\n  # YOUR CODE HERE\n\
    }\n", "\n  # Your code here\n}\n", "\n    # YOUR CODE HERE\n    word <- strsplit(word,\
    \ \"\")[[1]]\n    vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n    for (i in\
    \ seq_along(word)) {\n        if (word[i] %in% vowels) {\n            if (i ==\
    \ 1) {\n                return(\"\")\n            } else if (word[i-1] %in% vowels)\
    \ {\n                return(\"\")\n            } else if (i == length(word)) {\n\
    \                return(\"\")\n            } else if (word[i+1] %in% vowels) {\n\
    \                return(\"\")\n            } else {\n                return(word[i])\n\
    \            }\n        }\n    }\n    return(\"\")\n}\n", "\n  # YOUR CODE HERE\n\
    \  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  word <- strsplit(word, \"\
    \")[[1]]\n  for (i in seq_along(word)) {\n    if (word[i] %in% vowels) {\n   \
    \   if (i == 1) {\n        return(word[i])\n      } else if (word[i - 1] %in%\
    \ vowels) {\n        return(word[i])\n      }\n    }\n  }\n  return(\"\")\n}\n",
  "\n  # your code here\n}\n", "\n  # Your code here\n}\n", "\n  # your code here\n\
    }\n", "\n  # your code here\n}\n", "\n  # Your code here\n}\n", "\n  # your code\
    \ here\n}", "\n  # YOUR CODE HERE\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n  word <- strsplit(word, \"\")[[1]]\n  for (i in seq_along(word)) {\n  \
    \  if (word[i] %in% vowels) {\n      if (i == 1) {\n        return(\"\")\n   \
    \   } else if (word[i - 1] %in% vowels) {\n        return(\"\")\n      } else\
    \ if (i == length(word)) {\n        return(\"\")\n      } else if (word[i + 1]\
    \ %in% vowels) {\n        return(\"\")\n      } else {\n        return(word[i])\n\
    \      }\n    }\n  }\n  return(\"\")\n}\n", "\n  # Your code here\n}\n", "\n \
    \ # your code here\n}\n", "\n  # your code here\n}\n", "\n  # your code here\n\
    }\n", "\n  # Your code here\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n\
    \  for (i in 1:(nchar(word)-1)) {\n    if (word[i] %in% vowels & word[i+1] %in%\
    \ vowels) {\n      return(word[i])\n    }\n  }\n  return(\"\")\n}\n", "\n  # your\
    \ code here\n}\n", "\n  # your code here\n}\n", "\n  vowels <- c('a', 'e', 'i',\
    \ 'o', 'u')\n  for (i in seq_along(word)) {\n    if (word[i] %in% vowels) {\n\
    \      if (i == 1) {\n        return('')\n      } else if (word[i - 1] %in% vowels)\
    \ {\n        return('')\n      } else if (i == length(word)) {\n        return('')\n\
    \      } else if (word[i + 1] %in% vowels) {\n        return('')\n      } else\
    \ {\n        return(word[i])\n      }\n    }\n  }\n  return('')\n}\n", "\n   \
    \ vowels <- c('a', 'e', 'i', 'o', 'u')\n    for (i in seq_along(word)) {\n   \
    \     if (word[i] %in% vowels) {\n            if (i == 1) {\n                return('')\n\
    \            } else if (word[i-1] %in% vowels) {\n                return('')\n\
    \            } else if (i == length(word)) {\n                return('')\n   \
    \         } else if (word[i+1] %in% vowels) {\n                return('')\n  \
    \          } else {\n                return(word[i])\n            }\n        }\n\
    \    }\n    return('')\n}\n", "\n  # YOUR CODE HERE\n  vowels <- c(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n  for (i in 1:(nchar(word)-1)) {\n    if (word[i] %in%\
    \ vowels && word[i+1] %in% vowels) {\n      return(word[i])\n    }\n  }\n  return(\"\
    \")\n}\n", "\n  # your code here\n}\n", "\n  # your code here\n}\n", "\n  # your\
    \ code here\n}\n", "\n    # Your code here\n}\n", "\n  # your code here\n}\n",
  "\n  vowels <- c('a', 'e', 'i', 'o', 'u')\n  for (i in seq_along(word)) {\n    if\
    \ (word[i] %in% vowels) {\n      if (i == 1) {\n        return('')\n      } else\
    \ if (word[i - 1] %in% vowels) {\n        return('')\n      } else if (i == length(word))\
    \ {\n        return('')\n      } else if (word[i + 1] %in% vowels) {\n       \
    \ return('')\n      } else {\n        return(word[i])\n      }\n    }\n  }\n \
    \ return('')\n}\n", "\n  # your code here\n}\n", "\n  # Your code here\n}\n",
  "\n  # your code here\n}\n", "\n  # YOUR CODE HERE\n  vowels <- c(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\")\n  word <- strsplit(word, \"\")[[1]]\n  for (i in (length(word)\
    \ - 1):1) {\n    if (word[i] %in% vowels) {\n      if (!(word[i + 1] %in% vowels))\
    \ {\n        return(word[i])\n      }\n    }\n  }\n  return(\"\")\n}\n", "\n \
    \ # your code here\n}\n", "\n  # your code here\n}\n", "\n  word <- strsplit(word,\
    \ \"\")[[1]]\n  for (i in seq_along(word)) {\n    if (is.vowel(word[i])) {\n \
    \     if (i == 1) {\n        if (is.consonant(word[i + 1])) {\n          return(word[i])\n\
    \        }\n      } else if (i == length(word)) {\n        if (is.consonant(word[i\
    \ - 1])) {\n          return(word[i])\n        }\n      } else {\n        if (is.consonant(word[i\
    \ - 1]) & is.consonant(word[i + 1])) {\n          return(word[i])\n        }\n\
    \      }\n    }\n  }\n  return(\"\")\n}\n", "\n  # your code here\n}\n", "\n \
    \ # your code here\n}\n", "\n  # your code here\n}\n", "\n  # your code here\n\
    }\n", "\n  # Your code here\n}\n", "\n  # YOUR CODE HERE\n  # You may assume that\
    \ the given string contains English letter only.\n  # Example:\n  # >>> get_closest_vowel('yogurt')\n\
    \  # 'u'\n  # >>> get_closest_vowel('FULL')\n  # 'U'\n  # >>> get_closest_vowel('quick')\n\
    \  # ''\n  # >>> get_closest_vowel('ab')\n  # ''\n  # >>> get_closest_vowel('yogurt')\n\
    \  # 'u'\n  # >>> get_closest_vowel('FULL')\n  # 'U'\n  # >>> get_closest_vowel('quick')\n\
    \  # ''\n  # >>> get_closest_vowel('ab')\n  # ''\n  # >>> get_closest_vowel('yogurt')\n\
    \  # 'u'\n  # >>> get_closest_vowel('FULL')\n  # 'U'\n  # >>> get_closest_vowel('quick')\n\
    \  # ''\n  # >>> get_closest_vowel('ab')\n  # ''\n  # >>> get_closest_vowel('yogurt')\n\
    \  # 'u'\n  # >>> get_closest_vowel('FULL')\n  # 'U'\n  # >>> get_closest_vowel('quick')\n\
    \  # ''\n  # >>> get_closest_vowel('ab')\n  # ''\n  # >>> get_closest_vowel('yogurt')\n\
    \  # 'u'\n  # >>> get_closest_vowel('FULL')\n  # 'U'\n  # >>> get_closest_vowel('quick')\n\
    \  # ''\n  # >>> get_closest_vowel('ab')\n  # ''\n  # >>> get_closest_vowel('yogurt')\n\
    \  # 'u'\n  # >>> get_closest_vowel('FULL')\n  # 'U'\n  #", "\n  # your code here\n\
    }\n", "\n  # your code here\n}\n", "\n    vowels <- c('a', 'e', 'i', 'o', 'u')\n\
    \    for (i in seq_along(word)) {\n        if (word[i] %in% vowels) {\n      \
    \      if (i == 1) {\n                return('')\n            } else if (word[i\
    \ - 1] %in% vowels) {\n                return('')\n            } else if (i ==\
    \ length(word)) {\n                return('')\n            } else if (word[i +\
    \ 1] %in% vowels) {\n                return('')\n            } else {\n      \
    \          return(word[i])\n            }\n        }\n    }\n    return('')\n\
    }\n", "\n  # your code here\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n\
    \  for (i in seq(nchar(word), 1, -1)) {\n    if (word[i] %in% vowels) {\n    \
    \  if (i == nchar(word)) {\n        return(\"\")\n      } else if (word[i + 1]\
    \ %in% vowels) {\n        return(\"\")\n      } else {\n        return(word[i])\n\
    \      }\n    }\n  }\n  return(\"\")\n}\n", "\n  # your code here\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_108_count_nums
language: r
prompt: "# Write a function count_nums which takes an array of integers and returns\n\
  # the number of elements which has a sum of digits > 0.\n# If a number is negative,\
  \ then its first signed digit will be negative:\n# e.g. -123 has signed digits -1,\
  \ 2, and 3.\n# >>> count_nums(c())\n# 0\n# >>> count_nums(c(-1, 11, -11))\n# 1\n\
  # >>> count_nums(c(1, 1, 2))\n# 3\ncount_nums <- function(arr) {"
tests: "test_humaneval <- function() {\ncandidate <- count_nums\n    if(!identical(candidate(c()),\
  \ 0)){quit('no', 1)}\n    if(!identical(candidate(c(-1, -2, 0)), 0)){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(1, 1, 2, -2, 3, 4, 5)), 6)){quit('no', 1)}\n\
  \    if(!identical(candidate(c(1, 6, 9, -6, 0, 1, 5)), 5)){quit('no', 1)}\n    if(!identical(candidate(c(1,\
  \ 100, 98, -7, 1, -1)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(12, 23,\
  \ 34, -45, -56, 0)), 5)){quit('no', 1)}\n    if(!identical(candidate(c(0, 1)), 1)){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(1)), 1)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n    # YOUR CODE HERE\n    count = 0\n    for (i in arr) {\n     \
    \   if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n  \
    \          count = count + 1\n        }\n    }\n    return(count)\n}\n", "\n \
    \   count <- 0\n    for (i in arr) {\n        if (i < 0) {\n            i <- i\
    \ * -1\n        }\n        sum <- 0\n        while (i > 0) {\n            sum\
    \ <- sum + i %% 10\n            i <- i %/% 10\n        }\n        if (sum > 0)\
    \ {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
  "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  sum(sapply(arr, function(x) {\n    sum(abs(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]]))) > 0\n  }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n  \
    \      if (sum(abs(as.integer(strsplit(as.character(i), split = \"\")[[1]])))\
    \ > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n \
    \   }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i\
    \ <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n\
    \  return(count)\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n\
    \    if (i < 0) {\n      i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n \
    \     sum <- sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n \
    \     count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) {\n    if (x < 0) {\n      x <- -x\n    }\n    sum(as.integer(unlist(strsplit(as.character(x),\
    \ split = \"\"))))\n  }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n   \
    \     if (i < 0) {\n            i <- -i\n        }\n        while (i > 0) {\n\
    \            count <- count + (i %% 10)\n            i <- i %/% 10\n        }\n\
    \    }\n    count\n}\n", "\n  sum(sapply(arr, function(x) {\n    if (x < 0) {\n\
    \      x <- x * -1\n    }\n    sum(as.integer(strsplit(as.character(x), split\
    \ = \"\")[[1]]))\n  }))\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.numeric(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) {\n    sum(abs(x)) > 0\n  }))\n}\n", "\n\
    \    # YOUR CODE HERE\n    count = 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count = count + 1\n        }\n    }\n    return(count)\n\
    }\n ", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (i < 0)\
    \ {\n      i = -i\n    }\n    sum = 0\n    while (i > 0) {\n      sum = sum +\
    \ i %% 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n      count = count\
    \ + 1\n    }\n  }\n  return(count)\n}\n", "\n    sum(sapply(arr, function(x) {\n\
    \        if (x < 0) {\n            x = -x\n        }\n        sum(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]]))\n    }))\n}\n", "\n  sum(sapply(arr, function(x) {\n    if (x <\
    \ 0) {\n      x <- -x\n    }\n    sum(as.integer(strsplit(as.character(x), \"\"\
    )[[1]]))\n  }))\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) {\n    sum(abs(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]])))\n  }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n      \
    \  if (i < 0) {\n            i <- -i\n        }\n        sum <- 0\n        while\
    \ (i > 0) {\n            sum <- sum + i %% 10\n            i <- i %/% 10\n   \
    \     }\n        if (sum > 0) {\n            count <- count + 1\n        }\n \
    \   }\n    return(count)\n}\n", "\n    count <- 0\n    for (i in arr) {\n    \
    \    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n \
    \           count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n\
    \  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count\
    \ <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr, function(x)\
    \ sum(abs(x)) > 0))\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if\
    \ (sum(abs(i)) > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (i < 0) {\n        \
    \    i <- -i\n        }\n        sum <- 0\n        while (i > 0) {\n         \
    \   sum <- sum + i %% 10\n            i <- i %/% 10\n        }\n        if (sum\
    \ > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (i < 0) {\n        \
    \    i <- -i\n        }\n        sum <- 0\n        while (i > 0) {\n         \
    \   sum <- sum + i %% 10\n            i <- i %/% 10\n        }\n        if (sum\
    \ > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count\
    \ <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n  count\
    \ = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(digits(i))) > 0) {\n\
    \      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n    count <-\
    \ 0\n    for (i in arr) {\n        if (i < 0) {\n            i <- -i\n       \
    \ }\n        sum <- 0\n        while (i > 0) {\n            sum <- sum + i %%\
    \ 10\n            i <- i %/% 10\n        }\n        if (sum > 0) {\n         \
    \   count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n  # YOUR\
    \ CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n    sum(sapply(arr, function(x) {\n        if (x < 0)\
    \ {\n            return(abs(x) %% 10)\n        } else {\n            return(x\
    \ %% 10)\n        }\n    }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n\
    \        if (i < 0) {\n            i <- -i\n        }\n        sum <- 0\n    \
    \    while (i > 0) {\n            sum <- sum + i %% 10\n            i <- i %/%\
    \ 10\n        }\n        if (sum > 0) {\n            count <- count + 1\n    \
    \    }\n    }\n    return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n\
    \    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n \
    \     count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE\
    \ HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n  \
    \  }\n    while (i > 0) {\n      count <- count + (i %% 10)\n      i <- i %/%\
    \ 10\n    }\n  }\n  return(count)\n}\n", "\n    count <- 0\n    for (i in arr)\
    \ {\n        if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) >\
    \ 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (i < 0) {\n\
    \      i = i * -1\n    }\n    if (i == 0) {\n      count = count + 1\n    }\n\
    \    while (i > 0) {\n      count = count + (i %% 10)\n      i = i %/% 10\n  \
    \  }\n  }\n  return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if\
    \ (sum(abs(i)) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n    # YOUR CODE HERE\n    count = 0\n    for (i in arr)\
    \ {\n        if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) >\
    \ 0) {\n            count = count + 1\n        }\n    }\n    return(count)\n}",
  "\n  sum(sapply(arr, function(x) {\n    sum(abs(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]]))) > 0\n  }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n  \
    \      if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n\
    \            count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n\
    \    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n\
    \    if (i < 0) {\n      i <- -i\n    }\n    while (i > 0) {\n      count <- count\
    \ + (i %% 10)\n      i <- i %/% 10\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) {\n    sum(abs(as.integer(strsplit(as.character(x), \"\")[[1]])))\n\
    \  }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n\
    \    if (i < 0) {\n      i = -i\n    }\n    sum = 0\n    while (i > 0) {\n   \
    \   sum = sum + i %% 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n     \
    \ count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n    sum(abs(arr) >\
    \ 0)\n}\n", "\n    sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n  \
    \  # your code here\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if\
    \ (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n       \
    \     count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n    sum(sapply(arr,\
    \ function(x) {\n        sum(abs(as.integer(strsplit(as.character(x), \"\")[[1]])))\
    \ > 0\n    }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  sum(sapply(arr, function(x) {\n    if (x < 0) {\n\
    \      x <- -x\n    }\n    sum(as.integer(strsplit(as.character(x), \"\")[[1]]))\n\
    \  }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(i))\
    \ > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (i < 0) {\n\
    \      i = -i\n    }\n    while (i > 0) {\n      count = count + (i %% 10)\n \
    \     i = i %/% 10\n    }\n  }\n  return(count)\n}\n", "\n    count <- 0\n   \
    \ for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i), \"\
    \")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n    # YOUR\
    \ CODE HERE\n    count = 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count = count + 1\n        }\n    }\n    return(count)\n\
    }\n ", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) {\n    if (x < 0) {\n      x <- -x\n  \
    \  }\n    sum(as.integer(strsplit(as.character(x), \"\")[[1]]))\n  }))\n}\n",
  "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(i)) > 0) {\n      \
    \      count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(as.integer(strsplit(as.character(x), \"\")[[1]]))) > 0))\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (i < 0) {\n        \
    \    i <- -i\n        }\n        sum <- 0\n        while (i > 0) {\n         \
    \   sum <- sum + i %% 10\n            i <- i %/% 10\n        }\n        if (sum\
    \ > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(digits(i)))\
    \ > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n   \
    \ # YOUR CODE HERE\n    count = 0\n    for (i in arr) {\n        if (i < 0) {\n\
    \            i = -i\n        }\n        sum = 0\n        while (i > 0) {\n   \
    \         sum = sum + i %% 10\n            i = i %/% 10\n        }\n        if\
    \ (sum > 0) {\n            count = count + 1\n        }\n    }\n    return(count)\n\
    }\n ", "\n  sum(sapply(arr, function(x) {\n    sum(abs(x))\n  }))\n}\n", "\n \
    \ count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- i * -1\n    }\n\
    \    while (i > 0) {\n      count <- count + (i %% 10)\n      i <- i %/% 10\n\
    \    }\n  }\n  count\n}\n", "\n  sum(sapply(arr, function(x) {\n    if (x < 0)\
    \ {\n      x <- -x\n    }\n    sum(as.integer(strsplit(as.character(x), \"\")[[1]]))\n\
    \  }))\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n    count <- 0\n    for (i in arr) {\n\
    \        if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n\
    \            count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n\
    \    sum(sapply(arr, function(x) {\n        if (x < 0) {\n            x <- -x\n\
    \        }\n        sum(as.integer(strsplit(as.character(x), \"\")[[1]]))\n  \
    \  }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if (i < 0) {\n\
    \            i <- -i\n        }\n        sum <- 0\n        while (i > 0) {\n \
    \           sum <- sum + i %% 10\n            i <- i %/% 10\n        }\n     \
    \   if (sum > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n \
    \   }\n    while (i > 0) {\n      count <- count + (i %% 10)\n      i <- i %/%\
    \ 10\n    }\n  }\n  return(count)\n}\n", "\n    count <- 0\n    for (i in arr)\
    \ {\n        if (i < 0) {\n            i <- -i\n        }\n        sum <- 0\n\
    \        while (i > 0) {\n            sum <- sum + i %% 10\n            i <- i\
    \ %/% 10\n        }\n        if (sum > 0) {\n            count <- count + 1\n\
    \        }\n    }\n    return(count)\n}\n", "\n    count <- 0\n    for (i in arr)\
    \ {\n        if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) >\
    \ 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) {\n    sum(abs(x)) > 0\n  }))\n}\n", "\n\
    \    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n\
    \      i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i\
    \ %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count\
    \ + 1\n    }\n  }\n  return(count)\n}\n", "\n    sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if\
    \ (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n      count\
    \ = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr, function(x)\
    \ {\n    sum(abs(x)) > 0\n  }))\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i\
    \ <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n\
    \      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n  \
    \  }\n  }\n  return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if\
    \ (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n      count\
    \ <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr, function(x)\
    \ {\n    sum(abs(x))\n  }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n \
    \       if (i < 0) {\n            i <- -i\n        }\n        sum <- 0\n     \
    \   while (i > 0) {\n            sum <- sum + i %% 10\n            i <- i %/%\
    \ 10\n        }\n        if (sum > 0) {\n            count <- count + 1\n    \
    \    }\n    }\n    return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n\
    \    if (i < 0) {\n      i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n \
    \     sum <- sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n \
    \     count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n    sum(sapply(arr, function(x) sum(abs(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]]))) > 0))\n}\n", "\n    # YOUR CODE HERE\n    count = 0\n    for (i\
    \ in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]])))\
    \ > 0) {\n            count = count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(i)) > 0) {\n\
    \            count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n\
    \  count <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count <-\
    \ count + 1\n    }\n  }\n  return(count)\n}\n", "\n    count <- 0\n    for (i\
    \ in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]])))\
    \ > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n  sum(sapply(arr,\
    \ function(x) {\n    if (x < 0) {\n      x <- -x\n    }\n    sum(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]]))\n  }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n       \
    \ if (i < 0) {\n            i <- -i\n        }\n        sum <- 0\n        while\
    \ (i > 0) {\n            sum <- sum + i %% 10\n            i <- i %/% 10\n   \
    \     }\n        if (sum > 0) {\n            count <- count + 1\n        }\n \
    \   }\n    return(count)\n}\n", "\n    sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  sum(sapply(arr, function(x) {\n    sum(abs(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]])))\n  }))\n}\n", "\n    count <- 0\n    for (i in arr) {\n      \
    \  if (i < 0) {\n            i <- -i\n        }\n        sum <- 0\n        while\
    \ (i > 0) {\n            sum <- sum + i %% 10\n            i <- i %/% 10\n   \
    \     }\n        if (sum > 0) {\n            count <- count + 1\n        }\n \
    \   }\n    return(count)\n}\n", "\n  sum(sapply(arr, function(x) {\n    if (x\
    \ < 0) {\n      x <- -x\n    }\n    sum(as.integer(strsplit(as.character(x), \"\
    \")[[1]]))\n  }))\n}\n", "\n    sum(sapply(arr, function(x) {\n        if (x <\
    \ 0) {\n            x <- -x\n        }\n        sum(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]]))\n    }))\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (i\
    \ < 0) {\n      i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <-\
    \ sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <-\
    \ count + 1\n    }\n  }\n  return(count)\n}\n", "\n  count <- 0\n  for (i in arr)\
    \ {\n    if (i < 0) {\n      i <- -i\n    }\n    while (i > 0) {\n      count\
    \ <- count + (i %% 10)\n      i <- i %/% 10\n    }\n  }\n  return(count)\n}\n",
  "\n  sum(sapply(arr, function(x) {\n    x <- abs(x)\n    sum(x %% 10^(1:floor(log10(x))))\n\
    \  }))\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- i * -1\n\
    \    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i\
    \ <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n\
    \  return(count)\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if (i\
    \ < 0) {\n            i <- -i\n        }\n        sum <- 0\n        while (i >\
    \ 0) {\n            sum <- sum + i %% 10\n            i <- i %/% 10\n        }\n\
    \        if (sum > 0) {\n            count <- count + 1\n        }\n    }\n  \
    \  return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) {\n    if (x < 0) {\n      x <- -x\n  \
    \  }\n    sum(as.integer(strsplit(as.character(x), \"\")[[1]]))\n  }))\n}\n",
  "\n  sum(sapply(arr, function(x) {\n    if (x < 0) {\n      x <- -x\n    }\n   \
    \ sum(as.integer(strsplit(as.character(x), \"\")[[1]]))\n  }))\n}\n", "\n    count\
    \ <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  sum(sapply(arr, function(x) {\n    sum(abs(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]])))\n  }))\n}\n", "\n  sum(sapply(arr, function(x) {\n    if (x <\
    \ 0) {\n      x <- -x\n    }\n    sum(as.numeric(unlist(strsplit(as.character(x),\
    \ \"\"))))\n  }))\n}\n", "\n    # YOUR CODE HERE\n    count = 0\n    for (i in\
    \ arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]])))\
    \ > 0) {\n            count = count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(i)) > 0) {\n\
    \            count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n\
    \  count <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count <-\
    \ count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n  count\
    \ = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ split = \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (i < 0) {\n\
    \      i = -i\n    }\n    sum = 0\n    while (i > 0) {\n      sum = sum + i %%\
    \ 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n      count = count + 1\n\
    \    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n\
    \      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE\
    \ HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) {\n    if (x < 0) {\n      x <- -x\n  \
    \  }\n    sum(as.integer(strsplit(as.character(x), \"\")[[1]]))\n  }))\n}\n",
  "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n    sum(sapply(arr, function(x) {\n        if (x < 0) {\n           \
    \ return(sum(as.integer(substr(x, 2, nchar(x)))))\n        } else {\n        \
    \    return(sum(as.integer(substr(x, 1, nchar(x)))))\n        }\n    }))\n}\n",
  "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n  # YOUR CODE\
    \ HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (i < 0) {\n        \
    \    i <- -i\n        }\n        sum <- 0\n        while (i > 0) {\n         \
    \   sum <- sum + i %% 10\n            i <- i %/% 10\n        }\n        if (sum\
    \ > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n    # YOUR CODE HERE\n    count = 0\n    for (i in arr)\
    \ {\n        if (i < 0) {\n            i = -i\n        }\n        sum = 0\n  \
    \      while (i > 0) {\n            sum = sum + i %% 10\n            i = i %/%\
    \ 10\n        }\n        if (sum > 0) {\n            count = count + 1\n     \
    \   }\n    }\n    return(count)\n}\n", "\n  sum(sapply(arr, function(x) {\n  \
    \  sum(abs(as.integer(strsplit(as.character(x), \"\")[[1]])))\n  }))\n}\n", "\n\
    \    count <- 0\n    for (i in arr) {\n        if (i < 0) {\n            i <-\
    \ -i\n        }\n        sum <- 0\n        while (i > 0) {\n            sum <-\
    \ sum + i %% 10\n            i <- i %/% 10\n        }\n        if (sum > 0) {\n\
    \            count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n\
    \    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n\
    \    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n \
    \     count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n    sum(sapply(arr,\
    \ function(x) {\n        if (x < 0) {\n            x <- -x\n        }\n      \
    \  sum(as.integer(strsplit(as.character(x), \"\")[[1]]))\n    }))\n}\n", "\n \
    \   count <- 0\n    for (i in arr) {\n        if (i < 0) {\n            i <- -i\n\
    \        }\n        sum <- 0\n        while (i > 0) {\n            sum <- sum\
    \ + i %% 10\n            i <- i %/% 10\n        }\n        if (sum > 0) {\n  \
    \          count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n\
    \  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n  \
    \  sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i <- i %/%\
    \ 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n    # YOUR CODE HERE\n    count = 0\n    for (i in arr) {\n        if\
    \ (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n       \
    \     count = count + 1\n        }\n    }\n    return(count)\n}\n", "\n    count\
    \ <- 0\n    for (i in arr) {\n        if (sum(abs(digits(i))) > 0) {\n       \
    \     count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n    #\
    \ YOUR CODE HERE\n    count = 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count = count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (i < 0) {\n        \
    \    i <- -i\n        }\n        sum <- 0\n        while (i > 0) {\n         \
    \   sum <- sum + i %% 10\n            i <- i %/% 10\n        }\n        if (sum\
    \ > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n    count <- 0\n    for (i in 1:length(arr)) {\n   \
    \     if (sum(abs(as.integer(strsplit(as.character(arr[i]), \"\")[[1]]))) > 0)\
    \ {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\n",
  "\n    sum(sapply(arr, function(x) {\n        sum(abs(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]])))\n    }))\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in\
    \ arr) {\n    if (i < 0) {\n      i = -i\n    }\n    sum = 0\n    while (i > 0)\
    \ {\n      sum = sum + i %% 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n\
    \      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n    sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n  count <- 0\n  for (i in arr) {\n \
    \   if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n  \
    \    count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n\
    \  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n \
    \   }\n    while (i > 0) {\n      count <- count + (i %% 10)\n      i <- i %/%\
    \ 10\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr, function(x) {\n\
    \    if (x < 0) {\n      x <- -x\n    }\n    sum(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]]))\n  }))\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n\
    }\n", "\n  sum(sapply(arr, function(x) {\n    sum(abs(x)) > 0\n  }))\n}\n", "\n\
    \    count <- 0\n    for (i in arr) {\n        if (i < 0) {\n            i <-\
    \ -i\n        }\n        sum <- 0\n        while (i > 0) {\n            sum <-\
    \ sum + i %% 10\n            i <- i %/% 10\n        }\n        if (sum > 0) {\n\
    \            count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n\
    \  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n    sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n    count\
    \ <- 0\n    for (i in arr) {\n        if (i < 0) {\n            i <- -i\n    \
    \    }\n        sum <- 0\n        while (i > 0) {\n            sum <- sum + i\
    \ %% 10\n            i <- i %/% 10\n        }\n        if (sum > 0) {\n      \
    \      count <- count + 1\n        }\n    }\n    return(count)\n}\n", "\n  count\
    \ <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count <- count +\
    \ 1\n    }\n  }\n  return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n\
    \    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n \
    \     count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n    count <- 0\n\
    \    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n\
    \    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n \
    \     count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n    # YOUR CODE\
    \ HERE\n    sum(abs(arr))\n}\n", "\n    # YOUR CODE HERE\n    count = 0\n    for\
    \ (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i), \"\"\
    )[[1]]))) > 0) {\n            count = count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (i < 0) {\n        \
    \    i <- -i\n        }\n        sum <- 0\n        while (i > 0) {\n         \
    \   sum <- sum + i %% 10\n            i <- i %/% 10\n        }\n        if (sum\
    \ > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  sum(sapply(arr, function(x) sum(abs(x))))\n}\n",
  "\n    # YOUR CODE HERE\n    count = 0\n    for (i in arr) {\n        sum = 0\n\
    \        if (i < 0) {\n            sum = sum + i\n        }\n        while (i\
    \ > 0) {\n            sum = sum + i %% 10\n            i = i %/% 10\n        }\n\
    \        if (sum > 0) {\n            count = count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n",
  "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count\
    \ <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n    count <- 0\n    for\
    \ (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i), \"\"\
    )[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(i))\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR\
    \ CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (i < 0) {\n        \
    \    i <- -i\n        }\n        while (i > 0) {\n            count <- count +\
    \ (i %% 10)\n            i <- i %/% 10\n        }\n    }\n    return(count)\n\
    }\n", "\n    sum(sapply(arr, function(x) {\n        if (x < 0) {\n           \
    \ x <- x * -1\n        }\n        sum(as.integer(strsplit(as.character(x), \"\"\
    )[[1]]))\n    }))\n}\n", "\n    # YOUR CODE HERE\n    count = 0\n    for (i in\
    \ arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]])))\
    \ > 0) {\n            count = count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n", "\n  sum(sapply(arr, function(x) {\n    sum(abs(x)) > 0\n\
    \  }))\n}\n", "\n    count <- 0\n    for (x in arr) {\n        if (sum(abs(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]]))) > 0) {\n            count <- count + 1\n        }\n    }\n   \
    \ return(count)\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

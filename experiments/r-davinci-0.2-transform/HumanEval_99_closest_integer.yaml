name: HumanEval_99_closest_integer
language: r
prompt: "# Create a function that takes a value (string) representing a number\n#\
  \ and returns the closest integer to it. If the number is equidistant\n# from two\
  \ integers, round it away from zero.\n# Examples\n# >>> closest_integer('10')\n\
  # 10\n# >>> closest_integer('15.3')\n# 15\n# Note:\n# Rounding away from zero means\
  \ that if the given number is equidistant\n# from two integers, the one you should\
  \ return is the one that is the\n# farthest from zero. For example closest_integer(\"\
  14.5\") should\n# return 15 and closest_integer(\"-14.5\") should return -15.\n\
  closest_integer <- function(value) {"
tests: "test_humaneval <- function() {\ncandidate <- closest_integer\n    if(!identical(candidate('10'),\
  \ 10)){quit('no', 1)}\n    if(!identical(candidate('14.5'), 15)){quit('no', 1)}\n\
  \    if(!identical(candidate('-15.5'), -16)){quit('no', 1)}\n    if(!identical(candidate('15.3'),\
  \ 15)){quit('no', 1)}\n    if(!identical(candidate('0'), 0)){quit('no', 1)}\n}\n\
  test_humaneval()"
completions: ["\n  value <- as.numeric(value)\n  if (value %% 1 == 0) {\n    value\n\
    \  } else {\n    if (value > 0) {\n      ceiling(value)\n    } else {\n      floor(value)\n\
    \    }\n  }\n}\n", "\n    return(round(as.numeric(value)))\n}\nclosest_integer('10')\n\
    closest_integer('15.3')\n", "\n  value <- as.numeric(value)\n  if (value - floor(value)\
    \ < 0.5) {\n    return(floor(value))\n  } else {\n    return(ceiling(value))\n\
    \  }\n}\n", "\n  value <- as.numeric(value)\n  if (value %% 1 == 0) {\n    return(value)\n\
    \  } else {\n    if (value < 0) {\n      return(floor(value))\n    } else {\n\
    \      return(ceiling(value))\n    }\n  }\n}\n", "\n  value <- as.numeric(value)\n\
    \  if (value %% 1 == 0) {\n    return(value)\n  } else {\n    if (value - floor(value)\
    \ >= 0.5) {\n      return(ceiling(value))\n    } else {\n      return(floor(value))\n\
    \    }\n  }\n}\n", "\n  value <- as.numeric(value)\n  if (value %% 1 == 0) {\n\
    \    return(value)\n  } else {\n    if (value < 0) {\n      return(floor(value))\n\
    \    } else {\n      return(ceiling(value))\n    }\n  }\n}\n", "\n    value <-\
    \ as.numeric(value)\n    if (value - floor(value) < 0.5) {\n        return(floor(value))\n\
    \    } else {\n        return(ceiling(value))\n    }\n}\n", "\n  # Your code here\n\
    \  return(value)\n}\n", "\n  value <- as.numeric(value)\n  if (value %% 1 == 0)\
    \ {\n    return(value)\n  } else {\n    if (value > 0) {\n      return(ceiling(value))\n\
    \    } else {\n      return(floor(value))\n    }\n  }\n}\n", "\n  # your code\
    \ here\n}\n", "\n  # Your code here\n}\n", "\n  value <- as.numeric(value)\n \
    \ if (value %% 1 == 0) {\n    return(value)\n  } else {\n    if (value > 0) {\n\
    \      return(ceiling(value))\n    } else {\n      return(floor(value))\n    }\n\
    \  }\n}\n\nclosest_integer('10')\nclosest_integer('15.3')\nclosest_integer('14.5')\n\
    closest_integer('-14.5')\n", "\n  value <- as.numeric(value)\n  if (value >= 0)\
    \ {\n    return(floor(value + 0.5))\n  } else {\n    return(ceiling(value - 0.5))\n\
    \  }\n}\n", "\n  as.integer(value)\n}\n", "\n  value <- as.numeric(value)\n  if\
    \ (value == round(value)) {\n    return(value)\n  } else if (value > 0) {\n  \
    \  return(floor(value))\n  } else {\n    return(ceiling(value))\n  }\n}\n", "\n\
    \  value <- as.numeric(value)\n  if (value > 0) {\n    return(floor(value))\n\
    \  } else {\n    return(ceiling(value))\n  }\n}\n", "\n  return(round(as.numeric(value)))\n\
    }\n", "\n  value <- as.numeric(value)\n  if (value - floor(value) < ceiling(value)\
    \ - value) {\n    return(floor(value))\n  } else {\n    return(ceiling(value))\n\
    \  }\n}\n", "\n  value <- as.numeric(value)\n  if (value == floor(value)) {\n\
    \    return(value)\n  } else if (value > 0) {\n    return(floor(value) + 1)\n\
    \  } else {\n    return(floor(value))\n  }\n}\n", "\n  value <- as.numeric(value)\n\
    \  if (value - floor(value) == 0.5) {\n    if (value > 0) {\n      return(ceiling(value))\n\
    \    } else {\n      return(floor(value))\n    }\n  } else {\n    return(round(value))\n\
    \  }\n}\n", "\n  # Your code here\n}\n", "\n  value <- as.numeric(value)\n  if\
    \ (value >= 0) {\n    return(floor(value + 0.5))\n  } else {\n    return(ceiling(value\
    \ - 0.5))\n  }\n}\n", "\n  # Your code here\n}\n", "\n  # your code here\n}\n",
  "\n  return(round(as.numeric(value)))\n}\n", "\n  value <- as.numeric(value)\n \
    \ if (value - floor(value) < 0.5) {\n    return(floor(value))\n  } else {\n  \
    \  return(ceiling(value))\n  }\n}\n", "\n  value <- as.numeric(value)\n  if (value\
    \ %% 1 == 0) {\n    value\n  } else {\n    if (value - floor(value) >= 0.5) {\n\
    \      ceiling(value)\n    } else {\n      floor(value)\n    }\n  }\n}\n", "\n\
    \  if (value < 0) {\n    return(floor(value))\n  } else {\n    return(ceiling(value))\n\
    \  }\n}\n", "\n  value <- as.numeric(value)\n  if (value %% 1 == 0) {\n    return(value)\n\
    \  } else {\n    if (value > 0) {\n      return(ceiling(value))\n    } else {\n\
    \      return(floor(value))\n    }\n  }\n}\n", "\n  value <- as.numeric(value)\n\
    \  if (value - floor(value) < ceiling(value) - value) {\n    return(floor(value))\n\
    \  } else {\n    return(ceiling(value))\n  }\n}\n", "\n  value <- as.numeric(value)\n\
    \  if (value - floor(value) < 0.5) {\n    return(floor(value))\n  } else {\n \
    \   return(ceiling(value))\n  }\n}\n", "\n  value <- as.numeric(value)\n  if (value\
    \ - floor(value) == 0.5) {\n    if (value > 0) {\n      return(ceiling(value))\n\
    \    } else {\n      return(floor(value))\n    }\n  } else {\n    return(round(value))\n\
    \  }\n}\n", "\n  value <- as.numeric(value)\n  if (value %% 1 == 0) {\n    return(value)\n\
    \  } else {\n    if (value > 0) {\n      return(ceiling(value))\n    } else {\n\
    \      return(floor(value))\n    }\n  }\n}\n", "\n  # Your code here\n}\n", "\n\
    \  value <- as.numeric(value)\n  if (value > 0) {\n    return(floor(value))\n\
    \  } else {\n    return(ceiling(value))\n  }\n}\n", "\n  value <- as.numeric(value)\n\
    \  if (value == round(value)) {\n    return(value)\n  } else if (value > 0) {\n\
    \    return(round(value))\n  } else {\n    return(round(value) - 1)\n  }\n}\n",
  "\n  value <- as.numeric(value)\n  if (value - floor(value) < ceiling(value) - value)\
    \ {\n    return(floor(value))\n  } else {\n    return(ceiling(value))\n  }\n}\n",
  "\n  value <- as.numeric(value)\n  if (value - floor(value) == 0.5) {\n    if (value\
    \ > 0) {\n      return(ceiling(value))\n    } else {\n      return(floor(value))\n\
    \    }\n  } else {\n    return(round(value))\n  }\n}\n", "\n  value <- as.numeric(value)\n\
    \  if (value - floor(value) < ceiling(value) - value) {\n    return(floor(value))\n\
    \  } else {\n    return(ceiling(value))\n  }\n}\n", "\n  # Your code here\n}\n",
  "\n  value <- as.numeric(value)\n  if (value >= 0) {\n    return(floor(value + 0.5))\n\
    \  } else {\n    return(ceiling(value - 0.5))\n  }\n}\n", "\n  # Your code here\n\
    }\n", "\n  # Your code here\n}\n", "\n  value <- as.numeric(value)\n  if (value\
    \ - floor(value) < ceiling(value) - value) {\n    return(floor(value))\n  } else\
    \ {\n    return(ceiling(value))\n  }\n}\n", "\n  value <- as.numeric(value)\n\
    \  if (value %% 1 == 0) {\n    return(value)\n  } else {\n    if (value > 0) {\n\
    \      return(ceiling(value))\n    } else {\n      return(floor(value))\n    }\n\
    \  }\n}\n", "\n  # Your code here\n}\n", "\n  # your code here\n}\n", "\n  if\
    \ (value > 0) {\n    return(floor(value))\n  } else {\n    return(ceiling(value))\n\
    \  }\n}\n", "\n  value <- as.numeric(value)\n  if (value %% 1 == 0) {\n    return(value)\n\
    \  } else {\n    if (value > 0) {\n      return(ceiling(value))\n    } else {\n\
    \      return(floor(value))\n    }\n  }\n}\n", "\n  value <- as.numeric(value)\n\
    \  if (value %% 1 == 0) {\n    return(value)\n  } else {\n    if (value > 0) {\n\
    \      return(floor(value))\n    } else {\n      return(ceiling(value))\n    }\n\
    \  }\n}\n", "\n  # Your code here\n}\n", "\n  value <- as.numeric(value)\n  if\
    \ (value - floor(value) < 0.5) {\n    return(floor(value))\n  } else {\n    return(ceiling(value))\n\
    \  }\n}\n", "\n  # Your code here\n}\n", "\n  value <- as.numeric(value)\n  if\
    \ (value - floor(value) == 0.5) {\n    if (value > 0) {\n      return(ceiling(value))\n\
    \    } else {\n      return(floor(value))\n    }\n  } else {\n    return(round(value))\n\
    \  }\n}\n", "\n  # Your code here\n  return(value)\n}\n", "\n  value <- as.numeric(value)\n\
    \  if (value - floor(value) < 0.5) {\n    return(floor(value))\n  } else {\n \
    \   return(ceiling(value))\n  }\n}\n", "\n  # Your code here\n}\n", "\n  # your\
    \ code here\n}\n", "\n  value <- as.numeric(value)\n  if (value - floor(value)\
    \ < 0.5) {\n    return(floor(value))\n  } else {\n    return(ceiling(value))\n\
    \  }\n}\n", "\n  value <- as.numeric(value)\n  if (value - floor(value) >= 0.5)\
    \ {\n    ceiling(value)\n  } else {\n    floor(value)\n  }\n}\n", "\n  # Your\
    \ code here\n  return(value)\n}\n", "\n  # Your code here\n}\n", "\n  # Your code\
    \ here\n}\n", "\n  # Write your code here\n  return(value)\n}\n", "\n  value <-\
    \ as.numeric(value)\n  if (value < 0) {\n    return(floor(value))\n  } else {\n\
    \    return(ceiling(value))\n  }\n}\n", "\n  value <- as.numeric(value)\n  if\
    \ (value - floor(value) == 0.5) {\n    if (value > 0) {\n      return(ceiling(value))\n\
    \    } else {\n      return(floor(value))\n    }\n  } else {\n    return(round(value))\n\
    \  }\n}\n", "\n  # your code here\n}\n", "\n  # Your code here\n}\n", "\n  value\
    \ <- as.numeric(value)\n  if (value >= 0) {\n    return(floor(value + 0.5))\n\
    \  } else {\n    return(ceiling(value - 0.5))\n  }\n}\n", "\n  value <- as.numeric(value)\n\
    \  if (value - floor(value) < 0.5) {\n    return(floor(value))\n  } else {\n \
    \   return(ceiling(value))\n  }\n}\n", "\n  # Your code here\n}\n", "\n  value\
    \ <- as.numeric(value)\n  if (value %% 1 == 0) {\n    return(value)\n  } else\
    \ {\n    if (value > 0) {\n      return(floor(value))\n    } else {\n      return(ceiling(value))\n\
    \    }\n  }\n}\n\nclosest_integer('10')\nclosest_integer('15.3')\nclosest_integer('14.5')\n\
    closest_integer('-14.5')\n", "\n  value <- as.numeric(value)\n  if (value - floor(value)\
    \ < ceiling(value) - value) {\n    return(floor(value))\n  } else {\n    return(ceiling(value))\n\
    \  }\n}\n", "\n  value <- as.numeric(value)\n  if (value - floor(value) < 0.5)\
    \ {\n    return(floor(value))\n  } else {\n    return(ceiling(value))\n  }\n}\n",
  "\n  value <- as.numeric(value)\n  if (value - floor(value) >= 0.5) {\n    return(ceiling(value))\n\
    \  } else {\n    return(floor(value))\n  }\n}\n", "\n  as.integer(value)\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

language: go_test.go
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nil\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp1nvjo0k0_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nil\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp1nvjo0k0_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nil\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp1nvjo0k0_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nil\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpkl4lisce_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpkl4lisce_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nil\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp1nvjo0k0_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp3jmzkn6f_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp3jmzkn6f_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    if len(nums) == 0 {\n        return nums\n    }\n    //\
    \ TODO: implement the function\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpzydo6nmt_test.go:41: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpzydo6nmt_test.go:41: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpzydo6nmt_test.go:41: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpzydo6nmt_test.go:41:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpzydo6nmt_test.go:41: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nil\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpkl4lisce_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpkl4lisce_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nil\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpkl4lisce_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpkl4lisce_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    var result []int\n    for _, v := range nums {\n       \
    \ result = append(result, v)\n    }\n    return result\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpproosm1o_test.go:41: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpproosm1o_test.go:41: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpproosm1o_test.go:41: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpproosm1o_test.go:41:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpproosm1o_test.go:41: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp3jmzkn6f_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nil\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp1nvjo0k0_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 2
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    if len(nums) == 0 {\n        return nums\n    }\n    for\
    \ i := 0; i < len(nums); i++ {\n        for j := i + 1; j < len(nums); j++ {\n\
    \            if sum_digits(nums[i]) > sum_digits(nums[j]) {\n                nums[i],\
    \ nums[j] = nums[j], nums[i]\n            }\n        }\n    }\n    return nums\n\
    }\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7yno5v8f_test.go:21:16: undefined: sum_digits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    if len(nums) == 0 {\n        return nums\n    }\n    //\
    \ sum of digits\n    sums := make([]int, len(nums))\n    for i, num := range nums\
    \ {\n        for num > 0 {\n            sums[i] += num % 10\n            num /=\
    \ 10\n        }\n    }\n    // sort\n    for i := 0; i < len(nums); i++ {\n  \
    \      for j := i + 1; j < len(nums); j++ {\n            if sums[i] > sums[j]\
    \ || (sums[i] == sums[j] && i > j) {\n                nums[i], nums[j] = nums[j],\
    \ nums[i]\n                sums[i], sums[j] = sums[j], sums[i]\n            }\n\
    \        }\n    }\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp9uxsmexz_test.go:57: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=-1) %!s(int=-11) %!s(int=-12)\
    \ %!s(int=1) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmp9uxsmexz_test.go:57: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=0)\
    \ %!s(int=2) %!s(int=3) %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423)\
    \ %!s(int=37) %!s(int=145) %!s(int=1234) %!s(int=46) %!s(int=56) %!s(int=463)\
    \ %!s(int=3457)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n   \
    \     tmp9uxsmexz_test.go:57: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98)\
    \ %!s(int=-11) %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=-11)\
    \ %!s(int=-32) %!s(int=-98) %!s(int=-3) %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n        tmp9uxsmexz_test.go:57:\
    \ expected '[%!s(int=-76) %!s(int=-21) %!s(int=0) %!s(int=4) %!s(int=23) %!s(int=6)\
    \ %!s(int=6)]', got '[%!s(int=0) %!s(int=-76) %!s(int=-21) %!s(int=4) %!s(int=23)\
    \ %!s(int=6) %!s(int=6)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nil\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpkl4lisce_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpkl4lisce_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 2
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    if len(nums) == 0 {\n        return nums\n    }\n    //\
    \ create a map to store the sum of digits for each number\n    sum_map := make(map[int]int)\n\
    \    for _, num := range nums {\n        sum_map[num] = sum_digits(num)\n    }\n\
    \    // create a slice to store the sorted numbers\n    sorted_nums := make([]int,\
    \ len(nums))\n    // create a slice to store the index of each number\n    index_map\
    \ := make(map[int]int)\n    for i, num := range nums {\n        index_map[num]\
    \ = i\n    }\n    // sort the numbers by their sum of digits\n    for i := 0;\
    \ i < len(nums); i++ {\n        min := nums[0]\n        for _, num := range nums\
    \ {\n            if sum_map[num] < sum_map[min] {\n                min = num\n\
    \            } else if sum_map[num] == sum_map[min] {\n                if index_map[num]\
    \ < index_map[min] {\n                    min = num\n                }\n     \
    \       }\n        }\n        sorted_nums[i] = min\n        delete(sum_map, min)\n\
    \    }\n    return sorted_nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvt8cbuxz_test.go:22:24: undefined: sum_digits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nil\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpkl4lisce_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpkl4lisce_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nil\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpkl4lisce_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpkl4lisce_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp3jmzkn6f_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 2
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    if len(nums) == 0 {\n        return nums\n    }\n    var\
    \ sum_of_digits = make(map[int]int)\n    for i, num := range nums {\n        sum_of_digits[i]\
    \ = sum_digits(num)\n    }\n    return sort_by_value(sum_of_digits)\n}\n\nfunc\
    \ TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpoxbsn0tl_test.go:21:28: undefined: sum_digits

    /tmp/tmpoxbsn0tl_test.go:23:12: undefined: sort_by_value

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp3jmzkn6f_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nil\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpkl4lisce_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpkl4lisce_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nil\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp1nvjo0k0_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nil\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp1nvjo0k0_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nil\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp1nvjo0k0_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nil\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp1nvjo0k0_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp3jmzkn6f_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp3jmzkn6f_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nil\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpkl4lisce_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpkl4lisce_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp3jmzkn6f_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp3jmzkn6f_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp3jmzkn6f_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp3jmzkn6f_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpfw29s84d_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpfw29s84d_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpfw29s84d_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqqnbze1t_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpqqnbze1t_test.go:37: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpqqnbze1t_test.go:37:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqqnbze1t_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nil\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpkl4lisce_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpkl4lisce_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    return nil\n}\n\nfunc TestOrder_By_Points(t *testing.T)\
    \ {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpkl4lisce_test.go:37:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpkl4lisce_test.go:37: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpkl4lisce_test.go:37: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nil\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp1nvjo0k0_test.go:38:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp1nvjo0k0_test.go:38: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp1nvjo0k0_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074128
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunc order_by_points(nums\
    \ []int) []int {\n    // your code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t\
    \ *testing.T) {\n  candidate := order_by_points\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{1, 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11}\
    \ },\n     { actual: candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}), expected:\
    \ []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}),\
    \ expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected:\
    \ []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpp2isoio5_test.go:38: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpp2isoio5_test.go:38: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpp2isoio5_test.go:38:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpp2isoio5_test.go:38: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074128

name: HumanEval_94_skjkasdkd
language: go_test.go
prompt: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
  \ You are given a list of integers.\n// You need to find the largest prime value\
  \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
  \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
  \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
  \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the\
  \ output should be 11\n// For lst = [0,81,12,3,1,21] the output should be 3\n//\
  \ For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int) int\
  \ {\n"
tests: "func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
  \ 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
  \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n   \
  \  { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
  \ 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71,\
  \ 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
  \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2,\
  \ 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n\
  \     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     {\
  \ actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc\
  \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var sum int\n    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n        sum\
    \ += int(v - '0')\n    }\n    return sum\n}\n", "    var largestPrime int\n  \
    \  for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    // your code here\n    return 0\n}\n",
  "    // your code here\n    return 0\n}\n", "    var prime int\n    for _, v :=\
    \ range lst {\n        if isPrime(v) {\n            prime = v\n        }\n   \
    \ }\n    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", prime) {\n   \
    \     sum += int(v - '0')\n    }\n    return sum\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n\
    \        if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n",
  "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    var maxPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) && v > maxPrime {\n            maxPrime = v\n \
    \       }\n    }\n    return sumDigits(maxPrime)\n}\n", "    var max int\n   \
    \ for _, v := range lst {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    fmt.Println(max)\n    return 0\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    // Write your code here\n    return 0\n}\n", "    var\
    \ sum int\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := 2; i <= max; i++ {\n    \
    \    if max%i == 0 {\n            max = max / i\n            sum += i\n      \
    \  }\n    }\n    return sum\n}\n", "    var largestPrime int\n    for _, num :=\
    \ range lst {\n        if isPrime(num) && num > largestPrime {\n            largestPrime\
    \ = num\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    var sum int\n    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n        sum\
    \ += int(v - '0')\n    }\n    return sum\n}\n", "    var largestPrime int\n  \
    \  for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    // find the largest prime value\n    var\
    \ largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n   \
    \         if v > largestPrime {\n                largestPrime = v\n          \
    \  }\n        }\n    }\n    // sum of its digits\n    var sum int\n    for _,\
    \ v := range fmt.Sprintf(\"%d\", largestPrime) {\n        sum += int(v - '0')\n\
    \    }\n    return sum\n}\n", "    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var largestPrime int\n\
    \    for _, num := range lst {\n        if isPrime(num) && num > largestPrime\
    \ {\n            largestPrime = num\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    // your code here\n   \
    \ return 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n   \
    \     if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n",
  "    var max int\n    for _, v := range lst {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n    var primes []int\n    for i := 2; i <= max;\
    \ i++ {\n        isPrime := true\n        for _, v := range primes {\n       \
    \     if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n", "    var largestPrime int\n    for _, v\
    \ := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var largestPrime int\n\
    \    for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n   \
    \         if v > largestPrime {\n                largestPrime = v\n          \
    \  }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    var max int\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    var primes []int\n    for i := 2; i <= max; i++ {\n        isPrime :=\
    \ true\n        for _, v := range primes {\n            if i%v == 0 {\n      \
    \          isPrime = false\n                break\n            }\n        }\n\
    \        if isPrime {\n            primes = append(primes, i)\n        }\n   \
    \ }\n    var sum int\n    for _, v := range primes {\n        for v > 0 {\n  \
    \          sum += v % 10\n            v /= 10\n        }\n    }\n    return sum\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var sum int\n    var max\
    \ int\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    for i := max; i > 1; i-- {\n        if isPrime(i) {\n \
    \           sum = 0\n            for _, v := range fmt.Sprintf(\"%d\", i) {\n\
    \                sum += int(v - '0')\n            }\n            return sum\n\
    \        }\n    }\n    return 0\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n \
    \       sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n", "   \
    \ // your code here\n    return 0\n}\n", "    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var maxPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) && v > maxPrime {\n            maxPrime\
    \ = v\n        }\n    }\n    var sum int\n    for _, v := range fmt.Sprintf(\"\
    %d\", maxPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n        if\
    \ isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n",
  "    // your code here\n    return 0\n}\n", "    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    // your code here\n    return 0\n}\n",
  "    var max int\n    for _, v := range lst {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n    var primes []int\n    for i := 2; i <= max;\
    \ i++ {\n        isPrime := true\n        for _, v := range primes {\n       \
    \     if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n", "    // your code here\n    return 0\n}\n",
  "    // your code here\n    return 0\n}\n", "    // your code here\n    return 0\n\
    }\n", "    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ && num > largestPrime {\n            largestPrime = num\n        }\n    }\n\
    \    return sumDigits(largestPrime)\n}\n", "    var maxPrime int\n    for _, v\
    \ := range lst {\n        if isPrime(v) && v > maxPrime {\n            maxPrime\
    \ = v\n        }\n    }\n    var sum int\n    for _, v := range fmt.Sprintf(\"\
    %d\", maxPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n", " \
    \   var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ max int\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    for i := max; i > 0; i-- {\n        if isPrime(i)\
    \ {\n            return sumDigits(i)\n        }\n    }\n    return 0\n}\n", " \
    \   var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ largestPrime int\n    for _, v := range lst {\n        if v > largestPrime &&\
    \ isPrime(v) {\n            largestPrime = v\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "   \
    \ // your code here\n    return 0\n}\n", "    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   var maxPrime int\n    for _, v := range lst {\n        if isPrime(v) && v\
    \ > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n", "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n", " \
    \   var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ max int\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    fmt.Println(max)\n    var sum int\n    for max >\
    \ 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n",
  "    // your code here\n    return 0\n}\n", "    // your code here\n    return 0\n\
    }\n", "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n", " \
    \   var max int\n    for _, v := range lst {\n        if v > max {\n         \
    \   max = v\n        }\n    }\n    var primes []int\n    for i := 2; i <= max;\
    \ i++ {\n        isPrime := true\n        for _, v := range primes {\n       \
    \     if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n", "    // your code here\n    return 0\n}\n",
  "    var prime int\n    for _, v := range lst {\n        if isPrime(v) {\n     \
    \       prime = v\n        }\n    }\n    return sumDigits(prime)\n}\n", "    //\
    \ your code here\n    return 0\n}\n", "    var largestPrime int\n    for _, v\
    \ := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   var prime int\n    for _, v := range lst {\n        if isPrime(v) {\n    \
    \        prime = v\n        }\n    }\n    return sumOfDigits(prime)\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    // your code here\n    return 0\n}\n", "    var largestPrime int\n\
    \    for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    var sum int\n    var max int\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    for i := 2; i <= max; i++ {\n        if max%i == 0 {\n           \
    \ for j := 2; j <= i/2; j++ {\n                if i%j == 0 {\n               \
    \     break\n                }\n                if j == i/2 {\n              \
    \      for k := i; k > 0; k /= 10 {\n                        sum += k % 10\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return sum\n}\n", "    var maxPrime int\n    for _, n := range lst {\n    \
    \    if isPrime(n) && n > maxPrime {\n            maxPrime = n\n        }\n  \
    \  }\n    return sumDigits(maxPrime)\n}\n", "    var max int\n    for _, v :=\
    \ range lst {\n        if v > max {\n            max = v\n        }\n    }\n \
    \   for i := max; i > 0; i-- {\n        if isPrime(i) {\n            return sumDigits(i)\n\
    \        }\n    }\n    return 0\n}\n", "    var max int\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    for\
    \ i := max; i > 0; i-- {\n        if isPrime(i) {\n            return sumDigits(i)\n\
    \        }\n    }\n    return 0\n}\n", "    // your code here\n    return 0\n\
    }\n", "    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ && num > largestPrime {\n            largestPrime = num\n        }\n    }\n\
    \    return sumDigits(largestPrime)\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n        if\
    \ isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n",
  "    // your code here\n    return 0\n}\n", "    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var maxPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) && v > maxPrime {\n            maxPrime = v\n \
    \       }\n    }\n    return sumDigits(maxPrime)\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    var maxPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) && v > maxPrime {\n            maxPrime\
    \ = v\n        }\n    }\n    return sumOfDigits(maxPrime)\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n        if\
    \ isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    var sum int\n    for _, v := range\
    \ fmt.Sprintf(\"%d\", largestPrime) {\n        sum += int(v - '0')\n    }\n  \
    \  return sum\n}\n", "    // your code here\n    return 0\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    var largestPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n", "    //\
    \ your code here\n    return 0\n}\n", "    var largestPrime int\n    for _, v\
    \ := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    // your code here\n    return 0\n}\n",
  "    // your code here\n    return 0\n}\n", "    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    for i := max; i > 0; i-- {\n       \
    \ if isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n", "    // your code here\n    return 0\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n\
    \        if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n", "    var largestPrime int\n    for _, value := range lst {\n        if isPrime(value)\
    \ {\n            if value > largestPrime {\n                largestPrime = value\n\
    \            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n",
  "    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v) && v >\
    \ maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    for i := max; i > 1; i-- {\n       \
    \ if isPrime(i) {\n            return sumOfDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n", "    var largestPrime int\n    var sum int\n    for _, v := range lst\
    \ {\n        if v > largestPrime && isPrime(v) {\n            largestPrime = v\n\
    \        }\n    }\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    var max int\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    for i := max; i > 1; i-- {\n        if isPrime(i) {\n            return\
    \ sumOfDigits(i)\n        }\n    }\n    return 0\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    return sumOfDigits(largestPrime)\n}\n", "    // your code here\n \
    \   return 0\n}\n", "    // find the largest prime value\n    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    // sum of its digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"\
    %d\", largestPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n",
  "    // your code here\n    return 0\n}\n", "    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            largestPrime = v\n  \
    \      }\n    }\n    return sumDigits(largestPrime)\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n\
    \        if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    for i := max; i > 0; i-- {\n       \
    \ if isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n", "    // your code here\n    return 0\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n\
    \        if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n",
  "    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v) && v >\
    \ maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var largestPrime int\n\
    \    for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    var max int\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    var primes\
    \ []int\n    for i := 2; i <= max; i++ {\n        isPrime := true\n        for\
    \ _, v := range primes {\n            if i%v == 0 {\n                isPrime =\
    \ false\n                break\n            }\n        }\n        if isPrime {\n\
    \            primes = append(primes, i)\n        }\n    }\n    var maxPrime int\n\
    \    for _, v := range primes {\n        if v > maxPrime {\n            maxPrime\
    \ = v\n        }\n    }\n    var sum int\n    for maxPrime > 0 {\n        sum\
    \ += maxPrime % 10\n        maxPrime /= 10\n    }\n    return sum\n}\n", "   \
    \ var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n", "    //\
    \ your code here\n    return 0\n}\n", "    var maxPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) && v > maxPrime {\n            maxPrime = v\n \
    \       }\n    }\n    return sumDigits(maxPrime)\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    var maxPrime int\n    for _, v := range lst {\n    \
    \    if isPrime(v) && v > maxPrime {\n            maxPrime = v\n        }\n  \
    \  }\n    return sumOfDigits(maxPrime)\n}\n", "    var largestPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    // your code here\n    return 0\n}\n",
  "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n   \
    \         if v > largestPrime {\n                largestPrime = v\n          \
    \  }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    var sum int\n    var max int\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    for i := 2; i <= max; i++ {\n        if max%i == 0 {\n            max\
    \ = max / i\n            sum += i\n        }\n    }\n    return sum\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    // your code here\n    return 0\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    // your code here\n    return 0\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    // your code here\n   \
    \ return 0\n}\n", "    // your code here\n    return 0\n}\n", "    var max int\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    fmt.Println(max)\n    return 0\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    var maxPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) && v > maxPrime {\n            maxPrime\
    \ = v\n        }\n    }\n    return sumDigits(maxPrime)\n}\n", "    // your code\
    \ here\n    return 0\n}\n", "    var largestPrime int\n    for _, v := range lst\
    \ {\n        if isPrime(v) {\n            if v > largestPrime {\n            \
    \    largestPrime = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    // your code here\n   \
    \ return 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n   \
    \     if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n",
  "    return 0\n}\n", "    var max int\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for i := max; i > 1; i--\
    \ {\n        if isPrime(i) {\n            return sumOfDigits(i)\n        }\n \
    \   }\n    return 0\n}\n", "    // your code here\n    return 0\n}\n", "    //\
    \ your code here\n    return 0\n}\n", "    var maxPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) && v > maxPrime {\n            maxPrime = v\n \
    \       }\n    }\n    return sumDigits(maxPrime)\n}\n", "    var prime int\n \
    \   for _, v := range lst {\n        if isPrime(v) && v > prime {\n          \
    \  prime = v\n        }\n    }\n    var sum int\n    for prime > 0 {\n       \
    \ sum += prime % 10\n        prime /= 10\n    }\n    return sum\n}\n", "    //\
    \ Write your code here\n    return 0\n}\n", "    var largestPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var max int\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    for i := max;\
    \ i > 1; i-- {\n        if isPrime(i) {\n            return sumDigits(i)\n   \
    \     }\n    }\n    return 0\n}\n", "    var max int\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    var sum\
    \ int\n    for max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n\
    \    return sum\n}\n", "    return 0\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var primes []int\n    for i := 2;\
    \ i <= max; i++ {\n        isPrime := true\n        for _, v := range primes {\n\
    \            if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n", "    // your code here\n    return 0\n}\n",
  "    // your code here\n    return 0\n}\n", "    // your code here\n    return 0\n\
    }\n", "    // your code here\n    return 0\n}\n", "    // your code here\n   \
    \ return 0\n}\n", "    var max int\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    var primes []int\n    for\
    \ i := 2; i <= max; i++ {\n        isPrime := true\n        for _, v := range\
    \ primes {\n            if i%v == 0 {\n                isPrime = false\n     \
    \           break\n            }\n        }\n        if isPrime {\n          \
    \  primes = append(primes, i)\n        }\n    }\n    var sum int\n    for _, v\
    \ := range primes {\n        sum += v\n    }\n    return sum\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    // your code here\n    return 0\n}\n", "    var largestPrime int\n\
    \    for _, n := range lst {\n        if isPrime(n) && n > largestPrime {\n  \
    \          largestPrime = n\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var max int\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    var prime bool\n    for i := max; i > 0; i-- {\n        prime = true\n\
    \        for j := 2; j < i; j++ {\n            if i%j == 0 {\n               \
    \ prime = false\n                break\n            }\n        }\n        if prime\
    \ {\n            break\n        }\n    }\n    var sum int\n    for i := 0; i <\
    \ len(fmt.Sprintf(\"%d\", max)); i++ {\n        sum += max % 10\n        max /=\
    \ 10\n    }\n    return sum\n}\n", "    var largestPrime int\n    for _, v :=\
    \ range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n  \
    \              largestPrime = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var largestPrime int\n\
    \    for _, v := range lst {\n        if v > largestPrime && isPrime(v) {\n  \
    \          largestPrime = v\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n", "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

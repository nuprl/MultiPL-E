name: HumanEval_93_encode
language: go_test.go
prompt: "package encode_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write\
  \ a function that takes a message, and encodes in such a \n// way that it swaps\
  \ case of all letters, replaces all vowels in \n// the message with the letter that\
  \ appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume\
  \ only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This\
  \ is a message')\n// 'tHKS KS C MGSSCGG'\nfunc encode(message string) string {\n"
tests: "func TestEncode(t *testing.T) {\n  candidate := encode\n\ttype test struct\
  \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
  \     { actual: candidate(\"TEST\"), expected: \"tgst\" },\n     { actual: candidate(\"\
  Mudasir\"), expected: \"mWDCSKR\" },\n     { actual: candidate(\"YES\"), expected:\
  \ \"ygs\" },\n     { actual: candidate(\"This is a message\"), expected: \"tHKS\
  \ KS C MGSSCGG\" },\n     { actual: candidate(\"I DoNt KnOw WhAt tO WrItE\"), expected:\
  \ \"k dQnT kNqW wHcT Tq wRkTg\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    return \"\"\n}\n", "    encoded := \"\"\n    for _, char := range\
    \ message {\n        if char >= 'a' && char <= 'z' {\n            encoded += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else {\n            encoded += string(char)\n \
    \       }\n    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    return\
    \ \"\"\n}\n", "    var result string\n    for _, c := range message {\n      \
    \  if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n        }\
    \ else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n     \
    \   } else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    return \"\"\n}\n", "    var encoded string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            encoded += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n\
    \        } else {\n            encoded += string(c)\n        }\n    }\n    return\
    \ encoded\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    return \"\
    \"\n}\n", "    var encoded string\n    for _, char := range message {\n      \
    \  if char >= 'a' && char <= 'z' {\n            encoded += string(char - 32)\n\
    \        } else if char >= 'A' && char <= 'Z' {\n            encoded += string(char\
    \ + 32)\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n  \
    \      } else if char == 'E' {\n            encoded += \"G\"\n        } else if\
    \ char == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n\
    \            encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    var encoded string\n    for _, char := range message {\n        if char >=\
    \ 'a' && char <= 'z' {\n            encoded += string(char - 32)\n        } else\
    \ if char >= 'A' && char <= 'Z' {\n            encoded += string(char + 32)\n\
    \        } else if char == 'A' {\n            encoded += \"C\"\n        } else\
    \ if char == 'E' {\n            encoded += \"G\"\n        } else if char == 'I'\
    \ {\n            encoded += \"K\"\n        } else if char == 'O' {\n         \
    \   encoded += \"Q\"\n        } else if char == 'U' {\n            encoded +=\
    \ \"S\"\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"s\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    var result string\n    for _, char := range\
    \ message {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n        \
    \    result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n    \
    \        result += string(c + 32)\n        } else {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var encoded\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            encoded += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            encoded += string(c + 32)\n        } else {\n            encoded\
    \ += string(c)\n        }\n    }\n    return encoded\n}\n", "    return \"\"\n\
    }\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    var encoded string\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            encoded += string(char - 32)\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            encoded += string(char + 32)\n        } else if char ==\
    \ 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n     \
    \       encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    return result\n}\n", "   \
    \ return \"\"\n}\n", "    var result string\n    for _, c := range message {\n\
    \        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n   \
    \     } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    return \"\"\n}\n", "    var result string\n    for _, ch\
    \ := range message {\n        if ch >= 'a' && ch <= 'z' {\n            result\
    \ += string(ch - 32)\n        } else if ch >= 'A' && ch <= 'Z' {\n           \
    \ result += string(ch + 32)\n        } else {\n            result += string(ch)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   result += string(char - 32)\n        } else if char >= 'A' && char <= 'Z'\
    \ {\n            result += string(char + 32)\n        } else {\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 'a' + 'A')\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c - 'A' + 'a')\n        } else {\n  \
    \          result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   return \"\"\n}\n", "    var encoded string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            encoded += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n\
    \        } else {\n            encoded += string(c)\n        }\n    }\n    return\
    \ encoded\n}\n", "    return \"\"\n}\n", "    var result string\n    for _, c\
    \ := range message {\n        if c >= 'a' && c <= 'z' {\n            result +=\
    \ string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n          \
    \  result += string(c - 'A' + 'a')\n        } else {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var encoded\
    \ string\n    for _, char := range message {\n        if char >= 'a' && char <=\
    \ 'z' {\n            encoded += string(char - 32)\n        } else if char >= 'A'\
    \ && char <= 'Z' {\n            encoded += string(char + 32)\n        } else if\
    \ char == 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n\
    \            encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var result string\n    for _, char := range message {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string(char - 32)\n        } else if\
    \ char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n    \
    \    } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    var encoded\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            encoded += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            encoded += string(c + 32)\n        } else {\n            encoded\
    \ += string(c)\n        }\n    }\n    return encoded\n}\n", "    return \"\"\n\
    }\n", "    var encoded string\n    for _, char := range message {\n        if\
    \ char >= 'a' && char <= 'z' {\n            encoded += string(char - 32)\n   \
    \     } else if char >= 'A' && char <= 'Z' {\n            encoded += string(char\
    \ + 32)\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n  \
    \      } else if char == 'E' {\n            encoded += \"G\"\n        } else if\
    \ char == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n\
    \            encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    var encoded string\n    for _, char :=\
    \ range message {\n        if char >= 'a' && char <= 'z' {\n            encoded\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       encoded += string(char + 32)\n        } else if char == 'a' {\n      \
    \      encoded += \"c\"\n        } else if char == 'e' {\n            encoded\
    \ += \"g\"\n        } else if char == 'i' {\n            encoded += \"k\"\n  \
    \      } else if char == 'o' {\n            encoded += \"q\"\n        } else if\
    \ char == 'u' {\n            encoded += \"y\"\n        } else if char == 'A' {\n\
    \            encoded += \"C\"\n        } else if char == 'E' {\n            encoded\
    \ += \"G\"\n        } else if char == 'I' {\n            encoded += \"K\"\n  \
    \      } else if char == 'O' {\n            encoded += \"Q\"\n        } else if\
    \ char == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(char)\n        }\n    }\n    return encoded\n}\n", "    return \"\"\
    \n}\n", "    return \"\"\n}\n", "    var result string\n    for _, char := range\
    \ message {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    var result string\n    for _, c\
    \ := range message {\n        if c >= 'a' && c <= 'z' {\n            result +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var encoded\
    \ string\n    for _, char := range message {\n        if char >= 'a' && char <=\
    \ 'z' {\n            encoded += string(char - 32)\n        } else if char >= 'A'\
    \ && char <= 'Z' {\n            encoded += string(char + 32)\n        } else if\
    \ char == 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n\
    \            encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var encoded string\n    for _, char := range message {\n        if char >=\
    \ 'a' && char <= 'z' {\n            encoded += string(char - 32)\n        } else\
    \ if char >= 'A' && char <= 'Z' {\n            encoded += string(char + 32)\n\
    \        } else if char == 'a' {\n            encoded += \"c\"\n        } else\
    \ if char == 'e' {\n            encoded += \"g\"\n        } else if char == 'i'\
    \ {\n            encoded += \"k\"\n        } else if char == 'o' {\n         \
    \   encoded += \"q\"\n        } else if char == 'u' {\n            encoded +=\
    \ \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n     \
    \   } else if char == 'E' {\n            encoded += \"G\"\n        } else if char\
    \ == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n  \
    \          encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    var result string\n    for _, c := range\
    \ message {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            result +=\
    \ string(c - 'A' + 'a')\n        } else {\n            result += string(c)\n \
    \       }\n    }\n    return result\n}\n", "    var encoded string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            encoded\
    \ += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n       \
    \     encoded += string(c - 'A' + 'a')\n        } else if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n            encoded += string(c + 2)\n\
    \        } else if c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' {\n\
    \            encoded += string(c + 2)\n        } else {\n            encoded +=\
    \ string(c)\n        }\n    }\n    return encoded\n}\n", "    var result []byte\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            result = append(result, char - 32)\n        } else if char >= 'A'\
    \ && char <= 'Z' {\n            result = append(result, char + 32)\n        }\
    \ else {\n            result = append(result, byte(char))\n        }\n    }\n\
    \    return string(result)\n}\n", "    var result string\n    for _, c := range\
    \ message {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "  \
    \  var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - ('a' - 'A'))\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            result += string(c + ('a' - 'A'))\n    \
    \    } else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    return \"\"\n}\n", "    var newMessage string\n    for _, char := range\
    \ message {\n        if char >= 'a' && char <= 'z' {\n            newMessage +=\
    \ string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n        \
    \    newMessage += string(char + 32)\n        } else {\n            newMessage\
    \ += string(char)\n        }\n    }\n    return newMessage\n}\n", "    var encoded\
    \ string\n    for _, char := range message {\n        if char >= 'a' && char <=\
    \ 'z' {\n            encoded += string(char - 32)\n        } else if char >= 'A'\
    \ && char <= 'Z' {\n            encoded += string(char + 32)\n        } else if\
    \ char == 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n\
    \            encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 'a' + 'A')\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n        }\
    \ else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var encoded string\n    for _, char := range message {\n        if\
    \ char >= 'a' && char <= 'z' {\n            encoded += string(char - 32)\n   \
    \     } else if char >= 'A' && char <= 'Z' {\n            encoded += string(char\
    \ + 32)\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n  \
    \      } else if char == 'E' {\n            encoded += \"G\"\n        } else if\
    \ char == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n\
    \            encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    var result string\n    for _, char := range\
    \ message {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    encoded := \"\"\n    for _, char\
    \ := range message {\n        if char >= 'a' && char <= 'z' {\n            encoded\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       encoded += string(char + 32)\n        } else {\n            encoded +=\
    \ string(char)\n        }\n    }\n    return encoded\n}\n", "    var result string\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string(char - 32)\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            result += string(char + 32)\n        } else {\n      \
    \      result += string(char)\n        }\n    }\n    return result\n}\n", "  \
    \  var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 'a' + 'A')\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n        }\
    \ else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    return \"\"\n}\n", "    var result string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 'a' +\
    \ 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ - 'A' + 'a')\n        } else {\n            result += string(c)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, c := range\
    \ message {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    return \"\
    \"\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    return \"\"\n}\n", "    var result string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var result\
    \ string\n    for _, char := range message {\n        if char >= 'a' && char <=\
    \ 'z' {\n            result += string(char - 32)\n        } else if char >= 'A'\
    \ && char <= 'Z' {\n            result += string(char + 32)\n        } else {\n\
    \            result += string(char)\n        }\n    }\n    return result\n}\n",
  "    var encoded string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            encoded += string(c - 'a' + 'A')\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            encoded += string(c - 'A' + 'a')\n     \
    \   } else if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n   \
    \         encoded += string(c + 2)\n        } else if c == 'A' || c == 'E' ||\
    \ c == 'I' || c == 'O' || c == 'U' {\n            encoded += string(c + 2)\n \
    \       } else {\n            encoded += string(c)\n        }\n    }\n    return\
    \ encoded\n}\n", "    return \"\"\n}\n", "    var encoded string\n    for _, c\
    \ := range message {\n        if c >= 'a' && c <= 'z' {\n            encoded +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            encoded\
    \ += string(c + 32)\n        } else {\n            encoded += string(c)\n    \
    \    }\n    }\n    return encoded\n}\n", "    var encoded string\n    for _, c\
    \ := range message {\n        if c >= 'a' && c <= 'z' {\n            encoded +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            encoded\
    \ += string(c + 32)\n        } else {\n            encoded += string(c)\n    \
    \    }\n    }\n    return encoded\n}\n", "    var result string\n    for _, c\
    \ := range message {\n        if c >= 'a' && c <= 'z' {\n            result +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    return \"\"\
    \n}\n", "    return \"\"\n}\n", "    var encoded string\n    for _, char := range\
    \ message {\n        if char >= 'a' && char <= 'z' {\n            encoded += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'A' {\n            encoded += \"\
    C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n        }\
    \ else if char == 'I' {\n            encoded += \"K\"\n        } else if char\
    \ == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n  \
    \          encoded += \"S\"\n        } else if char == 'a' {\n            encoded\
    \ += \"c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n  \
    \      } else if char == 'i' {\n            encoded += \"k\"\n        } else if\
    \ char == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n\
    \            encoded += \"s\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    var\
    \ encoded string\n    for _, char := range message {\n        if char >= 'a' &&\
    \ char <= 'z' {\n            encoded += string(char - 32)\n        } else if char\
    \ >= 'A' && char <= 'Z' {\n            encoded += string(char + 32)\n        }\
    \ else if char == 'a' {\n            encoded += \"c\"\n        } else if char\
    \ == 'e' {\n            encoded += \"g\"\n        } else if char == 'i' {\n  \
    \          encoded += \"k\"\n        } else if char == 'o' {\n            encoded\
    \ += \"q\"\n        } else if char == 'u' {\n            encoded += \"y\"\n  \
    \      } else if char == 'A' {\n            encoded += \"C\"\n        } else if\
    \ char == 'E' {\n            encoded += \"G\"\n        } else if char == 'I' {\n\
    \            encoded += \"K\"\n        } else if char == 'O' {\n            encoded\
    \ += \"Q\"\n        } else if char == 'U' {\n            encoded += \"Y\"\n  \
    \      } else {\n            encoded += string(char)\n        }\n    }\n    return\
    \ encoded\n}\n", "    var encoded string\n    for _, char := range message {\n\
    \        if char >= 'a' && char <= 'z' {\n            encoded += string(char -\
    \ 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'a' {\n            encoded += \"\
    c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n        }\
    \ else if char == 'i' {\n            encoded += \"k\"\n        } else if char\
    \ == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n  \
    \          encoded += \"y\"\n        } else if char == 'A' {\n            encoded\
    \ += \"C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n  \
    \      } else if char == 'I' {\n            encoded += \"K\"\n        } else if\
    \ char == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    var result string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   result += string(char - 32)\n        } else if char >= 'A' && char <= 'Z'\
    \ {\n            result += string(char + 32)\n        } else {\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    // TODO: Implement\n\
    \    return \"\"\n}\n", "    return \"\"\n}\n", "    // TODO\n    return \"\"\n\
    }\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    // Write your code here\n    return \"\"\n}\n", "    return \"\"\n}\n", " \
    \   return \"\"\n}\n", "    var result string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var result\
    \ string\n    for _, char := range message {\n        if char >= 'a' && char <=\
    \ 'z' {\n            result += string(char - 32)\n        } else if char >= 'A'\
    \ && char <= 'Z' {\n            result += string(char + 32)\n        } else {\n\
    \            result += string(char)\n        }\n    }\n    return result\n}\n",
  "    return \"\"\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    return\
    \ \"\"\n}\n", "    var encoded string\n    for _, char := range message {\n  \
    \      if char >= 'a' && char <= 'z' {\n            encoded += string(char - 32)\n\
    \        } else if char >= 'A' && char <= 'Z' {\n            encoded += string(char\
    \ + 32)\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n  \
    \      } else if char == 'E' {\n            encoded += \"G\"\n        } else if\
    \ char == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n\
    \            encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    return \"\"\n}\n", "    var result string\n    for _, c := range message {\n\
    \        if c >= 'a' && c <= 'z' {\n            c = c - 32\n        }\n      \
    \  if c == 'A' {\n            c = 'C'\n        } else if c == 'E' {\n        \
    \    c = 'G'\n        } else if c == 'I' {\n            c = 'K'\n        } else\
    \ if c == 'O' {\n            c = 'Q'\n        } else if c == 'U' {\n         \
    \   c = 'S'\n        }\n        result += string(c)\n    }\n    return result\n\
    }\n", "    var encoded string\n    for _, c := range message {\n        if c >=\
    \ 'a' && c <= 'z' {\n            encoded += string(c - 32)\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n        } else\
    \ {\n            encoded += string(c)\n        }\n    }\n    return encoded\n\
    }\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    var encoded string\n    for _, char := range message {\n        if char >=\
    \ 'a' && char <= 'z' {\n            encoded += string(char - 32)\n        } else\
    \ if char >= 'A' && char <= 'Z' {\n            encoded += string(char + 32)\n\
    \        } else if char == 'a' {\n            encoded += \"c\"\n        } else\
    \ if char == 'e' {\n            encoded += \"g\"\n        } else if char == 'i'\
    \ {\n            encoded += \"k\"\n        } else if char == 'o' {\n         \
    \   encoded += \"q\"\n        } else if char == 'u' {\n            encoded +=\
    \ \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n     \
    \   } else if char == 'E' {\n            encoded += \"G\"\n        } else if char\
    \ == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n  \
    \          encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    var result string\n    for _, v := range\
    \ message {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 32)\n        } else if v >= 'A' && v <= 'Z' {\n            result += string(v\
    \ + 32)\n        } else {\n            result += string(v)\n        }\n    }\n\
    \    return result\n}\n", "    // TODO: Implement me!\n    return \"\"\n}\n",
  "    return \"\"\n}\n", "    var result string\n    for _, c := range message {\n\
    \        if c >= 'a' && c <= 'z' {\n            result += string(c - 'a' + 'A')\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c - 'A'\
    \ + 'a')\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    // TODO: implement\n    return \"\"\n}\n", "  \
    \  var encoded string\n    for _, char := range message {\n        if char >=\
    \ 'a' && char <= 'z' {\n            encoded += string(char - 32)\n        } else\
    \ if char >= 'A' && char <= 'Z' {\n            encoded += string(char + 32)\n\
    \        } else if char == 'a' {\n            encoded += \"c\"\n        } else\
    \ if char == 'e' {\n            encoded += \"g\"\n        } else if char == 'i'\
    \ {\n            encoded += \"k\"\n        } else if char == 'o' {\n         \
    \   encoded += \"q\"\n        } else if char == 'u' {\n            encoded +=\
    \ \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n     \
    \   } else if char == 'E' {\n            encoded += \"G\"\n        } else if char\
    \ == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n  \
    \          encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    return \"\"\n}\n", "    var encoded string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            encoded += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'a' {\n            encoded += \"\
    c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n        }\
    \ else if char == 'i' {\n            encoded += \"k\"\n        } else if char\
    \ == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n  \
    \          encoded += \"y\"\n        } else if char == 'A' {\n            encoded\
    \ += \"C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n  \
    \      } else if char == 'I' {\n            encoded += \"K\"\n        } else if\
    \ char == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    var encoded string\n    for\
    \ _, char := range message {\n        if char >= 'a' && char <= 'z' {\n      \
    \      encoded += string(char - 32)\n        } else if char >= 'A' && char <=\
    \ 'Z' {\n            encoded += string(char + 32)\n        } else if char == 'A'\
    \ {\n            encoded += \"C\"\n        } else if char == 'E' {\n         \
    \   encoded += \"G\"\n        } else if char == 'I' {\n            encoded +=\
    \ \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n     \
    \   } else if char == 'U' {\n            encoded += \"S\"\n        } else if char\
    \ == 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n  \
    \          encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"s\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var encoded string\n    for _, char := range message {\n        if char >=\
    \ 'a' && char <= 'z' {\n            encoded += string(char - 32)\n        } else\
    \ if char >= 'A' && char <= 'Z' {\n            encoded += string(char + 32)\n\
    \        } else if char == 'A' {\n            encoded += \"C\"\n        } else\
    \ if char == 'E' {\n            encoded += \"G\"\n        } else if char == 'I'\
    \ {\n            encoded += \"K\"\n        } else if char == 'O' {\n         \
    \   encoded += \"Q\"\n        } else if char == 'U' {\n            encoded +=\
    \ \"S\"\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"s\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    var result string\n    for _, char := range\
    \ message {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    var result string\n    for _, char\
    \ := range message {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       result += string(char + 32)\n        } else {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   result += string(char - 32)\n        } else if char >= 'A' && char <= 'Z'\
    \ {\n            result += string(char + 32)\n        } else {\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    // TODO: implement\n\
    \    return \"\"\n}\n", "    var encoded string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            encoded += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'a' {\n            encoded += \"\
    c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n        }\
    \ else if char == 'i' {\n            encoded += \"k\"\n        } else if char\
    \ == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n  \
    \          encoded += \"y\"\n        } else if char == 'A' {\n            encoded\
    \ += \"C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n  \
    \      } else if char == 'I' {\n            encoded += \"K\"\n        } else if\
    \ char == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    var result string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   result += string(char - 32)\n        } else if char >= 'A' && char <= 'Z'\
    \ {\n            result += string(char + 32)\n        } else {\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    var encoded\
    \ string\n    for _, char := range message {\n        if char >= 'a' && char <=\
    \ 'z' {\n            encoded += string(char - 32)\n        } else if char >= 'A'\
    \ && char <= 'Z' {\n            encoded += string(char + 32)\n        } else if\
    \ char == 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n\
    \            encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    return \"\"\n}\n", "    // TODO: implement\n    return \"\"\n}\n", "    var\
    \ encoded string\n    for _, char := range message {\n        if char >= 'a' &&\
    \ char <= 'z' {\n            encoded += string(char - 32)\n        } else if char\
    \ >= 'A' && char <= 'Z' {\n            encoded += string(char + 32)\n        }\
    \ else if char == 'a' {\n            encoded += \"c\"\n        } else if char\
    \ == 'e' {\n            encoded += \"g\"\n        } else if char == 'i' {\n  \
    \          encoded += \"k\"\n        } else if char == 'o' {\n            encoded\
    \ += \"q\"\n        } else if char == 'u' {\n            encoded += \"y\"\n  \
    \      } else if char == 'A' {\n            encoded += \"C\"\n        } else if\
    \ char == 'E' {\n            encoded += \"G\"\n        } else if char == 'I' {\n\
    \            encoded += \"K\"\n        } else if char == 'O' {\n            encoded\
    \ += \"Q\"\n        } else if char == 'U' {\n            encoded += \"Y\"\n  \
    \      } else {\n            encoded += string(char)\n        }\n    }\n    return\
    \ encoded\n}\n", "    var result string\n    for _, char := range message {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string(char -\
    \ 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result += string(char\
    \ + 32)\n        } else {\n            result += string(char)\n        }\n   \
    \ }\n    return result\n}\n", "    return \"\"\n}\n", "    var result string\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string(char - 32)\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            result += string(char + 32)\n        } else {\n      \
    \      result += string(char)\n        }\n    }\n    return result\n}\n", "  \
    \  var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    return result\n}\n", "   \
    \ var encoded string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            encoded += string(c - 'a' + 'A')\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            encoded += string(c - 'A' + 'a')\n     \
    \   } else if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n   \
    \         encoded += string(c + 2)\n        } else if c == 'A' || c == 'E' ||\
    \ c == 'I' || c == 'O' || c == 'U' {\n            encoded += string(c + 2)\n \
    \       } else {\n            encoded += string(c)\n        }\n    }\n    return\
    \ encoded\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    var result\
    \ string\n    for _, char := range message {\n        if char >= 'a' && char <=\
    \ 'z' {\n            result += string(char - 'a' + 'A')\n        } else if char\
    \ >= 'A' && char <= 'Z' {\n            result += string(char - 'A' + 'a')\n  \
    \      } else if char == 'a' || char == 'e' || char == 'i' || char == 'o' || char\
    \ == 'u' {\n            result += string(char + 2)\n        } else if char ==\
    \ 'A' || char == 'E' || char == 'I' || char == 'O' || char == 'U' {\n        \
    \    result += string(char + 2)\n        } else {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    return\
    \ \"\"\n}\n", "    return \"\"\n}\n", "    var result string\n    for _, c :=\
    \ range message {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    return \"\
    \"\n}\n", "    var result string\n    for _, c := range message {\n        if\
    \ c >= 'a' && c <= 'z' {\n            result += string(c - 'a' + 'A')\n      \
    \  } else if c >= 'A' && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    var encoded\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            encoded += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            encoded += string(c + 32)\n        } else {\n            encoded\
    \ += string(c)\n        }\n    }\n    return encoded\n}\n", "    return \"\"\n\
    }\n", "    var result string\n    for _, c := range message {\n        if c >=\
    \ 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   // TODO: implement\n    return \"\"\n}\n", "    var encoded string\n    for\
    \ _, char := range message {\n        if char >= 'a' && char <= 'z' {\n      \
    \      encoded += string(char - 'a' + 'A')\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            encoded += string(char - 'A' + 'a')\n        } else if\
    \ char == 'a' || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n\
    \            encoded += string(char + 2)\n        } else if char == 'A' || char\
    \ == 'E' || char == 'I' || char == 'O' || char == 'U' {\n            encoded +=\
    \ string(char + 2)\n        } else {\n            encoded += string(char)\n  \
    \      }\n    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    var encoded\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            encoded += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            encoded += string(c + 32)\n        } else {\n            encoded\
    \ += string(c)\n        }\n    }\n    return encoded\n}\n", "    var encoded string\n\
    \    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n        \
    \    encoded += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n   \
    \         encoded += string(c + 32)\n        } else {\n            encoded +=\
    \ string(c)\n        }\n    }\n    return encoded\n}\n", "    var encoded string\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            encoded += string(char - 32)\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            encoded += string(char + 32)\n        } else if char ==\
    \ 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n     \
    \       encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var result string\n    for _, char := range message {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string(char - 32)\n        } else if\
    \ char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n    \
    \    } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    return \"\
    \"\n}\n", "    var encoded string\n    for _, char := range message {\n      \
    \  if char >= 'a' && char <= 'z' {\n            encoded += string(char - 32)\n\
    \        } else if char >= 'A' && char <= 'Z' {\n            encoded += string(char\
    \ + 32)\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n  \
    \      } else if char == 'E' {\n            encoded += \"G\"\n        } else if\
    \ char == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n\
    \            encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    var result string\n    for _, char := range message {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string(char - 32)\n        } else if\
    \ char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n    \
    \    } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    return \"\
    \"\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "    var encoded string\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            encoded += string(char - 32)\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            encoded += string(char + 32)\n        } else if char ==\
    \ 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n     \
    \       encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"S\"\n        } else if\
    \ char == 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n\
    \            encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"s\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var encoded string\n    for _, char := range message {\n        if char >=\
    \ 'a' && char <= 'z' {\n            encoded += string(char - 32)\n        } else\
    \ if char >= 'A' && char <= 'Z' {\n            encoded += string(char + 32)\n\
    \        } else if char == 'a' {\n            encoded += \"c\"\n        } else\
    \ if char == 'e' {\n            encoded += \"g\"\n        } else if char == 'i'\
    \ {\n            encoded += \"k\"\n        } else if char == 'o' {\n         \
    \   encoded += \"q\"\n        } else if char == 'u' {\n            encoded +=\
    \ \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n     \
    \   } else if char == 'E' {\n            encoded += \"G\"\n        } else if char\
    \ == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n  \
    \          encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    var encoded string\n    for _, char :=\
    \ range message {\n        if char >= 'a' && char <= 'z' {\n            encoded\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       encoded += string(char + 32)\n        } else if char == 'a' {\n      \
    \      encoded += \"c\"\n        } else if char == 'e' {\n            encoded\
    \ += \"g\"\n        } else if char == 'i' {\n            encoded += \"k\"\n  \
    \      } else if char == 'o' {\n            encoded += \"q\"\n        } else if\
    \ char == 'u' {\n            encoded += \"y\"\n        } else if char == 'A' {\n\
    \            encoded += \"C\"\n        } else if char == 'E' {\n            encoded\
    \ += \"G\"\n        } else if char == 'I' {\n            encoded += \"K\"\n  \
    \      } else if char == 'O' {\n            encoded += \"Q\"\n        } else if\
    \ char == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(char)\n        }\n    }\n    return encoded\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string(char - 32)\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            result += string(char + 32)\n        } else {\n      \
    \      result += string(char)\n        }\n    }\n    return result\n}\n", "  \
    \  var result string\n    for _, char := range message {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string(char - 32)\n        } else if\
    \ char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n    \
    \    } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, c := range message {\n    \
    \    if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n       \
    \ } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n   \
    \     } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, c := range message {\n    \
    \    if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n       \
    \ } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n   \
    \     } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    var encoded string\n    for _, c := range message {\n   \
    \     if c >= 'a' && c <= 'z' {\n            encoded += string(c - 32)\n     \
    \   } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n\
    \        } else {\n            encoded += string(c)\n        }\n    }\n    return\
    \ encoded\n}\n", "    var encoded string\n    for _, c := range message {\n  \
    \      if c >= 'a' && c <= 'z' {\n            encoded += string(c - 32)\n    \
    \    } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n\
    \        } else {\n            encoded += string(c)\n        }\n    }\n    return\
    \ encoded\n}\n", "    var encoded string\n    for _, char := range message {\n\
    \        if char >= 'a' && char <= 'z' {\n            encoded += string(char -\
    \ 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'a' {\n            encoded += \"\
    c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n        }\
    \ else if char == 'i' {\n            encoded += \"k\"\n        } else if char\
    \ == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n  \
    \          encoded += \"y\"\n        } else if char == 'A' {\n            encoded\
    \ += \"C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n  \
    \      } else if char == 'I' {\n            encoded += \"K\"\n        } else if\
    \ char == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    var\
    \ result string\n    for _, c := range message {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 'a' + 'A')\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   return \"\"\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

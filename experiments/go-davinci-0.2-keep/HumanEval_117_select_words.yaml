name: HumanEval_117_select_words
language: go_test.go
prompt: "package select_words_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Given a string s and a natural number n, you have been tasked to implement \n\
  // a function that returns a list of all words from string s that contain exactly\
  \ \n// n consonants, in order these words appear in the string s.\n// If the string\
  \ s is empty then the function should return an empty list.\n// Note: you may assume\
  \ the input string contains only letters and spaces.\n// Examples:\n// select_words(\"\
  Mary had a little lamb\", 4) ==> [\"little\"]\n// select_words(\"Mary had a little\
  \ lamb\", 3) ==> [\"Mary\", \"lamb\"]\n// select_words(\"simple white space\", 2)\
  \ ==> []\n// select_words(\"Hello world\", 4) ==> [\"world\"]\n// select_words(\"\
  Uncle sam\", 3) ==> [\"Uncle\"]\nfunc select_words(s string, n int) []string {\n"
tests: "func TestSelect_Words(t *testing.T) {\n  candidate := select_words\n\ttype\
  \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
  \ := []test{\n     { actual: candidate(\"Mary had a little lamb\", 4), expected:\
  \ []string{\"little\"} },\n     { actual: candidate(\"Mary had a little lamb\",\
  \ 3), expected: []string{\"Mary\", \"lamb\"} },\n     { actual: candidate(\"simple\
  \ white space\", 2), expected: []string{} },\n     { actual: candidate(\"Hello world\"\
  , 4), expected: []string{\"world\"} },\n     { actual: candidate(\"Uncle sam\",\
  \ 3), expected: []string{\"Uncle\"} },\n     { actual: candidate(\"\", 4), expected:\
  \ []string{} },\n     { actual: candidate(\"a b c d e f\", 1), expected: []string{\"\
  b\", \"c\", \"d\", \"f\"} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    var words []string\n    var word string\n    var count int\n  \
    \  for _, c := range s {\n        if c == ' ' {\n            if count == n {\n\
    \                words = append(words, word)\n            }\n            word\
    \ = \"\"\n            count = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               count++\n            }\n        }\n    }\n    if count == n {\n\
    \        words = append(words, word)\n    }\n    return words\n}\n", "    var\
    \ words []string\n    var word string\n    var consonants int\n    for _, char\
    \ := range s {\n        if char == ' ' {\n            if consonants == n {\n \
    \               words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(char)\n\
    \            if isConsonant(char) {\n                consonants++\n          \
    \  }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var consonants\
    \ int\n    var word string\n    for _, char := range s {\n        if char == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            consonants = 0\n            word = \"\"\n\
    \        } else {\n            if isConsonant(char) {\n                consonants++\n\
    \            }\n            word += string(char)\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              result = append(result, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if isConsonant(c) {\n   \
    \             consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n            word += string(c)\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, char := range s {\n        if char == ' '\
    \ {\n            if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(char)\n            if isConsonant(char) {\n\
    \                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    for _, word := range split(s) {\n        if countConsonants(word)\
    \ == n {\n            words = append(words, word)\n        }\n    }\n    return\
    \ words\n}\n", "    var result []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                result = append(result, word)\n            }\n     \
    \       word = \"\"\n            consonants = 0\n        } else {\n          \
    \  word += string(c)\n            if isConsonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var result []string\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if len(word) >\
    \ 0 {\n                if count_consonants(word) == n {\n                    result\
    \ = append(result, word)\n                }\n                word = \"\"\n   \
    \         }\n        } else {\n            word += string(c)\n        }\n    }\n\
    \    if len(word) > 0 {\n        if count_consonants(word) == n {\n          \
    \  result = append(result, word)\n        }\n    }\n    return result\n}\n", " \
    \   var result []string\n    var consonants = map[string]bool{\n        \"b\"\
    : true,\n        \"c\": true,\n        \"d\": true,\n        \"f\": true,\n  \
    \      \"g\": true,\n        \"h\": true,\n        \"j\": true,\n        \"k\"\
    : true,\n        \"l\": true,\n        \"m\": true,\n        \"n\": true,\n  \
    \      \"p\": true,\n        \"q\": true,\n        \"r\": true,\n        \"s\"\
    : true,\n        \"t\": true,\n        \"v\": true,\n        \"w\": true,\n  \
    \      \"x\": true,\n        \"y\": true,\n        \"z\": true,\n    }\n    var\
    \ words = strings.Split(s, \" \")\n    for _, word := range words {\n        var\
    \ count = 0\n        for _, letter := range word {\n            if consonants[strings.ToLower(string(letter))]\
    \ {\n                count++\n            }\n        }\n        if count == n\
    \ {\n            result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    var result []string\n    var consonants int\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                result = append(result, word)\n            }\n        \
    \    consonants = 0\n            word = \"\"\n        } else {\n            word\
    \ += string(c)\n            if isConsonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    // your code here\n    return nil\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   var isConsonant bool\n    for _, c := range s {\n        if c == ' ' {\n \
    \           if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        \
    \    continue\n        }\n        isConsonant = true\n        switch c {\n   \
    \     case 'a', 'e', 'i', 'o', 'u':\n            isConsonant = false\n       \
    \ }\n        if isConsonant {\n            consonants++\n        }\n        word\
    \ += string(c)\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              result = append(result, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if isConsonant(c) {\n   \
    \             consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var result []string\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if count_consonants(word)\
    \ == n {\n                result = append(result, word)\n            }\n     \
    \       word = \"\"\n        } else {\n            word += string(c)\n       \
    \ }\n    }\n    if count_consonants(word) == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, char := range s {\n        if char\
    \ == ' ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            if isConsonant(char) {\n                consonants++\n\
    \            }\n            word += string(char)\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var result []string\n    var words []string\n    var word string\n    var consonants\
    \ int\n    var vowels = \"aeiou\"\n    var isVowel bool\n    var isConsonant bool\n\
    \    var isSpace bool\n    var isLetter bool\n    var isWord bool\n    var isConsonantCount\
    \ bool\n    var isWordCount bool\n    var isWordCountZero bool\n    var isWordCountOne\
    \ bool\n    var isWordCountTwo bool\n    var isWordCountThree bool\n    var isWordCountFour\
    \ bool\n    var isWordCountFive bool\n    var isWordCountSix bool\n    var isWordCountSeven\
    \ bool\n    var isWordCountEight bool\n    var isWordCountNine bool\n    var isWordCountTen\
    \ bool\n    var isWordCountEleven bool\n    var isWordCountTwelve bool\n    var\
    \ isWordCountThirteen bool\n    var isWordCountFourteen bool\n    var isWordCountFifteen\
    \ bool\n    var isWordCountSixteen bool\n    var isWordCountSeventeen bool\n \
    \   var isWordCountEighteen bool\n    var isWordCountNineteen bool\n    var isWordCountTwenty\
    \ bool\n    var isWordCountTwentyOne bool\n    var isWordCountTwentyTwo bool\n\
    \    var isWordCountTwentyThree bool\n    var isWordCountTwentyFour bool\n   \
    \ var isWordCountTwentyFive bool\n    var isWordCountTwentySix bool\n    var isWordCountTwentySeven\
    \ bool\n    var isWordCountTwentyEight bool\n    var isWordCountTwentyNine bool\n\
    \    var isWordCountThirty bool\n    var isWordCountThirtyOne bool\n    var isWordCountThirtyTwo\
    \ bool\n    var isWordCountThirtyThree bool\n    var isWordCountThirtyFour bool\n\
    \    var isWordCountThirtyFive bool\n    var isWordCountThirtySix bool\n    var\
    \ isWordCountThirtySeven bool\n    var isWordCountThirtyEight bool\n    var isWordCountThirtyNine\
    \ bool\n    var isWordCountForty bool\n    var isWordCountFortyOne bool\n    var\
    \ isWordCountFortyTwo bool\n    var isWordCountFortyThree bool\n    var isWordCountFortyFour\
    \ bool\n    var isWordCountFortyFive bool\n    var isWordCountFortySix bool\n\
    \    var isWordCountFortySeven bool\n", "    var words []string\n    var word\
    \ string\n    for _, char := range s {\n        if char == ' ' {\n           \
    \ if count_consonants(word) == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n        } else {\n            word +=\
    \ string(char)\n        }\n    }\n    if count_consonants(word) == n {\n     \
    \   words = append(words, word)\n    }\n    return words\n}\n", "    var words\
    \ []string\n    var word string\n    var consonants int\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \        consonants = 0\n        } else {\n            word += string(c)\n   \
    \         if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n    \
    \            consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var consonants = map[rune]bool{\n        'b': true,\n\
    \        'c': true,\n        'd': true,\n        'f': true,\n        'g': true,\n\
    \        'h': true,\n        'j': true,\n        'k': true,\n        'l': true,\n\
    \        'm': true,\n        'n': true,\n        'p': true,\n        'q': true,\n\
    \        'r': true,\n        's': true,\n        't': true,\n        'v': true,\n\
    \        'w': true,\n        'x': true,\n        'y': true,\n        'z': true,\n\
    \    }\n    var word = \"\"\n    var count = 0\n    for _, c := range s {\n  \
    \      if c == ' ' {\n            if count == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            count = 0\n     \
    \   } else {\n            word += string(c)\n            if consonants[c] {\n\
    \                count++\n            }\n        }\n    }\n    if count == n {\n\
    \        result = append(result, word)\n    }\n    return result\n}\n", "    var\
    \ words []string\n    var word string\n    var consonants int\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if consonants == n {\n       \
    \         words = append(words, word)\n            }\n            word = \"\"\n\
    \            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    // your code here\n    return nil\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if isConsonant(c) {\n   \
    \             consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    var isWord\
    \ bool\n    for _, c := range s {\n        if c == ' ' {\n            if isWord\
    \ {\n                if consonants == n {\n                    words = append(words,\
    \ word)\n                }\n                word = \"\"\n                consonants\
    \ = 0\n                isWord = false\n            }\n        } else {\n     \
    \       isWord = true\n            if c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u' {\n                consonants = 0\n            } else {\n  \
    \              consonants++\n            }\n            word += string(c)\n  \
    \      }\n    }\n    if isWord && consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if isConsonant(c) {\n   \
    \             consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    // your code here\n    return nil\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, char := range s {\n        if char\
    \ == ' ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(char)\n            if isConsonant(char)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    for _, word := range(strings.Split(s, \" \")) {\n \
    \       if len(word) == n {\n            words = append(words, word)\n       \
    \ }\n    }\n    return words\n}\n", "    var result []string\n    var word string\n\
    \    var consonants int\n    for i := 0; i < len(s); i++ {\n        if s[i] !=\
    \ ' ' {\n            word += string(s[i])\n            if s[i] != 'a' && s[i]\
    \ != 'e' && s[i] != 'i' && s[i] != 'o' && s[i] != 'u' {\n                consonants++\n\
    \            }\n        } else {\n            if consonants == n {\n         \
    \       result = append(result, word)\n            }\n            word = \"\"\n\
    \            consonants = 0\n        }\n    }\n    if consonants == n {\n    \
    \    result = append(result, word)\n    }\n    return result\n}\n", "    var result\
    \ []string\n    var word string\n    var consonants int\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   result = append(result, word)\n            }\n            word = \"\"\n  \
    \          consonants = 0\n        } else {\n            word += string(c)\n \
    \           if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                if count_consonants(word) == n {\n                  \
    \  result = append(result, word)\n                }\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        if count_consonants(word) == n {\n   \
    \         result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    var words []string\n    var word string\n    for _, c := range s {\n\
    \        if c == ' ' {\n            if len(word) > 0 {\n                words\
    \ = append(words, word)\n                word = \"\"\n            }\n        }\
    \ else {\n            word += string(c)\n        }\n    }\n    if len(word) >\
    \ 0 {\n        words = append(words, word)\n    }\n    var result []string\n \
    \   for _, word := range words {\n        if count_consonants(word) == n {\n \
    \           result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    // your code here\n    return nil\n}\n", "    var words []string\n\
    \    var word string\n    var consonants int\n    for _, c := range s {\n    \
    \    if c == ' ' {\n            if consonants == n {\n                words =\
    \ append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            word += string(c)\n            if c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, char := range s {\n        if char\
    \ == ' ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(char)\n            if isConsonant(char)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var words []string\n    var consonants int\n    var\
    \ vowels = \"aeiou\"\n    var word string\n    var is_consonant bool\n    var\
    \ is_vowel bool\n    var is_space bool\n    var is_letter bool\n    var is_consonant_count_zero\
    \ bool\n    var is_consonant_count_equal_to_n bool\n    var is_consonant_count_greater_than_n\
    \ bool\n    var is_consonant_count_less_than_n bool\n    var is_consonant_count_greater_than_zero\
    \ bool\n    var is_consonant_count_less_than_n_minus_one bool\n    var is_consonant_count_equal_to_n_minus_one\
    \ bool\n    var is_consonant_count_equal_to_n_plus_one bool\n    var is_consonant_count_equal_to_n_plus_two\
    \ bool\n    var is_consonant_count_equal_to_n_plus_three bool\n    var is_consonant_count_equal_to_n_plus_four\
    \ bool\n    var is_consonant_count_equal_to_n_plus_five bool\n    var is_consonant_count_equal_to_n_plus_six\
    \ bool\n    var is_consonant_count_equal_to_n_plus_seven bool\n    var is_consonant_count_equal_to_n_plus_eight\
    \ bool\n    var is_consonant_count_equal_to_n_plus_nine bool\n    var is_consonant_count_equal_to_n_plus_ten\
    \ bool\n    var is_consonant_count_equal_to_n_plus_eleven bool\n    var is_consonant_count_equal_to_n_plus_twelve\
    \ bool\n    var is_consonant_count_equal_to_n_plus_thirteen bool\n    var is_consonant_count_equal_to_n_plus_fourteen\
    \ bool\n    var is_consonant_count_equal_to_n_plus_fifteen bool\n", "    var words\
    \ []string\n    var word string\n    var consonants int\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \        consonants = 0\n        } else {\n            word += string(c)\n   \
    \         if isConsonant(c) {\n                consonants++\n            }\n \
    \       }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var result []string\n    var word string\n\
    \    var consonants int\n    for _, letter := range s {\n        if letter ==\
    \ ' ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(letter)\n            if isConsonant(letter)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var word string\n    var count int\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if count == n {\n            \
    \    words = append(words, word)\n            }\n            word = \"\"\n   \
    \         count = 0\n        } else {\n            word += string(c)\n       \
    \     if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n        \
    \        count++\n            }\n        }\n    }\n    if count == n {\n     \
    \   words = append(words, word)\n    }\n    return words\n}\n", "    var words\
    \ []string\n    var word string\n    var consonants int\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \        consonants = 0\n        } else {\n            word += string(c)\n   \
    \         if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n    \
    \            consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    for _, c := range s {\n     \
    \   if c == ' ' {\n            if count_consonants(word) == n {\n            \
    \    result = append(result, word)\n            }\n            word = \"\"\n \
    \       } else {\n            word += string(c)\n        }\n    }\n    if count_consonants(word)\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    for _, char := range s {\n  \
    \      if char == ' ' {\n            if count_consonants(word) == n {\n      \
    \          result = append(result, word)\n            }\n            word = \"\
    \"\n        } else {\n            word += string(char)\n        }\n    }\n   \
    \ if count_consonants(word) == n {\n        result = append(result, word)\n  \
    \  }\n    return result\n}\n", "    var result []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                result = append(result, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    words := []string{}\n    for _, word := range\
    \ strings.Split(s, \" \") {\n        if len(word) == n {\n            words =\
    \ append(words, word)\n        }\n    }\n    return words\n}\n", "    var result\
    \ []string\n    var word string\n    var consonants int\n    var vowels = \"aeiou\"\
    \n    for _, char := range s {\n        if char == ' ' {\n            if consonants\
    \ == n {\n                result = append(result, word)\n            }\n     \
    \       word = \"\"\n            consonants = 0\n        } else {\n          \
    \  word += string(char)\n            if !strings.Contains(vowels, string(char))\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var consonants\
    \ int\n    var word string\n    var isWord bool\n\n    for _, c := range s {\n\
    \        if c == ' ' {\n            if isWord {\n                if consonants\
    \ == n {\n                    words = append(words, word)\n                }\n\
    \                consonants = 0\n                word = \"\"\n               \
    \ isWord = false\n            }\n        } else {\n            isWord = true\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n            word += string(c)\n \
    \       }\n    }\n\n    if isWord && consonants == n {\n        words = append(words,\
    \ word)\n    }\n\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var words\
    \ []string\n    var word string\n    var consonants int\n    var vowels = \"aeiou\"\
    \n    var isVowel bool\n    var isConsonant bool\n    var isSpace bool\n    var\
    \ isLetter bool\n    var isWord bool\n    var isConsonantCount bool\n    var isWordCount\
    \ bool\n    var isConsonantCountReset bool\n    var isWordCountReset bool\n  \
    \  var isWordAdded bool\n    var isWordAddedReset bool\n    var isWordAddedReset2\
    \ bool\n    var isWordAddedReset3 bool\n    var isWordAddedReset4 bool\n    var\
    \ isWordAddedReset5 bool\n    var isWordAddedReset6 bool\n    var isWordAddedReset7\
    \ bool\n    var isWordAddedReset8 bool\n    var isWordAddedReset9 bool\n    var\
    \ isWordAddedReset10 bool\n    var isWordAddedReset11 bool\n    var isWordAddedReset12\
    \ bool\n    var isWordAddedReset13 bool\n    var isWordAddedReset14 bool\n   \
    \ var isWordAddedReset15 bool\n    var isWordAddedReset16 bool\n    var isWordAddedReset17\
    \ bool\n    var isWordAddedReset18 bool\n    var isWordAddedReset19 bool\n   \
    \ var isWordAddedReset20 bool\n    var isWordAddedReset21 bool\n    var isWordAddedReset22\
    \ bool\n    var isWordAddedReset23 bool\n    var isWordAddedReset24 bool\n   \
    \ var isWordAddedReset25 bool\n    var isWordAddedReset26 bool\n    var isWordAddedReset27\
    \ bool\n    var isWordAddedReset28 bool\n    var isWordAddedReset29 bool\n   \
    \ var isWordAddedReset30 bool\n    var isWordAddedReset31 bool\n    var isWordAddedReset32\
    \ bool\n    var isWordAddedReset33 bool\n    var isWordAddedReset34 bool\n   \
    \ var isWordAddedReset35 bool\n    var isWordAddedReset36 bool\n    var isWordAddedReset37\
    \ bool\n    var isWordAddedReset38 bool\n    var isWordAddedReset39 bool\n   \
    \ var isWordAddedReset40 bool\n   ", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, char := range s {\n        if char == ' ' {\n           \
    \ if count_consonants(word) == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n        } else {\n            word +=\
    \ string(char)\n        }\n    }\n    if count_consonants(word) == n {\n     \
    \   words = append(words, word)\n    }\n    return words\n}\n", "    var words\
    \ []string\n    var consonants int\n    var word string\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   words = append(words, word)\n            }\n            consonants = 0\n \
    \           word = \"\"\n        } else {\n            word += string(c)\n   \
    \         if isConsonant(c) {\n                consonants++\n            }\n \
    \       }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if isConsonant(c) {\n   \
    \             consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ char := range s {\n        if char == ' ' {\n            if consonants == n\
    \ {\n                result = append(result, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(char)\n            if isConsonant(char) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, char := range s {\n        if char\
    \ == ' ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(char)\n            if char != 'a'\
    \ && char != 'e' && char != 'i' && char != 'o' && char != 'u' {\n            \
    \    consonants++\n            }\n        }\n    }\n    if consonants == n {\n\
    \        words = append(words, word)\n    }\n    return words\n}\n", "    var\
    \ result []string\n    var word string\n    var consonants int\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if consonants == n {\n       \
    \         result = append(result, word)\n            }\n            word = \"\"\
    \n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var res []string\n    var word string\n    var count int\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if count == n {\n\
    \                res = append(res, word)\n            }\n            word = \"\
    \"\n            count = 0\n        } else {\n            word += string(c)\n \
    \           if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n  \
    \              count++\n            }\n        }\n    }\n    if count == n {\n\
    \        res = append(res, word)\n    }\n    return res\n}\n", "    var result\
    \ []string\n    var consonants int\n    var word string\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   result = append(result, word)\n            }\n            consonants = 0\n\
    \            word = \"\"\n        } else {\n            if !isVowel(c) {\n   \
    \             consonants++\n            }\n            word += string(c)\n   \
    \     }\n    }\n    if consonants == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if isConsonant(c) {\n   \
    \             consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var result []string\n    var consonants =\
    \ map[rune]bool{\n        'b': true,\n        'c': true,\n        'd': true,\n\
    \        'f': true,\n        'g': true,\n        'h': true,\n        'j': true,\n\
    \        'k': true,\n        'l': true,\n        'm': true,\n        'n': true,\n\
    \        'p': true,\n        'q': true,\n        'r': true,\n        's': true,\n\
    \        't': true,\n        'v': true,\n        'w': true,\n        'x': true,\n\
    \        'y': true,\n        'z': true,\n    }\n    var words = strings.Split(s,\
    \ \" \")\n    for _, word := range words {\n        var count = 0\n        for\
    \ _, letter := range word {\n            if _, ok := consonants[letter]; ok {\n\
    \                count += 1\n            }\n        }\n        if count == n {\n\
    \            result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    var result []string\n    var word string\n    for _, c := range s {\n\
    \        if c == ' ' {\n            if len(word) > 0 {\n                if count_consonants(word)\
    \ == n {\n                    result = append(result, word)\n                }\n\
    \                word = \"\"\n            }\n        } else {\n            word\
    \ += string(c)\n        }\n    }\n    if len(word) > 0 {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var result []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                result = append(result, word)\n            }\n     \
    \       word = \"\"\n            consonants = 0\n        } else {\n          \
    \  word += string(c)\n            if isConsonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var result []string\n    var consonants\
    \ int\n    var word string\n    for _, char := range s {\n        if char == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            consonants = 0\n            word = \"\"\n\
    \        } else {\n            word += string(char)\n            if isConsonant(char)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var result []string\n    var consonants = map[string]bool{\n        \"b\":\
    \ true,\n        \"c\": true,\n        \"d\": true,\n        \"f\": true,\n  \
    \      \"g\": true,\n        \"h\": true,\n        \"j\": true,\n        \"k\"\
    : true,\n        \"l\": true,\n        \"m\": true,\n        \"n\": true,\n  \
    \      \"p\": true,\n        \"q\": true,\n        \"r\": true,\n        \"s\"\
    : true,\n        \"t\": true,\n        \"v\": true,\n        \"w\": true,\n  \
    \      \"x\": true,\n        \"y\": true,\n        \"z\": true,\n    }\n    var\
    \ words = strings.Split(s, \" \")\n    for _, word := range words {\n        var\
    \ count = 0\n        for _, letter := range word {\n            if consonants[strings.ToLower(string(letter))]\
    \ {\n                count++\n            }\n        }\n        if count == n\
    \ {\n            result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    // your code here\n    return nil\n}\n", "    var words []string\n\
    \    var word string\n    var consonants int\n    for _, c := range s {\n    \
    \    if c == ' ' {\n            if consonants == n {\n                words =\
    \ append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if isConsonant(c) {\n   \
    \             consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              result = append(result, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var words []string\n    for _, word := range\
    \ split(s) {\n        if count_consonants(word) == n {\n            words = append(words,\
    \ word)\n        }\n    }\n    return words\n}\n", "    var result []string\n\
    \    var word string\n    var count int\n    for _, c := range s {\n        if\
    \ c == ' ' {\n            if count == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            count = 0\n     \
    \   } else {\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u' {\n                count++\n            }\n            word += string(c)\n\
    \        }\n    }\n    if count == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var result []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                result = append(result, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' {\n                consonants++\n            }\n            word += string(c)\n\
    \        }\n    }\n    if consonants == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if isConsonant(c) {\n   \
    \             consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var isWord bool\n    for _, c := range s\
    \ {\n        if c == ' ' {\n            if isWord {\n                if consonants\
    \ == n {\n                    words = append(words, word)\n                }\n\
    \                word = \"\"\n                consonants = 0\n               \
    \ isWord = false\n            }\n        } else {\n            isWord = true\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \            word += string(c)\n        }\n    }\n    if isWord && consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    for _, char := range s {\n   \
    \     if char == ' ' {\n            if len(word) == n {\n                words\
    \ = append(words, word)\n            }\n            word = \"\"\n        } else\
    \ {\n            word += string(char)\n        }\n    }\n    if len(word) == n\
    \ {\n        words = append(words, word)\n    }\n    return words\n}\n", "   \
    \ var result []string\n    var word string\n    var count int\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if count == n {\n            \
    \    result = append(result, word)\n            }\n            word = \"\"\n \
    \           count = 0\n        } else {\n            word += string(c)\n     \
    \       if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n      \
    \          count++\n            }\n        }\n    }\n    if count == n {\n   \
    \     result = append(result, word)\n    }\n    return result\n}\n", "    var\
    \ words []string\n    var word string\n    var consonants int\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if consonants == n {\n       \
    \         words = append(words, word)\n            }\n            word = \"\"\n\
    \            consonants = 0\n        } else {\n            if c != 'a' && c !=\
    \ 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n  \
    \          }\n            word += string(c)\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ char := range s {\n        if char == ' ' {\n            if consonants == n\
    \ {\n                result = append(result, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(char)\n            if isConsonant(char) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var count int\n    for _, c := range s {\n        if c == ' ' {\n\
    \            if count == n {\n                words = append(words, word)\n  \
    \          }\n            word = \"\"\n            count = 0\n        } else {\n\
    \            word += string(c)\n            if c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' {\n                count++\n            }\n        }\n\
    \    }\n    if count == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if isConsonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    return nil\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, char := range s {\n        if char == ' ' {\n            if\
    \ consonants == n {\n                words = append(words, word)\n           \
    \ }\n            word = \"\"\n            consonants = 0\n        } else {\n \
    \           word += string(char)\n            if char != 'a' && char != 'e' &&\
    \ char != 'i' && char != 'o' && char != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var consonants int\n    var word string\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              result = append(result, word)\n            }\n            consonants\
    \ = 0\n            word = \"\"\n        } else {\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n            word += string(c)\n\
    \        }\n    }\n    if consonants == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var vowels = \"aeiou\"\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if consonants == n {\n       \
    \         words = append(words, word)\n            }\n            word = \"\"\n\
    \            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if !strings.Contains(vowels, string(c)) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ char := range s {\n        if char == ' ' {\n            if consonants == n\
    \ {\n                result = append(result, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(char)\n            if isConsonant(char) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var result []string\n    var words\
    \ []string\n    var consonants int\n    var vowels = \"aeiou\"\n    var word string\n\
    \    var letter string\n    var isVowel bool\n    var isConsonant bool\n    var\
    \ isWord bool\n    var isSpace bool\n    var isLetter bool\n    var isEnd bool\n\
    \    var isStart bool\n    var isFirstLetter bool\n    var isLastLetter bool\n\
    \    var isFirstWord bool\n    var isLastWord bool\n    var isFirstSpace bool\n\
    \    var isLastSpace bool\n    var isFirstConsonant bool\n    var isLastConsonant\
    \ bool\n    var isFirstVowel bool\n    var isLastVowel bool\n    var isFirstLetterVowel\
    \ bool\n    var isLastLetterVowel bool\n    var isFirstLetterConsonant bool\n\
    \    var isLastLetterConsonant bool\n    var isFirstWordVowel bool\n    var isLastWordVowel\
    \ bool\n    var isFirstWordConsonant bool\n    var isLastWordConsonant bool\n\
    \    var isFirstSpaceVowel bool\n    var isLastSpaceVowel bool\n    var isFirstSpaceConsonant\
    \ bool\n    var isLastSpaceConsonant bool\n    var isFirstConsonantVowel bool\n\
    \    var isLastConsonantVowel bool\n    var isFirstConsonantConsonant bool\n \
    \   var isLastConsonantConsonant bool\n    var isFirstVowelVowel bool\n    var\
    \ isLastVowelVowel bool\n    var isFirstVowelConsonant bool\n    var isLastVowelConsonant\
    \ bool\n    var isFirstLetterVowelVowel bool\n    var isLastLetterVowelVowel bool\n\
    \    var isFirstLetterVowelConsonant bool\n    var isLastLetterVowelConsonant\
    \ bool\n    var isFirstLetterConsonantVowel bool\n    var isLastLetterConsonantVowel\
    \ bool\n    var isFirstLetterConsonantConsonant bool\n    var isLastLetterConsonantConsonant\
    \ bool\n    var isFirstWordVowelVowel bool\n    var isLastWordVowelVowel bool\n\
    \    var", "    var words []string\n    var word string\n    var consonants int\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if isConsonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    for _, c := range s {\n     \
    \   if c == ' ' {\n            if len(word) > 0 {\n                if count_consonants(word)\
    \ == n {\n                    result = append(result, word)\n                }\n\
    \                word = \"\"\n            }\n        } else {\n            word\
    \ += string(c)\n        }\n    }\n    if len(word) > 0 {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    // your code here\n    return nil\n}\n", "    var result\
    \ []string\n    var word string\n    var count int\n    for _, c := range s {\n\
    \        if c == ' ' {\n            if count == n {\n                result =\
    \ append(result, word)\n            }\n            word = \"\"\n            count\
    \ = 0\n        } else {\n            word += string(c)\n            if c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                count++\n\
    \            }\n        }\n    }\n    if count == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var res []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                res = append(res, word)\n   \
    \         }\n            word = \"\"\n            consonants = 0\n        } else\
    \ {\n            word += string(c)\n            if isConsonant(c) {\n        \
    \        consonants++\n            }\n        }\n    }\n    if consonants == n\
    \ {\n        res = append(res, word)\n    }\n    return res\n}\n", "    var words\
    \ []string\n    var word string\n    var consonants int\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \        consonants = 0\n        } else {\n            word += string(c)\n   \
    \         if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n    \
    \            consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var result []string\n    var consonants =\
    \ map[rune]bool{\n        'b': true,\n        'c': true,\n        'd': true,\n\
    \        'f': true,\n        'g': true,\n        'h': true,\n        'j': true,\n\
    \        'k': true,\n        'l': true,\n        'm': true,\n        'n': true,\n\
    \        'p': true,\n        'q': true,\n        'r': true,\n        's': true,\n\
    \        't': true,\n        'v': true,\n        'w': true,\n        'x': true,\n\
    \        'y': true,\n        'z': true,\n    }\n    var word = \"\"\n    var count\
    \ = 0\n    for _, c := range s {\n        if c == ' ' {\n            if count\
    \ == n {\n                result = append(result, word)\n            }\n     \
    \       word = \"\"\n            count = 0\n        } else {\n            if consonants[c]\
    \ {\n                count++\n            }\n            word += string(c)\n \
    \       }\n    }\n    if count == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if isConsonant(c) {\n   \
    \             consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    var vowels\
    \ = \"aeiou\"\n    var is_consonant bool\n    for _, char := range s {\n     \
    \   if char == ' ' {\n            if consonants == n {\n                words\
    \ = append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            is_consonant = true\n            for _, vowel\
    \ := range vowels {\n                if char == vowel {\n                    is_consonant\
    \ = false\n                    break\n                }\n            }\n     \
    \       if is_consonant {\n                consonants++\n            }\n     \
    \       word += string(char)\n        }\n    }\n    if consonants == n {\n   \
    \     words = append(words, word)\n    }\n    return words\n}\n", "    var words\
    \ []string\n    var word string\n    var consonants int\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \        consonants = 0\n        } else {\n            word += string(c)\n   \
    \         if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n    \
    \            consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    var isConsonant\
    \ bool\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n            continue\n        }\n\
    \        isConsonant = true\n        switch c {\n        case 'a', 'e', 'i', 'o',\
    \ 'u':\n            isConsonant = false\n        }\n        if isConsonant {\n\
    \            consonants++\n        }\n        word += string(c)\n    }\n    if\
    \ consonants == n {\n        words = append(words, word)\n    }\n    return words\n\
    }\n", "    words := []string{}\n    for _, word := range strings.Split(s, \" \"\
    ) {\n        if len(word) == n {\n            words = append(words, word)\n  \
    \      }\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var vowels = map[rune]bool{'a': true, 'e':\
    \ true, 'i': true, 'o': true, 'u': true}\n    for _, c := range s {\n        if\
    \ c == ' ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            if _, ok := vowels[c]; !ok {\n                consonants++\n\
    \            }\n            word += string(c)\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              result = append(result, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    // your code here\n    return nil\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var count int\n    for _, c := range s {\n        if c == ' ' {\n       \
    \     if count == n {\n                words = append(words, word)\n         \
    \   }\n            word = \"\"\n            count = 0\n        } else {\n    \
    \        word += string(c)\n            if c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u' {\n                count = 0\n            } else {\n  \
    \              count++\n            }\n        }\n    }\n    if count == n {\n\
    \        words = append(words, word)\n    }\n    return words\n}\n", "    var\
    \ words []string\n    var word string\n    for _, c := range s {\n        if c\
    \ == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if count_consonants(word) == n {\n            result = append(result,\
    \ word)\n        }\n    }\n    return result\n}\n", "    words := []string{}\n\
    \    for _, word := range(strings.Split(s, \" \")) {\n        if len(word) ==\
    \ n {\n            words = append(words, word)\n        }\n    }\n    return words\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if isConsonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var words\
    \ []string\n    var word string\n    var consonants int\n    var vowels = \"aeiou\"\
    \n    var isVowel bool\n    var isConsonant bool\n    var isSpace bool\n    var\
    \ isLetter bool\n    var isWord bool\n    var isConsonantCount bool\n    var isWordCount\
    \ bool\n    var isWordCountEqual bool\n    var isWordCountNotEqual bool\n    var\
    \ isWordCountGreater bool\n    var isWordCountLess bool\n    var isWordCountGreaterOrEqual\
    \ bool\n    var isWordCountLessOrEqual bool\n    var isWordCountNot bool\n   \
    \ var isWordCountAnd bool\n    var isWordCountOr bool\n    var isWordCountXor\
    \ bool\n    var isWordCountNotXor bool\n    var isWordCountNotAnd bool\n    var\
    \ isWordCountNotOr bool\n    var isWordCountNotNot bool\n    var isWordCountNotNotNot\
    \ bool\n    var isWordCountNotNotNotNot bool\n    var isWordCountNotNotNotNotNot\
    \ bool\n    var isWordCountNotNotNotNotNotNot bool\n    var isWordCountNotNotNotNotNotNotNot\
    \ bool\n    var isWordCountNotNotNotNotNotNotNotNot bool\n    var isWordCountNotNotNotNotNotNotNotNotNot\
    \ bool\n    var isWordCountNotNotNotNotNotNotNotNotNotNot bool\n    var isWordCountNotNotNotNotNotNotNotNotNotNotNot\
    \ bool\n    var isWordCountNotNotNotNotNotNotNotNotNotNotNotNot bool\n    var\
    \ isWordCountNotNotNotNotNotNotNotNotNotNotNotNotNot bool\n    var isWordCountNotNotNotNotNotNotNotNotNotNotNotNotNotNot\
    \ bool\n    var isWordCountNotNotNotNotNotNotNotNotNotNotNotNotNotNotNot bool\n\
    \    var isWordCountNotNotNotNotNotNotNotNotNotNotNotNotNotNotNotNot bool\n  \
    \  var isWordCountNotNotNotNotNotNotNotNotNotNotNotNotNotNotNotNotNot bool\n \
    \   var isWordCountNotNotNotNotNotNotNotNotNotNotNotNotNotNotNotNotNotNot bool\n\
    \    var isWordCountNotNotNotNotNotNotNotNotNotNotNotNotNot", "    var result\
    \ []string\n    var word string\n    var consonants int\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   result = append(result, word)\n            }\n            word = \"\"\n  \
    \          consonants = 0\n        } else {\n            word += string(c)\n \
    \           if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n  \
    \              consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c != ' ' {\n            word += string(c)\n     \
    \       if isConsonant(c) {\n                consonants++\n            }\n   \
    \     } else {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if len(word) >\
    \ 0 {\n                words = append(words, word)\n                word = \"\"\
    \n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var vowels = \"aeiou\"\n    var found bool\n    for _, c := range s\
    \ {\n        if c == ' ' {\n            if consonants == n {\n               \
    \ words = append(words, word)\n            }\n            word = \"\"\n      \
    \      consonants = 0\n        } else {\n            word += string(c)\n     \
    \       for _, v := range vowels {\n                if c == v {\n            \
    \        found = true\n                    break\n                }\n        \
    \    }\n            if !found {\n                consonants++\n            }\n\
    \            found = false\n        }\n    }\n    if consonants == n {\n     \
    \   words = append(words, word)\n    }\n    return words\n}\n", "    var result\
    \ []string\n    var word string\n    var count int\n    for _, c := range s {\n\
    \        if c == ' ' {\n            if count == n {\n                result =\
    \ append(result, word)\n            }\n            word = \"\"\n            count\
    \ = 0\n        } else {\n            if c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' {\n                count++\n            }\n            word\
    \ += string(c)\n        }\n    }\n    if count == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, char := range s {\n        if char\
    \ == ' ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(char)\n            if isConsonant(char)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    words := []string{}\n    for _, word := range strings.Split(s, \" \") {\n \
    \       if len(word) == n {\n            words = append(words, word)\n       \
    \ }\n    }\n    return words\n}\n", "    words := []string{}\n    for _, word\
    \ := range strings.Split(s, \" \") {\n        if len(word) == n {\n          \
    \  words = append(words, word)\n        }\n    }\n    return words\n}\n", "  \
    \  var words []string\n    var word string\n    var consonants int\n    for _,\
    \ char := range s {\n        if char == ' ' {\n            if consonants == n\
    \ {\n                words = append(words, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(char)\n\
    \            if isConsonant(char) {\n                consonants++\n          \
    \  }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              result = append(result, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    var isConsonant bool\n    for _, c := range s {\n\
    \        if c == ' ' {\n            if consonants == n {\n                words\
    \ = append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n            continue\n        }\n        isConsonant = false\n        switch\
    \ c {\n        case 'a', 'e', 'i', 'o', 'u':\n            isConsonant = false\n\
    \        default:\n            isConsonant = true\n        }\n        if isConsonant\
    \ {\n            consonants++\n        }\n        word += string(c)\n    }\n \
    \   if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if !isVowel(c) {\n                consonants++\n \
    \           }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n                consonants++\n            }\n            word\
    \ += string(c)\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    words := []string{}\n    if len(s)\
    \ == 0 {\n        return words\n    }\n    for _, word := range split_words(s)\
    \ {\n        if count_consonants(word) == n {\n            words = append(words,\
    \ word)\n        }\n    }\n    return words\n}\n", "    var words []string\n \
    \   var word string\n    var consonants int\n    for _, c := range s {\n     \
    \   if c == ' ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var consonants\
    \ int\n    var word string\n    for _, c := range s {\n        if c == ' ' {\n\
    \            if consonants == n {\n                words = append(words, word)\n\
    \            }\n            consonants = 0\n            word = \"\"\n        }\
    \ else {\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' {\n                consonants++\n            }\n            word += string(c)\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    words := make([]string, 0)\n    for\
    \ _, word := range(strings.Split(s, \" \")) {\n        if len(word) == n {\n \
    \           words = append(words, word)\n        }\n    }\n    return words\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if isConsonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    return nil\n}\n", "    var words\
    \ []string\n    var word string\n    var consonants int\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \        consonants = 0\n        } else {\n            word += string(c)\n   \
    \         if isConsonant(c) {\n                consonants++\n            }\n \
    \       }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if len(word) >\
    \ 0 {\n                words = append(words, word)\n                word = \"\"\
    \n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var vowels = \"aeiou\"\n    for _, char := range s {\n        if char\
    \ == ' ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(char)\n            if !strings.Contains(vowels,\
    \ string(char)) {\n                consonants++\n            }\n        }\n  \
    \  }\n    if consonants == n {\n        words = append(words, word)\n    }\n \
    \   return words\n}\n", "    var result []string\n    var word string\n    for\
    \ _, c := range s {\n        if c == ' ' {\n            if count_consonants(word)\
    \ == n {\n                result = append(result, word)\n            }\n     \
    \       word = \"\"\n        } else {\n            word += string(c)\n       \
    \ }\n    }\n    if count_consonants(word) == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var vowels = \"aeiouAEIOU\"\n    var isConsonant\
    \ bool\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            isConsonant\
    \ = true\n            for _, v := range vowels {\n                if c == v {\n\
    \                    isConsonant = false\n                    break\n        \
    \        }\n            }\n            if isConsonant {\n                consonants++\n\
    \            }\n            word += string(c)\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    var isConsonant\
    \ bool\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n            continue\n        }\n\
    \        isConsonant = true\n        switch c {\n        case 'a', 'e', 'i', 'o',\
    \ 'u':\n            isConsonant = false\n        }\n        if isConsonant {\n\
    \            consonants++\n        }\n        word += string(c)\n    }\n    if\
    \ consonants == n {\n        words = append(words, word)\n    }\n    return words\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if isConsonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    // your code here\n    return nil\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if isConsonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    // your code here\n    return nil\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if isConsonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var consonants int\n    var word string\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            consonants\
    \ = 0\n            word = \"\"\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if len(word) >\
    \ 0 {\n                words = append(words, word)\n                word = \"\"\
    \n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var result []string\n    var words []string\n    var word\
    \ string\n    var consonants int\n    var vowels string = \"aeiou\"\n    var is_consonant\
    \ bool\n    var is_vowel bool\n    var i int\n    var j int\n    var k int\n \
    \   var l int\n    var m int\n    var nn int\n    var o int\n    var p int\n \
    \   var q int\n    var r int\n    var sss string\n    var t string\n    var u\
    \ string\n    var v string\n    var w string\n    var x string\n    var y string\n\
    \    var z string\n    var aa string\n    var bb string\n    var cc string\n \
    \   var dd string\n    var ee string\n    var ff string\n    var gg string\n \
    \   var hh string\n    var ii string\n    var jj string\n    var kk string\n \
    \   var ll string\n    var mm string\n    var oo string\n    var pp string\n \
    \   var qq string\n    var rr string\n    var ss string\n    var tt string\n \
    \   var uu string\n    var vv string\n    var ww string\n    var xx string\n \
    \   var yy string\n    var zz string\n    var aaa string\n    var bbb string\n\
    \    var ccc string\n    var ddd string\n    var eee string\n    var fff string\n\
    \    var ggg string\n    var hhh string\n    var iii string\n    var jjj string\n\
    \    var kkk string\n    var lll string\n    var mmm string\n    var ooo string\n\
    \    var ppp string\n    var qqq string\n    var rrr string\n    var ssss string\n\
    \    var ttt string\n    var uuu string\n    var vvv string\n    var www string\n\
    \    var xxx string\n    var yyy string\n    var zzz string\n    var aaaa string\n\
    \    var bbbb string\n    var cccc string\n    var dddd string\n    var eeee string\n\
    \    var ffff string\n    var gggg string\n    var hhhh string\n    var iiii string\n\
    \    var jjjj string\n    var kkkk string\n    var ll", "    var result []string\n\
    \    var word string\n    var consonants int\n    for _, c := range s {\n    \
    \    if c == ' ' {\n            if consonants == n {\n                result =\
    \ append(result, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            word += string(c)\n            if isConsonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if isConsonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var vowels = \"aeiou\"\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if consonants == n {\n       \
    \         words = append(words, word)\n            }\n            word = \"\"\n\
    \            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if !strings.Contains(vowels, string(c)) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    // your code here\n    return nil\n\
    }\n", "    words := []string{}\n    word := \"\"\n    for _, c := range s {\n\
    \        if c == ' ' {\n            if consonants(word) == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \    } else {\n            word += string(c)\n        }\n    }\n    if consonants(word)\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

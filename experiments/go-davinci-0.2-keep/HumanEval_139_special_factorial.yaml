name: HumanEval_139_special_factorial
language: go_test.go
prompt: "package special_factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// The Brazilian factorial is defined as:\n// brazilian_factorial(n) = n! *\
  \ (n-1)! * (n-2)! * ... * 1!\n// where n > 0\n// For example:\n// >>> special_factorial(4)\n\
  // 288\n// The function will receive an integer as input and should return the special\n\
  // factorial of this integer.\nfunc special_factorial(n int) int {\n"
tests: "func TestSpecial_Factorial(t *testing.T) {\n  candidate := special_factorial\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(4), expected: 288 },\n     { actual:\
  \ candidate(5), expected: 34560 },\n     { actual: candidate(7), expected: 125411328000\
  \ },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range\
  \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\
  \tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
  \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\
  \t}\n}\n"
completions: ["    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n \
    \   return n * special_factorial(n-1)\n}\n", "    // Your code here\n    return\
    \ 0\n}\n", "    // Write your code here\n    return 0\n}\n", "    if n == 1 {\n\
    \        return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if\
    \ n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    // Your code here\n   \
    \ return 0\n}\n", "    // your code here\n    return 0\n}\n", "    if n == 1 {\n\
    \        return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if\
    \ n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // Your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    // Your code here\n\
    \    return 0\n}\n", "    // your code here\n    return 0\n}\n", "    if n ==\
    \ 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    if n == 1 {\n        return 1\n\
    \    }\n    return n * special_factorial(n-1)\n}\n", "    // Your code here\n\
    \    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    return n *\
    \ special_factorial(n-1)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n        return 1\n\
    \    }\n    return n * special_factorial(n-1)\n}\n", "    if n <= 1 {\n      \
    \  return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n ==\
    \ 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n", " \
    \   if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // Your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    // your code here\n    return 0\n}\n", "    if n == 1 {\n        return 1\n\
    \    }\n    return n * special_factorial(n-1)\n}\n", "    // Your code here\n\
    \    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    return n *\
    \ special_factorial(n-1)\n}\n", "    // Your code here\n    return 0\n}\n", " \
    \   if n <= 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n \
    \   return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    // Your\
    \ code here\n    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n \
    \   return n * special_factorial(n-1)\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    var\
    \ result int = 1\n    for i := n; i > 0; i-- {\n        result *= i\n    }\n \
    \   return result\n}\n", "    if n == 1 {\n        return 1\n    }\n    return\
    \ n * special_factorial(n-1)\n}\n", "    if n == 1 {\n        return 1\n    }\n\
    \    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    // Your code here\n    return 0\n}\n", "    // your code here\n    return 0\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    // your code here\n    return 0\n}\n", "    if n ==\
    \ 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n", " \
    \   if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // Your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // Your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // Your code here\n    return 0\n}\n", "    // Write your code here\n\
    \    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    return n *\
    \ special_factorial(n-1)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n        return 1\n\
    \    }\n    return n * special_factorial(n-1)\n}\n", "    // Your code goes here\n\
    \    return 0\n}\n", "    // Your code here\n    return 0\n}\n", "    if n ==\
    \ 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n", " \
    \   if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    return\
    \ n * special_factorial(n-1)\n}\n", "    if n == 1 {\n        return 1\n    }\n\
    \    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n \
    \   return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n\
    \ <= 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    return\
    \ n * special_factorial(n-1)\n}\n", "    if n == 1 {\n        return 1\n    }\n\
    \    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    return n *\
    \ special_factorial(n-1)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  return n * special_factorial(n-1)\n}\n", "    var result int\n    result =\
    \ 1\n    for i := n; i > 0; i-- {\n        result *= i\n    }\n    return result\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    // Your code here\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    return n * special_factorial(n-1)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    return n * special_factorial(n-1)\n\
    }\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

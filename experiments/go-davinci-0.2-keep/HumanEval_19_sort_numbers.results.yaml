language: go_test.go
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement this function\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp2sj348tp_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp2sj348tp_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp2sj348tp_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp2sj348tp_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmph9pjo18o_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmph9pjo18o_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmph9pjo18o_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmph9pjo18o_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := []int{}\n    for _, num :=\
    \ range strings.Split(numbers, \" \") {\n        switch num {\n        case \"\
    zero\":\n            nums = append(nums, 0)\n        case \"one\":\n         \
    \   nums = append(nums, 1)\n        case \"two\":\n            nums = append(nums,\
    \ 2)\n        case \"three\":\n            nums = append(nums, 3)\n        case\
    \ \"four\":\n            nums = append(nums, 4)\n        case \"five\":\n    \
    \        nums = append(nums, 5)\n        case \"six\":\n            nums = append(nums,\
    \ 6)\n        case \"seven\":\n            nums = append(nums, 7)\n        case\
    \ \"eight\":\n            nums = append(nums, 8)\n        case \"nine\":\n   \
    \         nums = append(nums, 9)\n        }\n    }\n    sort.Ints(nums)\n    result\
    \ := []string{}\n    for _, num := range nums {\n        switch num {\n      \
    \  case 0:\n            result = append(result, \"zero\")\n        case 1:\n \
    \           result = append(result, \"one\")\n        case 2:\n            result\
    \ = append(result, \"two\")\n        case 3:\n            result = append(result,\
    \ \"three\")\n        case 4:\n            result = append(result, \"four\")\n\
    \        case 5:\n            result = append(result, \"five\")\n        case\
    \ 6:\n            result = append(result, \"six\")\n        case 7:\n        \
    \    result = append(result, \"seven\")\n        case 8:\n            result =\
    \ append(result, \"eight\")\n        case 9:\n            result = append(result,\
    \ \"nine\")\n        }\n    }\n    return strings.Join(result, \" \")\n}\n\nfunc\
    \ TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"\
    three\"), expected: \"three\" },\n     { actual: candidate(\"three five nine\"\
    ), expected: \"three five nine\" },\n     { actual: candidate(\"five zero four\
    \ seven nine eight\"), expected: \"zero four five seven eight nine\" },\n    \
    \ { actual: candidate(\"six five four three two one zero\"), expected: \"zero\
    \ one two three four five six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbff5tdtk_test.go:15:25: undefined: strings

    /tmp/tmpbff5tdtk_test.go:39:5: undefined: sort

    /tmp/tmpbff5tdtk_test.go:65:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement this function\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp2sj348tp_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp2sj348tp_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp2sj348tp_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp2sj348tp_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := map[string]int{\n       \
    \ \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n\
    \        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\"\
    : 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    num_list := []int{}\n\
    \    for _, num := range numbers {\n        num_list = append(num_list, nums[string(num)])\n\
    \    }\n    fmt.Println(num_list)\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "[]\n[0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n--- FAIL: TestSort_Numbers (0.00s)\n    ---\
    \ FAIL: TestSort_Numbers/test_num__1 (0.00s)\n        tmpni3xibop_test.go:51:\
    \ expected 'three', got ''\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmpni3xibop_test.go:51: expected 'three five nine', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__3 (0.00s)\n        tmpni3xibop_test.go:51: expected\
    \ 'zero four five seven eight nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__4\
    \ (0.00s)\n        tmpni3xibop_test.go:51: expected 'zero one two three four five\
    \ six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := []int{}\n    for _, num :=\
    \ range strings.Split(numbers, \" \") {\n        switch num {\n        case \"\
    zero\":\n            nums = append(nums, 0)\n        case \"one\":\n         \
    \   nums = append(nums, 1)\n        case \"two\":\n            nums = append(nums,\
    \ 2)\n        case \"three\":\n            nums = append(nums, 3)\n        case\
    \ \"four\":\n            nums = append(nums, 4)\n        case \"five\":\n    \
    \        nums = append(nums, 5)\n        case \"six\":\n            nums = append(nums,\
    \ 6)\n        case \"seven\":\n            nums = append(nums, 7)\n        case\
    \ \"eight\":\n            nums = append(nums, 8)\n        case \"nine\":\n   \
    \         nums = append(nums, 9)\n        }\n    }\n    sort.Ints(nums)\n    return\
    \ strings.Join(nums, \" \")\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate\
    \ := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"three\"), expected: \"three\" },\n     {\
    \ actual: candidate(\"three five nine\"), expected: \"three five nine\" },\n \
    \    { actual: candidate(\"five zero four seven nine eight\"), expected: \"zero\
    \ four five seven eight nine\" },\n     { actual: candidate(\"six five four three\
    \ two one zero\"), expected: \"zero one two three four five six\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpx18zbj8x_test.go:15:25: undefined: strings

    /tmp/tmpx18zbj8x_test.go:39:5: undefined: sort

    /tmp/tmpx18zbj8x_test.go:40:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement this function\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp2sj348tp_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp2sj348tp_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp2sj348tp_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp2sj348tp_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := map[string]int{\n       \
    \ \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n\
    \        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\"\
    : 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    nums_list := []int{}\n\
    \    for _, num := range strings.Split(numbers, \" \") {\n        nums_list =\
    \ append(nums_list, nums[num])\n    }\n    sort.Ints(nums_list)\n    result :=\
    \ []string{}\n    for _, num := range nums_list {\n        for k, v := range nums\
    \ {\n            if v == num {\n                result = append(result, k)\n \
    \           }\n        }\n    }\n    return strings.Join(result, \" \")\n}\n\n\
    func TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbkn8spx__test.go:27:25: undefined: strings

    /tmp/tmpbkn8spx__test.go:30:5: undefined: sort

    /tmp/tmpbkn8spx__test.go:39:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmph9pjo18o_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmph9pjo18o_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmph9pjo18o_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmph9pjo18o_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmph9pjo18o_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmph9pjo18o_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmph9pjo18o_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmph9pjo18o_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmph9pjo18o_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmph9pjo18o_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmph9pjo18o_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmph9pjo18o_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmph9pjo18o_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmph9pjo18o_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmph9pjo18o_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmph9pjo18o_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // Split the string into a slice\
    \ of strings\n    nums := strings.Split(numbers, \" \")\n    // Create a map of\
    \ numberal to integer\n    num_map := map[string]int{\n        \"zero\": 0,\n\
    \        \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\"\
    : 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n     \
    \   \"eight\": 8,\n        \"nine\": 9,\n    }\n    // Create a slice of integers\n\
    \    num_ints := make([]int, len(nums))\n    // Iterate over the slice of strings\n\
    \    for i, num := range nums {\n        // Convert the string to an integer\n\
    \        num_ints[i] = num_map[num]\n    }\n    // Sort the slice of integers\n\
    \    sort.Ints(num_ints)\n    // Create a slice of strings\n    num_strings :=\
    \ make([]string, len(num_ints))\n    // Iterate over the slice of integers\n \
    \   for i, num := range num_ints {\n        // Convert the integer to a string\n\
    \        num_strings[i] = strconv.Itoa(num)\n    }\n    // Join the slice of strings\n\
    \    return strings.Join(num_strings, \" \")\n}\n\nfunc TestSort_Numbers(t *testing.T)\
    \ {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"three\"), expected: \"three\"\
    \ },\n     { actual: candidate(\"three five nine\"), expected: \"three five nine\"\
    \ },\n     { actual: candidate(\"five zero four seven nine eight\"), expected:\
    \ \"zero four five seven eight nine\" },\n     { actual: candidate(\"six five\
    \ four three two one zero\"), expected: \"zero one two three four five six\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbulthk5d_test.go:15:13: undefined: strings

    /tmp/tmpbulthk5d_test.go:37:5: undefined: sort

    /tmp/tmpbulthk5d_test.go:43:26: undefined: strconv

    /tmp/tmpbulthk5d_test.go:46:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement this function\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp2sj348tp_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp2sj348tp_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp2sj348tp_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp2sj348tp_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    var num_map = map[string]int{\n \
    \       \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    var\
    \ num_list []int\n    var num_str_list []string\n    for _, num_str := range numbers\
    \ {\n        num_list = append(num_list, num_map[string(num_str)])\n    }\n  \
    \  for _, num := range num_list {\n        for i := 0; i < len(num_list); i++\
    \ {\n            if num < num_list[i] {\n                num_list = append(num_list[:i],\
    \ append([]int{num}, num_list[i:]...)...)\n                break\n           \
    \ }\n        }\n    }\n    for _, num := range num_list {\n        for k, v :=\
    \ range num_map {\n            if num == v {\n                num_str_list = append(num_str_list,\
    \ k)\n            }\n        }\n    }\n    return strings.Join(num_str_list, \"\
    \ \")\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpx6k5c4p7_test.go:46:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    num_map := map[string]int{\n    \
    \    \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    num_list\
    \ := []int{}\n    for _, num := range numbers {\n        if num == ' ' {\n   \
    \         continue\n        }\n        num_list = append(num_list, num_map[string(num)])\n\
    \    }\n    for i := 0; i < len(num_list); i++ {\n        for j := i+1; j < len(num_list);\
    \ j++ {\n            if num_list[i] > num_list[j] {\n                num_list[i],\
    \ num_list[j] = num_list[j], num_list[i]\n            }\n        }\n    }\n  \
    \  return fmt.Sprintf(\"%v\", num_list)\n}\n\nfunc TestSort_Numbers(t *testing.T)\
    \ {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"three\"), expected: \"three\"\
    \ },\n     { actual: candidate(\"three five nine\"), expected: \"three five nine\"\
    \ },\n     { actual: candidate(\"five zero four seven nine eight\"), expected:\
    \ \"zero four five seven eight nine\" },\n     { actual: candidate(\"six five\
    \ four three two one zero\"), expected: \"zero one two three four five six\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__0\
    \ (0.00s)\n        tmpdcxbyd2l_test.go:60: expected '', got '[]'\n    --- FAIL:\
    \ TestSort_Numbers/test_num__1 (0.00s)\n        tmpdcxbyd2l_test.go:60: expected\
    \ 'three', got '[0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmpdcxbyd2l_test.go:60: expected 'three five nine', got '[0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n      \
    \  tmpdcxbyd2l_test.go:60: expected 'zero four five seven eight nine', got '[0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__4\
    \ (0.00s)\n        tmpdcxbyd2l_test.go:60: expected 'zero one two three four five\
    \ six', got '[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    var nums []int\n    for _, num :=\
    \ range numbers {\n        switch num {\n        case 'z':\n            nums =\
    \ append(nums, 0)\n        case 'o':\n            nums = append(nums, 1)\n   \
    \     case 't':\n            nums = append(nums, 2)\n        case 'h':\n     \
    \       nums = append(nums, 3)\n        case 'f':\n            nums = append(nums,\
    \ 4)\n        case 'i':\n            nums = append(nums, 5)\n        case 's':\n\
    \            nums = append(nums, 6)\n        case 'e':\n            nums = append(nums,\
    \ 7)\n        case 'n':\n            nums = append(nums, 8)\n        case 'e':\n\
    \            nums = append(nums, 9)\n        }\n    }\n    fmt.Println(nums)\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpqeaqn9e4_test.go:35:14:\
    \ duplicate case 'e' (constant 101 of type rune) in expression switch\n\t/tmp/tmpqeaqn9e4_test.go:31:14:\
    \ previous case\n"
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    var nums []int\n    var num_map =\
    \ map[string]int{\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9,\n    }\n    for _, num := range numbers {\n        nums = append(nums, num_map[string(num)])\n\
    \    }\n    return fmt.Sprintf(\"%v\", nums)\n}\n\nfunc TestSort_Numbers(t *testing.T)\
    \ {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"three\"), expected: \"three\"\
    \ },\n     { actual: candidate(\"three five nine\"), expected: \"three five nine\"\
    \ },\n     { actual: candidate(\"five zero four seven nine eight\"), expected:\
    \ \"zero four five seven eight nine\" },\n     { actual: candidate(\"six five\
    \ four three two one zero\"), expected: \"zero one two three four five six\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__0\
    \ (0.00s)\n        tmp_fnzvho6_test.go:50: expected '', got '[]'\n    --- FAIL:\
    \ TestSort_Numbers/test_num__1 (0.00s)\n        tmp_fnzvho6_test.go:50: expected\
    \ 'three', got '[0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmp_fnzvho6_test.go:50: expected 'three five nine', got '[0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n  \
    \      tmp_fnzvho6_test.go:50: expected 'zero four five seven eight nine', got\
    \ '[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]'\n    --- FAIL:\
    \ TestSort_Numbers/test_num__4 (0.00s)\n        tmp_fnzvho6_test.go:50: expected\
    \ 'zero one two three four five six', got '[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement this function\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp2sj348tp_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp2sj348tp_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp2sj348tp_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp2sj348tp_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmph9pjo18o_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmph9pjo18o_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmph9pjo18o_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmph9pjo18o_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement this function\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp2sj348tp_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp2sj348tp_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp2sj348tp_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp2sj348tp_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := map[string]int{\n       \
    \ \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n\
    \        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\"\
    : 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    num_list := make([]int,\
    \ 0)\n    for _, num := range numbers {\n        if num != ' ' {\n           \
    \ num_list = append(num_list, nums[string(num)])\n        }\n    }\n    for i\
    \ := 0; i < len(num_list); i++ {\n        for j := i + 1; j < len(num_list); j++\
    \ {\n            if num_list[i] > num_list[j] {\n                num_list[i],\
    \ num_list[j] = num_list[j], num_list[i]\n            }\n        }\n    }\n  \
    \  return fmt.Sprintf(\"%v\", num_list)\n}\n\nfunc TestSort_Numbers(t *testing.T)\
    \ {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"three\"), expected: \"three\"\
    \ },\n     { actual: candidate(\"three five nine\"), expected: \"three five nine\"\
    \ },\n     { actual: candidate(\"five zero four seven nine eight\"), expected:\
    \ \"zero four five seven eight nine\" },\n     { actual: candidate(\"six five\
    \ four three two one zero\"), expected: \"zero one two three four five six\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__0\
    \ (0.00s)\n        tmpsp6np_sc_test.go:59: expected '', got '[]'\n    --- FAIL:\
    \ TestSort_Numbers/test_num__1 (0.00s)\n        tmpsp6np_sc_test.go:59: expected\
    \ 'three', got '[0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmpsp6np_sc_test.go:59: expected 'three five nine', got '[0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n      \
    \  tmpsp6np_sc_test.go:59: expected 'zero four five seven eight nine', got '[0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__4\
    \ (0.00s)\n        tmpsp6np_sc_test.go:59: expected 'zero one two three four five\
    \ six', got '[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // your code here\n    return \"\"\
    \n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpx4x43c5c_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpx4x43c5c_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpx4x43c5c_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpx4x43c5c_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    var nums []int\n    for _, num :=\
    \ range strings.Split(numbers, \" \") {\n        nums = append(nums, number_to_int(num))\n\
    \    }\n    sort.Ints(nums)\n    var result []string\n    for _, num := range\
    \ nums {\n        result = append(result, int_to_number(num))\n    }\n    return\
    \ strings.Join(result, \" \")\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate\
    \ := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"three\"), expected: \"three\" },\n     {\
    \ actual: candidate(\"three five nine\"), expected: \"three five nine\" },\n \
    \    { actual: candidate(\"five zero four seven nine eight\"), expected: \"zero\
    \ four five seven eight nine\" },\n     { actual: candidate(\"six five four three\
    \ two one zero\"), expected: \"zero one two three four five six\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbgijgdfg_test.go:15:25: undefined: strings

    /tmp/tmpbgijgdfg_test.go:16:29: undefined: number_to_int

    /tmp/tmpbgijgdfg_test.go:18:5: undefined: sort

    /tmp/tmpbgijgdfg_test.go:21:33: undefined: int_to_number

    /tmp/tmpbgijgdfg_test.go:23:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := []int{}\n    for _, num :=\
    \ range strings.Split(numbers, \" \") {\n        nums = append(nums, number_to_int(num))\n\
    \    }\n    sort.Ints(nums)\n    return ints_to_string(nums)\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp49zcvo9d_test.go:15:25: undefined: strings

    /tmp/tmp49zcvo9d_test.go:16:29: undefined: number_to_int

    /tmp/tmp49zcvo9d_test.go:18:5: undefined: sort

    /tmp/tmp49zcvo9d_test.go:19:12: undefined: ints_to_string

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    var nums []int\n    for _, num :=\
    \ range strings.Split(numbers, \" \") {\n        switch num {\n        case \"\
    zero\":\n            nums = append(nums, 0)\n        case \"one\":\n         \
    \   nums = append(nums, 1)\n        case \"two\":\n            nums = append(nums,\
    \ 2)\n        case \"three\":\n            nums = append(nums, 3)\n        case\
    \ \"four\":\n            nums = append(nums, 4)\n        case \"five\":\n    \
    \        nums = append(nums, 5)\n        case \"six\":\n            nums = append(nums,\
    \ 6)\n        case \"seven\":\n            nums = append(nums, 7)\n        case\
    \ \"eight\":\n            nums = append(nums, 8)\n        case \"nine\":\n   \
    \         nums = append(nums, 9)\n        }\n    }\n    sort.Ints(nums)\n    var\
    \ result []string\n    for _, num := range nums {\n        switch num {\n    \
    \    case 0:\n            result = append(result, \"zero\")\n        case 1:\n\
    \            result = append(result, \"one\")\n        case 2:\n            result\
    \ = append(result, \"two\")\n        case 3:\n            result = append(result,\
    \ \"three\")\n        case 4:\n            result = append(result, \"four\")\n\
    \        case 5:\n            result = append(result, \"five\")\n        case\
    \ 6:\n            result = append(result, \"six\")\n        case 7:\n        \
    \    result = append(result, \"seven\")\n        case 8:\n            result =\
    \ append(result, \"eight\")\n        case 9:\n            result = append(result,\
    \ \"nine\")\n        }\n    }\n    return strings.Join(result, \" \")\n}\n\nfunc\
    \ TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"\
    three\"), expected: \"three\" },\n     { actual: candidate(\"three five nine\"\
    ), expected: \"three five nine\" },\n     { actual: candidate(\"five zero four\
    \ seven nine eight\"), expected: \"zero four five seven eight nine\" },\n    \
    \ { actual: candidate(\"six five four three two one zero\"), expected: \"zero\
    \ one two three four five six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpsu_vnjzv_test.go:15:25: undefined: strings

    /tmp/tmpsu_vnjzv_test.go:39:5: undefined: sort

    /tmp/tmpsu_vnjzv_test.go:65:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := []int{}\n    for _, num :=\
    \ range strings.Split(numbers, \" \") {\n        switch num {\n        case \"\
    zero\":\n            nums = append(nums, 0)\n        case \"one\":\n         \
    \   nums = append(nums, 1)\n        case \"two\":\n            nums = append(nums,\
    \ 2)\n        case \"three\":\n            nums = append(nums, 3)\n        case\
    \ \"four\":\n            nums = append(nums, 4)\n        case \"five\":\n    \
    \        nums = append(nums, 5)\n        case \"six\":\n            nums = append(nums,\
    \ 6)\n        case \"seven\":\n            nums = append(nums, 7)\n        case\
    \ \"eight\":\n            nums = append(nums, 8)\n        case \"nine\":\n   \
    \         nums = append(nums, 9)\n        }\n    }\n    sort.Ints(nums)\n    return\
    \ strings.Join(nums, \" \")\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate\
    \ := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"three\"), expected: \"three\" },\n     {\
    \ actual: candidate(\"three five nine\"), expected: \"three five nine\" },\n \
    \    { actual: candidate(\"five zero four seven nine eight\"), expected: \"zero\
    \ four five seven eight nine\" },\n     { actual: candidate(\"six five four three\
    \ two one zero\"), expected: \"zero one two three four five six\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpx18zbj8x_test.go:15:25: undefined: strings

    /tmp/tmpx18zbj8x_test.go:39:5: undefined: sort

    /tmp/tmpx18zbj8x_test.go:40:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmph9pjo18o_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmph9pjo18o_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmph9pjo18o_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmph9pjo18o_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    var nums []int\n    for _, num :=\
    \ range strings.Split(numbers, \" \") {\n        nums = append(nums, number_to_int(num))\n\
    \    }\n    sort.Ints(nums)\n    var result []string\n    for _, num := range\
    \ nums {\n        result = append(result, int_to_number(num))\n    }\n    return\
    \ strings.Join(result, \" \")\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate\
    \ := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"three\"), expected: \"three\" },\n     {\
    \ actual: candidate(\"three five nine\"), expected: \"three five nine\" },\n \
    \    { actual: candidate(\"five zero four seven nine eight\"), expected: \"zero\
    \ four five seven eight nine\" },\n     { actual: candidate(\"six five four three\
    \ two one zero\"), expected: \"zero one two three four five six\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbgijgdfg_test.go:15:25: undefined: strings

    /tmp/tmpbgijgdfg_test.go:16:29: undefined: number_to_int

    /tmp/tmpbgijgdfg_test.go:18:5: undefined: sort

    /tmp/tmpbgijgdfg_test.go:21:33: undefined: int_to_number

    /tmp/tmpbgijgdfg_test.go:23:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // your code here\n    return \"\"\
    \n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpx4x43c5c_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpx4x43c5c_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpx4x43c5c_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpx4x43c5c_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := map[string]int {\n      \
    \  \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\":\
    \ 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    var\
    \ num_list []int\n    for _, num := range numbers {\n        num_list = append(num_list,\
    \ nums[string(num)])\n    }\n    return fmt.Sprintf(\"%v\", num_list)\n}\n\nfunc\
    \ TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"\
    three\"), expected: \"three\" },\n     { actual: candidate(\"three five nine\"\
    ), expected: \"three five nine\" },\n     { actual: candidate(\"five zero four\
    \ seven nine eight\"), expected: \"zero four five seven eight nine\" },\n    \
    \ { actual: candidate(\"six five four three two one zero\"), expected: \"zero\
    \ one two three four five six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__0\
    \ (0.00s)\n        tmpi9to0eub_test.go:50: expected '', got '[]'\n    --- FAIL:\
    \ TestSort_Numbers/test_num__1 (0.00s)\n        tmpi9to0eub_test.go:50: expected\
    \ 'three', got '[0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmpi9to0eub_test.go:50: expected 'three five nine', got '[0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n  \
    \      tmpi9to0eub_test.go:50: expected 'zero four five seven eight nine', got\
    \ '[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]'\n    --- FAIL:\
    \ TestSort_Numbers/test_num__4 (0.00s)\n        tmpi9to0eub_test.go:50: expected\
    \ 'zero one two three four five six', got '[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := []int{}\n    for _, num :=\
    \ range strings.Split(numbers, \" \") {\n        nums = append(nums, number_to_int(num))\n\
    \    }\n    sort.Ints(nums)\n    return ints_to_numbers(nums)\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpit1qxkf6_test.go:15:25: undefined: strings

    /tmp/tmpit1qxkf6_test.go:16:29: undefined: number_to_int

    /tmp/tmpit1qxkf6_test.go:18:5: undefined: sort

    /tmp/tmpit1qxkf6_test.go:19:12: undefined: ints_to_numbers

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    var nums []int\n    for _, word :=\
    \ range numbers {\n        nums = append(nums, int(word))\n    }\n    return fmt.Sprintf(\"\
    %v\", nums)\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__0\
    \ (0.00s)\n        tmp_p0u3lb5_test.go:38: expected '', got '[]'\n    --- FAIL:\
    \ TestSort_Numbers/test_num__1 (0.00s)\n        tmp_p0u3lb5_test.go:38: expected\
    \ 'three', got '[116 104 114 101 101]'\n    --- FAIL: TestSort_Numbers/test_num__2\
    \ (0.00s)\n        tmp_p0u3lb5_test.go:38: expected 'three five nine', got '[116\
    \ 104 114 101 101 32 102 105 118 101 32 110 105 110 101]'\n    --- FAIL: TestSort_Numbers/test_num__3\
    \ (0.00s)\n        tmp_p0u3lb5_test.go:38: expected 'zero four five seven eight\
    \ nine', got '[102 105 118 101 32 122 101 114 111 32 102 111 117 114 32 115 101\
    \ 118 101 110 32 110 105 110 101 32 101 105 103 104 116]'\n    --- FAIL: TestSort_Numbers/test_num__4\
    \ (0.00s)\n        tmp_p0u3lb5_test.go:38: expected 'zero one two three four five\
    \ six', got '[115 105 120 32 102 105 118 101 32 102 111 117 114 32 116 104 114\
    \ 101 101 32 116 119 111 32 111 110 101 32 122 101 114 111]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement this function\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp2sj348tp_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp2sj348tp_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp2sj348tp_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp2sj348tp_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpd79mqxyw_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpd79mqxyw_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpd79mqxyw_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpd79mqxyw_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmph9pjo18o_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmph9pjo18o_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmph9pjo18o_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmph9pjo18o_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := map[string]int{\n       \
    \ \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n\
    \        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\"\
    : 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    var nums_sorted\
    \ []int\n    for _, num := range numbers {\n        nums_sorted = append(nums_sorted,\
    \ nums[string(num)])\n    }\n    fmt.Println(nums_sorted)\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "[]\n[0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n--- FAIL: TestSort_Numbers (0.00s)\n    ---\
    \ FAIL: TestSort_Numbers/test_num__1 (0.00s)\n        tmp33ig1j35_test.go:51:\
    \ expected 'three', got ''\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmp33ig1j35_test.go:51: expected 'three five nine', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__3 (0.00s)\n        tmp33ig1j35_test.go:51: expected\
    \ 'zero four five seven eight nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__4\
    \ (0.00s)\n        tmp33ig1j35_test.go:51: expected 'zero one two three four five\
    \ six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    var nums []int\n    for _, n := range\
    \ numbers {\n        switch n {\n        case 'z':\n            nums = append(nums,\
    \ 0)\n        case 'o':\n            nums = append(nums, 1)\n        case 't':\n\
    \            nums = append(nums, 2)\n        case 'h':\n            nums = append(nums,\
    \ 3)\n        case 'f':\n            nums = append(nums, 4)\n        case 'i':\n\
    \            nums = append(nums, 5)\n        case 's':\n            nums = append(nums,\
    \ 6)\n        case 'e':\n            nums = append(nums, 7)\n        case 'n':\n\
    \            nums = append(nums, 8)\n        case 'e':\n            nums = append(nums,\
    \ 9)\n        }\n    }\n    fmt.Println(nums)\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps8nta788_test.go:35:14:\
    \ duplicate case 'e' (constant 101 of type rune) in expression switch\n\t/tmp/tmps8nta788_test.go:31:14:\
    \ previous case\n"
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement\n    return \"\
    \"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpd2ytr7df_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpd2ytr7df_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpd2ytr7df_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpd2ytr7df_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement\n    return \"\
    \"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpd2ytr7df_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpd2ytr7df_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpd2ytr7df_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpd2ytr7df_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    nums := map[string]int{\n       \
    \ \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n\
    \        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\"\
    : 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    num_list := []int{}\n\
    \    for _, num := range numbers {\n        num_list = append(num_list, nums[string(num)])\n\
    \    }\n    fmt.Println(num_list)\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "[]\n[0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n--- FAIL: TestSort_Numbers (0.00s)\n    ---\
    \ FAIL: TestSort_Numbers/test_num__1 (0.00s)\n        tmpni3xibop_test.go:51:\
    \ expected 'three', got ''\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmpni3xibop_test.go:51: expected 'three five nine', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__3 (0.00s)\n        tmpni3xibop_test.go:51: expected\
    \ 'zero four five seven eight nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__4\
    \ (0.00s)\n        tmpni3xibop_test.go:51: expected 'zero one two three four five\
    \ six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement\n    return \"\
    \"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpd2ytr7df_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpd2ytr7df_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpd2ytr7df_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpd2ytr7df_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // Your code here\n    return \"\"\
    \n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp5jop7fz3_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp5jop7fz3_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp5jop7fz3_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp5jop7fz3_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.002s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO\n    return \"\"\n}\n\nfunc\
    \ TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"\
    three\"), expected: \"three\" },\n     { actual: candidate(\"three five nine\"\
    ), expected: \"three five nine\" },\n     { actual: candidate(\"five zero four\
    \ seven nine eight\"), expected: \"zero four five seven eight nine\" },\n    \
    \ { actual: candidate(\"six five four three two one zero\"), expected: \"zero\
    \ one two three four five six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpv98brdqy_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpv98brdqy_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpv98brdqy_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpv98brdqy_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1iq4e3qi_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp1iq4e3qi_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp1iq4e3qi_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1iq4e3qi_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmph9pjo18o_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmph9pjo18o_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmph9pjo18o_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmph9pjo18o_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // Your code here\n    return \"\"\
    \n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp5jop7fz3_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp5jop7fz3_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp5jop7fz3_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp5jop7fz3_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.002s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: implement\n    return \"\
    \"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpd2ytr7df_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpd2ytr7df_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpd2ytr7df_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpd2ytr7df_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    var nums []int\n    for _, num :=\
    \ range numbers {\n        switch num {\n        case 'z':\n            nums =\
    \ append(nums, 0)\n        case 'o':\n            nums = append(nums, 1)\n   \
    \     case 't':\n            nums = append(nums, 2)\n        case 'h':\n     \
    \       nums = append(nums, 3)\n        case 'f':\n            nums = append(nums,\
    \ 4)\n        case 'i':\n            nums = append(nums, 5)\n        case 's':\n\
    \            nums = append(nums, 6)\n        case 'e':\n            nums = append(nums,\
    \ 7)\n        case 'n':\n            nums = append(nums, 8)\n        case 'e':\n\
    \            nums = append(nums, 9)\n        }\n    }\n    fmt.Println(nums)\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpqeaqn9e4_test.go:35:14:\
    \ duplicate case 'e' (constant 101 of type rune) in expression switch\n\t/tmp/tmpqeaqn9e4_test.go:31:14:\
    \ previous case\n"
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvsdqwq6u_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvsdqwq6u_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvsdqwq6u_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvsdqwq6u_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    var nums []int\n    for _, num :=\
    \ range numbers {\n        switch num {\n        case 'z':\n            nums =\
    \ append(nums, 0)\n        case 'o':\n            nums = append(nums, 1)\n   \
    \     case 't':\n            nums = append(nums, 2)\n        case 'h':\n     \
    \       nums = append(nums, 3)\n        case 'f':\n            nums = append(nums,\
    \ 4)\n        case 'i':\n            nums = append(nums, 5)\n        case 's':\n\
    \            nums = append(nums, 6)\n        case 'e':\n            nums = append(nums,\
    \ 7)\n        case 'n':\n            nums = append(nums, 8)\n        case 'e':\n\
    \            nums = append(nums, 9)\n        }\n    }\n    fmt.Println(nums)\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpqeaqn9e4_test.go:35:14:\
    \ duplicate case 'e' (constant 101 of type rune) in expression switch\n\t/tmp/tmpqeaqn9e4_test.go:31:14:\
    \ previous case\n"
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074161
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    return \"\"\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp0x2ldsuo_test.go:34: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp0x2ldsuo_test.go:34: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp0x2ldsuo_test.go:34: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp0x2ldsuo_test.go:34:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074162
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunc\
    \ sort_numbers(numbers string) string {\n    // TODO: Implement me!\n    return\
    \ \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmph9pjo18o_test.go:35: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmph9pjo18o_test.go:35: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmph9pjo18o_test.go:35: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmph9pjo18o_test.go:35:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074162

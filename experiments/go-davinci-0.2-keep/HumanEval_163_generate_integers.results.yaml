language: go_test.go
name: HumanEval_163_generate_integers
results:
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    var start, end int\n    if a < b {\n        start = a\n        end = b\n\
    \    } else {\n        start = b\n        end = a\n    }\n    for i := start;\
    \ i <= end; i++ {\n        if i % 2 == 0 {\n            result = append(result,\
    \ i)\n        }\n    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T)\
    \ {\n  candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmp_2hetmel_test.go:48: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmp_2hetmel_test.go:48:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmp_2hetmel_test.go:48: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmp_2hetmel_test.go:48: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a < b {\n        for i := a; i <= b; i++ {\n            if i % 2 == 0\
    \ {\n                result = append(result, i)\n            }\n        }\n  \
    \  } else {\n        for i := b; i <= a; i++ {\n            if i % 2 == 0 {\n\
    \                result = append(result, i)\n            }\n        }\n    }\n\
    \    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpmpov54ql_test.go:48: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpmpov54ql_test.go:48:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpmpov54ql_test.go:48: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpmpov54ql_test.go:48: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    var min, max int\n    if a < b {\n        min = a\n        max = b\n    }\
    \ else {\n        min = b\n        max = a\n    }\n    for i := min; i <= max;\
    \ i++ {\n        if i % 2 == 0 {\n            result = append(result, i)\n   \
    \     }\n    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T)\
    \ {\n  candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmp_qq5fz8l_test.go:48: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmp_qq5fz8l_test.go:48:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmp_qq5fz8l_test.go:48: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmp_qq5fz8l_test.go:48: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var min int\n \
    \   var max int\n    if a < b {\n        min = a\n        max = b\n    } else\
    \ {\n        min = b\n        max = a\n    }\n    var result []int\n    for i\
    \ := min; i <= max; i++ {\n        if i % 2 == 0 {\n            result = append(result,\
    \ i)\n        }\n    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T)\
    \ {\n  candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmp2pvw4rto_test.go:49: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmp2pvw4rto_test.go:49:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmp2pvw4rto_test.go:49: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmp2pvw4rto_test.go:49: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    // Your code here\n\
    \    return []int{}\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmp8nc8sv5s_test.go:35: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[]'\n    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n\
    \        tmp8nc8sv5s_test.go:35: expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]',\
    \ got '[]'\n    --- FAIL: TestGenerate_Integers/test_num__2 (0.00s)\n        tmp8nc8sv5s_test.go:35:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    result := []int{}\n    for i := a; i <= b; i++\
    \ {\n        if i % 2 == 0 {\n            result = append(result, i)\n       \
    \ }\n    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n\
    \  candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmp5o77sl00_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmp5o77sl00_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmp5o77sl00_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmp5o77sl00_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    var start, end int\n    if a < b {\n        start = a\n        end = b\n\
    \    } else {\n        start = b\n        end = a\n    }\n    for i := start;\
    \ i <= end; i++ {\n        if i % 2 == 0 {\n            result = append(result,\
    \ i)\n        }\n    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T)\
    \ {\n  candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmp_2hetmel_test.go:48: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmp_2hetmel_test.go:48:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmp_2hetmel_test.go:48: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmp_2hetmel_test.go:48: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    // TODO: implement\
    \ this function\n    return []int{}\n}\n\nfunc TestGenerate_Integers(t *testing.T)\
    \ {\n  candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmp9x3qra8d_test.go:35: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[]'\n    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n\
    \        tmp9x3qra8d_test.go:35: expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]',\
    \ got '[]'\n    --- FAIL: TestGenerate_Integers/test_num__2 (0.00s)\n        tmp9x3qra8d_test.go:35:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    if a > b {\n  \
    \      a, b = b, a\n    }\n    var result []int\n    for i := a; i <= b; i++ {\n\
    \        if i % 2 == 0 {\n            result = append(result, i)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n \
    \ candidate := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2,\
    \ 10), expected: []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpw701zzxg_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpw701zzxg_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpw701zzxg_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    result := []int{}\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpiw8qjh8g_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpiw8qjh8g_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpiw8qjh8g_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpiw8qjh8g_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var res []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            res = append(res, i)\n        }\n    }\n\
    \    return res\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmp1godkp01_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmp1godkp01_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmp1godkp01_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmp1godkp01_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980
- exit_code: 1
  program: "package generate_integers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Given two positive integers a and b, return the even digits between\
    \ a\n// and b, in ascending order.\n// For example:\n// generate_integers(2, 8)\
    \ => [2, 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
    \ 14) => []\nfunc generate_integers(a int, b int) []int {\n    var result []int\n\
    \    if a > b {\n        a, b = b, a\n    }\n    for i := a; i <= b; i++ {\n \
    \       if i % 2 == 0 {\n            result = append(result, i)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestGenerate_Integers(t *testing.T) {\n  candidate\
    \ := generate_integers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 10), expected:\
    \ []int{2, 4, 6, 8} },\n     { actual: candidate(10, 2), expected: []int{2, 4,\
    \ 6, 8} },\n     { actual: candidate(132, 2), expected: []int{2, 4, 6, 8} },\n\
    \     { actual: candidate(17, 89), expected: []int{} },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestGenerate_Integers (0.00s)\n    --- FAIL: TestGenerate_Integers/test_num__0\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)]'\n\
    \    --- FAIL: TestGenerate_Integers/test_num__1 (0.00s)\n        tmpv98heyah_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8)]', got '[%!s(int=2) %!s(int=4)\
    \ %!s(int=6) %!s(int=8) %!s(int=10)]'\n    --- FAIL: TestGenerate_Integers/test_num__2\
    \ (0.00s)\n        tmpv98heyah_test.go:43: expected '[%!s(int=2) %!s(int=4) %!s(int=6)\
    \ %!s(int=8)]', got '[%!s(int=2) %!s(int=4) %!s(int=6) %!s(int=8) %!s(int=10)\
    \ %!s(int=12) %!s(int=14) %!s(int=16) %!s(int=18) %!s(int=20) %!s(int=22) %!s(int=24)\
    \ %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36) %!s(int=38)\
    \ %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50) %!s(int=52)\
    \ %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64) %!s(int=66)\
    \ %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78) %!s(int=80)\
    \ %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88) %!s(int=90) %!s(int=92) %!s(int=94)\
    \ %!s(int=96) %!s(int=98) %!s(int=100) %!s(int=102) %!s(int=104) %!s(int=106)\
    \ %!s(int=108) %!s(int=110) %!s(int=112) %!s(int=114) %!s(int=116) %!s(int=118)\
    \ %!s(int=120) %!s(int=122) %!s(int=124) %!s(int=126) %!s(int=128) %!s(int=130)\
    \ %!s(int=132)]'\n    --- FAIL: TestGenerate_Integers/test_num__3 (0.00s)\n  \
    \      tmpv98heyah_test.go:43: expected '[]', got '[%!s(int=18) %!s(int=20) %!s(int=22)\
    \ %!s(int=24) %!s(int=26) %!s(int=28) %!s(int=30) %!s(int=32) %!s(int=34) %!s(int=36)\
    \ %!s(int=38) %!s(int=40) %!s(int=42) %!s(int=44) %!s(int=46) %!s(int=48) %!s(int=50)\
    \ %!s(int=52) %!s(int=54) %!s(int=56) %!s(int=58) %!s(int=60) %!s(int=62) %!s(int=64)\
    \ %!s(int=66) %!s(int=68) %!s(int=70) %!s(int=72) %!s(int=74) %!s(int=76) %!s(int=78)\
    \ %!s(int=80) %!s(int=82) %!s(int=84) %!s(int=86) %!s(int=88)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073980

language: go_test.go
name: HumanEval_94_skjkasdkd
results:
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg6aw9xg_test.go:20:12: undefined: isPrime

    /tmp/tmpwg6aw9xg_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var sum int\n    var largestPrime int\n    for _, v := range lst\
    \ {\n        if isPrime(v) {\n            if v > largestPrime {\n            \
    \    largestPrime = v\n            }\n        }\n    }\n    for _, v := range\
    \ fmt.Sprintf(\"%d\", largestPrime) {\n        sum += int(v - '0')\n    }\n  \
    \  return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpflillh3i_test.go:21:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var prime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            prime = v\n        }\n    }\n    var sum int\n    for _, v :=\
    \ range fmt.Sprintf(\"%d\", prime) {\n        sum += int(v - '0')\n    }\n   \
    \ return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpnn39lhrs_test.go:20:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg6aw9xg_test.go:20:12: undefined: isPrime

    /tmp/tmpwg6aw9xg_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    fmt.Println(max)\n    return 0\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "324\n4597\n83278\n724\n81\n8\n8191\n123456\n8192\n--- FAIL: TestSkjkasdkd\
    \ (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0 (0.00s)\n        tmpcoglvzkk_test.go:49:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__1\
    \ (0.00s)\n        tmpcoglvzkk_test.go:49: expected '%!s(int=25)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpcoglvzkk_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpcoglvzkk_test.go:49: expected '%!s(int=11)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpcoglvzkk_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpcoglvzkk_test.go:49: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__6 (0.00s)\n        tmpcoglvzkk_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmpcoglvzkk_test.go:49: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmpcoglvzkk_test.go:49:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var sum int\n    var max int\n    for _, v := range lst {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    for i := 2; i <=\
    \ max; i++ {\n        if max%i == 0 {\n            max = max / i\n           \
    \ sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp8nqozlxx_test.go:55: expected '%!s(int=10)', got '%!s(int=20)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp8nqozlxx_test.go:55:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp8nqozlxx_test.go:55: expected '%!s(int=13)', got '%!s(int=3218)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp8nqozlxx_test.go:55:\
    \ expected '%!s(int=11)', got '%!s(int=183)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp8nqozlxx_test.go:55: expected '%!s(int=3)', got '%!s(int=12)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp8nqozlxx_test.go:55:\
    \ expected '%!s(int=7)', got '%!s(int=6)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp8nqozlxx_test.go:55: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp8nqozlxx_test.go:55:\
    \ expected '%!s(int=19)', got '%!s(int=660)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp8nqozlxx_test.go:55: expected '%!s(int=10)', got '%!s(int=30)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ && num > largestPrime {\n            largestPrime = num\n        }\n    }\n\
    \    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4w9sk0vz_test.go:20:12: undefined: isPrime

    /tmp/tmp4w9sk0vz_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var sum int\n    var largestPrime int\n    for _, v := range lst\
    \ {\n        if isPrime(v) {\n            if v > largestPrime {\n            \
    \    largestPrime = v\n            }\n        }\n    }\n    for _, v := range\
    \ fmt.Sprintf(\"%d\", largestPrime) {\n        sum += int(v - '0')\n    }\n  \
    \  return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpflillh3i_test.go:21:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // find the largest prime value\n    var largestPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    //\
    \ sum of its digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"%d\"\
    , largestPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcgncitj6_test.go:21:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ && num > largestPrime {\n            largestPrime = num\n        }\n    }\n\
    \    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4w9sk0vz_test.go:20:12: undefined: isPrime

    /tmp/tmp4w9sk0vz_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var primes []int\n    for i := 2;\
    \ i <= max; i++ {\n        isPrime := true\n        for _, v := range primes {\n\
    \            if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (1.09s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=10)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=11)', got '%!s(int=17)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=3)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=19)', got '%!s(int=23)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=10)', got '%!s(int=19)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    1.089s\nFAIL\n"
  timestamp: 1660075124
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var primes []int\n    for i := 2;\
    \ i <= max; i++ {\n        isPrime := true\n        for _, v := range primes {\n\
    \            if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var sum int\n    for _, v := range primes {\n    \
    \    for v > 0 {\n            sum += v % 10\n            v /= 10\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (1.05s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp0kirxew0_test.go:68: expected '%!s(int=10)', got '%!s(int=649)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp0kirxew0_test.go:68:\
    \ expected '%!s(int=25)', got '%!s(int=9462)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp0kirxew0_test.go:68: expected '%!s(int=13)', got '%!s(int=176910)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp0kirxew0_test.go:68:\
    \ expected '%!s(int=11)', got '%!s(int=1538)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp0kirxew0_test.go:68: expected '%!s(int=3)', got '%!s(int=170)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp0kirxew0_test.go:68:\
    \ expected '%!s(int=7)', got '%!s(int=17)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp0kirxew0_test.go:68: expected '%!s(int=19)', got '%!s(int=17581)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp0kirxew0_test.go:68:\
    \ expected '%!s(int=19)', got '%!s(int=256996)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp0kirxew0_test.go:68: expected '%!s(int=10)', got '%!s(int=17581)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t1.055s\nFAIL\n"
  timestamp: 1660075124
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var sum int\n    var max int\n    for _, v := range lst {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    for i := max; i >\
    \ 1; i-- {\n        if isPrime(i) {\n            sum = 0\n            for _, v\
    \ := range fmt.Sprintf(\"%d\", i) {\n                sum += int(v - '0')\n   \
    \         }\n            return sum\n        }\n    }\n    return 0\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpx6d3y49u_test.go:26:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n \
    \       sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpusjzb8v7_test.go:53: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpusjzb8v7_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpusjzb8v7_test.go:53: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpusjzb8v7_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpusjzb8v7_test.go:53: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpusjzb8v7_test.go:53:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpusjzb8v7_test.go:53: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var sum int\n\
    \    for _, v := range fmt.Sprintf(\"%d\", maxPrime) {\n        sum += int(v -\
    \ '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt89hch_p_test.go:20:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var primes []int\n    for i := 2;\
    \ i <= max; i++ {\n        isPrime := true\n        for _, v := range primes {\n\
    \            if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (1.09s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=10)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=11)', got '%!s(int=17)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=3)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=19)', got '%!s(int=23)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=10)', got '%!s(int=19)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    1.089s\nFAIL\n"
  timestamp: 1660075124
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ && num > largestPrime {\n            largestPrime = num\n        }\n    }\n\
    \    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4w9sk0vz_test.go:20:12: undefined: isPrime

    /tmp/tmp4w9sk0vz_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var sum int\n\
    \    for _, v := range fmt.Sprintf(\"%d\", maxPrime) {\n        sum += int(v -\
    \ '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt89hch_p_test.go:20:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := max; i > 0; i-- {\n     \
    \   if isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpye49u3n__test.go:25:12: undefined: isPrime

    /tmp/tmpye49u3n__test.go:26:20: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if v >\
    \ largestPrime && isPrime(v) {\n            largestPrime = v\n        }\n    }\n\
    \    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_zfh6hlm_test.go:20:32: undefined: isPrime

    /tmp/tmp_zfh6hlm_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg6aw9xg_test.go:20:12: undefined: isPrime

    /tmp/tmpwg6aw9xg_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    fmt.Println(max)\n    var sum int\n\
    \    for max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "324\n4597\n83278\n724\n81\n8\n8191\n123456\n8192\n--- FAIL: TestSkjkasdkd\
    \ (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0 (0.00s)\n        tmpwm6zb3w1_test.go:54:\
    \ expected '%!s(int=10)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwm6zb3w1_test.go:54: expected '%!s(int=13)', got '%!s(int=28)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwm6zb3w1_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=13)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwm6zb3w1_test.go:54: expected '%!s(int=3)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwm6zb3w1_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmpwm6zb3w1_test.go:54: expected '%!s(int=19)', got '%!s(int=21)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmpwm6zb3w1_test.go:54:\
    \ expected '%!s(int=10)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var primes []int\n    for i := 2;\
    \ i <= max; i++ {\n        isPrime := true\n        for _, v := range primes {\n\
    \            if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (1.09s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=10)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=11)', got '%!s(int=17)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=3)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=19)', got '%!s(int=23)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=10)', got '%!s(int=19)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    1.089s\nFAIL\n"
  timestamp: 1660075124
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var prime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            prime = v\n        }\n    }\n    return sumDigits(prime)\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpqolw_t2p_test.go:20:12: undefined: isPrime

    /tmp/tmpqolw_t2p_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var prime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            prime = v\n        }\n    }\n    return sumOfDigits(prime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpz02csd18_test.go:20:12: undefined: isPrime

    /tmp/tmpz02csd18_test.go:24:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var sum int\n    var max int\n    for _, v := range lst {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    for i := 2; i <=\
    \ max; i++ {\n        if max%i == 0 {\n            for j := 2; j <= i/2; j++ {\n\
    \                if i%j == 0 {\n                    break\n                }\n\
    \                if j == i/2 {\n                    for k := i; k > 0; k /= 10\
    \ {\n                        sum += k % 10\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpu9_u1gkn_test.go:63: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpu9_u1gkn_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=12)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpu9_u1gkn_test.go:63: expected '%!s(int=11)', got '%!s(int=10)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpu9_u1gkn_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpu9_u1gkn_test.go:63: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpu9_u1gkn_test.go:63:\
    \ expected '%!s(int=19)', got '%!s(int=13)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpu9_u1gkn_test.go:63: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, n := range lst {\n        if isPrime(n)\
    \ && n > maxPrime {\n            maxPrime = n\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpe9iqy6q6_test.go:20:12: undefined: isPrime

    /tmp/tmpe9iqy6q6_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := max; i > 0; i-- {\n     \
    \   if isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpye49u3n__test.go:25:12: undefined: isPrime

    /tmp/tmpye49u3n__test.go:26:20: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := max; i > 0; i-- {\n     \
    \   if isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpye49u3n__test.go:25:12: undefined: isPrime

    /tmp/tmpye49u3n__test.go:26:20: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ && num > largestPrime {\n            largestPrime = num\n        }\n    }\n\
    \    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4w9sk0vz_test.go:20:12: undefined: isPrime

    /tmp/tmp4w9sk0vz_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg6aw9xg_test.go:20:12: undefined: isPrime

    /tmp/tmpwg6aw9xg_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumOfDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0aq9a3os_test.go:20:12: undefined: isPrime

    /tmp/tmp0aq9a3os_test.go:24:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    var sum int\n    for _, v := range fmt.Sprintf(\"\
    %d\", largestPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwk53ln64_test.go:20:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := max; i > 0; i-- {\n     \
    \   if isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpye49u3n__test.go:25:12: undefined: isPrime

    /tmp/tmpye49u3n__test.go:26:20: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, value := range lst {\n        if\
    \ isPrime(value) {\n            if value > largestPrime {\n                largestPrime\
    \ = value\n            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpofqnt66__test.go:20:12: undefined: isPrime

    /tmp/tmpofqnt66__test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg6aw9xg_test.go:20:12: undefined: isPrime

    /tmp/tmpwg6aw9xg_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := max; i > 1; i-- {\n     \
    \   if isPrime(i) {\n            return sumOfDigits(i)\n        }\n    }\n   \
    \ return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmplp4cf4qr_test.go:25:12: undefined: isPrime

    /tmp/tmplp4cf4qr_test.go:26:20: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    var sum int\n    for _, v := range lst\
    \ {\n        if v > largestPrime && isPrime(v) {\n            largestPrime = v\n\
    \        }\n    }\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmhv0uswl_test.go:21:32: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := max; i > 1; i-- {\n     \
    \   if isPrime(i) {\n            return sumOfDigits(i)\n        }\n    }\n   \
    \ return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmplp4cf4qr_test.go:25:12: undefined: isPrime

    /tmp/tmplp4cf4qr_test.go:26:20: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // find the largest prime value\n    var largestPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    //\
    \ sum of its digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"%d\"\
    , largestPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcgncitj6_test.go:21:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            largestPrime = v\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppewcvy33_test.go:20:12: undefined: isPrime

    /tmp/tmppewcvy33_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := max; i > 0; i-- {\n     \
    \   if isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpye49u3n__test.go:25:12: undefined: isPrime

    /tmp/tmpye49u3n__test.go:26:20: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg6aw9xg_test.go:20:12: undefined: isPrime

    /tmp/tmpwg6aw9xg_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var primes []int\n    for i := 2;\
    \ i <= max; i++ {\n        isPrime := true\n        for _, v := range primes {\n\
    \            if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (1.09s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=10)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=11)', got '%!s(int=17)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=3)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=19)', got '%!s(int=23)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=10)', got '%!s(int=19)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    1.089s\nFAIL\n"
  timestamp: 1660075124
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg6aw9xg_test.go:20:12: undefined: isPrime

    /tmp/tmpwg6aw9xg_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumOfDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0aq9a3os_test.go:20:12: undefined: isPrime

    /tmp/tmp0aq9a3os_test.go:24:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpik79eq6d_test.go:20:12: undefined: isPrime

    /tmp/tmpik79eq6d_test.go:26:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var sum int\n    var max int\n    for _, v := range lst {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    for i := 2; i <=\
    \ max; i++ {\n        if max%i == 0 {\n            max = max / i\n           \
    \ sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp8nqozlxx_test.go:55: expected '%!s(int=10)', got '%!s(int=20)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp8nqozlxx_test.go:55:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp8nqozlxx_test.go:55: expected '%!s(int=13)', got '%!s(int=3218)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp8nqozlxx_test.go:55:\
    \ expected '%!s(int=11)', got '%!s(int=183)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp8nqozlxx_test.go:55: expected '%!s(int=3)', got '%!s(int=12)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp8nqozlxx_test.go:55:\
    \ expected '%!s(int=7)', got '%!s(int=6)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp8nqozlxx_test.go:55: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp8nqozlxx_test.go:55:\
    \ expected '%!s(int=19)', got '%!s(int=660)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp8nqozlxx_test.go:55: expected '%!s(int=10)', got '%!s(int=30)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    fmt.Println(max)\n    return 0\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "324\n4597\n83278\n724\n81\n8\n8191\n123456\n8192\n--- FAIL: TestSkjkasdkd\
    \ (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0 (0.00s)\n        tmpcoglvzkk_test.go:49:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__1\
    \ (0.00s)\n        tmpcoglvzkk_test.go:49: expected '%!s(int=25)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpcoglvzkk_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpcoglvzkk_test.go:49: expected '%!s(int=11)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpcoglvzkk_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpcoglvzkk_test.go:49: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__6 (0.00s)\n        tmpcoglvzkk_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmpcoglvzkk_test.go:49: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmpcoglvzkk_test.go:49:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg6aw9xg_test.go:20:12: undefined: isPrime

    /tmp/tmpwg6aw9xg_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpaaex8ju__test.go:42: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpaaex8ju__test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpaaex8ju__test.go:42: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpaaex8ju__test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpaaex8ju__test.go:42: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpaaex8ju__test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpaaex8ju__test.go:42: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpaaex8ju__test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpaaex8ju__test.go:42: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075125
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := max; i > 1; i-- {\n     \
    \   if isPrime(i) {\n            return sumOfDigits(i)\n        }\n    }\n   \
    \ return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmplp4cf4qr_test.go:25:12: undefined: isPrime

    /tmp/tmplp4cf4qr_test.go:26:20: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg6aw9xg_test.go:20:12: undefined: isPrime

    /tmp/tmpwg6aw9xg_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var prime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > prime {\n            prime = v\n        }\n    }\n    var sum int\n \
    \   for prime > 0 {\n        sum += prime % 10\n        prime /= 10\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpyvybs_48_test.go:20:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpi70ft13k_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpi70ft13k_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := max; i > 1; i-- {\n     \
    \   if isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9wmiklpu_test.go:25:12: undefined: isPrime

    /tmp/tmp9wmiklpu_test.go:26:20: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n \
    \       sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpusjzb8v7_test.go:53: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpusjzb8v7_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpusjzb8v7_test.go:53: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpusjzb8v7_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpusjzb8v7_test.go:53: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpusjzb8v7_test.go:53:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpusjzb8v7_test.go:53: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpaaex8ju__test.go:42: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpaaex8ju__test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpaaex8ju__test.go:42: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpaaex8ju__test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpaaex8ju__test.go:42: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpaaex8ju__test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpaaex8ju__test.go:42: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpaaex8ju__test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpaaex8ju__test.go:42: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var primes []int\n    for i := 2;\
    \ i <= max; i++ {\n        isPrime := true\n        for _, v := range primes {\n\
    \            if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (1.09s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=10)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=11)', got '%!s(int=17)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=3)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmpsiiq9asz_test.go:72: expected '%!s(int=19)', got '%!s(int=23)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmpsiiq9asz_test.go:72:\
    \ expected '%!s(int=10)', got '%!s(int=19)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    1.089s\nFAIL\n"
  timestamp: 1660075124
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var primes []int\n    for i := 2;\
    \ i <= max; i++ {\n        isPrime := true\n        for _, v := range primes {\n\
    \            if i%v == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var sum int\n    for _, v := range primes {\n    \
    \    sum += v\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.99s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp13emvyv6_test.go:65: expected '%!s(int=10)', got '%!s(int=9523)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp13emvyv6_test.go:65:\
    \ expected '%!s(int=25)', got '%!s(int=1322229)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp13emvyv6_test.go:65: expected '%!s(int=13)', got '%!s(int=320571339)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp13emvyv6_test.go:65:\
    \ expected '%!s(int=11)', got '%!s(int=41741)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp13emvyv6_test.go:65: expected '%!s(int=3)', got '%!s(int=791)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp13emvyv6_test.go:65:\
    \ expected '%!s(int=7)', got '%!s(int=17)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp13emvyv6_test.go:65: expected '%!s(int=19)', got '%!s(int=3908641)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp13emvyv6_test.go:65:\
    \ expected '%!s(int=19)', got '%!s(int=678875932)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp13emvyv6_test.go:65: expected '%!s(int=10)', got '%!s(int=3908641)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.992s\nFAIL\n"
  timestamp: 1660075126
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, n := range lst {\n        if isPrime(n)\
    \ && n > largestPrime {\n            largestPrime = n\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpe4zj55of_test.go:20:12: undefined: isPrime

    /tmp/tmpe4zj55of_test.go:24:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    var prime bool\n    for i := max;\
    \ i > 0; i-- {\n        prime = true\n        for j := 2; j < i; j++ {\n     \
    \       if i%j == 0 {\n                prime = false\n                break\n\
    \            }\n        }\n        if prime {\n            break\n        }\n\
    \    }\n    var sum int\n    for i := 0; i < len(fmt.Sprintf(\"%d\", max)); i++\
    \ {\n        sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.01s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpx_vk2a4p_test.go:66: expected '%!s(int=10)', got '%!s(int=6)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpx_vk2a4p_test.go:66:\
    \ expected '%!s(int=25)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpx_vk2a4p_test.go:66: expected '%!s(int=13)', got '%!s(int=17)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpx_vk2a4p_test.go:66:\
    \ expected '%!s(int=11)', got '%!s(int=6)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpx_vk2a4p_test.go:66: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpx_vk2a4p_test.go:66:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpx_vk2a4p_test.go:66: expected '%!s(int=19)', got '%!s(int=10)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpx_vk2a4p_test.go:66:\
    \ expected '%!s(int=19)', got '%!s(int=15)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpx_vk2a4p_test.go:66: expected '%!s(int=10)', got '%!s(int=11)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.010s\nFAIL\n"
  timestamp: 1660075125
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuene0cvw_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuene0cvw_test.go:43: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075122
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if v >\
    \ largestPrime && isPrime(v) {\n            largestPrime = v\n        }\n    }\n\
    \    return sumOfDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuq7y91fj_test.go:20:32: undefined: isPrime

    /tmp/tmpuq7y91fj_test.go:24:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075125
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp79npqhmy_test.go:20:12: undefined: isPrime

    /tmp/tmp79npqhmy_test.go:26:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075121

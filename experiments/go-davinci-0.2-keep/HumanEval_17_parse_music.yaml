name: HumanEval_17_parse_music
language: go_test.go
prompt: "package parse_music_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Input to this function is a string representing musical notes in a special ASCII\
  \ format.\n// Your task is to parse this string and return list of integers corresponding\
  \ to how many beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole\
  \ note, lasts four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater\
  \ note, lasts one beat\n// >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n//\
  \ [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\nfunc parse_music(music_string string) []int\
  \ {\n"
tests: "func TestParse_Music(t *testing.T) {\n  candidate := parse_music\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(\"\"), expected: []int{} },\n     { actual:\
  \ candidate(\"o o o o\"), expected: []int{4, 4, 4, 4} },\n     { actual: candidate(\"\
  .| .| .| .|\"), expected: []int{1, 1, 1, 1} },\n     { actual: candidate(\"o| o|\
  \ .| .| o o o o\"), expected: []int{2, 2, 1, 1, 4, 4, 4, 4} },\n     { actual: candidate(\"\
  o| .| o| .| o o| o o|\"), expected: []int{2, 1, 2, 1, 4, 2, 4, 2} },\n   }\n\n\t\
  for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    var result []int\n    var current_beat int\n    for _, char :=\
    \ range music_string {\n        switch char {\n        case 'o':\n           \
    \ current_beat = 4\n        case '|':\n            current_beat /= 2\n       \
    \ case '.':\n            result = append(result, current_beat)\n        }\n  \
    \  }\n    return result\n}\n", "    return []int{}\n}\n", "    var result []int\n\
    \    var current_note int\n    var current_note_length int\n    for _, char :=\
    \ range music_string {\n        switch char {\n            case 'o':\n       \
    \         current_note_length = 4\n            case '|':\n                current_note_length\
    \ = 2\n            case '.':\n                current_note_length = 1\n      \
    \      default:\n                continue\n        }\n        if current_note\
    \ == 0 {\n            current_note = current_note_length\n        } else {\n \
    \           result = append(result, current_note)\n            current_note =\
    \ current_note_length\n        }\n    }\n    result = append(result, current_note)\n\
    \    return result\n}\n", "    return []int{}\n}\n", "    var beats []int\n  \
    \  var beat int\n    for _, char := range music_string {\n        switch char\
    \ {\n        case 'o':\n            beat = 4\n        case '|':\n            beat\
    \ /= 2\n        case '.':\n            beat--\n        }\n        beats = append(beats,\
    \ beat)\n    }\n    return beats\n}\n", "    return []int{}\n}\n", "    var result\
    \ []int\n    var current_beat int\n    for _, char := range music_string {\n \
    \       if char == 'o' {\n            current_beat = 4\n        } else if char\
    \ == '|' {\n            current_beat = current_beat / 2\n        } else if char\
    \ == '.' {\n            result = append(result, current_beat)\n        }\n   \
    \ }\n    return result\n}\n", "    var result []int\n    var note_length int\n\
    \    var note_count int\n    for _, char := range music_string {\n        switch\
    \ char {\n        case 'o':\n            note_length = 4\n            note_count\
    \ = 1\n        case '|':\n            note_count += 1\n        case '.':\n   \
    \         note_length = 1\n            note_count = 1\n        case ' ':\n   \
    \         result = append(result, note_length * note_count)\n            note_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result []int\n    var\
    \ current_note int\n    for _, char := range music_string {\n        switch char\
    \ {\n        case 'o':\n            current_note = 4\n        case '|':\n    \
    \        result = append(result, current_note)\n            current_note = 0\n\
    \        case '.':\n            current_note = 1\n        }\n    }\n    return\
    \ result\n}\n", "    return []int{}\n}\n", "    var result []int\n    var i int\n\
    \    for i = 0; i < len(music_string); i++ {\n        if music_string[i] == 'o'\
    \ {\n            if i + 1 < len(music_string) && music_string[i + 1] == '|' {\n\
    \                result = append(result, 2)\n                i++\n           \
    \ } else {\n                result = append(result, 4)\n            }\n      \
    \  } else if music_string[i] == '.' {\n            result = append(result, 1)\n\
    \        }\n    }\n    return result\n}\n", "    // your code here\n    return\
    \ []int{}\n}\n", "    var result []int\n    for _, char := range music_string\
    \ {\n        switch char {\n        case 'o':\n            result = append(result,\
    \ 4)\n        case '|':\n            result = append(result, 2)\n        case\
    \ '.':\n            result = append(result, 1)\n        }\n    }\n    return result\n\
    }\n", "    return []int{}\n}\n", "    return nil\n}\n", "    var result []int\n\
    \    var current_note int\n    for _, char := range music_string {\n        switch\
    \ char {\n        case 'o':\n            current_note = 4\n        case '|':\n\
    \            result = append(result, current_note)\n            current_note =\
    \ 0\n        case '.':\n            current_note = 1\n        }\n    }\n    return\
    \ result\n}\n", "    var result []int\n    var last_char byte\n    var count int\n\
    \    for i := 0; i < len(music_string); i++ {\n        if music_string[i] == '\
    \ ' {\n            continue\n        }\n        if music_string[i] == 'o' {\n\
    \            if last_char == 'o' {\n                count++\n            } else\
    \ {\n                count = 1\n            }\n            last_char = 'o'\n \
    \       } else {\n            if last_char == 'o' {\n                result =\
    \ append(result, count * 4)\n                count = 0\n            }\n      \
    \      if last_char == '.' {\n                count++\n            } else {\n\
    \                count = 1\n            }\n            last_char = '.'\n     \
    \   }\n    }\n    if last_char == 'o' {\n        result = append(result, count\
    \ * 4)\n    } else {\n        result = append(result, count)\n    }\n    return\
    \ result\n}\n", "    return []int{}\n}\n", "    var result []int\n    var current_beat\
    \ int\n    for _, char := range music_string {\n        if char == 'o' {\n   \
    \         current_beat = 4\n        } else if char == '|' {\n            current_beat\
    \ = current_beat / 2\n        } else if char == '.' {\n            result = append(result,\
    \ current_beat)\n        }\n    }\n    return result\n}\n", "    // Your code\
    \ here\n    return []int{}\n}\n", "    return []int{}\n}\n", "    // your code\
    \ here\n    return []int{}\n}\n", "    var result []int\n    var current_note\
    \ string\n    var current_note_length int\n    for _, char := range music_string\
    \ {\n        if char == ' ' {\n            result = append(result, current_note_length)\n\
    \            current_note = \"\"\n            current_note_length = 0\n      \
    \  } else {\n            current_note += string(char)\n            if current_note\
    \ == \"o\" {\n                current_note_length = 4\n            } else if current_note\
    \ == \"o|\" {\n                current_note_length = 2\n            } else if\
    \ current_note == \".|\" {\n                current_note_length = 1\n        \
    \    }\n        }\n    }\n    result = append(result, current_note_length)\n \
    \   return result\n}\n", "    var result []int\n    var current_note string\n\
    \    var current_note_length int\n    for _, char := range music_string {\n  \
    \      if char == ' ' {\n            result = append(result, current_note_length)\n\
    \            current_note = \"\"\n            current_note_length = 0\n      \
    \  } else {\n            current_note += string(char)\n            if current_note\
    \ == \"o\" {\n                current_note_length = 4\n            } else if current_note\
    \ == \"o|\" {\n                current_note_length = 2\n            } else if\
    \ current_note == \".|\" {\n                current_note_length = 1\n        \
    \    }\n        }\n    }\n    result = append(result, current_note_length)\n \
    \   return result\n}\n", "    // Your code here\n    return []int{}\n}\n", " \
    \   var result []int\n    var current_note_length int\n    for _, char := range\
    \ music_string {\n        if char == 'o' {\n            current_note_length =\
    \ 4\n        } else if char == '|' {\n            current_note_length = current_note_length\
    \ / 2\n        } else if char == '.' {\n            current_note_length = current_note_length\
    \ / 2\n        } else if char == ' ' {\n            result = append(result, current_note_length)\n\
    \        }\n    }\n    return result\n}\n", "    var result []int\n    var count\
    \ int\n    for _, c := range music_string {\n        switch c {\n        case\
    \ 'o':\n            count++\n        case '|':\n            result = append(result,\
    \ count)\n            count = 0\n        }\n    }\n    return result\n}\n", " \
    \   var result []int\n    var current int\n    for _, char := range music_string\
    \ {\n        switch char {\n        case 'o':\n            current = 4\n     \
    \   case '|':\n            result = append(result, current)\n            current\
    \ = 0\n        case '.':\n            current = 1\n        }\n    }\n    return\
    \ result\n}\n", "    return []int{}\n}\n", "    var beats []int\n    var beat\
    \ int\n    for _, char := range music_string {\n        switch char {\n      \
    \  case 'o':\n            beat = 4\n        case '|':\n            beat = beat\
    \ / 2\n        case '.':\n            beat = beat / 2\n        }\n        beats\
    \ = append(beats, beat)\n    }\n    return beats\n}\n", "    var result []int\n\
    \    var note_length int\n    for _, char := range music_string {\n        switch\
    \ char {\n        case 'o':\n            note_length = 4\n        case '|':\n\
    \            note_length /= 2\n        case '.':\n            note_length = 1\n\
    \        }\n        result = append(result, note_length)\n    }\n    return result\n\
    }\n", "    return []int{}\n}\n", "    return nil\n}\n", "    return []int{}\n\
    }\n", "    return []int{}\n}\n", "    var result []int\n    var current_beat int\n\
    \    for _, char := range music_string {\n        if char == 'o' {\n         \
    \   current_beat = 4\n        } else if char == '|' {\n            current_beat\
    \ = current_beat / 2\n        } else if char == '.' {\n            result = append(result,\
    \ current_beat)\n        }\n    }\n    return result\n}\n", "    var beats []int\n\
    \    for _, char := range music_string {\n        switch char {\n        case\
    \ 'o':\n            beats = append(beats, 4)\n        case '|':\n            beats\
    \ = append(beats, 2)\n        case '.':\n            beats = append(beats, 1)\n\
    \        }\n    }\n    return beats\n}\n", "    var result []int\n    var current_note_length\
    \ int\n    for _, char := range music_string {\n        switch char {\n      \
    \  case 'o':\n            current_note_length = 4\n        case '|':\n       \
    \     current_note_length /= 2\n        case '.':\n            result = append(result,\
    \ current_note_length)\n        }\n    }\n    return result\n}\n", "    return\
    \ []int{}\n}\n", "    // your code here\n    return nil\n}\n", "    var result\
    \ []int\n    var current int\n    for _, char := range music_string {\n      \
    \  switch char {\n        case 'o':\n            current = 4\n        case '|':\n\
    \            result = append(result, current)\n            current = 0\n     \
    \   case '.':\n            current = 1\n        }\n    }\n    return result\n\
    }\n", "    var result []int\n    var current_beat int\n    for _, c := range music_string\
    \ {\n        if c == 'o' {\n            current_beat = 4\n        } else if c\
    \ == '|' {\n            current_beat /= 2\n        } else if c == '.' {\n    \
    \        result = append(result, current_beat)\n        }\n    }\n    return result\n\
    }\n", "    var result []int\n    var beats int\n    for _, c := range music_string\
    \ {\n        switch c {\n        case 'o':\n            beats = 4\n        case\
    \ '|':\n            beats = 2\n        case '.':\n            beats = 1\n    \
    \    default:\n            beats = 0\n        }\n        result = append(result,\
    \ beats)\n    }\n    return result\n}\n", "    var result []int\n    var current_note\
    \ string\n    var current_note_length int\n    for _, char := range music_string\
    \ {\n        if char == ' ' {\n            result = append(result, current_note_length)\n\
    \            current_note = \"\"\n            current_note_length = 0\n      \
    \  } else {\n            current_note += string(char)\n            if current_note\
    \ == \"o\" {\n                current_note_length = 4\n            } else if current_note\
    \ == \"o|\" {\n                current_note_length = 2\n            } else if\
    \ current_note == \".|\" {\n                current_note_length = 1\n        \
    \    }\n        }\n    }\n    result = append(result, current_note_length)\n \
    \   return result\n}\n", "    var result []int\n    var current_note string\n\
    \    var current_note_length int\n    for _, char := range music_string {\n  \
    \      if char == ' ' {\n            result = append(result, current_note_length)\n\
    \            current_note = \"\"\n            current_note_length = 0\n      \
    \  } else {\n            current_note += string(char)\n            if current_note\
    \ == \"o\" {\n                current_note_length = 4\n            } else if current_note\
    \ == \"o|\" {\n                current_note_length = 2\n            } else if\
    \ current_note == \".|\" {\n                current_note_length = 1\n        \
    \    }\n        }\n    }\n    result = append(result, current_note_length)\n \
    \   return result\n}\n", "    var result []int\n    var current int\n    for _,\
    \ char := range music_string {\n        switch char {\n        case 'o':\n   \
    \         current = 4\n        case '|':\n            result = append(result,\
    \ current)\n            current = 0\n        case '.':\n            current =\
    \ 1\n        }\n    }\n    return result\n}\n", "    var result []int\n    var\
    \ current_beat int\n    for _, char := range music_string {\n        switch char\
    \ {\n        case 'o':\n            current_beat = 4\n        case '|':\n    \
    \        result = append(result, current_beat)\n            current_beat = 0\n\
    \        case '.':\n            current_beat += 1\n        }\n    }\n    return\
    \ result\n}\n", "    return []int{}\n}\n", "    var result []int\n    for _, char\
    \ := range music_string {\n        switch char {\n        case 'o':\n        \
    \    result = append(result, 4)\n        case '|':\n            result = append(result,\
    \ 2)\n        case '.':\n            result = append(result, 1)\n        }\n \
    \   }\n    return result\n}\n", "    return []int{}\n}\n", "    return []int{}\n\
    }\n", "    return []int{}\n}\n", "    return nil\n}\n", "    var result []int\n\
    \    var current_beat int\n    for _, char := range music_string {\n        switch\
    \ char {\n        case 'o':\n            current_beat = 4\n        case '|':\n\
    \            result = append(result, current_beat)\n            current_beat =\
    \ 0\n        case '.':\n            current_beat = 1\n        }\n    }\n    return\
    \ result\n}\n", "    return []int{}\n}\n", "    var result []int\n    var i int\n\
    \    for i = 0; i < len(music_string); i++ {\n        if music_string[i] == 'o'\
    \ {\n            if i+1 < len(music_string) && music_string[i+1] == '|' {\n  \
    \              result = append(result, 2)\n                i++\n            }\
    \ else {\n                result = append(result, 4)\n            }\n        }\
    \ else if music_string[i] == '.' {\n            result = append(result, 1)\n \
    \       }\n    }\n    return result\n}\n", "    return []int{}\n}\n", "    var\
    \ result []int\n    var current_note int\n    for _, char := range music_string\
    \ {\n        switch char {\n        case 'o':\n            current_note = 4\n\
    \        case '|':\n            result = append(result, current_note)\n      \
    \      current_note = 0\n        case '.':\n            current_note = 1\n   \
    \     }\n    }\n    return result\n}\n", "    var result []int\n    var current_note\
    \ int\n    for _, char := range music_string {\n        if char == 'o' {\n   \
    \         current_note = 4\n        } else if char == '|' {\n            current_note\
    \ = current_note / 2\n        } else if char == '.' {\n            result = append(result,\
    \ current_note)\n        }\n    }\n    return result\n}\n", "    var result []int\n\
    \    var current_beat int\n    for _, char := range music_string {\n        switch\
    \ char {\n        case 'o':\n            current_beat = 4\n        case '|':\n\
    \            result = append(result, current_beat)\n            current_beat =\
    \ 0\n        case '.':\n            current_beat = 1\n        }\n    }\n    return\
    \ result\n}\n", "    return nil\n}\n", "    var result []int\n    var note_length\
    \ int\n    var note_count int\n    for _, char := range music_string {\n     \
    \   if char == 'o' {\n            note_length = 4\n        } else if char == '|'\
    \ {\n            note_length = 2\n        } else if char == '.' {\n          \
    \  note_length = 1\n        } else {\n            continue\n        }\n      \
    \  note_count++\n        if note_count == 2 {\n            result = append(result,\
    \ note_length)\n            note_count = 0\n        }\n    }\n    return result\n\
    }\n", "    var result []int\n    var current_note_length int\n    for _, char\
    \ := range music_string {\n        switch char {\n        case 'o':\n        \
    \    current_note_length = 4\n        case '|':\n            current_note_length\
    \ /= 2\n        case '.':\n            result = append(result, current_note_length)\n\
    \        }\n    }\n    return result\n}\n", "    return []int{}\n}\n", "    return\
    \ []int{}\n}\n", "    var result []int\n    var current_beat int = 0\n    for\
    \ _, char := range music_string {\n        switch char {\n            case 'o':\n\
    \                current_beat = 4\n            case '|':\n                result\
    \ = append(result, current_beat)\n                current_beat = 0\n         \
    \   case '.':\n                current_beat = 1\n        }\n    }\n    return\
    \ result\n}\n", "    var result []int\n    var current_beat int\n    for _, char\
    \ := range music_string {\n        switch char {\n        case 'o':\n        \
    \    current_beat = 4\n        case '|':\n            result = append(result,\
    \ current_beat)\n            current_beat = 0\n        case '.':\n           \
    \ current_beat += 1\n        }\n    }\n    return result\n}\n", "    var result\
    \ []int\n    for _, c := range music_string {\n        switch c {\n        case\
    \ 'o':\n            result = append(result, 4)\n        case '|':\n          \
    \  result[len(result)-1] /= 2\n        }\n    }\n    return result\n}\n", "  \
    \  return nil\n}\n", "    var result []int\n    var note_length int\n    for _,\
    \ char := range music_string {\n        if char == 'o' {\n            note_length\
    \ = 4\n        } else if char == '|' {\n            note_length = 2\n        }\
    \ else if char == '.' {\n            note_length = 1\n        }\n        result\
    \ = append(result, note_length)\n    }\n    return result\n}\n", "    var result\
    \ []int\n    var i int\n    for i = 0; i < len(music_string); i++ {\n        if\
    \ music_string[i] == 'o' {\n            if i + 1 < len(music_string) && music_string[i\
    \ + 1] == '|' {\n                result = append(result, 2)\n                i++\n\
    \            } else {\n                result = append(result, 4)\n          \
    \  }\n        } else if music_string[i] == '.' {\n            result = append(result,\
    \ 1)\n        }\n    }\n    return result\n}\n", "    return []int{}\n}\n", " \
    \   var result []int\n    var note_map = map[string]int{\n        \"o\": 4,\n\
    \        \"o|\": 2,\n        \".|\": 1,\n    }\n    var note_length int\n    for\
    \ _, note := range music_string {\n        note_length = note_map[string(note)]\n\
    \        result = append(result, note_length)\n    }\n    return result\n}\n",
  "    return []int{}\n}\n", "    var res []int\n    var i int\n    for i = 0; i <\
    \ len(music_string); i++ {\n        if music_string[i] == 'o' {\n            if\
    \ i + 1 < len(music_string) && music_string[i + 1] == '|' {\n                res\
    \ = append(res, 2)\n                i++\n            } else {\n              \
    \  res = append(res, 4)\n            }\n        } else if music_string[i] == '.'\
    \ {\n            res = append(res, 1)\n        }\n    }\n    return res\n}\n",
  "    return []int{}\n}\n", "    var result []int\n    for _, char := range music_string\
    \ {\n        switch char {\n        case 'o':\n            result = append(result,\
    \ 4)\n        case '|':\n            result = append(result, 2)\n        case\
    \ '.':\n            result = append(result, 1)\n        }\n    }\n    return result\n\
    }\n", "    var result []int\n    var note_length int\n    var note_string string\n\
    \    for i := 0; i < len(music_string); i++ {\n        if music_string[i] == '\
    \ ' {\n            result = append(result, note_length)\n            note_length\
    \ = 0\n            note_string = \"\"\n        } else {\n            note_string\
    \ += string(music_string[i])\n            if note_string == \"o\" {\n        \
    \        note_length = 4\n            } else if note_string == \"o|\" {\n    \
    \            note_length = 2\n            } else if note_string == \".|\" {\n\
    \                note_length = 1\n            }\n        }\n    }\n    result\
    \ = append(result, note_length)\n    return result\n}\n", "    var result []int\n\
    \    var current_note int\n    for _, char := range music_string {\n        switch\
    \ char {\n        case 'o':\n            if current_note == 0 {\n            \
    \    current_note = 4\n            } else {\n                current_note += 4\n\
    \            }\n        case '|':\n            if current_note == 0 {\n      \
    \          current_note = 2\n            } else {\n                current_note\
    \ += 2\n            }\n        case '.':\n            if current_note == 0 {\n\
    \                current_note = 1\n            } else {\n                current_note\
    \ += 1\n            }\n        case ' ':\n            result = append(result,\
    \ current_note)\n            current_note = 0\n        }\n    }\n    result =\
    \ append(result, current_note)\n    return result\n}\n", "    var result []int\n\
    \    var beat int\n    for _, c := range music_string {\n        switch c {\n\
    \        case 'o':\n            beat = 4\n        case '|':\n            result\
    \ = append(result, beat)\n            beat = 0\n        case '.':\n          \
    \  beat = 1\n        }\n    }\n    return result\n}\n", "    var result []int\n\
    \    var current_beat int\n    for _, c := range music_string {\n        switch\
    \ c {\n        case 'o':\n            current_beat = 4\n        case '|':\n  \
    \          result = append(result, current_beat)\n            current_beat = 0\n\
    \        case '.':\n            current_beat = 1\n        }\n    }\n    return\
    \ result\n}\n", "    var result []int\n    var current_beat int\n    for _, char\
    \ := range music_string {\n        if char == 'o' {\n            current_beat\
    \ = 4\n        } else if char == '|' {\n            current_beat = current_beat\
    \ / 2\n        } else if char == '.' {\n            result = append(result, current_beat)\n\
    \        }\n    }\n    return result\n}\n", "    var result []int\n    var current_note\
    \ int\n    for _, char := range music_string {\n        switch char {\n      \
    \  case 'o':\n            current_note = 4\n        case '|':\n            result\
    \ = append(result, current_note)\n            current_note = 0\n        case '.':\n\
    \            current_note = 1\n        }\n    }\n    return result\n}\n", "  \
    \  var result []int\n    var current int\n    for _, char := range music_string\
    \ {\n        switch char {\n        case 'o':\n            current = 4\n     \
    \   case '|':\n            result = append(result, current)\n            current\
    \ = 0\n        case '.':\n            current = 1\n        }\n    }\n    return\
    \ result\n}\n", "    // Your code here\n    return []int{}\n}\n", "    var result\
    \ []int\n    var current_note string\n    var current_note_length int\n    for\
    \ _, char := range music_string {\n        if char == ' ' {\n            result\
    \ = append(result, current_note_length)\n            current_note = \"\"\n   \
    \         current_note_length = 0\n        } else {\n            current_note\
    \ += string(char)\n            switch current_note {\n            case \"o\":\n\
    \                current_note_length = 4\n            case \"o|\":\n         \
    \       current_note_length = 2\n            case \".|\":\n                current_note_length\
    \ = 1\n            }\n        }\n    }\n    result = append(result, current_note_length)\n\
    \    return result\n}\n", "    var result []int\n    var current_note int\n  \
    \  for _, char := range music_string {\n        switch char {\n        case 'o':\n\
    \            current_note = 4\n        case '|':\n            result = append(result,\
    \ current_note)\n            current_note = 0\n        case '.':\n           \
    \ current_note = 1\n        }\n    }\n    return result\n}\n", "    return []int{}\n\
    }\n", "    return []int{}\n}\n", "    return []int{}\n}\n", "    var result []int\n\
    \    for _, c := range music_string {\n        switch c {\n        case 'o':\n\
    \            result = append(result, 4)\n        case '|':\n            result[len(result)-1]\
    \ /= 2\n        case '.':\n            result[len(result)-1] /= 2\n        }\n\
    \    }\n    return result\n}\n", "    var result []int\n    var current_beat int\n\
    \    for _, char := range music_string {\n        switch char {\n        case\
    \ 'o':\n            current_beat = 4\n        case '|':\n            result =\
    \ append(result, current_beat)\n            current_beat = 0\n        case '.':\n\
    \            current_beat = 1\n        }\n    }\n    return result\n}\n", "  \
    \  var result []int\n    var current_note int\n    for _, char := range music_string\
    \ {\n        if char == 'o' {\n            current_note += 4\n        } else if\
    \ char == '|' {\n            result = append(result, current_note)\n         \
    \   current_note = 0\n        } else if char == '.' {\n            current_note\
    \ += 1\n        }\n    }\n    return result\n}\n", "    return []int{}\n}\n",
  "    var result []int\n    var current_note int\n    for _, char := range music_string\
    \ {\n        switch char {\n        case 'o':\n            current_note = 4\n\
    \        case '|':\n            result = append(result, current_note)\n      \
    \      current_note = 0\n        case '.':\n            current_note = 1\n   \
    \     }\n    }\n    return result\n}\n", "    var result []int\n    for _, char\
    \ := range music_string {\n        switch char {\n        case 'o':\n        \
    \    result = append(result, 4)\n        case '|':\n            result = append(result,\
    \ 2)\n        case '.':\n            result = append(result, 1)\n        }\n \
    \   }\n    return result\n}\n", "    var beats []int\n    var beat int\n    for\
    \ _, char := range music_string {\n        switch char {\n        case 'o':\n\
    \            beat = 4\n        case '|':\n            beat = 2\n        case '.':\n\
    \            beat = 1\n        }\n        beats = append(beats, beat)\n    }\n\
    \    return beats\n}\n", "    var result []int\n    var current_note string\n\
    \    var current_note_length int\n    for _, char := range music_string {\n  \
    \      if char == ' ' {\n            result = append(result, current_note_length)\n\
    \            current_note = \"\"\n            current_note_length = 0\n      \
    \  } else {\n            current_note += string(char)\n            if current_note\
    \ == \"o\" {\n                current_note_length = 4\n            } else if current_note\
    \ == \"o|\" {\n                current_note_length = 2\n            } else if\
    \ current_note == \".|\" {\n                current_note_length = 1\n        \
    \    }\n        }\n    }\n    result = append(result, current_note_length)\n \
    \   return result\n}\n", "    return nil\n}\n", "    var result []int\n    var\
    \ current_beat int\n    for _, char := range music_string {\n        switch char\
    \ {\n        case 'o':\n            current_beat = 4\n        case '|':\n    \
    \        result = append(result, current_beat)\n            current_beat = 0\n\
    \        case '.':\n            current_beat = 1\n        }\n    }\n    return\
    \ result\n}\n", "    var result []int\n    var current_char string\n    var current_char_count\
    \ int\n    for _, char := range music_string {\n        if char == ' ' {\n   \
    \         if current_char == \"o\" {\n                result = append(result,\
    \ 4)\n            } else if current_char == \"o|\" {\n                result =\
    \ append(result, 2)\n            } else if current_char == \".|\" {\n        \
    \        result = append(result, 1)\n            }\n            current_char =\
    \ \"\"\n            current_char_count = 0\n        } else {\n            current_char\
    \ += string(char)\n            current_char_count += 1\n        }\n    }\n   \
    \ if current_char == \"o\" {\n        result = append(result, 4)\n    } else if\
    \ current_char == \"o|\" {\n        result = append(result, 2)\n    } else if\
    \ current_char == \".|\" {\n        result = append(result, 1)\n    }\n    return\
    \ result\n}\n", "    var result []int\n    var current_beat int\n    for _, char\
    \ := range music_string {\n        switch char {\n        case 'o':\n        \
    \    current_beat = 4\n        case '|':\n            result = append(result,\
    \ current_beat)\n            current_beat = 0\n        case '.':\n           \
    \ current_beat = 1\n        }\n    }\n    return result\n}\n", "    var result\
    \ []int\n    var i int\n    var length int\n    length = len(music_string)\n \
    \   for i = 0; i < length; i++ {\n        if music_string[i] == 'o' {\n      \
    \      if i + 1 < length && music_string[i + 1] == '|' {\n                result\
    \ = append(result, 2)\n                i++\n            } else {\n           \
    \     result = append(result, 4)\n            }\n        } else if music_string[i]\
    \ == '.' {\n            result = append(result, 1)\n            i++\n        }\n\
    \    }\n    return result\n}\n", "    var result []int\n    var current_beat int\n\
    \    for _, char := range music_string {\n        switch char {\n        case\
    \ 'o':\n            current_beat = 4\n        case '|':\n            result =\
    \ append(result, current_beat)\n            current_beat = 0\n        case '.':\n\
    \            current_beat = 1\n        }\n    }\n    return result\n}\n", "  \
    \  return []int{}\n}\n", "    var beats []int\n    var beat int\n    var note\
    \ string\n    for _, note = range music_string {\n        switch note {\n    \
    \    case 'o':\n            beat = 4\n        case '|':\n            beat = 2\n\
    \        case '.':\n            beat = 1\n        }\n        beats = append(beats,\
    \ beat)\n    }\n    return beats\n}\n", "    var result []int\n    var beat int\n\
    \    for _, c := range music_string {\n        switch c {\n        case 'o':\n\
    \            beat = 4\n        case '|':\n            beat = beat / 2\n      \
    \  case '.':\n            beat = beat / 2\n        }\n        result = append(result,\
    \ beat)\n    }\n    return result\n}\n", "    var result []int\n    var note_length\
    \ int\n    for i := 0; i < len(music_string); i++ {\n        switch music_string[i]\
    \ {\n        case 'o':\n            note_length = 4\n        case '|':\n     \
    \       note_length = 2\n        case '.':\n            note_length = 1\n    \
    \    }\n        result = append(result, note_length)\n    }\n    return result\n\
    }\n", "    return []int{}\n}\n", "    var result []int\n    for _, r := range\
    \ music_string {\n        switch r {\n        case 'o':\n            result =\
    \ append(result, 4)\n        case '|':\n            result = append(result, 1)\n\
    \        }\n    }\n    return result\n}\n", "    return []int{}\n}\n", "    var\
    \ result []int\n    var current_beat int\n    for _, char := range music_string\
    \ {\n        switch char {\n        case 'o':\n            current_beat = 4\n\
    \        case '|':\n            result = append(result, current_beat)\n      \
    \      current_beat = 0\n        case '.':\n            current_beat = 1\n   \
    \     }\n    }\n    return result\n}\n", "    var result []int\n    var count\
    \ int\n    for _, c := range music_string {\n        if c == 'o' {\n         \
    \   count++\n        } else if c == '|' {\n            result = append(result,\
    \ count)\n            count = 0\n        }\n    }\n    return result\n}\n", " \
    \   return []int{}\n}\n", "    var result []int\n    var current_beat int\n  \
    \  for _, char := range music_string {\n        switch char {\n        case 'o':\n\
    \            current_beat = 4\n        case '|':\n            result = append(result,\
    \ current_beat)\n            current_beat = 0\n        case '.':\n           \
    \ current_beat = 1\n        }\n    }\n    return result\n}\n", "    var result\
    \ []int\n    var current_beat int\n    for _, char := range music_string {\n \
    \       if char == 'o' {\n            current_beat = 4\n        } else if char\
    \ == '|' {\n            current_beat = 2\n        } else if char == '.' {\n  \
    \          current_beat = 1\n        }\n        result = append(result, current_beat)\n\
    \    }\n    return result\n}\n", "    return []int{}\n}\n", "    // Your code\
    \ here\n    return []int{}\n}\n", "    var result []int\n    var current_beat\
    \ int\n    for _, char := range music_string {\n        if char == 'o' {\n   \
    \         current_beat = 4\n        } else if char == '|' {\n            current_beat\
    \ = current_beat / 2\n        } else if char == '.' {\n            result = append(result,\
    \ current_beat)\n        }\n    }\n    return result\n}\n", "    var result []int\n\
    \    var i int\n    for i = 0; i < len(music_string); i++ {\n        if music_string[i]\
    \ == 'o' {\n            if i + 1 < len(music_string) && music_string[i + 1] ==\
    \ '|' {\n                result = append(result, 2)\n                i++\n   \
    \         } else {\n                result = append(result, 4)\n            }\n\
    \        } else if music_string[i] == '.' {\n            result = append(result,\
    \ 1)\n        }\n    }\n    return result\n}\n", "    var result []int\n    var\
    \ beats int\n    for _, char := range music_string {\n        switch char {\n\
    \        case 'o':\n            beats = 4\n        case '|':\n            beats\
    \ = 2\n        case '.':\n            beats = 1\n        default:\n          \
    \  beats = 0\n        }\n        result = append(result, beats)\n    }\n    return\
    \ result\n}\n", "    return []int{}\n}\n", "    var result []int\n    var current_note\
    \ int\n    for _, char := range music_string {\n        if char == 'o' {\n   \
    \         current_note = 4\n        } else if char == '|' {\n            current_note\
    \ = current_note / 2\n        } else if char == '.' {\n            result = append(result,\
    \ current_note)\n        }\n    }\n    return result\n}\n", "    return []int{}\n\
    }\n", "    var result []int\n    var current_beat int\n    for _, char := range\
    \ music_string {\n        switch char {\n        case 'o':\n            current_beat\
    \ = 4\n        case '|':\n            result = append(result, current_beat)\n\
    \            current_beat = 0\n        case '.':\n            current_beat = 1\n\
    \        }\n    }\n    return result\n}\n", "    // Your code goes here\n    return\
    \ []int{}\n}\n", "    var result []int\n    var current_beat int\n    for _, c\
    \ := range music_string {\n        switch c {\n        case 'o':\n           \
    \ current_beat = 4\n        case '|':\n            result = append(result, current_beat)\n\
    \            current_beat = 0\n        case '.':\n            current_beat = 1\n\
    \        }\n    }\n    return result\n}\n", "    var result []int\n    for _,\
    \ c := range music_string {\n        switch c {\n        case 'o':\n         \
    \   result = append(result, 4)\n        case '|':\n            result = append(result,\
    \ 2)\n        case '.':\n            result = append(result, 1)\n        }\n \
    \   }\n    return result\n}\n", "    return []int{}\n}\n", "    return []int{}\n\
    }\n", "    return []int{}\n}\n", "    var result []int\n    var current_note int\n\
    \    for _, c := range music_string {\n        switch c {\n        case 'o':\n\
    \            current_note = 4\n        case '|':\n            result = append(result,\
    \ current_note)\n            current_note = 0\n        case '.':\n           \
    \ current_note = 1\n        }\n    }\n    return result\n}\n", "    var result\
    \ []int\n    var current_beat int\n    for _, char := range music_string {\n \
    \       switch char {\n        case 'o':\n            current_beat = 4\n     \
    \   case '|':\n            current_beat = current_beat / 2\n        case '.':\n\
    \            result = append(result, current_beat)\n        }\n    }\n    return\
    \ result\n}\n", "    return []int{}\n}\n", "    var result []int\n    var current\
    \ int\n    for _, c := range music_string {\n        switch c {\n        case\
    \ 'o':\n            current = 4\n        case '|':\n            result = append(result,\
    \ current)\n            current = 0\n        case '.':\n            current =\
    \ 1\n        }\n    }\n    return result\n}\n", "    return []int{}\n}\n", " \
    \   return nil\n}\n", "    var result []int\n    var current_beat int\n    for\
    \ _, char := range music_string {\n        if char == 'o' {\n            current_beat\
    \ = 4\n        } else if char == '|' {\n            current_beat = current_beat\
    \ / 2\n        } else if char == '.' {\n            result = append(result, current_beat)\n\
    \        }\n    }\n    return result\n}\n", "    // TODO: implement this function\n\
    \    return []int{}\n}\n", "    return []int{}\n}\n", "    return []int{}\n}\n",
  "    var result []int\n    var current_note int\n    for _, char := range music_string\
    \ {\n        switch char {\n        case 'o':\n            current_note = 4\n\
    \        case '|':\n            result = append(result, current_note)\n      \
    \      current_note = 0\n        case '.':\n            current_note = 1\n   \
    \     }\n    }\n    return result\n}\n", "    var result []int\n    var i int\n\
    \    for i = 0; i < len(music_string); i++ {\n        if music_string[i] == 'o'\
    \ {\n            if i + 1 < len(music_string) && music_string[i + 1] == '|' {\n\
    \                result = append(result, 2)\n                i++\n           \
    \ } else {\n                result = append(result, 4)\n            }\n      \
    \  } else if music_string[i] == '.' {\n            result = append(result, 1)\n\
    \        }\n    }\n    return result\n}\n", "    var result []int\n    var current_beat\
    \ int\n    for _, c := range music_string {\n        switch c {\n        case\
    \ 'o':\n            current_beat = 4\n        case '|':\n            result =\
    \ append(result, current_beat)\n            current_beat = 0\n        case '.':\n\
    \            current_beat = 1\n        }\n    }\n    return result\n}\n", "  \
    \  // your code here\n    return []int{}\n}\n", "    var result []int\n    for\
    \ _, char := range music_string {\n        switch char {\n        case 'o':\n\
    \            result = append(result, 4)\n        case '|':\n            result\
    \ = append(result, 2)\n        case '.':\n            result = append(result,\
    \ 1)\n        }\n    }\n    return result\n}\n", "    return nil\n}\n", "    var\
    \ result []int\n    var current_note int\n    for _, c := range music_string {\n\
    \        if c == 'o' {\n            current_note = 4\n        } else if c == '|'\
    \ {\n            current_note = current_note / 2\n        } else if c == '.' {\n\
    \            result = append(result, current_note)\n        }\n    }\n    return\
    \ result\n}\n", "    var result []int\n    var current_beat int\n    for _, char\
    \ := range music_string {\n        switch char {\n        case 'o':\n        \
    \    current_beat = 4\n        case '|':\n            result = append(result,\
    \ current_beat)\n            current_beat = 0\n        case '.':\n           \
    \ current_beat = 1\n        }\n    }\n    return result\n}\n", "    var result\
    \ []int\n    var current_note int = 0\n    for _, char := range music_string {\n\
    \        if char == 'o' {\n            current_note += 4\n        } else if char\
    \ == '|' {\n            result = append(result, current_note)\n            current_note\
    \ = 0\n        } else if char == '.' {\n            current_note += 1\n      \
    \  }\n    }\n    return result\n}\n", "    // Your code here\n    return nil\n\
    }\n", "    return nil\n}\n", "    return []int{}\n}\n", "    return []int{}\n\
    }\n", "    var result []int\n    var note_length int\n    for _, char := range\
    \ music_string {\n        switch char {\n        case 'o':\n            note_length\
    \ = 4\n        case '|':\n            note_length /= 2\n        case '.':\n  \
    \          note_length = 1\n        default:\n            continue\n        }\n\
    \        result = append(result, note_length)\n    }\n    return result\n}\n",
  "    var result []int\n    for _, r := range music_string {\n        switch r {\n\
    \        case 'o':\n            result = append(result, 4)\n        case '|':\n\
    \            result = append(result, 2)\n        case '.':\n            result\
    \ = append(result, 1)\n        }\n    }\n    return result\n}\n", "    return\
    \ []int{}\n}\n", "    return nil\n}\n", "    var result []int\n    var current_beat\
    \ int\n    for _, char := range music_string {\n        switch char {\n      \
    \  case 'o':\n            current_beat = 4\n        case '|':\n            result\
    \ = append(result, current_beat)\n            current_beat = 0\n        case '.':\n\
    \            current_beat = 1\n        }\n    }\n    return result\n}\n", "  \
    \  // TODO: Implement this function.\n    return []int{}\n}\n", "    return []int{}\n\
    }\n", "    var result []int\n    var beat int\n    for _, c := range music_string\
    \ {\n        switch c {\n        case 'o':\n            beat = 4\n        case\
    \ '|':\n            result = append(result, beat)\n            beat = 0\n    \
    \    case '.':\n            beat = 1\n        }\n    }\n    return result\n}\n",
  "    var result []int\n    var current_beat int = 0\n    for _, char := range music_string\
    \ {\n        switch char {\n            case 'o':\n                current_beat\
    \ = 4\n            case '|':\n                result = append(result, current_beat)\n\
    \                current_beat = 0\n            case '.':\n                current_beat\
    \ = 1\n        }\n    }\n    return result\n}\n", "    var result []int\n    var\
    \ i int\n    var count int\n    for i = 0; i < len(music_string); i++ {\n    \
    \    if music_string[i] == 'o' {\n            if i + 1 < len(music_string) &&\
    \ music_string[i + 1] == '|' {\n                result = append(result, 2)\n \
    \               i++\n            } else {\n                result = append(result,\
    \ 4)\n            }\n        } else if music_string[i] == '.' {\n            if\
    \ i + 1 < len(music_string) && music_string[i + 1] == '|' {\n                result\
    \ = append(result, 1)\n                i++\n            }\n        }\n    }\n\
    \    return result\n}\n", "    return nil\n}\n", "    var result []int\n    var\
    \ current_beat int\n    for _, char := range music_string {\n        switch char\
    \ {\n        case 'o':\n            current_beat = 4\n        case '|':\n    \
    \        result = append(result, current_beat)\n            current_beat = 0\n\
    \        case '.':\n            current_beat = 1\n        }\n    }\n    return\
    \ result\n}\n", "    return nil\n}\n", "    var result []int\n    var current_note\
    \ string\n    for _, r := range music_string {\n        if r == ' ' {\n      \
    \      if current_note == \"o\" {\n                result = append(result, 4)\n\
    \            } else if current_note == \"o|\" {\n                result = append(result,\
    \ 2)\n            } else if current_note == \".|\" {\n                result =\
    \ append(result, 1)\n            }\n            current_note = \"\"\n        }\
    \ else {\n            current_note += string(r)\n        }\n    }\n    return\
    \ result\n}\n", "    return nil\n}\n", "    var result []int\n    var current_note\
    \ int\n    for _, char := range music_string {\n        if char == 'o' {\n   \
    \         current_note = 4\n        } else if char == '|' {\n            current_note\
    \ = current_note / 2\n        } else if char == '.' {\n            result = append(result,\
    \ current_note)\n        }\n    }\n    return result\n}\n", "    var result []int\n\
    \    var current_beat int\n    for _, char := range music_string {\n        if\
    \ char == 'o' {\n            current_beat = 4\n        } else if char == '|' {\n\
    \            current_beat = current_beat / 2\n        } else if char == '.' {\n\
    \            result = append(result, current_beat)\n        }\n    }\n    return\
    \ result\n}\n", "    var result []int\n    var current_note int\n    for _, c\
    \ := range music_string {\n        switch c {\n        case 'o':\n           \
    \ current_note = 4\n        case '|':\n            result = append(result, current_note)\n\
    \            current_note = 0\n        case '.':\n            current_note = 1\n\
    \        }\n    }\n    return result\n}\n", "    return nil\n}\n", "    var result\
    \ []int\n    var current_note_length int\n    for _, char := range music_string\
    \ {\n        if char == 'o' {\n            current_note_length = 4\n        }\
    \ else if char == '|' {\n            current_note_length /= 2\n        } else\
    \ if char == '.' {\n            result = append(result, current_note_length)\n\
    \        }\n    }\n    return result\n}\n", "    return []int{}\n}\n", "    var\
    \ result []int\n    var beats int\n    var note string\n    for _, char := range\
    \ music_string {\n        if char == ' ' {\n            result = append(result,\
    \ beats)\n            beats = 0\n            note = \"\"\n        } else {\n \
    \           note += string(char)\n            if note == \"o\" {\n           \
    \     beats = 4\n            } else if note == \"o|\" {\n                beats\
    \ = 2\n            } else if note == \".|\" {\n                beats = 1\n   \
    \         }\n        }\n    }\n    result = append(result, beats)\n    return\
    \ result\n}\n", "    var result []int\n    var note_map = map[string]int{\n  \
    \      \"o\": 4,\n        \"o|\": 2,\n        \".|\": 1,\n    }\n    for _, note\
    \ := range music_string {\n        result = append(result, note_map[string(note)])\n\
    \    }\n    return result\n}\n", "    var result []int\n    var beats int\n  \
    \  for _, char := range music_string {\n        switch char {\n        case 'o':\n\
    \            beats = 4\n        case '|':\n            beats = 2\n        case\
    \ '.':\n            beats = 1\n        default:\n            beats = 0\n     \
    \   }\n        result = append(result, beats)\n    }\n    return result\n}\n",
  "    return []int{}\n}\n", "    return []int{}\n}\n", "    var result []int\n  \
    \  var current_note string\n    var current_note_length int\n    for _, char :=\
    \ range music_string {\n        if char == ' ' {\n            result = append(result,\
    \ current_note_length)\n            current_note = \"\"\n            current_note_length\
    \ = 0\n        } else {\n            current_note += string(char)\n          \
    \  if current_note == \"o\" {\n                current_note_length = 4\n     \
    \       } else if current_note == \"o|\" {\n                current_note_length\
    \ = 2\n            } else if current_note == \".|\" {\n                current_note_length\
    \ = 1\n            }\n        }\n    }\n    result = append(result, current_note_length)\n\
    \    return result\n}\n", "    return []int{}\n}\n", "    var result []int\n \
    \   var current_note int\n    for _, char := range music_string {\n        switch\
    \ char {\n        case 'o':\n            current_note = 4\n        case '|':\n\
    \            result = append(result, current_note)\n            current_note =\
    \ 0\n        case '.':\n            current_note = 1\n        }\n    }\n    return\
    \ result\n}\n", "    var result []int\n    var current_beat int\n    for _, char\
    \ := range music_string {\n        switch char {\n        case 'o':\n        \
    \    current_beat = 4\n        case '|':\n            current_beat = current_beat\
    \ / 2\n        case '.':\n            result = append(result, current_beat)\n\
    \        }\n    }\n    return result\n}\n", "    var result []int\n    var beats\
    \ int\n    for _, c := range music_string {\n        switch c {\n        case\
    \ 'o':\n            beats = 4\n        case '|':\n            result = append(result,\
    \ beats)\n            beats = 0\n        case '.':\n            beats = 1\n  \
    \      }\n    }\n    return result\n}\n", "    var result []int\n    var note_map\
    \ = map[string]int{\n        \"o\": 4,\n        \"o|\": 2,\n        \".|\": 1,\n\
    \    }\n    for _, note := range music_string {\n        result = append(result,\
    \ note_map[string(note)])\n    }\n    return result\n}\n", "    var result []int\n\
    \    var tmp int\n    for _, v := range music_string {\n        if v == 'o' {\n\
    \            tmp = 4\n        } else if v == '|' {\n            tmp = tmp / 2\n\
    \        } else if v == '.' {\n            tmp = tmp / 2\n        }\n        result\
    \ = append(result, tmp)\n    }\n    return result\n}\n", "    var beats []int\n\
    \    var beat int\n    for _, c := range music_string {\n        switch c {\n\
    \        case 'o':\n            beat = 4\n        case '|':\n            beat\
    \ = beat / 2\n        case '.':\n            beat = beat / 2\n        }\n    \
    \    beats = append(beats, beat)\n    }\n    return beats\n}\n", "    return []int{}\n\
    }\n", "    // your code here\n    return nil\n}\n", "    var beats []int\n   \
    \ var beat int\n    for _, char := range music_string {\n        switch char {\n\
    \        case 'o':\n            beat = 4\n        case '|':\n            beat\
    \ = beat / 2\n        case '.':\n            beat = beat / 2\n        }\n    \
    \    beats = append(beats, beat)\n    }\n    return beats\n}\n", "    return []int{}\n\
    }\n", "    var result []int\n    var current_beat int\n    for _, char := range\
    \ music_string {\n        switch char {\n        case 'o':\n            current_beat\
    \ = 4\n        case '|':\n            result = append(result, current_beat)\n\
    \            current_beat = 0\n        case '.':\n            current_beat = 1\n\
    \        }\n    }\n    return result\n}\n", "    // Write your code here\n   \
    \ return []int{}\n}\n", "    var result []int\n    var beat int\n    for _, char\
    \ := range music_string {\n        switch char {\n        case 'o':\n        \
    \    beat = 4\n        case '|':\n            beat = beat / 2\n        case '.':\n\
    \            beat = beat / 2\n        }\n        result = append(result, beat)\n\
    \    }\n    return result\n}\n", "    var result []int\n    var current_note int\n\
    \    for _, char := range music_string {\n        switch char {\n        case\
    \ 'o':\n            current_note = 4\n        case '|':\n            result =\
    \ append(result, current_note)\n            current_note = 0\n        case '.':\n\
    \            current_note = 1\n        }\n    }\n    return result\n}\n", "  \
    \  var result []int\n    var i int\n    for i = 0; i < len(music_string); i++\
    \ {\n        if music_string[i] == 'o' {\n            if i + 1 < len(music_string)\
    \ && music_string[i + 1] == '|' {\n                result = append(result, 2)\n\
    \                i++\n            } else {\n                result = append(result,\
    \ 4)\n            }\n        } else if music_string[i] == '.' {\n            result\
    \ = append(result, 1)\n        }\n    }\n    return result\n}\n", "    var result\
    \ []int\n    var current int\n    for _, c := range music_string {\n        switch\
    \ c {\n        case 'o':\n            current = 4\n        case '|':\n       \
    \     result = append(result, current)\n            current = 0\n        case\
    \ '.':\n            current = 1\n        }\n    }\n    return result\n}\n", " \
    \   return nil\n}\n", "    var result []int\n    var current_note int\n    for\
    \ _, char := range music_string {\n        switch char {\n        case 'o':\n\
    \            current_note = 4\n        case '|':\n            result = append(result,\
    \ current_note)\n            current_note = 0\n        case '.':\n           \
    \ current_note = 1\n        }\n    }\n    return result\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

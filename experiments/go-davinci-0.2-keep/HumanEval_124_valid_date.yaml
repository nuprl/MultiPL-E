name: HumanEval_124_valid_date
language: go_test.go
prompt: "package valid_date_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // You have to write a function which validates a given date string and\n// returns\
  \ True if the date is valid otherwise False.\n// The date is valid if all of the\
  \ following rules are satisfied:\n// 1. The date string is not empty.\n// 2. The\
  \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  // 3. The months should not be less than 1 or higher than 12.\n// 4. The date should\
  \ be in the format: mm-dd-yyyy\n// for example: \n// valid_date('03-11-2000') =>\
  \ True\n// valid_date('15-01-2012') => False\n// valid_date('04-0-2040') => False\n\
  // valid_date('06-04-2020') => True\n// valid_date('06/04/2020') => False\nfunc\
  \ valid_date(date string) bool {\n"
tests: "func TestValid_Date(t *testing.T) {\n  candidate := valid_date\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(\"03-11-2000\"), expected: true },\n     { actual:\
  \ candidate(\"15-01-2012\"), expected: false },\n     { actual: candidate(\"04-0-2040\"\
  ), expected: false },\n     { actual: candidate(\"06-04-2020\"), expected: true\
  \ },\n     { actual: candidate(\"01-01-2007\"), expected: true },\n     { actual:\
  \ candidate(\"03-32-2011\"), expected: false },\n     { actual: candidate(\"\"),\
  \ expected: false },\n     { actual: candidate(\"04-31-3000\"), expected: false\
  \ },\n     { actual: candidate(\"06-06-2005\"), expected: true },\n     { actual:\
  \ candidate(\"21-31-2000\"), expected: false },\n     { actual: candidate(\"04-12-2003\"\
  ), expected: true },\n     { actual: candidate(\"04122003\"), expected: false },\n\
  \     { actual: candidate(\"20030412\"), expected: false },\n     { actual: candidate(\"\
  2003-04\"), expected: false },\n     { actual: candidate(\"2003-04-12\"), expected:\
  \ false },\n     { actual: candidate(\"04-2003\"), expected: false },\n   }\n\n\t\
  for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    // your code here\n    return false\n}\n", "    // your code here\n\
    \    return false\n}\n", "    return true\n}\n", "    return true\n}\n", "   \
    \ return true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    // your code here\n    return false\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    // your code here\n    return false\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    return true\n}\n", "    if\
    \ len(date) == 0 {\n        return false\n    }\n    var month, day, year int\n\
    \    _, err := fmt.Sscanf(date, \"%d-%d-%d\", &month, &day, &year)\n    if err\
    \ != nil {\n        return false\n    }\n    if month < 1 || month > 12 {\n  \
    \      return false\n    }\n    if day < 1 {\n        return false\n    }\n  \
    \  if month == 2 {\n        if day > 29 {\n            return false\n        }\n\
    \    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n     \
    \   if day > 30 {\n            return false\n        }\n    } else {\n       \
    \ if day > 31 {\n            return false\n        }\n    }\n    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n", "    // your code\
    \ here\n    return false\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n", "    // your code\
    \ here\n    return false\n}\n", "    // your code here\n    return false\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    // your code here\n\
    \    return false\n}\n", "    return true\n}\n", "    return true\n}\n", "   \
    \ // your code here\n    return false\n}\n", "    return true\n}\n", "    // your\
    \ code here\n    return false\n}\n", "    if len(date) == 0 {\n        return\
    \ false\n    }\n    if date[2] != '-' || date[5] != '-' {\n        return false\n\
    \    }\n    month := date[0:2]\n    day := date[3:5]\n    year := date[6:10]\n\
    \    if month < \"01\" || month > \"12\" {\n        return false\n    }\n    if\
    \ day < \"01\" || day > \"31\" {\n        return false\n    }\n    if year < \"\
    0001\" || year > \"9999\" {\n        return false\n    }\n    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    // your code here\n    return\
    \ false\n}\n", "    return true\n}\n", "    return true\n}\n", "    // your code\
    \ here\n    return false\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    // your code here\n    return\
    \ false\n}\n", "    // your code here\n    return false\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    // your code here\n    return false\n}\n", "    // your code here\n    return\
    \ false\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    // your code here\n\
    \    return false\n}\n", "    return true\n}\n", "    return true\n}\n", "   \
    \ return true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    // your code here\n    return\
    \ false\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n", "    // your code\
    \ here\n    return false\n}\n", "    return true\n}\n", "    // your code here\n\
    \    return false\n}\n", "    return true\n}\n", "    return true\n}\n", "   \
    \ return true\n}\n", "    // your code here\n    return false\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    // your code here\n\
    \    return false\n}\n", "    return true\n}\n", "    // your code here\n    return\
    \ false\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    // your code here\n    return false\n}\n", "    return true\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n", "    // your code\
    \ here\n    return false\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    return false\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    // your code here\n    return false\n}\n", "    // your code here\n    return\
    \ false\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    // your code here\n    return\
    \ false\n}\n", "    return true\n}\n", "    return true\n}\n", "    // your code\
    \ here\n    return false\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    // your code here\n    return false\n}\n", "    return\
    \ true\n}\n", "    // your code here\n    return false\n}\n", "    // your code\
    \ here\n    return false\n}\n", "    return true\n}\n", "    return true\n}\n",
  "    return true\n}\n", "    return true\n}\n", "    // your code here\n    return\
    \ false\n}\n", "    return true\n}\n", "    return true\n}\n", "    return true\n\
    }\n", "    return true\n}\n", "    return false\n}\n", "    return true\n}\n",
  "    // your code here\n    return false\n}\n", "    return true\n}\n", "    return\
    \ true\n}\n", "    return true\n}\n", "    return true\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

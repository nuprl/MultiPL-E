language: go_test.go
name: HumanEval_47_median
results:
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp_orjhrvt_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp_orjhrvt_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmp_orjhrvt_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmp_orjhrvt_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp_orjhrvt_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpcwp6u5nu_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpcwp6u5nu_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpcwp6u5nu_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpcwp6u5nu_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpcwp6u5nu_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpif56hqdw_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp0ejpslf7_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp0ejpslf7_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmp0ejpslf7_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmp0ejpslf7_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp0ejpslf7_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    n := len(l)\n    if n == 0 {\n        return 0\n    }\n    if n == 1\
    \ {\n        return float64(l[0])\n    }\n    if n % 2 == 0 {\n        return\
    \ float64(l[n/2-1]+l[n/2]) / 2\n    }\n    return float64(l[n/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpzfuv1vah_test.go:44: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpzfuv1vah_test.go:44:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpzfuv1vah_test.go:44: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpka7ppp7s_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpka7ppp7s_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpka7ppp7s_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpqt5reeet_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: Implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj4j55ft1_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    n := len(l)\n    if n % 2 == 0 {\n        m = float64(l[n/2]\
    \ + l[n/2-1]) / 2\n    } else {\n        m = float64(l[n/2])\n    }\n    return\
    \ m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n\
    \     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n\
    \     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpi2bqv774_test.go:41: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpi2bqv774_test.go:41:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpi2bqv774_test.go:41: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 2
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) == 3 {\n        return float64(l[0] + l[1]\
    \ + l[2] - min(l[0], min(l[1], l[2])) - max(l[0], max(l[1], l[2]))) / 2\n    }\n\
    \    if len(l) == 4 {\n        return float64(l[0] + l[1] + l[2] + l[3] - min(l[0],\
    \ min(l[1], min(l[2], l[3]))) - max(l[0], max(l[1], max(l[2], l[3])))) / 2\n \
    \   }\n    if len(l) == 5 {\n        return float64(l[0] + l[1] + l[2] + l[3]\
    \ + l[4] - min(l[0], min(l[1], min(l[2], min(l[3], l[4])))) - max(l[0], max(l[1],\
    \ max(l[2], max(l[3], l[4]))))) / 2\n    }\n    return 0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpi664k39s_test.go:24:45: undefined: min

    /tmp/tmpi664k39s_test.go:24:74: undefined: max

    /tmp/tmpi664k39s_test.go:27:52: undefined: min

    /tmp/tmpi664k39s_test.go:27:92: undefined: max

    /tmp/tmpi664k39s_test.go:30:59: undefined: min

    /tmp/tmpi664k39s_test.go:30:110: undefined: max

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpif56hqdw_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: Implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj4j55ft1_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    var n = len(l)\n    if n == 0 {\n        return 0\n\
    \    }\n    if n == 1 {\n        return float64(l[0])\n    }\n    if n % 2 ==\
    \ 0 {\n        m = float64(l[n/2] + l[n/2-1]) / 2\n    } else {\n        m = float64(l[n/2])\n\
    \    }\n    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpdjuaeg5t_test.go:47: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpdjuaeg5t_test.go:47:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpdjuaeg5t_test.go:47: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpif56hqdw_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var sum float64 = 0\n    for _, v := range l {\n        sum += float64(v)\n\
    \    }\n    return sum / float64(len(l))\n}\n\nfunc TestMedian(t *testing.T) {\n\
    \  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10,\
    \ 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5 },\n\
    \     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual: candidate([]int{8,\
    \ 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__1 (0.00s)\n\
    \        tmpv3y60ayf_test.go:38: expected '%!s(float64=8)', got '%!s(float64=171.66666666666666)'\n\
    \    --- FAIL: TestMedian/test_num__4 (0.00s)\n        tmpv3y60ayf_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(float64=5.571428571428571)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: Implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj4j55ft1_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp_orjhrvt_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp_orjhrvt_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmp_orjhrvt_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmp_orjhrvt_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp_orjhrvt_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    n := len(l)\n    if n == 0 {\n        return 0\n    }\n    if n % 2 ==\
    \ 0 {\n        return float64(l[n/2] + l[n/2-1]) / 2\n    }\n    return float64(l[n/2])\n\
    }\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual:\
    \ candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual:\
    \ candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6, 5}),\
    \ expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected:\
    \ 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpc5o4nmqo_test.go:41: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpc5o4nmqo_test.go:41:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpc5o4nmqo_test.go:41: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpif56hqdw_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpqt5reeet_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) % 2 == 0 {\n\
    \        return float64(l[len(l)/2] + l[len(l)/2-1]) / 2\n    }\n    return float64(l[len(l)/2])\n\
    }\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual:\
    \ candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual:\
    \ candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6, 5}),\
    \ expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected:\
    \ 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpd5bf4sl9_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpd5bf4sl9_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpd5bf4sl9_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpka7ppp7s_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpka7ppp7s_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpka7ppp7s_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) % 2 == 0 {\n        return (float64(l[len(l)/2])\
    \ + float64(l[len(l)/2-1])) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\n\
    func TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual:\
    \ candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual:\
    \ candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6, 5}),\
    \ expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected:\
    \ 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmphq39a4y7_test.go:43: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmphq39a4y7_test.go:43:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmphq39a4y7_test.go:43: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate\
    \ := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpjz68wl4d_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpjz68wl4d_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpjz68wl4d_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpjz68wl4d_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpjz68wl4d_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    var n int = len(l)\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return float64(l[0])\n    }\n    if n % 2\
    \ == 0 {\n        m = float64(l[n/2] + l[n/2-1]) / 2\n    } else {\n        m\
    \ = float64(l[n/2])\n    }\n    return m\n}\n\nfunc TestMedian(t *testing.T) {\n\
    \  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10,\
    \ 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5 },\n\
    \     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual: candidate([]int{8,\
    \ 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpkp441xdt_test.go:47: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpkp441xdt_test.go:47:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpkp441xdt_test.go:47: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpif56hqdw_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: Implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj4j55ft1_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate\
    \ := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpjz68wl4d_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpjz68wl4d_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpjz68wl4d_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpjz68wl4d_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpjz68wl4d_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = (float64(l[len(l)/2])\
    \ + float64(l[len(l)/2-1])) / 2\n    } else {\n        m = float64(l[len(l)/2])\n\
    \    }\n    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpadhtsbxl_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpadhtsbxl_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpadhtsbxl_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    n := len(l)\n    if n == 0 {\n        return 0\n    }\n    if n == 1\
    \ {\n        return float64(l[0])\n    }\n    if n % 2 == 0 {\n        return\
    \ (float64(l[n/2]) + float64(l[n/2-1])) / 2\n    }\n    return float64(l[n/2])\n\
    }\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual:\
    \ candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual:\
    \ candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6, 5}),\
    \ expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected:\
    \ 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpbny70fkq_test.go:44: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpbny70fkq_test.go:44:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpbny70fkq_test.go:44: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073197
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpqt5reeet_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 2
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) == 3 {\n        return float64(l[0] + l[1]\
    \ + l[2] - min3(l[0], l[1], l[2]) - max3(l[0], l[1], l[2])) / 2\n    }\n    if\
    \ len(l) == 4 {\n        return float64(l[0] + l[1] + l[2] + l[3] - min4(l[0],\
    \ l[1], l[2], l[3]) - max4(l[0], l[1], l[2], l[3])) / 2\n    }\n    if len(l)\
    \ == 5 {\n        return float64(l[0] + l[1] + l[2] + l[3] + l[4] - min5(l[0],\
    \ l[1], l[2], l[3], l[4]) - max5(l[0], l[1], l[2], l[3], l[4])) / 2\n    }\n \
    \   return 0\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj5hp9z2z_test.go:24:45: undefined: min3

    /tmp/tmpj5hp9z2z_test.go:24:70: undefined: max3

    /tmp/tmpj5hp9z2z_test.go:27:52: undefined: min4

    /tmp/tmpj5hp9z2z_test.go:27:83: undefined: max4

    /tmp/tmpj5hp9z2z_test.go:30:59: undefined: min5

    /tmp/tmpj5hp9z2z_test.go:30:96: undefined: max5

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpqt5reeet_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: Implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj4j55ft1_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    // TODO: implement median\n    return m\n}\n\nfunc\
    \ TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10,\
    \ 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}),\
    \ expected: 5 },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n  \
    \   { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp5sgz8lb0_test.go:36: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp5sgz8lb0_test.go:36:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmp5sgz8lb0_test.go:36: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmp5sgz8lb0_test.go:36:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp5sgz8lb0_test.go:36: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpqt5reeet_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    n := len(l)\n    if n % 2 == 0 {\n        m = float64(l[n/2]\
    \ + l[n/2 - 1]) / 2\n    } else {\n        m = float64(l[n/2])\n    }\n    return\
    \ m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n\
    \     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n\
    \     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp9829a132_test.go:41: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp9829a132_test.go:41:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp9829a132_test.go:41: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpcwp6u5nu_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpcwp6u5nu_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpcwp6u5nu_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpcwp6u5nu_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpcwp6u5nu_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 0
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // Sort the list.\n    for i := 0; i < len(l); i++ {\n        for j :=\
    \ i + 1; j < len(l); j++ {\n            if l[i] > l[j] {\n                l[i],\
    \ l[j] = l[j], l[i]\n            }\n        }\n    }\n\n    // Find the median.\n\
    \    if len(l) % 2 == 0 {\n        // Even number of elements.\n        return\
    \ float64(l[len(l)/2] + l[len(l)/2 - 1]) / 2\n    } else {\n        // Odd number\
    \ of elements.\n        return float64(l[len(l)/2])\n    }\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.002s\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: Implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj4j55ft1_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) == 3 {\n        return float64(l[0] + l[1]\
    \ + l[2] - min(l[0], min(l[1], l[2])) - max(l[0], max(l[1], l[2]))) / 2\n    }\n\
    \    if len(l) == 4 {\n        return float64(l[0] + l[1] + l[2] + l[3] - min(l[0],\
    \ min(l[1], min(l[2], l[3]))) - max(l[0], max(l[1], max(l[2], l[3])))) / 2\n \
    \   }\n    if len(l) == 5 {\n        return float64(l[0] + l[1] + l[2] + l[3]\
    \ + l[4] - min(l[0], min(l[1], min(l[2], min(l[3], l[4])))) - max(l[0], max(l[1],\
    \ max(l[2], max(l[3], l[4]))))) / 2\n    }\n    if len(l) == 6 {\n        return\
    \ float64(l[0] + l[1] + l[2] + l[3] + l[4] + l[5] - min(l[0], min(l[1], min(l[2],\
    \ min(l[3], min(l[4], l[5]))))) - max(l[0], max(l[1], max(l[2], max(l[3], max(l[4],\
    \ l[5])))))) / 2\n    }\n    if len(l) == 7 {\n        return float64(l[0] + l[1]\
    \ + l[2] + l[3] + l[4] + l[5] + l[6] - min(\nfunc TestMedian(t *testing.T) {\n\
    \  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10,\
    \ 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5 },\n\
    \     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual: candidate([]int{8,\
    \ 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpbnl12egb_test.go:37:6: expected ''('', found TestMedian

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073197
- exit_code: 2
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) == 3 {\n        return float64(l[0] + l[1]\
    \ + l[2] - min(l[0], min(l[1], l[2])) - max(l[0], max(l[1], l[2]))) / 2\n    }\n\
    \    if len(l) == 4 {\n        return float64(l[0] + l[1] + l[2] + l[3] - min(l[0],\
    \ min(l[1], min(l[2], l[3]))) - max(l[0], max(l[1], max(l[2], l[3])))) / 2\n \
    \   }\n    if len(l) == 5 {\n        return float64(l[0] + l[1] + l[2] + l[3]\
    \ + l[4] - min(l[0], min(l[1], min(l[2], min(l[3], l[4])))) - max(l[0], max(l[1],\
    \ max(l[2], max(l[3], l[4]))))) / 2\n    }\n    return 0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpi664k39s_test.go:24:45: undefined: min

    /tmp/tmpi664k39s_test.go:24:74: undefined: max

    /tmp/tmpi664k39s_test.go:27:52: undefined: min

    /tmp/tmpi664k39s_test.go:27:92: undefined: max

    /tmp/tmpi664k39s_test.go:30:59: undefined: min

    /tmp/tmpi664k39s_test.go:30:110: undefined: max

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    var n = len(l)\n    if n % 2 == 0 {\n        m = float64(l[n/2]\
    \ + l[n/2 - 1]) / 2\n    } else {\n        m = float64(l[n/2])\n    }\n    return\
    \ m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n\
    \     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n\
    \     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpyocug4zg_test.go:41: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpyocug4zg_test.go:41:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpyocug4zg_test.go:41: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpif56hqdw_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var sum float64\n    for _, v := range l {\n        sum += float64(v)\n\
    \    }\n    return sum / float64(len(l))\n}\n\nfunc TestMedian(t *testing.T) {\n\
    \  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10,\
    \ 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5 },\n\
    \     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual: candidate([]int{8,\
    \ 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__1 (0.00s)\n\
    \        tmpm4wwylrb_test.go:38: expected '%!s(float64=8)', got '%!s(float64=171.66666666666666)'\n\
    \    --- FAIL: TestMedian/test_num__4 (0.00s)\n        tmpm4wwylrb_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(float64=5.571428571428571)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n   \
    \ }\n    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpii0igv58_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpii0igv58_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpii0igv58_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n\n    if len(l) == 1 {\n \
    \       return float64(l[0])\n    }\n\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n\n    return float64(l[len(l)/2])\n}\n\nfunc\
    \ TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10,\
    \ 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}),\
    \ expected: 5 },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n  \
    \   { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp7t08krum_test.go:50: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp7t08krum_test.go:50:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp7t08krum_test.go:50: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = (float64(l[len(l)/2])\
    \ + float64(l[len(l)/2-1])) / 2\n    } else {\n        m = float64(l[len(l)/2])\n\
    \    }\n    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpadhtsbxl_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpadhtsbxl_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpadhtsbxl_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    // TODO: implement median function\n    return m\n\
    }\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual:\
    \ candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual:\
    \ candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6, 5}),\
    \ expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected:\
    \ 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp9mj2d53z_test.go:36: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp9mj2d53z_test.go:36:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmp9mj2d53z_test.go:36: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmp9mj2d53z_test.go:36:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp9mj2d53z_test.go:36: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpif56hqdw_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) % 2 == 0 {\n\
    \        return float64(l[len(l)/2] + l[len(l)/2-1]) / 2\n    }\n    return float64(l[len(l)/2])\n\
    }\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual:\
    \ candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual:\
    \ candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6, 5}),\
    \ expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected:\
    \ 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpd5bf4sl9_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpd5bf4sl9_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpd5bf4sl9_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: Implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj4j55ft1_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpif56hqdw_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpqt5reeet_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) % 2 == 0 {\n\
    \        return float64(l[len(l)/2] + l[len(l)/2-1]) / 2\n    }\n    return float64(l[len(l)/2])\n\
    }\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual:\
    \ candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual:\
    \ candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6, 5}),\
    \ expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected:\
    \ 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpd5bf4sl9_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpd5bf4sl9_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpd5bf4sl9_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n   \
    \ }\n    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpii0igv58_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpii0igv58_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpii0igv58_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var sum float64\n    for _, v := range l {\n        sum += float64(v)\n\
    \    }\n    return sum / float64(len(l))\n}\n\nfunc TestMedian(t *testing.T) {\n\
    \  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10,\
    \ 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5 },\n\
    \     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual: candidate([]int{8,\
    \ 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__1 (0.00s)\n\
    \        tmpm4wwylrb_test.go:38: expected '%!s(float64=8)', got '%!s(float64=171.66666666666666)'\n\
    \    --- FAIL: TestMedian/test_num__4 (0.00s)\n        tmpm4wwylrb_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(float64=5.571428571428571)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: Implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj4j55ft1_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpqt5reeet_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpqt5reeet_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    var n int = len(l)\n    if n % 2 == 0 {\n        m\
    \ = float64(l[n/2] + l[n/2 - 1]) / 2\n    } else {\n        m = float64(l[n/2])\n\
    \    }\n    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpaosn02la_test.go:41: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpaosn02la_test.go:41:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpaosn02la_test.go:41: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpka7ppp7s_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpka7ppp7s_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpka7ppp7s_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    var n = len(l)\n    if n % 2 == 0 {\n        m = float64(l[n/2]\
    \ + l[n/2-1]) / 2\n    } else {\n        m = float64(l[n/2])\n    }\n    return\
    \ m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n\
    \     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n\
    \     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpp2ujq9_t_test.go:41: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpp2ujq9_t_test.go:41:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpp2ujq9_t_test.go:41: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp_orjhrvt_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp_orjhrvt_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmp_orjhrvt_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmp_orjhrvt_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp_orjhrvt_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate\
    \ := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpjz68wl4d_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpjz68wl4d_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpjz68wl4d_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpjz68wl4d_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpjz68wl4d_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 2
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) == 3 {\n        return float64(l[0] + l[1]\
    \ + l[2] - min(l[0], min(l[1], l[2])) - max(l[0], max(l[1], l[2]))) / 2\n    }\n\
    \    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2] + l[len(l)/2 - 1])\
    \ / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmptp99lo2z_test.go:24:45: undefined: min

    /tmp/tmptp99lo2z_test.go:24:74: undefined: max

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    var n = len(l)\n    if n % 2 == 0 {\n        m = float64(l[n/2]\
    \ + l[n/2-1]) / 2\n    } else {\n        m = float64(l[n/2])\n    }\n    return\
    \ m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n\
    \     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n\
    \     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpp2ujq9_t_test.go:41: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpp2ujq9_t_test.go:41:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpp2ujq9_t_test.go:41: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate\
    \ := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpjz68wl4d_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpjz68wl4d_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpjz68wl4d_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpjz68wl4d_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpjz68wl4d_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: Implement me!\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj4j55ft1_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpj4j55ft1_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj4j55ft1_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n\n    if len(l) % 2 == 0 {\n\
    \        return float64(l[len(l)/2] + l[len(l)/2 - 1]) / 2\n    } else {\n   \
    \     return float64(l[len(l)/2])\n    }\n}\n\nfunc TestMedian(t *testing.T) {\n\
    \  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10,\
    \ 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5 },\n\
    \     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual: candidate([]int{8,\
    \ 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpjiki4h13_test.go:42: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpjiki4h13_test.go:42:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpjiki4h13_test.go:42: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    var n = len(l)\n    if n % 2 == 0 {\n        m = float64(l[n/2]\
    \ + l[n/2-1]) / 2\n    } else {\n        m = float64(l[n/2])\n    }\n    return\
    \ m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n\
    \     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n\
    \     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpp2ujq9_t_test.go:41: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpp2ujq9_t_test.go:41:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpp2ujq9_t_test.go:41: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    var n int = len(l)\n    if n % 2 == 0 {\n        m\
    \ = float64(l[n/2] + l[n/2-1]) / 2\n    } else {\n        m = float64(l[n/2])\n\
    \    }\n    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp8ihk6f44_test.go:41: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp8ihk6f44_test.go:41:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp8ihk6f44_test.go:41: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate\
    \ := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpjz68wl4d_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpjz68wl4d_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpjz68wl4d_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpjz68wl4d_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpjz68wl4d_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n\n    if len(l) == 1 {\n \
    \       return float64(l[0])\n    }\n\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    } else {\n        return float64(l[len(l)/2])\n\
    \    }\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n\
    \     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n\
    \     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp1mxx9zqs_test.go:50: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp1mxx9zqs_test.go:50:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp1mxx9zqs_test.go:50: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) == 3 {\n        return float64(l[0] + l[1]\
    \ + l[2] - min(l[0], min(l[1], l[2])) - max(l[0], max(l[1], l[2]))) / 2\n    }\n\
    \    if len(l) == 4 {\n        return float64(l[0] + l[1] + l[2] + l[3] - min(l[0],\
    \ min(l[1], min(l[2], l[3]))) - max(l[0], max(l[1], max(l[2], l[3])))) / 2\n \
    \   }\n    if len(l) == 5 {\n        return float64(l[0] + l[1] + l[2] + l[3]\
    \ + l[4] - min(l[0], min(l[1], min(l[2], min(l[3], l[4])))) - max(l[0], max(l[1],\
    \ max(l[2], max(l[3], l[4]))))) / 2\n    }\n    if len(l) == 6 {\n        return\
    \ float64(l[0] + l[1] + l[2] + l[3] + l[4] + l[5] - min(l[0], min(l[1], min(l[2],\
    \ min(l[3], min(l[4], l[5]))))) - max(l[0], max(l[1], max(l[2], max(l[3], max(l[4],\
    \ l[5])))))) / 2\n    }\n    if len(l) == 7 {\n        return float64(l[0] + l[1]\
    \ + l[2] + l[3] + l[4] + l[5] + l[6] - min(\nfunc TestMedian(t *testing.T) {\n\
    \  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10,\
    \ 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5 },\n\
    \     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual: candidate([]int{8,\
    \ 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpbnl12egb_test.go:37:6: expected ''('', found TestMedian

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073197
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) == 3 {\n        return float64(l[0] + l[1]\
    \ + l[2] - min(l[0], min(l[1], l[2])) - max(l[0], max(l[1], l[2]))) / 2\n    }\n\
    \    if len(l) == 4 {\n        return float64(l[0] + l[1] + l[2] + l[3] - min(l[0],\
    \ min(l[1], min(l[2], l[3]))) - max(l[0], max(l[1], max(l[2], l[3])))) / 2\n \
    \   }\n    if len(l) == 5 {\n        return float64(l[0] + l[1] + l[2] + l[3]\
    \ + l[4] - min(l[0], min(l[1], min(l[2], min(l[3], l[4])))) - max(l[0], max(l[1],\
    \ max(l[2], max(l[3], l[4]))))) / 2\n    }\n    if len(l) == 6 {\n        return\
    \ float64(l[0] + l[1] + l[2] + l[3] + l[4] + l[5] - min(l[0], min(l[1], min(l[2],\
    \ min(l[3], min(l[4], l[5]))))) - max(l[0], max(l[1], max(l[2], max(l[3], max(l[4],\
    \ l[5])))))) / 2\n    }\n    if len(l) == 7 {\n        return float64(l[0] + l[1]\
    \ + l[2] + l[3] + l[4] + l[5] + l[6] - min(\nfunc TestMedian(t *testing.T) {\n\
    \  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10,\
    \ 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5 },\n\
    \     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual: candidate([]int{8,\
    \ 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpbnl12egb_test.go:37:6: expected ''('', found TestMedian

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073197
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) == 3 {\n        return float64(l[0] + l[1]\
    \ + l[2] - min(l[0], min(l[1], l[2])) - max(l[0], max(l[1], l[2]))) / 2\n    }\n\
    \    if len(l) == 4 {\n        return float64(l[0] + l[1] + l[2] + l[3] - min(l[0],\
    \ min(l[1], min(l[2], l[3]))) - max(l[0], max(l[1], max(l[2], l[3])))) / 2\n \
    \   }\n    if len(l) == 5 {\n        return float64(l[0] + l[1] + l[2] + l[3]\
    \ + l[4] - min(l[0], min(l[1], min(l[2], min(l[3], l[4])))) - max(l[0], max(l[1],\
    \ max(l[2], max(l[3], l[4]))))) / 2\n    }\n    if len(l) == 6 {\n        return\
    \ float64(l[0] + l[1] + l[2] + l[3] + l[4] + l[5] - min(l[0], min(l[1], min(l[2],\
    \ min(l[3], min(l[4], l[5]))))) - max(l[0], max(l[1], max(l[2], max(l[3], max(l[4],\
    \ l[5])))))) / 2\n    }\n    if len(l) == 7 {\n        return float64(l[0] + l[1]\
    \ + l[2] + l[3] + l[4] + l[5] + l[6] - min(\nfunc TestMedian(t *testing.T) {\n\
    \  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10,\
    \ 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5 },\n\
    \     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual: candidate([]int{8,\
    \ 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpbnl12egb_test.go:37:6: expected ''('', found TestMedian

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073197
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) % 2 == 0 {\n\
    \        return (float64(l[len(l)/2]) + float64(l[len(l)/2-1])) / 2\n    }\n \
    \   return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate\
    \ := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpbwv21cl6_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpbwv21cl6_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpbwv21cl6_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median.\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp_y6dmt17_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp_y6dmt17_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmp_y6dmt17_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmp_y6dmt17_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp_y6dmt17_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpqt5reeet_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n    return float64(l[len(l)/2])\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp4vtuszpy_test.go:46: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp4vtuszpy_test.go:46:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp4vtuszpy_test.go:46: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n\n    if len(l) == 1 {\n \
    \       return float64(l[0])\n    }\n\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n\n    if len(l) % 2 == 0 {\n        return float64(l[len(l)/2]\
    \ + l[len(l)/2 - 1]) / 2\n    }\n\n    return float64(l[len(l)/2])\n}\n\nfunc\
    \ TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10,\
    \ 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}),\
    \ expected: 5 },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n  \
    \   { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp7t08krum_test.go:50: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp7t08krum_test.go:50:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp7t08krum_test.go:50: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function.\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpunucrd_i_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpunucrd_i_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpunucrd_i_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    return 0\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate\
    \ := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpkbwy4g5m_test.go:43: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpkbwy4g5m_test.go:43:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpkbwy4g5m_test.go:43: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpif56hqdw_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement median\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpqt5reeet_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpqt5reeet_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpqt5reeet_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement me\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe6_kfcmm_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe6_kfcmm_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe6_kfcmm_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 2
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n   \
    \     return float64(l[0])\n    }\n    if len(l) == 2 {\n        return float64(l[0]\
    \ + l[1]) / 2\n    }\n    if len(l) == 3 {\n        return float64(l[0] + l[1]\
    \ + l[2] - min(l[0], min(l[1], l[2])) - max(l[0], max(l[1], l[2]))) / 2\n    }\n\
    \    if len(l) == 4 {\n        return float64(l[0] + l[1] + l[2] + l[3] - min(l[0],\
    \ min(l[1], min(l[2], l[3]))) - max(l[0], max(l[1], max(l[2], l[3])))) / 2\n \
    \   }\n    if len(l) == 5 {\n        return float64(l[0] + l[1] + l[2] + l[3]\
    \ + l[4] - min(l[0], min(l[1], min(l[2], min(l[3], l[4])))) - max(l[0], max(l[1],\
    \ max(l[2], max(l[3], l[4]))))) / 2\n    }\n    return 0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpi664k39s_test.go:24:45: undefined: min

    /tmp/tmpi664k39s_test.go:24:74: undefined: max

    /tmp/tmpi664k39s_test.go:27:52: undefined: min

    /tmp/tmpi664k39s_test.go:27:92: undefined: max

    /tmp/tmpi664k39s_test.go:30:59: undefined: min

    /tmp/tmpi664k39s_test.go:30:110: undefined: max

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    n := len(l)\n    if n == 0 {\n        return 0\n \
    \   }\n    if n == 1 {\n        return float64(l[0])\n    }\n    if n % 2 == 0\
    \ {\n        m = float64(l[n/2] + l[n/2-1]) / 2\n    } else {\n        m = float64(l[n/2])\n\
    \    }\n    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmp_vzbmqq2_test.go:47: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmp_vzbmqq2_test.go:47:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmp_vzbmqq2_test.go:47: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073198
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    if len(l) == 0 {\n        return 0\n    }\n    if len(l) % 2 == 0 {\n\
    \        return float64(l[len(l)/2] + l[len(l)/2-1]) / 2\n    }\n    return float64(l[len(l)/2])\n\
    }\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: 3 },\n     { actual:\
    \ candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0 },\n     { actual:\
    \ candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6, 5}),\
    \ expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected:\
    \ 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpd5bf4sl9_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpd5bf4sl9_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpd5bf4sl9_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement\n    return 0.0\n}\n\nfunc TestMedian(t *testing.T)\
    \ {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpif56hqdw_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpif56hqdw_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpif56hqdw_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    // TODO: implement this function\n    return 0.0\n}\n\nfunc TestMedian(t\
    \ *testing.T) {\n  candidate := median\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000,\
    \ 10, 20}), expected: 8.0 },\n     { actual: candidate([]int{5}), expected: 5\
    \ },\n     { actual: candidate([]int{6, 5}), expected: 5.5 },\n     { actual:\
    \ candidate([]int{8, 1, 3, 9, 9, 2, 7}), expected: 7 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpe5ltx1_n_test.go:35: expected '%!s(int=3)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=8)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__2\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=5)', got '%!s(float64=0)'\n\
    \    --- FAIL: TestMedian/test_num__3 (0.00s)\n        tmpe5ltx1_n_test.go:35:\
    \ expected '%!s(float64=5.5)', got '%!s(float64=0)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpe5ltx1_n_test.go:35: expected '%!s(int=7)', got '%!s(float64=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196
- exit_code: 1
  program: "package median_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n//\
    \ 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunc median(l []int) float64\
    \ {\n    var m float64\n    if len(l) % 2 == 0 {\n        m = float64(l[len(l)/2]\
    \ + l[len(l)/2-1]) / 2\n    } else {\n        m = float64(l[len(l)/2])\n    }\n\
    \    return m\n}\n\nfunc TestMedian(t *testing.T) {\n  candidate := median\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ 3 },\n     { actual: candidate([]int{-10, 4, 6, 1000, 10, 20}), expected: 8.0\
    \ },\n     { actual: candidate([]int{5}), expected: 5 },\n     { actual: candidate([]int{6,\
    \ 5}), expected: 5.5 },\n     { actual: candidate([]int{8, 1, 3, 9, 9, 2, 7}),\
    \ expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMedian (0.00s)\n    --- FAIL: TestMedian/test_num__0 (0.00s)\n\
    \        tmpj8fif65s_test.go:40: expected '%!s(int=3)', got '%!s(float64=2)'\n\
    \    --- FAIL: TestMedian/test_num__1 (0.00s)\n        tmpj8fif65s_test.go:40:\
    \ expected '%!s(float64=8)', got '%!s(float64=503)'\n    --- FAIL: TestMedian/test_num__4\
    \ (0.00s)\n        tmpj8fif65s_test.go:40: expected '%!s(int=7)', got '%!s(float64=9)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073196

name: HumanEval_11_string_xor
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input are two strings a and\
  \ b consisting only of 1s and 0s.\n// Perform binary XOR on these inputs and return\
  \ result also as a string.\n// >>> string_xor((\"010\"), (\"110\"))\n// (\"100\"\
  )\nstd::string string_xor(std::string a, std::string b) {\n"
tests: "}\nint main() {\n    auto candidate = string_xor;\n    assert(candidate((\"\
  111000\"), (\"101010\")) == (\"010010\"));\n    assert(candidate((\"1\"), (\"1\"\
  )) == (\"0\"));\n    assert(candidate((\"0101\"), (\"0000\")) == (\"0101\"));\n\
  }\n"
completions: ["    std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++)\
    \ {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n    }\n  \
    \  return ans;", "    std::string result = \"\";\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n   \
    \     z = z % 10;\n        result += std::to_string(z);\n    }\n    if (carry\
    \ != 0) {\n        result += std::to_string(carry);\n    }\n    return result;",
  "    std::string result = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result\
    \ += z + '0';\n    }\n    if (carry != 0) {\n        result += carry + '0';\n\
    \    }\n    return result;", "    std::string result;\n    for (int i = 0; i <\
    \ a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i]\
    \ = '0' + z;\n    }\n    if (carry != 0) {\n        result[a.size()] = '1' + carry;\n\
    \    }\n    return result;", "    std::string result;\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n       \
    \ int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        z = z % 10;\n        result.append(1, z);\n    }\n    if (carry != 0)\
    \ {\n        result.append(1, carry);\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        carry = z / 10;\n        ans = std::to_string(z % 10) +\
    \ ans;\n    }\n    if (carry != 0) {\n        ans = std::to_string(carry) + ans;\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i] + carry;\n   \
    \     carry = x >> 1;\n        result += std::to_string(x);\n    }\n    if (carry\
    \ != 0)\n        result += std::to_string(carry);\n    return result;", "    std::string\
    \ result = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result +=\
    \ z + '0';\n    }\n    if (carry != 0) {\n        result += carry + '0';\n   \
    \ }\n    return result;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.length(); i++) {\n        int x = a[i] - '0';\n        int\
    \ y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n \
    \       z = z % 10;\n        result[i] = '0' + z;\n    }\n    if (carry != 0)\
    \ {\n        result[a.length()] = '1' + carry;\n    }\n    return result;", " \
    \   std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int val = a[i] - b[i] + carry;\n        carry = val / 2;\n \
    \       val = val % 2;\n        result.append(1, val);\n    }\n    if (carry !=\
    \ 0)\n        result.append(1, carry);\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result.append(z\
    \ + '0');\n    }\n    if (carry != 0) {\n        result.append(carry + '0');\n\
    \    }\n    return result;", "    std::string result;\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i] - carry;\n\
    \        carry = x >> 1;\n        result.append(x & 1);\n    }\n    if (carry\
    \ != 0) {\n        result.append(carry);\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.length(); i++) {\n  \
    \      int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n\
    \        carry += z;\n        result += to_string(z);\n    }\n    if (carry !=\
    \ 0) {\n        result += to_string(carry);\n    }\n    return result;", "   \
    \ std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        ans += (z & 1) + '0';\n        carry = (z >> 1);\n\
    \    }\n    if (carry) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.length(); i++) {\n  \
    \      int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n\
    \        carry += z;\n        result.append(z + '0');\n    }\n    if (carry >\
    \ 0) {\n        result.append(carry + '0');\n    }\n    return result;", "   \
    \ std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string result;\n  \
    \  int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i]\
    \ - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n      \
    \  carry = z / 10;\n        z = z % 10;\n        result += z + '0';\n    }\n \
    \   if (carry != 0) {\n        result += carry + '0';\n    }\n    return result;",
  "    std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans\
    \ += a[i] ^ b[i];\n    }\n    return ans;", "    std::string result;\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n    }\n    if\
    \ (carry != 0) {\n        result[a.size()] = '0' + carry;\n    }\n    return result;",
  "    std::string result = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result\
    \ += z + '0';\n    }\n    if (carry != 0) {\n        result += carry + '0';\n\
    \    }\n    return result;", "    std::string result;\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n       \
    \ int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        z = z % 10;\n        result[i] = '0' + z;\n    }\n    if (carry != 0)\
    \ {\n        result[result.size() - 1] = '1' + carry;\n    }\n    return result;",
  "    std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++) {\n       \
    \ ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n    }\n    return ans;",
  "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n   \
    \ for (int i = 0; i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n\
    \        int z = x + y + carry;\n        ans += (z & 1) + '0';\n        carry\
    \ = (z >> 1);\n    }\n    if (carry != 0)\n        ans += '1';\n    return ans;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x ^ y;\n        carry = z >> 1;\n        result += ((z < 0) ? '0' : ((z\
    \ > 0) ? '1' : '0')) + carry;\n    }\n    if (carry != 0) {\n        result +=\
    \ '1';\n    }\n    return result;", "    std::string result;\n    int carry =\
    \ 0;\n    for (int i = 0; i < a.size(); i++) {\n        char c = a[i];\n     \
    \   char d = b[i];\n        int x = c ^ d;\n        carry = x >> 1;\n        result\
    \ += to_string(carry);\n    }\n    if (carry != 0) {\n        result += to_string(carry);\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int n = a.size();\n\
    \    int m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j\
    \ < m) {\n        int k = a[i] - '0';\n        int l = b[j] - '0';\n        if\
    \ (k > 0 && l > 0) {\n            ans += '1';\n            i += 1;\n         \
    \   j += 1;\n        } else if (k > 0) {\n            ans += '0';\n          \
    \  i += 1;\n        } else {\n            ans += '1';\n            j += 1;\n \
    \       }\n    }\n    while (i < n) {\n        ans += '0';\n        i += 1;\n\
    \    }\n    while (j < m) {\n        ans += '0';\n        j += 1;\n    }\n   \
    \ return ans;", "    std::string ans = \"\";\n    int lena = a.length();\n   \
    \ int lenb = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < lena\
    \ && j < lenb) {\n        int k = a[i] - '0';\n        int l = b[j] - '0';\n \
    \       int m = k ^ l;\n        ans += std::to_string(m);\n        i += 1;\n \
    \       j += 1;\n    }\n    while (i < lena) {\n        int k = a[i] - '0';\n\
    \        int l = 0;\n        int m = k ^ l;\n        ans += std::to_string(m);\n\
    \        i += 1;\n    }\n    while (j < lenb) {\n        int k = 0;\n        int\
    \ l = b[j] - '0';\n        int m = k ^ l;\n        ans += std::to_string(m);\n\
    \        j += 1;\n    }\n    return ans;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int sum = a[i] - b[i]\
    \ + carry;\n        carry = sum / 2;\n        sum += sum % 2;\n        result.append(1,\
    \ sum % 2);\n    }\n    if (carry != 0) {\n        result.append(1, carry);\n\
    \    }\n    return result;", "    std::string result;\n    for (int i = 0; i <\
    \ a.size(); i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i]\
    \ = '0' + z;\n    }\n    if (carry != 0) {\n        result[a.size()] = '1' + carry;\n\
    \    }\n    return result;", "    std::string result;\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        carry += (a[i] - '0') * (b[i]\
    \ - '0');\n        result[i] = '0' + (carry % 2);\n        carry /= 2;\n    }\n\
    \    if (carry != 0) {\n        result[a.size()] = '1' + carry;\n    }\n    return\
    \ result;", "    std::string result;\n    int carry = 0;\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        int x = a[i] - b[i] + carry;\n        carry =\
    \ x >> 1;\n        result += to_string(x);\n    }\n    if (carry != 0) result\
    \ += to_string(carry);\n    return result;", "    std::string ans = \"\";\n  \
    \  int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i]\
    \ - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n      \
    \  ans += (z <= 9) ? z + '0' : z - 10;\n        carry = z >> 4;\n    }\n    if\
    \ (carry != 0)\n        ans += carry;\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       carry = z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n \
    \   }\n    if (carry != 0) {\n        result[a.size()] = '1' + carry;\n    }\n\
    \    return result;", "    std::string ans = \"\";\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z & 1) + '0';\n\
    \        carry = (z >> 1);\n    }\n    if (carry != 0) {\n        ans += '1';\n\
    \    }\n    return ans;", "    std::string result;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ result;\n    for(int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry =\
    \ z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n    }\n    if (carry\
    \ != 0) {\n        result[a.size()] = '1' + carry;\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i]\
    \ = '0' + z;\n    }\n    if (carry != 0) {\n        result[result.size() - 1]\
    \ = '1' + carry;\n    }\n    return result;", "    std::string ans = \"\";\n \
    \   for(int i = 0; i < a.size(); i++) {\n        ans += std::to_string(a[i] ^\
    \ b[i]);\n    }\n    return ans;", "    std::string result;\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        z = z % 10;\n        result += z + '0';\n    }\n    if (carry != 0) {\n\
    \        result += carry + '0';\n    }\n    return result;", "    std::string\
    \ result;\n    for(int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry =\
    \ z / 10;\n        z = z % 10;\n        result += z + '0';\n    }\n    if (carry\
    \ != 0)\n        result += carry + '0';\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z >> 2;\n        result += (z % 10) + '0';\n    }\n\
    \    if (carry != 0)\n        result += carry + '0';\n    return result;", " \
    \   std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int val = a[i] - '0';\n        int val2 = b[i] - '0';\n    \
    \    int res = val ^ val2;\n        if (res > 9) {\n            carry = 1;\n \
    \           res = res - 10;\n        }\n        ans += (res + '0');\n    }\n \
    \   if (carry != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i] = '0'\
    \ + z;\n    }\n    if (carry != 0) {\n        result[result.size() - 1] = '1'\
    \ + carry;\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val = a[i] - b[i]\
    \ - carry;\n        carry = val / 2;\n        val = val % 2;\n        result.append(1,\
    \ val);\n    }\n    if (carry != 0)\n        result.append(1, carry);\n    return\
    \ result;", "    std::string result;\n    int n = a.size();\n    int m = b.size();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i]\
    \ != '0' && b[j] != '0') {\n            result += a[i];\n            i++;\n  \
    \      } else if (a[i] != '0' && b[j] == '0') {\n            result += b[j];\n\
    \            j++;\n        } else if (a[i] != '0' && b[j] == '0') {\n        \
    \    result += a[i];\n            i++;\n            j++;\n        } else {\n \
    \           result += b[j];\n            j++;\n        }\n    }\n    while (i\
    \ < n) {\n        result += a[i];\n        i++;\n    }\n    while (j < m) {\n\
    \        result += b[j];\n        j++;\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n\
    \        carry += z / 10;\n        z = z % 10;\n        result.append(1, z);\n\
    \    }\n    if (carry > 0) {\n        result.append(1, carry);\n    }\n    return\
    \ result;", "    std::string result;\n    for(int i = 0; i < a.size(); i++) {\n\
    \        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^\
    \ y;\n        carry = z >> 1;\n        result += ((z < 0) ? '1' : '0');\n    }\n\
    \    if (carry != 0)\n        result += '1';\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n\
    \        carry += z;\n        result.append(1, z + '0');\n    }\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x ^ y;\n        carry += z;\n        result.append(1,\
    \ z + '0');\n    }\n    if (carry != 0) {\n        result.append(1, carry + '0');\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        ans += (std::to_string(int(a[i])) ^ std::to_string(int(b[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    for(int i = 0; i < a.size();\
    \ i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n\
    \        z = z + carry;\n        carry = z >> 5;\n        z = z % 10;\n      \
    \  result += z + '0';\n    }\n    if (carry != 0) {\n        result += carry +\
    \ '0';\n    }\n    return result;", "    std::string result;\n    int carry =\
    \ 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val = a[i] - b[i]\
    \ + carry;\n        carry = val / 2;\n        val = val % 2;\n        result.append(1,\
    \ val);\n    }\n    if (carry != 0) result.append(1, carry);\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int val = a[i] - '0';\n        int val2 = b[i] - '0';\n    \
    \    int res = val + val2 + carry;\n        carry = res / 10;\n        result\
    \ += (res % 10) + '0';\n    }\n    if (carry != 0) {\n        result += carry\
    \ + '0';\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry =\
    \ z / 10;\n        z = z % 10;\n        result.append(z + '0');\n    }\n    if\
    \ (carry != 0) {\n        result.append(carry + '0');\n    }\n    return result;",
  "    std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans\
    \ += (std::to_string(int(b[i]) ^ int(a[i])));\n    }\n    return ans;", "    std::string\
    \ res;\n    int n = a.size();\n    int m = b.size();\n    int i = 0;\n    int\
    \ j = 0;\n    while (i < n && j < m) {\n        if (a[i] != '0' && b[j] != '0')\
    \ {\n            res += '0';\n        } else if (a[i] != '0' && b[j] == '0') {\n\
    \            res += '1';\n        } else if (a[i] == '0' && b[j] == '0') {\n \
    \           res += '0';\n        } else {\n            res += '1';\n        }\n\
    \        i++;\n        j++;\n    }\n    return res;", "    std::string ans = \"\
    \";\n    int lena = a.length();\n    int lenb = b.length();\n    int maxlen =\
    \ std::max(lena, lenb);\n    for (int i = 0; i < maxlen; i++) {\n        ans +=\
    \ (std::tolower(a[i]) ^ std::tolower(b[i]));\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i]\
    \ ^ b[i]) + \"\");\n    }\n    return ans;", "    std::string result;\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n    }\n   \
    \ if (carry != 0) {\n        result.append(carry + '0');\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        char c = a[i];\n        char d = b[i];\n        int x = c ^\
    \ d;\n        carry = x >> 1;\n        result += to_string(carry);\n    }\n  \
    \  if (carry != 0) {\n        result += to_string(carry);\n    }\n    return result;",
  "    std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string result;\n  \
    \  int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i]\
    \ - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n      \
    \  carry = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n   \
    \ }\n    if (carry != 0) {\n        result.append(carry + '0');\n    }\n    return\
    \ result;", "    std::string result = \"\";\n    for (int i = 0; i < a.size();\
    \ i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z & 1) + '0';\n        carry = (z >> 1);\n    }\n\
    \    if (carry != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^\
    \ y;\n        ans += (z & 1) + '0';\n        carry = z >> 1;\n    }\n    if (carry\
    \ != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        ans += (z & 1) + '0';\n        carry = (z >> 1);\n    }\n  \
    \  if (carry != 0)\n        ans += '1';\n    return ans;", "    std::string ans\
    \ = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i])\
    \ ^ std::bitset<8>(b[i])));\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    for (size_t i = 0; i < a.size(); i++) {\n        ans += std::to_string(a[i]\
    \ ^ b[i]);\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for (auto i = 0; i\
    \ < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i])));\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for (auto &i : a)\
    \ {\n        ans += i;\n    }\n    for (auto &i : b) {\n        ans += i;\n  \
    \  }\n    for (auto &i : ans) {\n        ans ^= i;\n    }\n    return ans;", " \
    \   std::string result;\n    int n = a.size();\n    int m = b.size();\n    int\
    \ i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i] != '0'\
    \ && b[j] != '0') {\n            result += a[i];\n            i++;\n        }\
    \ else if (a[i] != '0' && b[j] == '0') {\n            result += b[j];\n      \
    \      j++;\n        } else if (a[i] != '0' && b[j] == '0') {\n            result\
    \ += a[i];\n            i++;\n            j++;\n        } else {\n           \
    \ result += a[i];\n            i++;\n            j++;\n        }\n    }\n    while\
    \ (i < n) {\n        result += a[i];\n        i++;\n    }\n    while (j < m) {\n\
    \        result += b[j];\n        j++;\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int sum = a[i] - b[i] + carry;\n        carry = sum / 2;\n        sum +=\
    \ carry % 2;\n        result.append(1, sum % 2);\n    }\n    if (carry != 0)\n\
    \        result.append(1, carry);\n    return result;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val\
    \ = a[i] - b[i] + carry;\n        carry = val / 2;\n        val = val % 2;\n \
    \       result.append(1, val);\n    }\n    if (carry != 0) {\n        result.append(1,\
    \ carry);\n    }\n    return result;", "    std::string result = \"\";\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        result += (a[i]\
    \ ^ b[i]) + carry;\n        carry = result / 2;\n        result %= 2;\n    }\n\
    \    if (carry != 0) result += carry;\n    return result;", "    std::string ans\
    \ = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        ans += a[i] ^ b[i];\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for(int i = 0; i <\
    \ a.size(); i++) {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n\
    \    }\n    return ans;", "    std::string result;\n    for(int i = 0; i < a.size();\
    \ i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i] = '0'\
    \ + z;\n    }\n    if (carry != 0) {\n        result[a.size()] = '1' + carry;\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int sum = a[i] - b[i] + carry;\n\
    \        ans += (sum < 10 ? \"0\" : \"\") + std::to_string(sum);\n        carry\
    \ = sum / 10;\n    }\n    if (carry != 0)\n        ans += std::to_string(carry);\n\
    \    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        ans += (z <= 9) ? (z + '0')\
    \ : (z - 10 + 'a');\n        carry = (z <= 9) ? 1 : 0;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    int lena = a.length();\n    int lenb = b.length();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < lena && j < lenb) {\n        if\
    \ (a[i] != b[j]) {\n            ans += '0';\n        } else {\n            ans\
    \ += '1';\n        }\n        i++;\n        j++;\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n       \
    \ ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n    }\n    return ans;",
  "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n\
    \    int lena = a.length();\n    int lenb = b.length();\n    int i = 0;\n    int\
    \ j = 0;\n    while (i < lena && j < lenb) {\n        if (a[i] != '0' && a[i]\
    \ != '1') {\n            ans += '0';\n            i++;\n        } else if (b[j]\
    \ != '0' && b[j] != '1') {\n            ans += '1';\n            j++;\n      \
    \  } else {\n            ans += a[i] - '0' ^ b[j] - '0';\n            i++;\n \
    \           j++;\n        }\n    }\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       carry = z / 10;\n        z = z % 10;\n        result.append(1, z);\n \
    \   }\n    if (carry != 0)\n        result.append(1, carry);\n    return result;",
  "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result\
    \ += a[i] ^ b[i];\n    }\n    return result;", "    std::string result;\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n    }\n    if\
    \ (carry != 0)\n        result[result.size() - 1] = '1' + carry;\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x ^ y;\n        z = z + carry;\n        carry = z >> 5;\n        z = z %\
    \ 10;\n        result.append(z + '0');\n    }\n    if (carry != 0) {\n       \
    \ result.append(carry + '0');\n    }\n    return result;", "    std::string ans\
    \ = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i])\
    \ ^ std::bitset<8>(b[i]))).substr(1);\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i] = '0'\
    \ + z;\n    }\n    if (carry != 0)\n        result.push_back('0' + carry);\n \
    \   return result;", "    std::string result;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i] = '0'\
    \ + z;\n    }\n    if (carry != 0) {\n        result[result.size() - 1] = '1'\
    \ + carry;\n    }\n    return result;", "    std::string result = \"\";\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n\
    \    return result;", "    std::string ans = \"\";\n    for (int i = 0; i < a.size();\
    \ i++) {\n        ans += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        char c = a[i];\n        char d = b[i];\n\
    \        result += std::to_string((c ^ d) + carry);\n        carry = (c ^ d) +\
    \ carry;\n    }\n    result += std::to_string(carry);\n    return result;", " \
    \   std::string res;\n    for(int i = 0; i < a.size(); i++) {\n        res +=\
    \ a[i] ^ b[i];\n    }\n    return res;", "    std::string ans = \"\";\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z / 10;\n        ans = std::to_string(z % 10) + ans;\n    }\n    if (carry\
    \ != 0)\n        ans = std::to_string(carry) + ans;\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.length(); i++) {\n  \
    \      int val = a[i] - '0';\n        int val2 = b[i] - '0';\n        int res\
    \ = val + val2 + carry;\n        carry = res / 10;\n        result = res - carry\
    \ + std::to_string(res%10);\n    }\n    if (carry != 0) {\n        result += std::to_string(carry);\n\
    \    }\n    return result;", "    std::string result;\n    for (int i = 0; i <\
    \ a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;",
  "    std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n\
    \    int n = a.size();\n    int m = b.size();\n    for (int i = 0; i < n; i++)\
    \ {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       carry = z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n \
    \   }\n    if (carry != 0) {\n        result[a.size()] = '1' + carry;\n    }\n\
    \    return result;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result[i] = '0' + z;\n    }\n    if (carry != 0)\n        result[result.size()\
    \ - 1] = '1' + carry;\n    return result;", "    std::string result;\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n    }\n   \
    \ if (carry != 0) {\n        result.append(carry + '0');\n    }\n    return result;",
  "    std::string result = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        result += z % 10;\n   \
    \ }\n    if (carry != 0) {\n        result += carry;\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        char c = a[i];\n        char d = b[i];\n        char temp;\n\
    \        if (c != '0' && d != '0') {\n            temp = c;\n            c = d;\n\
    \            d = temp;\n        }\n        result += std::to_string(c ^ d) + std::to_string(carry);\n\
    \        carry = c ^ d;\n    }\n    result += std::to_string(carry);\n    return\
    \ result;", "    std::string res;\n    int n = a.size();\n    int m = b.size();\n\
    \    for(int i = 0; i < n; i++) {\n        res += a[i] ^ b[i];\n    }\n    return\
    \ res;", "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++)\
    \ {\n        result += std::to_string(a[i] ^ b[i]);\n    }\n    return result;",
  "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string result;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n\
    \    }\n    return result;", "    std::string res;\n    int n = a.size();\n  \
    \  int m = b.size();\n    for(int i = 0; i < n; i++) {\n        for(int j = 0;\
    \ j < m; j++) {\n            if(a[i] != b[j]) {\n                res += '0';\n\
    \            } else {\n                res += '1';\n            }\n        }\n\
    \    }\n    return res;", "    std::string result;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i]\
    \ ^ b[i]) + \"\");\n    }\n    return ans;", "    std::string ans = \"\";\n  \
    \  int n = a.size();\n    int m = b.size();\n    for(int i = 0; i < n; i++) {\n\
    \        ans += (std::to_string(static_cast<int>(a[i])) ^ std::to_string(static_cast<int>(b[i])));\n\
    \    }\n    return ans;", "    std::string result = \"\";\n    for (size_t i =\
    \ 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++)\
    \ {\n        ans += (std::to_string(a[i] ^ b[i]) + \"\");\n    }\n    return ans;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i]\
    \ = '0' + z;\n    }\n    if (carry != 0) {\n        result[a.size()] = '1' + carry;\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        ans = std::to_string(z % 10) + ans;\n    }\n    if (carry != 0) {\n \
    \       ans = std::to_string(carry) + ans;\n    }\n    return ans;", "    std::string\
    \ result;\n    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i] + carry;\n   \
    \     carry = x >> 1;\n        result += to_string(x);\n    }\n    if (carry !=\
    \ 0) {\n        result += to_string(carry);\n    }\n    return result;", "   \
    \ std::string ans = \"\";\n    int lena = a.length();\n    int lenb = b.length();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < lena && j < lenb) {\n        ans\
    \ += (std::tolower(a[i]) ^ std::tolower(b[j]));\n        i++;\n        j++;\n\
    \    }\n    while (i < lena) {\n        ans += std::tolower(a[i]);\n        i++;\n\
    \    }\n    while (j < lenb) {\n        ans += std::tolower(b[j]);\n        j++;\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        char c = a[i];\n        char d = b[i];\n\
    \        int x = c ^ d;\n        carry = x >> 1;\n        result += to_string(carry);\n\
    \    }\n    if (carry != 0) {\n        result += to_string(carry);\n    }\n  \
    \  return result;", "    std::string result;\n    int n = a.size();\n    int m\
    \ = b.size();\n    int k = n / m;\n    int l = n % m;\n    for (int i = 0; i <\
    \ k; i++) {\n        result += a[i] ^ b[i];\n    }\n    for (int i = 0; i < l;\
    \ i++) {\n        result += a[i] ^ b[i + k];\n    }\n    return result;", "  \
    \  std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x ^ y;\n        carry += z;\n        result.push_back(z + '0');\n    }\n\
    \    if (carry > 0) {\n        result.push_back(carry + '0');\n    }\n    return\
    \ result;", "    std::string result;\n    int carry = 0;\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        int x = a[i] - b[i] + carry;\n        carry =\
    \ x >> 1;\n        result.append(1, (x & 1) ? \"1\" : \"0\");\n    }\n    if (carry\
    \ != 0) result.append(1, carry);\n    return result;", "    std::string ans =\
    \ \"\";\n    for (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(static_cast<int>(a[i])\
    \ ^ static_cast<int>(b[i])));\n    }\n    return ans;", "    std::string res;\n\
    \    int n = a.size();\n    int m = b.size();\n    int k = n / m;\n    int l =\
    \ n % m;\n    for (int i = 0; i < k; i++) {\n        res += a[i];\n    }\n   \
    \ for (int i = 0; i < l; i++) {\n        res += b[k + i];\n    }\n    return res;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result\
    \ += z + '0';\n    }\n    if (carry != 0)\n        result += carry + '0';\n  \
    \  return result;", "    std::string ans = \"\";\n    int n = a.size();\n    int\
    \ m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n\
    \        ans += (std::tolower(a[i]) ^ std::tolower(b[j]));\n        i++;\n   \
    \     j++;\n    }\n    while (i < n) {\n        ans += std::tolower(a[i]);\n \
    \       i++;\n    }\n    while (j < m) {\n        ans += std::tolower(b[j]);\n\
    \        j++;\n    }\n    return ans;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.length(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry =\
    \ z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n    }\n    if (carry\
    \ != 0) {\n        result[a.length()] = '1' + carry;\n    }\n    return result;",
  "    std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans\
    \ += (std::to_string(a[i]) ^ std::to_string(b[i]));\n    }\n    return ans;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - b[i] - carry;\n        carry = x >> 1;\n    \
    \    result += to_string(x);\n    }\n    if (carry != 0) {\n        result +=\
    \ to_string(carry);\n    }\n    return result;", "    std::string result;\n  \
    \  int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i]\
    \ - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n      \
    \  carry = z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n    }\n\
    \    if (carry != 0) {\n        result[result.size() - 1] = '1' + carry;\n   \
    \ }\n    return result;", "    std::string ans = \"\";\n    int n = a.size();\n\
    \    int m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j\
    \ < m) {\n        if (a[i] != b[j]) {\n            ans += a[i];\n            i++;\n\
    \            j++;\n        } else {\n            i++;\n            j++;\n    \
    \    }\n    }\n    while (i < n) {\n        ans += a[i];\n        i++;\n    }\n\
    \    while (j < m) {\n        ans += b[j];\n        j++;\n    }\n    return ans;",
  "    std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n\
    \    for(int i = 0; i < a.size(); i++) {\n        ans += a[i] ^ b[i];\n    }\n\
    \    return ans;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i] - carry;\n        carry\
    \ = x >> 1;\n        result += std::to_string(x);\n    }\n    if (carry != 0)\
    \ {\n        result += std::to_string(carry);\n    }\n    return result;", " \
    \   std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - b[i] - carry;\n        carry = x >> 1;\n    \
    \    result += to_string(x);\n    }\n    if (carry != 0)\n        result += to_string(carry);\n\
    \    return result;", "    std::string ans = \"\";\n    int lena = a.length();\n\
    \    int lenb = b.length();\n    int i;\n    for (i = 0; i < lena; i++) {\n  \
    \      ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n    }\n    return ans;",
  "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n   \
    \ int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i] !=\
    \ b[j]) {\n            ans += a[i];\n        }\n        i++;\n        j++;\n \
    \   }\n    while (i < n) {\n        ans += a[i];\n        i++;\n    }\n    while\
    \ (j < m) {\n        ans += b[j];\n        j++;\n    }\n    return ans;", "  \
    \  std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans\
    \ += (std::to_string(int(b[i]) ^ int(a[i])));\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i] = '0'\
    \ + z;\n    }\n    if (carry != 0) {\n        result[a.size()] = '1' + carry;\n\
    \    }\n    return result;", "    std::string result;\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        int val = a[i] - b[i] + carry;\n\
    \        carry = val / 2;\n        val = val % 2;\n        result.append(1, val);\n\
    \    }\n    if (carry != 0)\n        result.append(1, carry);\n    return result;",
  "    std::string ans = \"\";\n    int len1 = a.length();\n    int len2 = b.length();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < len1 && j < len2) {\n        int\
    \ x = a[i] - b[j];\n        ans += (x & 1);\n        i += 1;\n        j += 1;\n\
    \    }\n    while (i < len1) {\n        ans += a[i];\n        i += 1;\n    }\n\
    \    while (j < len2) {\n        ans += b[j];\n        j += 1;\n    }\n    return\
    \ ans;", "    std::string res;\n    int n = a.size();\n    int m = b.size();\n\
    \    int k = n / m;\n    int remainder = n % m;\n    for (int i = 0; i < k; i++)\
    \ {\n        res += a[i * m] ^ b[i * m];\n    }\n    if (remainder > 0) {\n  \
    \      res += a[m * k] ^ b[m * k];\n    }\n    return res;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += a[i] ^\
    \ b[i];\n    }\n    return ans;", "    std::string ans = \"\";\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z\
    \ & 1) + '0';\n        carry = z >> 1;\n    }\n    if (carry != 0)\n        ans\
    \ += '1';\n    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z & 1)\
    \ + '0';\n        carry = (z >> 1);\n    }\n    if (carry) {\n        ans += '1';\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for (int i = 0; i\
    \ < a.size(); i++) {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", " \
    \   std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string result;\n  \
    \  int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i]\
    \ - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n      \
    \  carry = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n   \
    \ }\n    if (carry != 0) {\n        result.append(carry + '0');\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n\
    \    for (int i = 0; i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++)\
    \ {\n        ans += std::to_string(a[i] ^ b[i]);\n    }\n    return ans;", " \
    \   std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int sum = a[i] - b[i] + carry;\n        carry = sum / 2;\n \
    \       sum += carry % 2;\n        result.append(1, sum % 2);\n    }\n    if (carry\
    \ != 0)\n        result.append(1, carry);\n    return result;", "    std::string\
    \ result;\n    for(int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i]\
    \ - carry;\n        carry = x >> 1;\n        result += to_string(x);\n    }\n\
    \    if (carry != 0) {\n        result += to_string(carry);\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++)\
    \ {\n        ans += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i] + carry;\n   \
    \     carry = x >> 1;\n        result += to_string(x);\n    }\n    if (carry !=\
    \ 0) {\n        result += to_string(carry);\n    }\n    return result;", "   \
    \ std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++)\
    \ {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z =\
    \ x ^ y;\n        carry += z;\n        result.append(z + '0');\n    }\n    if\
    \ (carry != 0) {\n        result.append(carry + '0');\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        result += z % 10;\n   \
    \ }\n    if (carry != 0) {\n        result += carry;\n    }\n    return result;",
  "    std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string result;\n  \
    \  int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i]\
    \ - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n      \
    \  carry = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n   \
    \ }\n    if (carry != 0) {\n        result.append(carry + '0');\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++)\
    \ {\n        ans += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int val = a[i] - b[i] + carry;\n \
    \       carry = val / 2;\n        val = val % 2;\n        result.append(1, val);\n\
    \    }\n    if (carry != 0) {\n        result.append(1, carry);\n    }\n    return\
    \ result;", "    std::string result;\n    int carry = 0;\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n\
    \        int z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n\
    \        result += std::to_string(z);\n    }\n    if (carry != 0) {\n        result\
    \ += std::to_string(carry);\n    }\n    return result;", "    std::string ans\
    \ = \"\";\n    int n = a.size();\n    int m = b.size();\n    int i = 0;\n    int\
    \ j = 0;\n    while (i < n && j < m) {\n        if (a[i] != b[j]) {\n        \
    \    ans += '0';\n        } else {\n            ans += '1';\n        }\n     \
    \   i++;\n        j++;\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       ans += (z & 1) + '0';\n        carry = (z >> 1);\n    }\n    if (carry\
    \ != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       carry = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n\
    \    }\n    if (carry != 0) {\n        result.append(carry + '0');\n    }\n  \
    \  return result;", "    std::string result;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - b[i] - carry;\n        carry = x >> 1;\n        result +=\
    \ std::to_string(x);\n    }\n    if (carry != 0)\n        result += std::to_string(carry);\n\
    \    return result;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result.append(z + '0');\n    }\n    if (carry != 0) {\n   \
    \     result.append(carry + '0');\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    char c = a[i];\n        int d = b[i];\n        int result = c + d + (carry\
    \ << 1) + (carry >> 1);\n        carry = result >> 1;\n        result += result\
    \ >> 1;\n        result += carry << 1;\n        result += carry >> 1;\n      \
    \  result += carry << 1;\n        result += carry >> 1;\n        result += carry\
    \ << 1;\n        result += carry >> 1;\n        result += carry << 1;\n      \
    \  result += carry >> 1;\n        result += carry << 1;\n        result += carry\
    \ >> 1;\n        result += carry << 1;\n        result += carry >> 1;\n      \
    \  result += carry << 1;\n        result += carry >> 1;\n        result += carry\
    \ << 1;\n        result += carry >> 1;\n        result += carry << 1;\n      \
    \  result += carry >> 1;\n        result += carry << 1;\n        result += carry\
    \ >> 1;\n        result += carry << 1;\n        result += carry >> 1;\n      \
    \  result += carry << 1;\n        result += carry >> 1;\n        result += carry\
    \ << 1;\n        result += carry >> 1;\n        result += carry << 1;\n      \
    \  result += carry >> 1;\n        result += carry << 1;\n        result += carry\
    \ >> 1;\n        result += carry << 1;\n        result += carry >> 1;\n      \
    \  result += carry << 1;\n        result += carry >> 1;\n        result += carry\
    \ << 1;\n        result += carry >> 1;\n        result += carry << 1;\n      \
    \  result += carry >> 1;\n        result += carry << 1;\n        result += carry\
    \ >> 1;\n        result += carry << 1;\n        result += carry >> 1;\n      \
    \  result += carry << 1;\n        result += carry >> 1;\n        result += carry\
    \ << 1;\n        result += carry >> 1;\n        result += carry << 1;\n      \
    \  result += carry >> 1;\n        result += carry << 1;\n        result += carry\
    \ >> 1;\n        result += carry << 1;\n        result += carry >> 1;\n      \
    \  result += carry << 1;\n        result += carry >> 1;\n        result += carry\
    \ << 1;\n        result += carry >> 1;\n        result += carry << 1;\n      \
    \  result += carry >> 1;\n        result += carry << 1;\n        result += carry\
    \ >> 1;\n        result += carry << 1;\n        result += carry >> 1;\n      \
    \  result += carry << 1;\n        result += carry >> 1;\n        result += carry\
    \ << 1;\n        result += car", "    std::string result;\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        z = z % 10;\n        result[i] = '0' + z;\n    }\n    if (carry != 0)\
    \ {\n        result[a.size()] = '0' + carry;\n    }\n    return result;", "  \
    \  std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x ^ y;\n        ans += (z & 1) ? \"1\" : \"0\";\n        carry = z >> 1;\n\
    \    }\n    if (carry != 0) {\n        ans += \"1\";\n    }\n    return ans;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - b[i] + carry;\n        carry = x / 2;\n     \
    \   result += x % 2;\n    }\n    if (carry != 0)\n        result += carry;\n \
    \   return result;", "    std::string ans = \"\";\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int sum = a[i] - b[i] + carry;\n \
    \       ans += (sum < 10 ? '0' : '') + sum;\n        carry = sum / 10;\n    }\n\
    \    if (carry > 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ result = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result +=\
    \ z + '0';\n    }\n    if (carry != 0) {\n        result += carry + '0';\n   \
    \ }\n    return result;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n   \
    \     z = z % 10;\n        result.append(z + '0');\n    }\n    if (carry != 0)\
    \ {\n        result.append(carry + '0');\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(int(b[i])\
    \ ^ int(a[i])));\n    }\n    return ans;", "    std::string result;\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    for (auto i = a.begin(); i != a.end();\
    \ ++i) {\n        ans += (std::to_string(int(*i) ^ int(*b.begin())));\n    }\n\
    \    return ans;", "    std::string result;\n    for(int i = 0; i < a.size();\
    \ i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ result;\n    for (int i = 0; i < a.size(); i++) {\n        result += a[i] ^\
    \ b[i];\n    }\n    return result;", "    std::string result;\n    int carry =\
    \ 0;\n    for (int i = 0; i < a.length(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry =\
    \ z / 10;\n        z = z % 10;\n        result.append(1, z);\n    }\n    if (carry\
    \ != 0) {\n        result.append(1, carry);\n    }\n    return result;", "   \
    \ std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++)\
    \ {\n        int val = a[i] - '0';\n        result += to_string(val + carry);\n\
    \        carry = val > '9' ? 1 : 0;\n    }\n    for (int i = 0; i < b.size();\
    \ i++) {\n        int val = b[i] - '0';\n        result += to_string(val + carry);\n\
    \        carry = val > '9' ? 1 : 0;\n    }\n    if (carry != 0) {\n        result\
    \ += to_string(carry);\n    }\n    return result;", "    std::string result;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z & 1)\
    \ + '0';\n        carry = z >> 1;\n    }\n    if (carry != 0)\n        ans +=\
    \ '1';\n    return ans;", "    std::string ans = \"\";\n    for (int i = 0; i\
    \ < a.size(); i++) {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++) {\n      \
    \  ans += (std::to_string(static_cast<int>(a[i]) ^ static_cast<int>(b[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n   \
    \     z = z % 10;\n        result += z + '0';\n    }\n    if (carry != 0)\n  \
    \      result += carry + '0';\n    return result;", "    std::string ans = \"\"\
    ;\n    for (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i]\
    \ ^ b[i]) + \"\");\n    }\n    return ans;", "    std::string res;\n    int n\
    \ = a.size();\n    int m = b.size();\n    int k = n / m;\n    int l = n % m;\n\
    \    for (int i = 0; i < k; i++) {\n        res += a[i];\n    }\n    for (int\
    \ i = 0; i < l; i++) {\n        res += b[i];\n    }\n    return res;"]
stop_tokens:
- "\n}"

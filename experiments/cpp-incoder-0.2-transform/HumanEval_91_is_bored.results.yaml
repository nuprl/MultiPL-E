language: cpp
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string sentence;\n    std::string delimiters = \".?!\";\n  \
    \  std::string delimiters_lowercase = \"i.e\";\n    std::string delimiters_uppercase\
    \ = \"I.E\";\n    std::string delimiters_numbers = \"1234567890\";\n    std::string\
    \ delimiters_specials = \"!@#$%^&*()_+\";\n    std::string delimiters_all = \"\
    .?!1234567890\";\n    std::string delimiters_all_lowercase = \"i.e\";\n    std::string\
    \ delimiters_all_uppercase = \"I.E\";\n    std::string delimiters_all_numbers\
    \ = \"1234567890\";\n    std::string delimiters_all_specials = \"!@#$%^&*()_+\"\
    ;\n    std::string delimiters_all_all = \".?!1234567890\";\n    std::string delimiters_all_all_lowercase\
    \ = \"i.e\";\n    std::string delimiters_all_all_uppercase = \"I.E\";\n    std::string\
    \ delimiters_all_all_numbers = \"1234567890\";\n    std::string delimiters_all_all_specials\
    \ = \"!@#$%^&*()_+\";\n    std::string delimiters_all_all_all = \".?!1234567890\"\
    ;\n    std::string delimiters_all_all_all_lowercase = \"i.e\";\n    std::string\
    \ delimiters_all_all_all_uppercase = \"I.E\";\n    std::string delimiters_all_all_all_numbers\
    \ = \"1234567890\";\n    std::string delimiters_all_all_all_specials = \"!@#$%^&*()_+\"\
    ;\n    std::string delimiters_all_all_all_all = \".?!1234567890\";\n    std::string\
    \ delimiters_all_all_all_all_lowercase = \"i.e\";\n    std::string delimiters_all_all_all_all_uppercase\
    \ = \"I.E\";\n    std::string delimiters_all_all_all_all_numbers = \"1234567890\"\
    ;\n    std::string delimiters_all_all_all_all_specials = \"!@#$%^&*()_+\";\n \
    \   std::string delimiters_all_all_all_all_all = \".?!1234567890\";\n    std::string\
    \ delimiters_all_all_all_all_all_lowercase = \"i.e\";\n    std::string delimiters_all_all_all_all_all_uppercase\
    \ = \"I.E\";\n    std::string delimiters_all_all_all_all_all_numbers = \"1234567890\"\
    ;\n    std::string delimiters_all_all_all_all_all_specials = \"!@#$%^&*()_+\"\
    ;\n    std::string delimiters_all_all_all_all_all_all = \".?!1234567890\";\n \
    \   std::string delimiters_all_all_all_all_all_all_lowercase = \"i.e\";\n    std::string\
    \ delimiters_all_all_all_all_all_all_uppercase = \"I.E\";\n    std::string delimiters_all_all_all_all_all_all_numbers\
    \ = \"123456789\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmparfy119v.cpp:48:62: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiters_all_all_all_all_all_all_numbers = \"\
    123456789\n                                                              ^\n/tmp/tmparfy119v.cpp:48:5:\
    \ error: missing terminating \" character\n     std::string delimiters_all_all_all_all_all_all_numbers\
    \ = \"123456789\n     ^\n/tmp/tmparfy119v.cpp: In function 'long int is_bored(std::string)':\n\
    /tmp/tmparfy119v.cpp:49:1: error: expected primary-expression before '}' token\n\
    \ }\n ^\n/tmp/tmparfy119v.cpp:49:1: error: expected ',' or ';' before '}' token\n\
    /tmp/tmparfy119v.cpp: In function 'int main()':\n/tmp/tmparfy119v.cpp:51:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = is_bored;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmparfy119v.cpp:2:\n/tmp/tmparfy119v.cpp:52:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiter = \" .?!\";\n    std::string delimiter2 = \"\
    .\";\n    std::string delimiter3 = \"?\";\n    std::string delimiter4 = \"!\"\
    ;\n    std::string delimiter5 = \".?!\";\n    std::string delimiter6 = \".\";\n\
    \    std::string delimiter7 = \"?\";\n    std::string delimiter8 = \"!\";\n  \
    \  std::string delimiter9 = \".?!\";\n    std::string delimiter10 = \".\";\n \
    \   std::string delimiter11 = \"?\";\n    std::string delimiter12 = \"!\";\n \
    \   std::string delimiter13 = \".?!\";\n    std::string delimiter14 = \".\";\n\
    \    std::string delimiter15 = \"?\";\n    std::string delimiter16 = \"!\";\n\
    \    std::string delimiter17 = \".?!\";\n    std::string delimiter18 = \".\";\n\
    \    std::string delimiter19 = \"?\";\n    std::string delimiter20 = \"!\";\n\
    \    std::string delimiter21 = \".?!\";\n    std::string delimiter22 = \".\";\n\
    \    std::string delimiter23 = \"?\";\n    std::string delimiter24 = \"!\";\n\
    \    std::string delimiter25 = \".?!\";\n    std::string delimiter26 = \".\";\n\
    \    std::string delimiter27 = \"?\";\n    std::string delimiter28 = \"!\";\n\
    \    std::string delimiter29 = \".?!\";\n    std::string delimiter30 = \".\";\n\
    \    std::string delimiter31 = \"?\";\n    std::string delimiter32 = \"!\";\n\
    \    std::string delimiter33 = \".?!\";\n    std::string delimiter34 = \".\";\n\
    \    std::string delimiter35 = \"?\";\n    std::string delimiter36 = \"!\";\n\
    \    std::string delimiter37 = \".?!\";\n    std::string delimiter38 = \".\";\n\
    \    std::string delimiter39 = \"?\";\n    std::string delimiter40 = \"!\";\n\
    \    std::string delimiter41 = \".?!\";\n    std::string delimiter42 = \".\";\n\
    \    std::string delimiter43 = \"?\";\n    std::string delimiter44 = \"!\";\n\
    \    std::string delimiter45 = \".?!\";\n    std::string delimiter46 = \".\";\n\
    \    std::string delimiter47 = \"?\";\n    std::string delimiter48 = \"!\";\n\
    \    std::string delimiter49 = \".?!\";\n    std::string delimiter50 = \".\";\n\
    \    std::string delimiter51 = \"?\";\n    std::string delimiter52 = \"!\";\n\
    \    std::string delimiter53 = \".?!\";\n    std::string delimiter54 = \".\";\n\
    \    std::string delimiter55 = \"?\";\n    std::string delimiter56 = \"!\";\n\
    \    std::string delimiter57 = \".?!\";\n    std::string delimiter58 = \".\";\n\
    \    std::string delimiter59\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp70utkllk.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmp70utkllk.cpp:73:1:\
    \ error: expected initializer before '}' token\n }\n ^\n/tmp/tmp70utkllk.cpp:\
    \ In function 'int main()':\n/tmp/tmp70utkllk.cpp:75:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = is_bored;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp70utkllk.cpp:2:\n/tmp/tmp70utkllk.cpp:76:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms++;\n        }\n        else {\n            word = word\
    \ + c;\n        }\n    }\n    if (word == \"I\") {\n        boredoms++;\n    }\n\
    \    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp99uxe6xv.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmp99uxe6xv.cpp:14:16:\
    \ error: ISO C++ forbids declaration of 'c' with no type [-fpermissive]\n    \
    \ for (auto &c : S) {\n                ^\n/tmp/tmp99uxe6xv.cpp:14:20: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &c : S) {\n      \
    \              ^\n/tmp/tmp99uxe6xv.cpp:19:25: error: no match for 'operator+'\
    \ (operand types are 'std::string {aka std::basic_string<char>}' and 'int')\n\
    \             word = word + c;\n                         ^\n/tmp/tmp99uxe6xv.cpp:19:25:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n\
    \                 from /tmp/tmp99uxe6xv.cpp:2:\n/usr/include/c++/4.8.2/valarray:1167:1:\
    \ note: template<class _Tp> std::_Expr<std::_BinClos<std::__plus, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const _Tp&, const std::valarray<_Tp>&)\n _DEFINE_BINARY_OPERATOR(+,\
    \ __plus)\n ^\n/usr/include/c++/4.8.2/valarray:1167:1: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp99uxe6xv.cpp:19:27: note:   mismatched\
    \ types 'const std::valarray<_Tp>' and 'int'\n             word = word + c;\n\
    \                           ^\nIn file included from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n\
    \                 from /tmp/tmp99uxe6xv.cpp:2:\n/usr/include/c++/4.8.2/valarray:1167:1:\
    \ note: template<class _Tp> std::_Expr<std::_BinClos<std::__plus, std::_ValArray,\
    \ std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const _Tp&)\n _DEFINE_BINARY_OPERATOR(+,\
    \ __plus)\n ^\n/usr/include/c++/4.8.2/valarray:1167:1: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp99uxe6xv.cpp:19:27: note:   'std::string\
    \ {aka std::basic_string<char>}' is not derived from 'const std::valarray<_Tp>'\n\
    \             word = word + c;\n                           ^\nIn file included\
    \ from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n  "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    std::string word;\n\
    \    for(int i = 0; i < S.size(); i++){\n        word = S[i];\n        if(word\
    \ == \"I\"){\n            count++;\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehsrhfj3.cpp: In function 'int main()':\n/tmp/tmpehsrhfj3.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpehsrhfj3.cpp:2:\n/tmp/tmpehsrhfj3.cpp:24:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxvsebg77.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmpxvsebg77.cpp:72:1:\
    \ error: expected initializer before '}' token\n }\n ^\n/tmp/tmpxvsebg77.cpp:\
    \ In function 'int main()':\n/tmp/tmpxvsebg77.cpp:74:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = is_bored;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxvsebg77.cpp:2:\n/tmp/tmpxvsebg77.cpp:75:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    std::string word;\n    std::string boredom_word = \"I\";\n\
    \    std::string boredom_sentence = \"I\";\n    std::string sentence;\n    std::string\
    \ sentence_word;\n    std::string sentence_sentence;\n    std::string sentence_boredom_word;\n\
    \    std::string sentence_boredom_sentence;\n    std::string sentence_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_sentence;\n    std::string sentence_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_sentence;\n    std::string sentence_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_sentence;\n    std::string\
    \ sentence_boredom_boredom_boredom_boredom_boredom_word;\n    std::string sentence_boredom_boredom_boredom_boredom_boredom_sentence;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_sentence;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_sentence;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_sentence;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_sentence;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_bore\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppngobifd.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmppngobifd.cpp:40:1:\
    \ error: expected initializer before '}' token\n }\n ^\n/tmp/tmppngobifd.cpp:\
    \ In function 'int main()':\n/tmp/tmppngobifd.cpp:42:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = is_bored;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppngobifd.cpp:2:\n/tmp/tmppngobifd.cpp:43:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lowercase\
    \ = \"i.e\";\n    std::string delimiters_uppercase = \"I.E\";\n    std::string\
    \ delimiters_numbers = \"1.\";\n    std::string delimiters_specials = \"!\";\n\
    \    std::string delimiters_special_lowercase = \"i.e\";\n    std::string delimiters_special_uppercase\
    \ = \"I.E\";\n    std::string delimiters_special_numbers = \"1.\";\n    std::string\
    \ delimiters_special_specials = \"!\";\n    std::string delimiters_special_special_lowercase\
    \ = \"i.e\";\n    std::string delimiters_special_special_uppercase = \"I.E\";\n\
    \    std::string delimiters_special_special_numbers = \"1.\";\n    std::string\
    \ delimiters_special_special_specials = \"!\";\n    std::string delimiters_special_special_special_lowercase\
    \ = \"i.e\";\n    std::string delimiters_special_special_special_uppercase = \"\
    I.E\";\n    std::string delimiters_special_special_special_numbers = \"1.\";\n\
    \    std::string delimiters_special_special_special_specials = \"!\";\n    std::string\
    \ delimiters_special_special_special_special_lowercase = \"i.e\";\n    std::string\
    \ delimiters_special_special_special_special_uppercase = \"I.E\";\n    std::string\
    \ delimiters_special_special_special_special_numbers = \"1.\";\n    std::string\
    \ delimiters_special_special_special_special_specials = \"!\";\n    std::string\
    \ delimiters_special_special_special_special_special_lowercase = \"i.e\";\n  \
    \  std::string delimiters_special_special_special_special_special_uppercase =\
    \ \"I.E\";\n    std::string delimiters_special_special_special_special_special_numbers\
    \ = \"1.\";\n    std::string delimiters_special_special_special_special_special_specials\
    \ = \"!\";\n    std::string delimiters_special_special_special_special_special_lowercase\
    \ = \"i.e\";\n    std::string delimiters_special_special_special_special_special_special_uppercase\
    \ = \"I.E\";\n    std::string delimiters_special_special_special_special_special_special_numbers\
    \ = \"1.\";\n    std::string delimiters_special_special_special_special_special_special_specials\
    \ = \"!\";\n    std::string delimiters_special_special_special_special_special_special_special_lowercase\
    \ = \"i.e\";\n    std::string delimiters_special_special_special_special_special_special_special_special_uppercase\
    \ = \"I.E\";\n    std::string delimiters_special_special_special_special_special_special_special_numbers\
    \ = \"1.\";\n    std::string delimiters_special_special_special_special_special_special_special_specials\
    \ = \"!\";\n    std::string delimiters_special_special_special_special_special_special_special_special_lowercase\
    \ = \"i.e\";\n    std::string delimiters_special_special_special_special_special_special_special_special_special_uppercase\
    \ = \"I.E\";\n    std::string delimiters_special_special_special_special_special_special_special_special_special_numbers\
    \ = \"1.\";\n    std::string delimiters_special_special_special_special_special_special_special_special_specials\
    \ = \"!\";\n    std::string delimiter\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbzshlbbq.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmpbzshlbbq.cpp:39:17:\
    \ error: redeclaration of 'std::string delimiters_special_special_special_special_special_lowercase'\n\
    \     std::string delimiters_special_special_special_special_special_lowercase\
    \ = \"i.e\";\n                 ^\n/tmp/tmpbzshlbbq.cpp:35:17: error: 'std::string\
    \ delimiters_special_special_special_special_special_lowercase' previously declared\
    \ here\n     std::string delimiters_special_special_special_special_special_lowercase\
    \ = \"i.e\";\n                 ^\n/tmp/tmpbzshlbbq.cpp:52:1: error: expected initializer\
    \ before '}' token\n }\n ^\n/tmp/tmpbzshlbbq.cpp: In function 'int main()':\n\
    /tmp/tmpbzshlbbq.cpp:54:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = is_bored;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbzshlbbq.cpp:2:\n/tmp/tmpbzshlbbq.cpp:55:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    for(int i = 0;\
    \ i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ckqfu7a.cpp: In function 'int main()':\n/tmp/tmp7ckqfu7a.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7ckqfu7a.cpp:2:\n/tmp/tmp7ckqfu7a.cpp:22:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiter = \" .?!\";\n    std::string delimiter1 = \"\
    \ \";\n    std::string delimiter2 = \" \";\n    std::string delimiter3 = \" \"\
    ;\n    std::string delimiter4 = \" \";\n    std::string delimiter5 = \" \";\n\
    \    std::string delimiter6 = \" \";\n    std::string delimiter7 = \" \";\n  \
    \  std::string delimiter8 = \" \";\n    std::string delimiter9 = \" \";\n    std::string\
    \ delimiter10 = \" \";\n    std::string delimiter11 = \" \";\n    std::string\
    \ delimiter12 = \" \";\n    std::string delimiter13 = \" \";\n    std::string\
    \ delimiter14 = \" \";\n    std::string delimiter15 = \" \";\n    std::string\
    \ delimiter16 = \" \";\n    std::string delimiter17 = \" \";\n    std::string\
    \ delimiter18 = \" \";\n    std::string delimiter19 = \" \";\n    std::string\
    \ delimiter20 = \" \";\n    std::string delimiter21 = \" \";\n    std::string\
    \ delimiter22 = \" \";\n    std::string delimiter23 = \" \";\n    std::string\
    \ delimiter24 = \" \";\n    std::string delimiter25 = \" \";\n    std::string\
    \ delimiter26 = \" \";\n    std::string delimiter27 = \" \";\n    std::string\
    \ delimiter28 = \" \";\n    std::string delimiter29 = \" \";\n    std::string\
    \ delimiter30 = \" \";\n    std::string delimiter31 = \" \";\n    std::string\
    \ delimiter32 = \" \";\n    std::string delimiter33 = \" \";\n    std::string\
    \ delimiter34 = \" \";\n    std::string delimiter35 = \" \";\n    std::string\
    \ delimiter36 = \" \";\n    std::string delimiter37 = \" \";\n    std::string\
    \ delimiter38 = \" \";\n    std::string delimiter39 = \" \";\n    std::string\
    \ delimiter40 = \" \";\n    std::string delimiter41 = \" \";\n    std::string\
    \ delimiter42 = \" \";\n    std::string delimiter43 = \" \";\n    std::string\
    \ delimiter44 = \" \";\n    std::string delimiter45 = \" \";\n    std::string\
    \ delimiter46 = \" \";\n    std::string delimiter47 = \" \";\n    std::string\
    \ delimiter48 = \" \";\n    std::string delimiter49 = \" \";\n    std::string\
    \ delimiter50 = \" \";\n    std::string delimiter51 = \" \";\n    std::string\
    \ delimiter52 = \" \";\n    std::string delimiter53 = \" \";\n    std::string\
    \ delimiter54 = \" \";\n    std::string delimiter55 = \" \";\n    std::string\
    \ delimiter56 = \" \";\n    std::string delimiter57 = \" \";\n    std::string\
    \ delimiter58 = \" \";\n    std::string delimiter59 = \" \";\n    std::string\
    \ delimiter60 = \" \";\n    std::string delimiter61 = \" \";\n    std::string\
    \ delimiter62 = \" \";\n    std::string delimiter63 = \" \n}\nint main() {\n \
    \   auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp51gagenv.cpp:77:31: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiter63 = \" \n                          \
    \     ^\n/tmp/tmp51gagenv.cpp:77:5: error: missing terminating \" character\n\
    \     std::string delimiter63 = \" \n     ^\n/tmp/tmp51gagenv.cpp: In function\
    \ 'long int is_bored(std::string)':\n/tmp/tmp51gagenv.cpp:78:1: error: expected\
    \ primary-expression before '}' token\n }\n ^\n/tmp/tmp51gagenv.cpp:78:1: error:\
    \ expected ',' or ';' before '}' token\n/tmp/tmp51gagenv.cpp: In function 'int\
    \ main()':\n/tmp/tmp51gagenv.cpp:80:10: error: 'candidate' does not name a type\n\
    \     auto candidate = is_bored;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp51gagenv.cpp:2:\n/tmp/tmp51gagenv.cpp:81:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvj81gt2d.cpp: In function 'int main()':\n/tmp/tmpvj81gt2d.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvj81gt2d.cpp:2:\n/tmp/tmpvj81gt2d.cpp:22:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (size_t i = 0; i < S.size();\
    \ i++) {\n        word = S[i];\n        if (word.compare(0, 2, \"I\") == 0) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj660hyve.cpp: In function 'int main()':\n/tmp/tmpj660hyve.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpj660hyve.cpp:2:\n/tmp/tmpj660hyve.cpp:25:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &i : S) {\n        if (i == '.') {\n            boredoms\
    \ += 1;\n        }\n        else if (i == '?') {\n            boredoms += 1;\n\
    \        }\n        else if (i == '!') {\n            boredoms += 1;\n       \
    \ }\n        else if (i == 'I') {\n            boredoms += 1;\n        }\n   \
    \     else {\n            word = i;\n        }\n    }\n    return boredoms;\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6o6uydx9.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmp6o6uydx9.cpp:14:16:\
    \ error: ISO C++ forbids declaration of 'i' with no type [-fpermissive]\n    \
    \ for (auto &i : S) {\n                ^\n/tmp/tmp6o6uydx9.cpp:14:20: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &i : S) {\n      \
    \              ^\n/tmp/tmp6o6uydx9.cpp: In function 'int main()':\n/tmp/tmp6o6uydx9.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6o6uydx9.cpp:2:\n/tmp/tmp6o6uydx9.cpp:35:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \".?!\";\n    for (size_t i = 0; i < S.size(); i++) {\n        word = S[i];\n\
    \        if (word[0] == 'I')\n            boredoms += 1;\n    }\n    return boredoms;\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9h73qpg1.cpp: In function 'int main()':\n/tmp/tmp9h73qpg1.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9h73qpg1.cpp:2:\n/tmp/tmp9h73qpg1.cpp:25:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredom++;\n        }\n    }\n\
    \    return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6iz1exzu.cpp: In function 'int main()':\n/tmp/tmp6iz1exzu.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6iz1exzu.cpp:2:\n/tmp/tmp6iz1exzu.cpp:23:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while (i < S.length()) {\n        if (S[i] == '.') {\n            boredom++;\n\
    \        }\n        if (S[i] == '?') {\n            boredom++;\n        }\n  \
    \      if (S[i] == '!') {\n            boredom++;\n        }\n        i++;\n \
    \   }\n    return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi0wy3zt6.cpp: In function 'int main()':\n/tmp/tmpi0wy3zt6.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi0wy3zt6.cpp:2:\n/tmp/tmpi0wy3zt6.cpp:30:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word = \"I\";\n    std::string delimiter = \"\
    .?!\";\n    std::string delimiter2 = \".?!\";\n    std::string delimiter3 = \"\
    .?!\";\n    std::string delimiter4 = \".?!\";\n    std::string delimiter5 = \"\
    .?!\";\n    std::string delimiter6 = \".?!\";\n    std::string delimiter7 = \"\
    .?!\";\n    std::string delimiter8 = \".?!\";\n    std::string delimiter9 = \"\
    .?!\";\n    std::string delimiter10 = \".?!\";\n    std::string delimiter11 =\
    \ \".?!\";\n    std::string delimiter12 = \".?!\";\n    std::string delimiter13\
    \ = \".?!\";\n    std::string delimiter14 = \".?!\";\n    std::string delimiter15\
    \ = \".?!\";\n    std::string delimiter16 = \".?!\";\n    std::string delimiter17\
    \ = \".?!\";\n    std::string delimiter18 = \".?!\";\n    std::string delimiter19\
    \ = \".?!\";\n    std::string delimiter20 = \".?!\";\n    std::string delimiter21\
    \ = \".?!\";\n    std::string delimiter22 = \".?!\";\n    std::string delimiter23\
    \ = \".?!\";\n    std::string delimiter24 = \".?!\";\n    std::string delimiter25\
    \ = \".?!\";\n    std::string delimiter26 = \".?!\";\n    std::string delimiter27\
    \ = \".?!\";\n    std::string delimiter28 = \".?!\";\n    std::string delimiter29\
    \ = \".?!\";\n    std::string delimiter30 = \".?!\";\n    std::string delimiter31\
    \ = \".?!\";\n    std::string delimiter32 = \".?!\";\n    std::string delimiter33\
    \ = \".?!\";\n    std::string delimiter34 = \".?!\";\n    std::string delimiter35\
    \ = \".?!\";\n    std::string delimiter36 = \".?!\";\n    std::string delimiter37\
    \ = \".?!\";\n    std::string delimiter38 = \".?!\";\n    std::string delimiter39\
    \ = \".?!\";\n    std::string delimiter40 = \".?!\";\n    std::string delimiter41\
    \ = \".?!\";\n    std::string delimiter42 = \".?!\";\n    std::string delimiter43\
    \ = \".?!\";\n    std::string delimiter44 = \".?!\";\n    std::string delimiter45\
    \ = \".?!\";\n    std::string delimiter46 = \".?!\";\n    std::string delimiter47\
    \ = \".?!\";\n    std::string delimiter48 = \".?!\";\n    std::string delimiter49\
    \ = \".?!\";\n    \n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu4r0m70r.cpp: In function 'int main()':\n/tmp/tmpu4r0m70r.cpp:67:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpu4r0m70r.cpp:2:\n/tmp/tmpu4r0m70r.cpp:68:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string sentence;\n    std::string delimiters = \".?!\";\n  \
    \  size_t pos = 0;\n    size_t count = 0;\n    while(pos < S.length()) {\n   \
    \     word = S.substr(pos, 1);\n        pos = pos + 1;\n        pos = S.find(delimiters,\
    \ pos);\n        sentence = S.substr(0, pos);\n        boredoms += (sentence.find(word)\
    \ != std::string::npos);\n    }\n    return boredoms;\n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdhrym_sx.cpp: In function 'int main()':\n/tmp/tmpdhrym_sx.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdhrym_sx.cpp:2:\n/tmp/tmpdhrym_sx.cpp:29:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string::size_type pos;\n\
    \    std::string temp;\n    pos = 0;\n    temp = S;\n    while (pos != std::string::npos)\
    \ {\n        pos = temp.find(delimiters, pos);\n        word = temp.substr(0,\
    \ pos);\n        if (word == \"I\") {\n            boredoms++;\n        }\n  \
    \      temp = temp.substr(pos + 1);\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7xbmjleo.cpp: In function 'int main()':\n/tmp/tmp7xbmjleo.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7xbmjleo.cpp:2:\n/tmp/tmp7xbmjleo.cpp:31:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while (i < S.size()) {\n        if (S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredom++;\n        }\n        i++;\n    }\n    return boredom;\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzn51xols.cpp: In function 'int main()':\n/tmp/tmpzn51xols.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzn51xols.cpp:2:\n/tmp/tmpzn51xols.cpp:24:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    std::string\
    \ temp;\n    while(pos < S.size()) {\n        word = S.substr(pos, 1);\n     \
    \   pos = 0;\n        temp = S;\n        for(size_t i = 0; i < delimiters.size();\
    \ i++) {\n            pos = temp.find(delimiters[i]);\n            if(pos != std::string::npos)\
    \ {\n                temp = temp.substr(0, pos);\n                break;\n   \
    \         }\n        }\n        if(word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate =\
    \ is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpijhx7_ud.cpp: In function 'int main()':\n/tmp/tmpijhx7_ud.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpijhx7_ud.cpp:2:\n/tmp/tmpijhx7_ud.cpp:36:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''

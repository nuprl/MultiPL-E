name: HumanEval_2_truncate_number
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive floating\
  \ point number, it can be decomposed into\n// and integer part (largest integer\
  \ smaller than given number) and decimals\n// (leftover part always smaller than\
  \ 1).\n// Return the decimal part of the number.\n// >>> truncate_number((3.5))\n\
  // (0.5)\nfloat truncate_number(float number) {\n"
tests: "}\nint main() {\n    auto candidate = truncate_number;\n    assert(candidate((3.5))\
  \ == (0.5));\n    assert(candidate((1.25)) == (0.25));\n    assert(candidate((123.0))\
  \ == (0.0));\n}\n"
completions: ["    float int_part;\n    float decimal_part;\n    float remainder;\n\
    \    int_part = number;\n    decimal_part = number - int_part;\n    remainder\
    \ = number;\n    while (decimal_part > 1) {\n        decimal_part /= 10;\n   \
    \     remainder *= 10;\n    }\n    return remainder;", "    float integer_part;\n\
    \    float decimal_part;\n    float remainder;\n    integer_part = floor(number);\n\
    \    decimal_part = number - integer_part;\n    remainder = number - integer_part\
    \ - decimal_part;\n    return remainder;", "    long long int int_part = (long\
    \ long int)number;\n    long long int decimal_part = number - int_part;\n    decimal_part\
    \ = decimal_part * 100;\n    return decimal_part;", "    float trunc_number =\
    \ number;\n    int decimal_part = floor(log10(trunc_number));\n    trunc_number\
    \ = trunc_number / pow(10.0, decimal_part);\n    return trunc_number;", "    float\
    \ integer_part;\n    float decimal_part;\n    float remainder;\n    float temp;\n\
    \    integer_part = floor(number);\n    decimal_part = number - integer_part;\n\
    \    remainder = number - integer_part;\n    temp = remainder * pow(10, (sizeof(float)\
    \ * 8 - 1));\n    return integer_part + decimal_part + temp;", "    float integer_part;\n\
    \    float decimal_part;\n    float remainder;\n    integer_part = floor(number);\n\
    \    decimal_part = number - integer_part;\n    remainder = number - integer_part\
    \ * pow(10, floor(log10(number)));\n    return remainder;", "    float integer_part;\n\
    \    float decimal_part;\n    float remainder;\n    integer_part = floor(number);\n\
    \    decimal_part = number - integer_part;\n    remainder = number - integer_part\
    \ * pow(10, floor(log10(number)));\n    return remainder;", "    float trunc_number\
    \ = number;\n    float int_part = 0;\n    float decimal_part = 0;\n    int decimal_count\
    \ = 0;\n    while (trunc_number >= 1) {\n        trunc_number = trunc_number /\
    \ 10;\n        decimal_count++;\n    }\n    int_part = trunc_number;\n    decimal_part\
    \ = trunc_number - int_part;\n    decimal_part = decimal_part / decimal_count;\n\
    \    return decimal_part;", "    float integer_part;\n    float decimal_part;\n\
    \    float remainder;\n    integer_part = floor(number);\n    decimal_part = number\
    \ - integer_part;\n    remainder = number - integer_part - decimal_part;\n   \
    \ return remainder;", "    float int_part;\n    float decimal_part;\n    float\
    \ remainder;\n    int_part = number;\n    decimal_part = number - int_part;\n\
    \    remainder = number;\n    while (decimal_part >= 1) {\n        decimal_part\
    \ /= 10;\n        remainder *= 10;\n    }\n    return remainder;", "    float\
    \ integer_part;\n    float decimal_part;\n    float remainder;\n    float quotient;\n\
    \    float temp;\n    int decimal_places = 1;\n    int decimal_digits;\n    int\
    \ decimal_digits_used;\n    int decimal_digits_used_in_calculation;\n    int decimal_digits_used_in_calculation_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder;\n    int decimal_digits_used_in_calculation_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder;\n\
    \    int decimal_digits_used_in_calculation_remainder_remainder_remainder_remainder_remainder_remainder_",
  "    int integer_part = 0;\n    float decimal_part = 0.0;\n    float remainder =\
    \ 0.0;\n    float quotient = 0.0;\n    float temp = 0.0;\n    float temp2 = 0.0;\n\
    \    float temp3 = 0.0;\n    float temp4 = 0.0;\n    float temp5 = 0.0;\n    float\
    \ temp6 = 0.0;\n    float temp7 = 0.0;\n    float temp8 = 0.0;\n    float temp9\
    \ = 0.0;\n    float temp10 = 0.0;\n    float temp11 = 0.0;\n    float temp12 =\
    \ 0.0;\n    float temp13 = 0.0;\n    float temp14 = 0.0;\n    float temp15 = 0.0;\n\
    \    float temp16 = 0.0;\n    float temp17 = 0.0;\n    float temp18 = 0.0;\n \
    \   float temp19 = 0.0;\n    float temp20 = 0.0;\n    float temp21 = 0.0;\n  \
    \  float temp22 = 0.0;\n    float temp23 = 0.0;\n    float temp24 = 0.0;\n   \
    \ float temp25 = 0.0;\n    float temp26 = 0.0;\n    float temp27 = 0.0;\n    float\
    \ temp28 = 0.0;\n    float temp29 = 0.0;\n    float temp30 = 0.0;\n    float temp31\
    \ = 0.0;\n    float temp32 = 0.0;\n    float temp33 = 0.0;\n    float temp34 =\
    \ 0.0;\n    float temp35 = 0.0;\n    float temp36 = 0.0;\n    float temp37 = 0.0;\n\
    \    float temp38 = 0.0;\n    float temp39 = 0.0;\n    float temp40 = 0.0;\n \
    \   float temp41 = 0.0;\n    float temp42 = 0.0;\n    float temp43 = 0.0;\n  \
    \  float temp44 = 0.0;\n    float temp45 = 0.0;\n    float temp46 = 0.0;\n   \
    \ float temp47 = 0.0;\n    float temp48 = 0.0;\n    float temp49 = 0.0;\n    float\
    \ temp50 = 0.0;\n    float temp51 = 0.0;\n    float temp52 = 0.0;\n    float temp53\
    \ = 0.0;\n    float temp54 = 0.0;\n    float temp55 = 0.0;\n    float temp56 =\
    \ 0.0;\n    float temp57 = 0.0;\n    float temp58 = 0.0;\n    float temp59 = 0.0;\n\
    \    float temp60 = 0.0;\n    float temp61 = 0.0;\n    float temp62 = 0.0;\n \
    \   float temp63 = 0.0;\n    float temp64 = 0.0;\n    float temp65 = 0.0;\n  \
    \  float temp66 = 0.0;\n    float temp67 = 0.0;\n    float temp68 = 0.", "   \
    \ long long int int_part = (long long int)number;\n    long long int decimal_part\
    \ = number - int_part;\n    return decimal_part * 1.0 / static_cast<float>(INT_MAX);",
  "    float int_part;\n    float decimal_part = number - int_part;\n    return decimal_part;",
  "    float integer_part;\n    float decimal_part;\n    float remainder;\n    float\
    \ temp;\n    float temp2;\n    float temp3;\n    float temp4;\n    float temp5;\n\
    \    float temp6;\n    float temp7;\n    float temp8;\n    float temp9;\n    float\
    \ temp10;\n    float temp11;\n    float temp12;\n    float temp13;\n    float\
    \ temp14;\n    float temp15;\n    float temp16;\n    float temp17;\n    float\
    \ temp18;\n    float temp19;\n    float temp20;\n    float temp21;\n    float\
    \ temp22;\n    float temp23;\n    float temp24;\n    float temp25;\n    float\
    \ temp26;\n    float temp27;\n    float temp28;\n    float temp29;\n    float\
    \ temp30;\n    float temp31;\n    float temp32;\n    float temp33;\n    float\
    \ temp34;\n    float temp35;\n    float temp36;\n    float temp37;\n    float\
    \ temp38;\n    float temp39;\n    float temp40;\n    float temp41;\n    float\
    \ temp42;\n    float temp43;\n    float temp44;\n    float temp45;\n    float\
    \ temp46;\n    float temp47;\n    float temp48;\n    float temp49;\n    float\
    \ temp50;\n    float temp51;\n    float temp52;\n    float temp53;\n    float\
    \ temp54;\n    float temp55;\n    float temp56;\n    float temp57;\n    float\
    \ temp58;\n    float temp59;\n    float temp60;\n    float temp61;\n    float\
    \ temp62;\n    float temp63;\n    float temp64;\n    float temp65;\n    float\
    \ temp66;\n    float temp67;\n    float temp68;\n    float temp69;\n    float\
    \ temp70;\n    float temp71;\n    float temp72;\n    float temp73;\n    float\
    \ temp74;\n    float temp75;\n    float temp76;\n    float temp77;\n    float\
    \ temp78;\n    float temp79;\n    float temp80;\n    float temp81;\n    float\
    \ temp82;\n    float temp83;\n    float temp84;\n    float temp85;\n    float\
    \ temp86", "    float int_part;\n    float decimal_part;\n    float remainder;\n\
    \    int_part = number;\n    decimal_part = number - int_part;\n    remainder\
    \ = number;\n    while (decimal_part >= 1) {\n        decimal_part /= 10;\n  \
    \      remainder *= 10;\n    }\n    return remainder;", "    float int_part;\n\
    \    float decimal_part;\n    float remainder;\n    int_part = number;\n    decimal_part\
    \ = number - int_part;\n    remainder = number;\n    while (decimal_part >= 1)\
    \ {\n        decimal_part /= 10;\n        remainder *= 10;\n    }\n    return\
    \ remainder;", "    int integer_part = (int) number;\n    float decimal_part =\
    \ number - integer_part;\n    return decimal_part;", "    float int_part;\n  \
    \  float decimal_part;\n    float remainder;\n    int_part = number;\n    decimal_part\
    \ = number - int_part;\n    remainder = number;\n    while (decimal_part >= 1)\
    \ {\n        decimal_part /= 10;\n        remainder *= 10;\n    }\n    return\
    \ int_part + decimal_part + remainder;", "    long long int int_part;\n    long\
    \ long int decimal_part;\n    float trunc_number;\n    int_part = number % 1;\n\
    \    decimal_part = number - int_part;\n    trunc_number = int_part;\n    if (decimal_part\
    \ >= 1) {\n        trunc_number += 1;\n    }\n    return trunc_number;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_27_flip_case
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    }\n    if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpuv32xigh: /tmp/tmpuv32xigh.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    }\n    if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpuv32xigh: /tmp/tmpuv32xigh.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n    \
    \        s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpxrufhqvy: /tmp/tmpxrufhqvy.cpp:68: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097835
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmps9xwj5od: /tmp/tmps9xwj5od.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = 'A';\n\
    \        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i]\
    \ = 'a';\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp69l420qg: /tmp/tmp69l420qg.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'A') {\n            s[i] = 'A';\n        } else if (s[i] ==\
    \ 'e' || s[i] == 'E') {\n            s[i] = 'E';\n        } else if (s[i] == 'i'\
    \ || s[i] == 'I') {\n            s[i] = 'I';\n        } else if (s[i] == 'o' ||\
    \ s[i] == 'O') {\n            s[i] = 'O';\n        } else if (s[i] == 'u' || s[i]\
    \ == 'U') {\n            s[i] = 'U';\n        } else if (s[i] == 'y' || s[i] ==\
    \ 'Y') {\n            s[i] = 'Y';\n        } else if (s[i] == 'c' || s[i] == 'C')\
    \ {\n            s[i] = 'C';\n        } else if (s[i] == 'h' || s[i] == 'H') {\n\
    \            s[i] = 'H';\n        } else if (s[i] == 'l' || s[i] == 'L') {\n \
    \           s[i] = 'L';\n        } else if (s[i] == 'o' || s[i] == 'O') {\n  \
    \          s[i] = 'O';\n        } else if (s[i] == 's' || s[i] == 'S') {\n   \
    \         s[i] = 'S';\n        } else if (s[i] == 't' || s[i] == 'T') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'r' || s[i] == 'R') {\n     \
    \       s[i] = 'R';\n        } else if (s[i] == 'd' || s[i] == 'D') {\n      \
    \      s[i] = 'D';\n        }\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmprr_occ23: /tmp/tmprr_occ23.cpp:44: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'A') {\n            s[i] = 'A';\n        } else if (s[i] ==\
    \ 'b' || s[i] == 'B') {\n            s[i] = 'B';\n        } else if (s[i] == 'c'\
    \ || s[i] == 'C') {\n            s[i] = 'C';\n        } else if (s[i] == 'd' ||\
    \ s[i] == 'D') {\n            s[i] = 'D';\n        } else if (s[i] == 'e' || s[i]\
    \ == 'E') {\n            s[i] = 'E';\n        } else if (s[i] == 'f' || s[i] ==\
    \ 'F') {\n            s[i] = 'F';\n        } else if (s[i] == 'g' || s[i] == 'G')\
    \ {\n            s[i] = 'G';\n        } else if (s[i] == 'h' || s[i] == 'H') {\n\
    \            s[i] = 'H';\n        } else if (s[i] == 'i' || s[i] == 'I') {\n \
    \           s[i] = 'I';\n        } else if (s[i] == 'j' || s[i] == 'J') {\n  \
    \          s[i] = 'J';\n        } else if (s[i] == 'k' || s[i] == 'K') {\n   \
    \         s[i] = 'K';\n        } else if (s[i] == 'l' || s[i] == 'L') {\n    \
    \        s[i] = 'L';\n        } else if (s[i] == 'm' || s[i] == 'M') {\n     \
    \       s[i] = 'M';\n        } else if (s[i] == 'n' || s[i] == 'N') {\n      \
    \      s[i] = 'N';\n        } else if (s[i] == 'o' || s[i] == 'O') {\n       \
    \     s[i] = 'O';\n        } else if (s[i] == 'p' || s[i] == 'P') {\n        \
    \    s[i] = 'P';\n        } else if (s[i] == 'q' || s[i] == 'Q') {\n         \
    \   s[i] = 'Q';\n        } else if (s[i] == 'r' || s[i] == 'R') {\n          \
    \  s[i] = 'R';\n        } else if (s[i] == 's' || s[i] == 'S') {\n           \
    \ s[i] = 'S';\n        } else if (s[i] == 't' || s[i] == 'T') {\n            s[i]\
    \ = 'T';\n        } else if (s[i] == 'u' || s[i] == 'U') {\n            s[i] =\
    \ 'U';\n        } else if (s[i] == 'v' || s[i] == 'V') {\n            s[i] = 'V';\n\
    \        } else if (s[i] == 'w' || s[i] == 'W') {\n            s[i] = 'W';\n \
    \       } else if (s[i] == 'x' || s[i] == 'X') {\n            s[i] = 'X';\n  \
    \      } else if (s[i] == 'y' || s[i] == 'Y') {\n            s[i] = 'Y';\n   \
    \     } else if (s[i] == 'z' || s[i] == 'Z') {\n            s[i] = 'Z';\n    \
    \    }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpdb5aiu7p: /tmp/tmpdb5aiu7p.cpp:68: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097835
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c ^= 32;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n \
    \           c ^= 32;\n        }\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpgy44616t: /tmp/tmpgy44616t.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097837
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c ^=\
    \ 32;\n        } else if (c >= 'A' && c <= 'Z') {\n            c ^= 32;\n    \
    \    }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a')\n            s[i] = 'A';\n        else if (s[i] == 'A')\n          \
    \  s[i] = 'a';\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpo99d6wwv: /tmp/tmpo99d6wwv.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097836
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z')\n            c = c + 32;\n        else if (c >= 'A' && c <= 'Z')\n    \
    \        c = c - 32;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp6b9ubsxf: /tmp/tmp6b9ubsxf.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c ^=\
    \ 32;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n            c ^= 32;\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c == 'a' || c == 'A') {\n            c = 'A';\n\
    \        } else if (c == 'b' || c == 'B') {\n            c = 'B';\n        } else\
    \ if (c == 'c' || c == 'C') {\n            c = 'C';\n        } else if (c == 'd'\
    \ || c == 'D') {\n            c = 'D';\n        } else if (c == 'e' || c == 'E')\
    \ {\n            c = 'E';\n        } else if (c == 'f' || c == 'F') {\n      \
    \      c = 'F';\n        } else if (c == 'g' || c == 'G') {\n            c = 'G';\n\
    \        } else if (c == 'h' || c == 'H') {\n            c = 'H';\n        } else\
    \ if (c == 'i' || c == 'I') {\n            c = 'I';\n        } else if (c == 'j'\
    \ || c == 'J') {\n            c = 'J';\n        } else if (c == 'k' || c == 'K')\
    \ {\n            c = 'K';\n        } else if (c == 'l' || c == 'L') {\n      \
    \      c = 'L';\n        } else if (c == 'm' || c == 'M') {\n            c = 'M';\n\
    \        } else if (c == 'n' || c == 'N') {\n            c = 'N';\n        } else\
    \ if (c == 'o' || c == 'O') {\n            c = 'O';\n        } else if (c == 'p'\
    \ || c == 'P') {\n            c = 'P';\n        } else if (c == 'q' || c == 'Q')\
    \ {\n            c = 'Q';\n        } else if (c == 'r' || c == 'R') {\n      \
    \      c = 'R';\n        } else if (c == 's' || c == 'S') {\n            c = 'S';\n\
    \        } else if (c == 't' || c == 'T') {\n            c = 'T';\n        } else\
    \ if (c == 'u' || c == 'U') {\n            c = 'U';\n        } else if (c == 'v'\
    \ || c == 'V') {\n            c = 'V';\n        } else if (c == 'w' || c == 'W')\
    \ {\n            c = 'W';\n        } else if (c == 'x' || c == 'X') {\n      \
    \      c = 'X';\n        } else if (c == 'y' || c == 'Y') {\n            c = 'Y';\n\
    \        } else if (c == 'z' || c == 'Z') {\n            c = 'Z';\n        }\n\
    \    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpbsfvqom6: /tmp/tmpbsfvqom6.cpp:67: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        if (result[i] >= 'A' && result[i] <= 'Z') {\n    \
    \        result[i] = result[i] + 32;\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpittgovi4: /tmp/tmpittgovi4.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5904s505.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp5904s505.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmp5904s505.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.length(); i++) {\n      |              \
    \              ^\n/tmp/tmp5904s505.cpp:15:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   15 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphq96zxzz.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmphq96zxzz.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmphq96zxzz.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.size(); i++) {\n      |                \
    \            ^\n/tmp/tmphq96zxzz.cpp:15:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   15 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n       \
    \ else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n    \
    \    }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmphcee6lkx: /tmp/tmphcee6lkx.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097858
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n    \
    \        s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65308lqu.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp65308lqu.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmp65308lqu.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.length(); i++) {\n      |              \
    \              ^\n/tmp/tmp65308lqu.cpp:63:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   63 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'A') {\n    \
    \        s[i] = 'a';\n        }\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp02v5ar83.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp02v5ar83.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmp02v5ar83.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.length(); i++) {\n      |              \
    \              ^\n/tmp/tmp02v5ar83.cpp:15:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   15 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n   \
    \         c += 'a' - 'A';\n        }\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ new_string;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\
    \ {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            c += 'a' - 'A';\n        } else {\n            c = c;\n        }\n\
    \        new_string.push_back(c);\n    }\n    return new_string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    }\n    if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpuv32xigh: /tmp/tmpuv32xigh.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n    \
    \        s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65308lqu.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp65308lqu.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmp65308lqu.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.length(); i++) {\n      |              \
    \              ^\n/tmp/tmp65308lqu.cpp:63:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   63 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n        \
    \    result[i] = result[i] + 32;\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c == 'a') {\n  \
    \          c = 'A';\n        } else if (c == 'b') {\n            c = 'B';\n  \
    \      } else if (c == 'c') {\n            c = 'C';\n        } else if (c == 'd')\
    \ {\n            c = 'D';\n        } else if (c == 'e') {\n            c = 'E';\n\
    \        } else if (c == 'f') {\n            c = 'F';\n        } else if (c ==\
    \ 'g') {\n            c = 'G';\n        } else if (c == 'h') {\n            c\
    \ = 'H';\n        } else if (c == 'i') {\n            c = 'I';\n        } else\
    \ if (c == 'j') {\n            c = 'J';\n        } else if (c == 'k') {\n    \
    \        c = 'K';\n        } else if (c == 'l') {\n            c = 'L';\n    \
    \    } else if (c == 'm') {\n            c = 'M';\n        } else if (c == 'n')\
    \ {\n            c = 'N';\n        } else if (c == 'o') {\n            c = 'O';\n\
    \        } else if (c == 'p') {\n            c = 'P';\n        } else if (c ==\
    \ 'q') {\n            c = 'Q';\n        } else if (c == 'r') {\n            c\
    \ = 'R';\n        } else if (c == 's') {\n            c = 'S';\n        } else\
    \ if (c == 't') {\n            c = 'T';\n        } else if (c == 'u') {\n    \
    \        c = 'U';\n        } else if (c == 'v') {\n            c = 'V';\n    \
    \    } else if (c == 'w') {\n            c = 'W';\n        } else if (c == 'x')\
    \ {\n            c = 'X';\n        } else if (c == 'y') {\n            c = 'Y';\n\
    \        } else if (c == 'z') {\n            c = 'Z';\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpavpagw2m: /tmp/tmpavpagw2m.cpp:68: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n    \
    \        s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ } else if (s[i] == 'A') {\n            s[i] = 'a';\n        } else if (s[i]\
    \ == 'B') {\n            s[i] = 'b';\n        } else if (s[i] == 'C') {\n    \
    \        s[i] = 'c';\n        } else if (s[i] == 'D') {\n            s[i] = 'd';\n\
    \        } else if (s[i] == 'E') {\n            s[i] = 'e';\n        } else if\
    \ (s[i] == 'F') {\n            s[i] = 'f';\n        } else if (s[i] == 'G') {\n\
    \            s[i] = 'g';\n        } else if (s[i] == 'H') {\n            s[i]\
    \ = 'h';\n        } else if (s[i] == 'I') {\n            s[i] = 'i';\n       \
    \ } else if (s[i] == 'J') {\n            s[i] = 'j';\n        } else if (s[i]\
    \ == 'K') {\n            s[i] = 'k';\n        } else if (s[i] == 'L') {\n    \
    \        s[i] = 'l';\n        } else if (s[i] == 'M') {\n            s[i] = 'm';\n\
    \        } else if (s[i] == 'N') {\n            s[i] = 'n';\n        } else if\
    \ (s[i] == 'O') {\n            s[i] = 'o';\n        } else if (s[i] == 'P') {\n\
    \            s[i] = \n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7asn0zgg.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp7asn0zgg.cpp:93:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   93 | }\n      | ^\n/tmp/tmp7asn0zgg.cpp:94:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   94 | int main() {\n     \
    \ |            ^\n/tmp/tmp7asn0zgg.cpp:99:1: error: expected \u2018}\u2019 at\
    \ end of input\n   99 | }\n      | ^\n/tmp/tmp7asn0zgg.cpp:8:45: note: to match\
    \ this \u2018{\u2019\n    8 |     for (size_t i = 0; i < s.length(); i++) {\n\
    \      |                                             ^\n/tmp/tmp7asn0zgg.cpp:99:1:\
    \ error: expected \u2018}\u2019 at end of input\n   99 | }\n      | ^\n/tmp/tmp7asn0zgg.cpp:6:43:\
    \ note: to match this \u2018{\u2019\n    6 | std::string flip_case(std::string\
    \ string) {\n      |                                           ^\n/tmp/tmp7asn0zgg.cpp:99:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   99 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        }\n        else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'A' && c <=\
    \ 'Z') {\n            c += 'a' - 'A';\n        } else if (c >= 'a' && c <= 'z')\
    \ {\n            c += 'A' - 'a';\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'A') {\n    \
    \        s[i] = 'a';\n        }\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpwtw99w4j: /tmp/tmpwtw99w4j.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097837
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'A') {\n            s[i] = 'A';\n        } else if (s[i] ==\
    \ 'b' || s[i] == 'B') {\n            s[i] = 'B';\n        } else if (s[i] == 'c'\
    \ || s[i] == 'C') {\n            s[i] = 'C';\n        } else if (s[i] == 'd' ||\
    \ s[i] == 'D') {\n            s[i] = 'D';\n        } else if (s[i] == 'e' || s[i]\
    \ == 'E') {\n            s[i] = 'E';\n        } else if (s[i] == 'f' || s[i] ==\
    \ 'F') {\n            s[i] = 'F';\n        } else if (s[i] == 'g' || s[i] == 'G')\
    \ {\n            s[i] = 'G';\n        } else if (s[i] == 'h' || s[i] == 'H') {\n\
    \            s[i] = 'H';\n        } else if (s[i] == 'i' || s[i] == 'I') {\n \
    \           s[i] = 'I';\n        } else if (s[i] == 'j' || s[i] == 'J') {\n  \
    \          s[i] = 'J';\n        } else if (s[i] == 'k' || s[i] == 'K') {\n   \
    \         s[i] = 'K';\n        } else if (s[i] == 'l' || s[i] == 'L') {\n    \
    \        s[i] = 'L';\n        } else if (s[i] == 'm' || s[i] == 'M') {\n     \
    \       s[i] = 'M';\n        } else if (s[i] == 'n' || s[i] == 'N') {\n      \
    \      s[i] = 'N';\n        } else if (s[i] == 'o' || s[i] == 'O') {\n       \
    \     s[i] = 'O';\n        } else if (s[i] == 'p' || s[i] == 'P') {\n        \
    \    s[i] = 'P';\n        } else if (s[i] == 'q' || s[i] == 'Q') {\n         \
    \   s[i] = 'Q';\n        } else if (s[i] == 'r' || s[i] == 'R') {\n          \
    \  s[i] = 'R';\n        } else if (s[i] == 's' || s[i] == 'S') {\n           \
    \ s[i] = 'S';\n        } else if (s[i] == 't' || s[i] == 'T') {\n            s[i]\
    \ = 'T';\n        } else if (s[i] == 'u' || s[i] == 'U') {\n            s[i] =\
    \ 'U';\n        } else if (s[i] == 'v' || s[i] == 'V') {\n            s[i] = 'V';\n\
    \        } else if (s[i] == 'w' || s[i] == 'W') {\n            s[i] = 'W';\n \
    \       } else if (s[i] == 'x' || s[i] == 'X') {\n            s[i] = 'X';\n  \
    \      } else if (s[i] == 'y' || s[i] == 'Y') {\n            s[i] = 'Y';\n   \
    \     } else if (s[i] == 'z' || s[i] == 'Z') {\n            s[i] = 'Z';\n    \
    \    }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkhz6kpk6.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpkhz6kpk6.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmpkhz6kpk6.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.length(); i++) {\n      |              \
    \              ^\n/tmp/tmpkhz6kpk6.cpp:63:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   63 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097833
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c = c + 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            c = c + 'a' - 'A';\n        }\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n   \
    \         c += 'a' - 'A';\n        }\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c ^=\
    \ 32;\n        } else if (c >= 'A' && c <= 'Z') {\n            c ^= 32;\n    \
    \    }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'A' && c <= 'Z') {\n\
    \            c += 'a' - 'A';\n        } else if (c >= 'a' && c <= 'z') {\n   \
    \         c += 'A' - 'a';\n        }\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        }\n        else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n       \
    \ else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n    \
    \    }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn1uxlduc.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpn1uxlduc.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmpn1uxlduc.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.length(); i++) {\n      |              \
    \              ^\n/tmp/tmpn1uxlduc.cpp:16:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   16 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c = c - 32;\n        } else if (c >= 'A' && c <= 'Z') {\n       \
    \     c = c + 32;\n        }\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c ^=\
    \ 32;\n        } else if (c >= 'A' && c <= 'Z') {\n            c ^= 32;\n    \
    \    }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n   \
    \         c += 'a' - 'A';\n        }\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z')\n  \
    \          c ^= 32;\n        else if (c >= 'A' && c <= 'Z')\n            c ^=\
    \ 32;\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu7ydmpdz.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpu7ydmpdz.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmpu7ydmpdz.cpp:8:20: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (auto &c : s) {\n      |                    ^\n/tmp/tmpu7ydmpdz.cpp:14:12:\
    \ error: \u2018s\u2019 was not declared in this scope\n   14 |     return s;\n\
    \      |            ^\n"
  stdout: ''
  timestamp: 1660097856
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'A' && c <=\
    \ 'Z') {\n            c += 'a' - 'A';\n        } else if (c >= 'a' && c <= 'z')\
    \ {\n            c += 'A' - 'a';\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmps9xwj5od: /tmp/tmps9xwj5od.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n   \
    \         c += 'a' - 'A';\n        }\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z')\n  \
    \          c = c - 32;\n        else if (c >= 'A' && c <= 'Z')\n            c\
    \ = c + 32;\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n    \
    \        s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65308lqu.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp65308lqu.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmp65308lqu.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.length(); i++) {\n      |              \
    \              ^\n/tmp/tmp65308lqu.cpp:63:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   63 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a')\n            s[i] = 'A';\n        else if (s[i] == 'A')\n          \
    \  s[i] = 'a';\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpo99d6wwv: /tmp/tmpo99d6wwv.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a')\n            s[i] = 'A';\n        else if (s[i] == 'A')\n          \
    \  s[i] = 'a';\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpo99d6wwv: /tmp/tmpo99d6wwv.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        }\n        else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n        \
    \    result[i] = result[i] + 32;\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097833
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        switch (c) {\n        case 'a':\n\
    \        case 'b':\n        case 'c':\n        case 'd':\n        case 'e':\n\
    \        case 'f':\n        case 'g':\n        case 'h':\n        case 'i':\n\
    \        case 'j':\n        case 'k':\n        case 'l':\n        case 'm':\n\
    \        case 'n':\n        case 'o':\n        case 'p':\n        case 'q':\n\
    \        case 'r':\n        case 's':\n        case 't':\n        case 'u':\n\
    \        case 'v':\n        case 'w':\n        case 'x':\n        case 'y':\n\
    \        case 'z':\n            c = toupper(c);\n            break;\n        default:\n\
    \            c = tolower(c);\n            break;\n        }\n        result +=\
    \ c;\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n        \
    \    result[i] = result[i] + 32;\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097833
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'A' && c <=\
    \ 'Z') {\n            c += 'a' - 'A';\n        } else if (c >= 'a' && c <= 'z')\
    \ {\n            c += 'A' - 'a';\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c +=\
    \ 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n            c += 'a'\
    \ - 'A';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' &&\
    \ string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n  \
    \      else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n \
    \   auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n  \
    \  assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n        \
    \    result[i] = result[i] + 32;\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097833
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c = c + 32;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n\
    \            c = c - 32;\n        }\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n  \
    \  assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1nst9xz3.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp1nst9xz3.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmp1nst9xz3.cpp:8:20: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (auto &c : s) {\n      |                    ^\n/tmp/tmp1nst9xz3.cpp:16:12:\
    \ error: \u2018s\u2019 was not declared in this scope\n   16 |     return s;\n\
    \      |            ^\n"
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\n            c += 'A'\
    \ - 'a';\n        else if (c >= 'A' && c <= 'Z')\n            c += 'a' - 'A';\n\
    \    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = \"\";\n    for (char c : string) {\n        if (std::isupper(c)) {\n\
    \            result += std::toupper(c);\n        } else {\n            result\
    \ += std::tolower(c);\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpm7i6vr5z: /tmp/tmpm7i6vr5z.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphq96zxzz.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmphq96zxzz.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmphq96zxzz.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.size(); i++) {\n      |                \
    \            ^\n/tmp/tmphq96zxzz.cpp:15:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   15 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = \"\";\n    for (auto c : string) {\n        result += std::toupper(c);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp08zouyp_: /tmp/tmp08zouyp_.cpp:16: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphq96zxzz.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmphq96zxzz.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmphq96zxzz.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.size(); i++) {\n      |                \
    \            ^\n/tmp/tmphq96zxzz.cpp:15:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   15 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgtdt7zq1.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpgtdt7zq1.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmpgtdt7zq1.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.size(); i++) {\n      |                \
    \            ^\n/tmp/tmpgtdt7zq1.cpp:15:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   15 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c = c\
    \ - 32;\n        } else if (c >= 'A' && c <= 'Z') {\n            c = c + 32;\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmps9xwj5od: /tmp/tmps9xwj5od.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a')\n            s[i] = 'A';\n        else if (s[i] == 'A')\n          \
    \  s[i] = 'a';\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpo99d6wwv: /tmp/tmpo99d6wwv.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        if (result[i] >= 'A' && result[i] <= 'Z') {\n    \
    \        result[i] = result[i] + 32;\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpittgovi4: /tmp/tmpittgovi4.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        }\n        else if (c >= 'A' &&\
    \ c <= 'Z') {\n            c += 'a' - 'A';\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (std::tolower(c) == c) {\n\
    \            c = std::toupper(c);\n        }\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpf0m5bdjq: /tmp/tmpf0m5bdjq.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n       \
    \ else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n    \
    \    }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmphcee6lkx: /tmp/tmphcee6lkx.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097858
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        switch (c) {\n        case 'a':\n\
    \        case 'b':\n        case 'c':\n        case 'd':\n        case 'e':\n\
    \        case 'f':\n        case 'g':\n        case 'h':\n        case 'i':\n\
    \        case 'j':\n        case 'k':\n        case 'l':\n        case 'm':\n\
    \        case 'n':\n        case 'o':\n        case 'p':\n        case 'q':\n\
    \        case 'r':\n        case 's':\n        case 't':\n        case 'u':\n\
    \        case 'v':\n        case 'w':\n        case 'x':\n        case 'y':\n\
    \        case 'z':\n            result += c;\n            break;\n        case\
    \ 'A':\n        case 'B':\n        case 'C':\n        case 'D':\n        case\
    \ 'E':\n        case 'F':\n        case 'G':\n        case 'H':\n        case\
    \ 'I':\n        case 'J':\n        case 'K':\n        case 'L':\n        case\
    \ 'M':\n        case 'N':\n        case 'O':\n        case 'P':\n        case\
    \ 'Q':\n        case 'R':\n        case 'S':\n        case 'T':\n        case\
    \ 'U':\n        case 'V':\n        case 'W':\n        case 'X':\n        case\
    \ 'Y':\n        case 'Z':\n            result += c;\n            break;\n    \
    \    default:\n            result += std::toupper(c);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpksc5htlm: /tmp/tmpksc5htlm.cpp:75: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n       \
    \ else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n    \
    \    }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c = c\
    \ - 32;\n        } else if (c >= 'A' && c <= 'Z') {\n            c = c + 32;\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphq96zxzz.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmphq96zxzz.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmphq96zxzz.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.size(); i++) {\n      |                \
    \            ^\n/tmp/tmphq96zxzz.cpp:15:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   15 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n    \
    \        s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpxrufhqvy: /tmp/tmpxrufhqvy.cpp:68: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097835
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097790
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphq96zxzz.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmphq96zxzz.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmphq96zxzz.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.size(); i++) {\n      |                \
    \            ^\n/tmp/tmphq96zxzz.cpp:15:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   15 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] ==\
    \ 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n       \
    \     s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpdox72gao: /tmp/tmpdox72gao.cpp:68: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097837
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        if\
    \ (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n \
    \   }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp2x4k2ojt: /tmp/tmp2x4k2ojt.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = \"\";\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\n\
    \            result += toupper(c);\n        else if (c >= 'A' && c <= 'Z')\n \
    \           result += tolower(c);\n        else\n            result += c;\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n \
    \   assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) ==\
    \ (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n       \
    \ else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n    \
    \    }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        switch (c) {\n            case\
    \ 'a':\n            case 'b':\n            case 'c':\n            case 'd':\n\
    \            case 'e':\n            case 'f':\n            case 'g':\n       \
    \     case 'h':\n            case 'i':\n            case 'j':\n            case\
    \ 'k':\n            case 'l':\n            case 'm':\n            case 'n':\n\
    \            case 'o':\n            case 'p':\n            case 'q':\n       \
    \     case 'r':\n            case 's':\n            case 't':\n            case\
    \ 'u':\n            case 'v':\n            case 'w':\n            case 'x':\n\
    \            case 'y':\n            case 'z':\n            case 'A':\n       \
    \     case 'B':\n            case 'C':\n            case 'D':\n            case\
    \ 'E':\n            case 'F':\n            case 'G':\n            case 'H':\n\
    \            case 'I':\n            case 'J':\n            case 'K':\n       \
    \     case 'L':\n            case 'M':\n            case 'N':\n            case\
    \ 'O':\n            case 'P':\n            case 'Q':\n            case 'R':\n\
    \            case 'S':\n            case 'T':\n            case 'U':\n       \
    \     case 'V':\n            case 'W':\n            case 'X':\n            case\
    \ 'Y':\n            case 'Z':\n            case '0':\n            case '1':\n\
    \            case '2':\n            case '3':\n            case '4':\n       \
    \     case '5':\n            case '6':\n            case '7':\n            case\
    \ '8':\n            case '9':\n                result += c;\n                break;\n\
    \            default:\n                result += std::toupper(c);\n          \
    \      break;\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpw_nxtgsa: /tmp/tmpw_nxtgsa.cpp:84: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ new_string;\n    for (size_t i = 0; i < string.length(); i++) {\n        if\
    \ (string[i] >= 'a' && string[i] <= 'z') {\n            new_string += string[i]\
    \ - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n        \
    \    new_string += string[i] + 32;\n        } else {\n            new_string +=\
    \ string[i];\n        }\n    }\n    return new_string;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (std::toupper(c) == c)\n  \
    \          c = std::tolower(c);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmplq3p8ayf: /tmp/tmplq3p8ayf.cpp:17: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097858
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        s[i] = toupper(s[i]);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptqs2yuzv.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmptqs2yuzv.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmptqs2yuzv.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.length(); i++) {\n      |              \
    \              ^\n/tmp/tmptqs2yuzv.cpp:11:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   11 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c ^=\
    \ 32;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n            c ^= 32;\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        s[i] = toupper(s[i]);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptqs2yuzv.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmptqs2yuzv.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmptqs2yuzv.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.length(); i++) {\n      |              \
    \              ^\n/tmp/tmptqs2yuzv.cpp:11:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   11 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] ==\
    \ 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n       \
    \     s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ } else if (s[i] == 'A') {\n            s[i] = 'a';\n        } else if (s[i]\
    \ == 'B') {\n            s[i] = 'b';\n        } else if (s[i] == 'C') {\n    \
    \        s[i] = 'c';\n        } else if (s[i] == 'D') {\n            s[i] = 'd';\n\
    \        } else if (s[i] == 'E') {\n            s[i] = 'e';\n        } else if\
    \ (s[i] == 'F') {\n            s[i] = 'f';\n        } else if (s[i] == 'G') {\n\
    \            s[i] = 'g';\n        } else if (s[i] == 'H') {\n            s[i]\
    \ = 'h';\n        } else if (s[i] == 'I') {\n            s[i] = 'i';\n       \
    \ } else if (s[i] == 'J') {\n            s[i] = 'j';\n        } else if (s[i]\
    \ == 'K') {\n            s[i] = 'k';\n        } else if (s[i] == 'L') {\n    \
    \        s[i] = 'l';\n        } else if (s[i] == 'M') {\n            s[i] = 'm';\n\
    \        } else if (s[i] == 'N') {\n            s[i] = 'n';\n        } else if\
    \ (s[i] == 'O') {\n            s[i] = 'o';\n        } else if (s[i] == 'P') {\n\
    \            s[i] = '\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbbgef7fi.cpp:92:20: warning: missing terminating ' character\n\
    \   92 |             s[i] = '\n      |                    ^\n/tmp/tmpbbgef7fi.cpp:92:20:\
    \ error: missing terminating ' character\n/tmp/tmpbbgef7fi.cpp: In function \u2018\
    std::string flip_case(std::string)\u2019:\n/tmp/tmpbbgef7fi.cpp:93:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   93 | }\n      | ^\n/tmp/tmpbbgef7fi.cpp:94:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   94 | int main() {\n      |            ^\n/tmp/tmpbbgef7fi.cpp:99:1: error:\
    \ expected \u2018}\u2019 at end of input\n   99 | }\n      | ^\n/tmp/tmpbbgef7fi.cpp:8:43:\
    \ note: to match this \u2018{\u2019\n    8 |     for (size_t i = 0; i < s.size();\
    \ i++) {\n      |                                           ^\n/tmp/tmpbbgef7fi.cpp:99:1:\
    \ error: expected \u2018}\u2019 at end of input\n   99 | }\n      | ^\n/tmp/tmpbbgef7fi.cpp:6:43:\
    \ note: to match this \u2018{\u2019\n    6 | std::string flip_case(std::string\
    \ string) {\n      |                                           ^\n/tmp/tmpbbgef7fi.cpp:99:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   99 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'A' && c <= 'Z') {\n\
    \            c += 'a' - 'A';\n        }\n        else if (c >= 'a' && c <= 'z')\
    \ {\n            c += 'A' - 'a';\n        }\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] ==\
    \ 'a' || s[i] == 'A') {\n            s[i] = 'A';\n        } else if (s[i] == 'b'\
    \ || s[i] == 'B') {\n            s[i] = 'B';\n        } else if (s[i] == 'c' ||\
    \ s[i] == 'C') {\n            s[i] = 'C';\n        } else if (s[i] == 'd' || s[i]\
    \ == 'D') {\n            s[i] = 'D';\n        } else if (s[i] == 'e' || s[i] ==\
    \ 'E') {\n            s[i] = 'E';\n        } else if (s[i] == 'f' || s[i] == 'F')\
    \ {\n            s[i] = 'F';\n        } else if (s[i] == 'g' || s[i] == 'G') {\n\
    \            s[i] = 'G';\n        } else if (s[i] == 'h' || s[i] == 'H') {\n \
    \           s[i] = 'H';\n        } else if (s[i] == 'i' || s[i] == 'I') {\n  \
    \          s[i] = 'I';\n        } else if (s[i] == 'j' || s[i] == 'J') {\n   \
    \         s[i] = 'J';\n        } else if (s[i] == 'k' || s[i] == 'K') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l' || s[i] == 'L') {\n     \
    \       s[i] = 'L';\n        } else if (s[i] == 'm' || s[i] == 'M') {\n      \
    \      s[i] = 'M';\n        } else if (s[i] == 'n' || s[i] == 'N') {\n       \
    \     s[i] = 'N';\n        } else if (s[i] == 'o' || s[i] == 'O') {\n        \
    \    s[i] = 'O';\n        } else if (s[i] == 'p' || s[i] == 'P') {\n         \
    \   s[i] = 'P';\n        } else if (s[i] == 'q' || s[i] == 'Q') {\n          \
    \  s[i] = 'Q';\n        } else if (s[i] == 'r' || s[i] == 'R') {\n           \
    \ s[i] = 'R';\n        } else if (s[i] == 's' || s[i] == 'S') {\n            s[i]\
    \ = 'S';\n        } else if (s[i] == 't' || s[i] == 'T') {\n            s[i] =\
    \ 'T';\n        } else if (s[i] == 'u' || s[i] == 'U') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v' || s[i] == 'V') {\n            s[i] = 'V';\n \
    \       } else if (s[i] == 'w' || s[i] == 'W') {\n            s[i] = 'W';\n  \
    \      } else if (s[i] == 'x' || s[i] == 'X') {\n            s[i] = 'X';\n   \
    \     } else if (s[i] == 'y' || s[i] == 'Y') {\n            s[i] = 'Y';\n    \
    \    } else if (s[i] == 'z' || s[i] == 'Z') {\n            s[i] = 'Z';\n     \
    \   }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpcp_o4985: /tmp/tmpcp_o4985.cpp:68: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ new_string;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\n\
    \            new_string += toupper(c);\n        else if (c >= 'A' && c <= 'Z')\n\
    \            new_string += tolower(c);\n        else\n            new_string +=\
    \ c;\n    }\n    return new_string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c = c\
    \ + 32;\n        } else if (c >= 'A' && c <= 'Z') {\n            c = c - 32;\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpppldkgoz: /tmp/tmpppldkgoz.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n    \
    \        s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65308lqu.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp65308lqu.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmp65308lqu.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.length(); i++) {\n      |              \
    \              ^\n/tmp/tmp65308lqu.cpp:63:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   63 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a')\n            s[i] = 'A';\n        else if (s[i] == 'A')\n          \
    \  s[i] = 'a';\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpo99d6wwv: /tmp/tmpo99d6wwv.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ new_string;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\
    \ {\n            c += 'A' - 'a';\n        }\n        else if (c >= 'A' && c <=\
    \ 'Z') {\n            c += 'a' - 'A';\n        }\n        new_string += c;\n \
    \   }\n    return new_string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (std::toupper(c) == c)\n \
    \           result += std::tolower(c);\n        else\n            result += c;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp_v6sot4l: /tmp/tmp_v6sot4l.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n    \
    \        s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpxrufhqvy: /tmp/tmpxrufhqvy.cpp:68: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097835
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ new_string;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\
    \ {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            c += 'a' - 'A';\n        } else {\n            c = c;\n        }\n\
    \        new_string.push_back(c);\n    }\n    return new_string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmps9xwj5od: /tmp/tmps9xwj5od.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ new_string;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\n\
    \            c = c - 32;\n        else if (c >= 'A' && c <= 'Z')\n           \
    \ c = c + 32;\n        new_string.push_back(c);\n    }\n    return new_string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        switch (c) {\n            case\
    \ 'a':\n            case 'b':\n            case 'c':\n            case 'd':\n\
    \            case 'e':\n            case 'f':\n            case 'g':\n       \
    \     case 'h':\n            case 'i':\n            case 'j':\n            case\
    \ 'k':\n            case 'l':\n            case 'm':\n            case 'n':\n\
    \            case 'o':\n            case 'p':\n            case 'q':\n       \
    \     case 'r':\n            case 's':\n            case 't':\n            case\
    \ 'u':\n            case 'v':\n            case 'w':\n            case 'x':\n\
    \            case 'y':\n            case 'z':\n            case 'A':\n       \
    \     case 'B':\n            case 'C':\n            case 'D':\n            case\
    \ 'E':\n            case 'F':\n            case 'G':\n            case 'H':\n\
    \            case 'I':\n            case 'J':\n            case 'K':\n       \
    \     case 'L':\n            case 'M':\n            case 'N':\n            case\
    \ 'O':\n            case 'P':\n            case 'Q':\n            case 'R':\n\
    \            case 'S':\n            case 'T':\n            case 'U':\n       \
    \     case 'V':\n            case 'W':\n            case 'X':\n            case\
    \ 'Y':\n            case 'Z':\n            case '0':\n            case '1':\n\
    \            case '2':\n            case '3':\n            case '4':\n       \
    \     case '5':\n            case '6':\n            case '7':\n            case\
    \ '8':\n            case '9':\n            case '+':\n            case '-':\n\
    \            case '_':\n            case '/':\n            case '*':\n       \
    \     case '(':\n            case ')':\n            case '{':\n            case\
    \ '}':\n            case '[':\n            case ']':\n            case '<':\n\
    \            case '>':\n            case '=':\n            case '!':\n       \
    \     case '%':\n            case '&':\n            case '|':\n            case\
    \ '~':\n            case '?':\n            case '^':\n            case '_':\n\
    \            case '`':\n            case '!':\n            case '~':\n       \
    \     case '`':\n            case '(':\n            case ')':\n            case\
    \ '{':\n            case '}':\n            case '[':\n            case ']':\n\
    \            case '<':\n            case '>':\n            case '=':\n       \
    \     case '!':\n            case '%':\n            case '&':\n            case\
    \ '|':\n            case '~':\n            case '?':\n            case '^':\n\
    \            case '_':\n            case '`':\n            case '!':\n       \
    \     case '~':\n            case '`':\n            case '(':\n            case\
    \ ')':\n            case '{':\n            case '}':\n            case '[':\n\
    \            case ']':\n            case '<':\n            case '>':\n       \
    \     case '=':\n            case '!':\n            case '%':\n            case\
    \ '&':\n            case '|':\n            case '~':\n            case '?':\n\
    \            case '^':\n            case '_':\n\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp37ig9ywc.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp37ig9ywc.cpp:93:13: error: duplicate case value\n   93 |          \
    \   case '_':\n      |             ^~~~\n/tmp/tmp37ig9ywc.cpp:74:13: note: previously\
    \ used here\n   74 |             case '_':\n      |             ^~~~\n/tmp/tmp37ig9ywc.cpp:95:13:\
    \ error: duplicate case value\n   95 |             case '!':\n      |        \
    \     ^~~~\n/tmp/tmp37ig9ywc.cpp:86:13: note: previously used here\n   86 |  \
    \           case '!':\n      |             ^~~~\n/tmp/tmp37ig9ywc.cpp:96:13: error:\
    \ duplicate case value\n   96 |             case '~':\n      |             ^~~~\n\
    /tmp/tmp37ig9ywc.cpp:90:13: note: previously used here\n   90 |             case\
    \ '~':\n      |             ^~~~\n/tmp/tmp37ig9ywc.cpp:97:13: error: duplicate\
    \ case value\n   97 |             case '`':\n      |             ^~~~\n/tmp/tmp37ig9ywc.cpp:94:13:\
    \ note: previously used here\n   94 |             case '`':\n      |         \
    \    ^~~~\n/tmp/tmp37ig9ywc.cpp:98:13: error: duplicate case value\n   98 |  \
    \           case '(':\n      |             ^~~~\n/tmp/tmp37ig9ywc.cpp:77:13: note:\
    \ previously used here\n   77 |             case '(':\n      |             ^~~~\n\
    /tmp/tmp37ig9ywc.cpp:99:13: error: duplicate case value\n   99 |             case\
    \ ')':\n      |             ^~~~\n/tmp/tmp37ig9ywc.cpp:78:13: note: previously\
    \ used here\n   78 |             case ')':\n      |             ^~~~\n/tmp/tmp37ig9ywc.cpp:100:13:\
    \ error: duplicate case value\n  100 |             case '{':\n      |        \
    \     ^~~~\n/tmp/tmp37ig9ywc.cpp:79:13: note: previously used here\n   79 |  \
    \           case '{':\n      |             ^~~~\n/tmp/tmp37ig9ywc.cpp:101:13:\
    \ error: duplicate case value\n  101 |             case '}':\n      |        \
    \     ^~~~\n/tmp/tmp37ig9ywc.cpp:80:13: note: previously used here\n   80 |  \
    \           case '}':\n      |             ^~~~\n/tmp/tmp37ig9ywc.cpp:102:13:\
    \ error: duplicate case value\n  102 |             case '[':\n      |        \
    \     ^~~~\n/tmp/tmp37ig9ywc.cpp:81:13: note: previously used here\n   81 |  \
    \           case '[':\n     "
  stdout: ''
  timestamp: 1660097856
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c = c - 32;\n        }\n        else if (c >= 'A' && c <=\
    \ 'Z') {\n            c = c + 32;\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbt635fxd.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpbt635fxd.cpp:7:11: error: expected \u2018;\u2019 before \u2018result\u2019\
    \n    7 |     string result = string;\n      |           ^~~~~~~\n      |    \
    \       ;\n/tmp/tmpbt635fxd.cpp:8:20: error: \u2018result\u2019 was not declared\
    \ in this scope\n    8 |     for (auto &c : result) {\n      |               \
    \     ^~~~~~\n/tmp/tmpbt635fxd.cpp:16:12: error: \u2018result\u2019 was not declared\
    \ in this scope\n   16 |     return result;\n      |            ^~~~~~\n"
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n        \
    \    result[i] = result[i] + 32;\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097833
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        switch (c) {\n        case 'a':\n\
    \        case 'b':\n        case 'c':\n        case 'd':\n        case 'e':\n\
    \        case 'f':\n        case 'g':\n        case 'h':\n        case 'i':\n\
    \        case 'j':\n        case 'k':\n        case 'l':\n        case 'm':\n\
    \        case 'n':\n        case 'o':\n        case 'p':\n        case 'q':\n\
    \        case 'r':\n        case 's':\n        case 't':\n        case 'u':\n\
    \        case 'v':\n        case 'w':\n        case 'x':\n        case 'y':\n\
    \        case 'z':\n            c = toupper(c);\n            break;\n        default:\n\
    \            c = tolower(c);\n            break;\n        }\n        result +=\
    \ c;\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c ^=\
    \ 32;\n        }\n        if (c >= 'A' && c <= 'Z') {\n            c ^= 32;\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpqpz5d5kv: /tmp/tmpqpz5d5kv.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string)\n        c = toupper(c);\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp6bz8t7k5: /tmp/tmp6bz8t7k5.cpp:14: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097833
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        }\n        else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c +=\
    \ 32;\n        } else if (c >= 'A' && c <= 'Z') {\n            c -= 32;\n    \
    \    }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp9fxa4pwu: /tmp/tmp9fxa4pwu.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097857
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a')\n            s[i] = 'A';\n        else if (s[i] == 'A')\n          \
    \  s[i] = 'a';\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpo99d6wwv: /tmp/tmpo99d6wwv.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n        \
    \    result[i] = result[i] + 32;\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a')\n            s[i] = 'A';\n        else if (s[i] == 'A')\n          \
    \  s[i] = 'a';\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpo99d6wwv: /tmp/tmpo99d6wwv.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097836
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c = c - 32;\n        }\n        if (c >= 'A' && c <= 'Z') {\n   \
    \         c = c + 32;\n        }\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp1trkn1g1: /tmp/tmp1trkn1g1.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c = c - 32;\n        } else if (c >= 'A' && c <= 'Z') {\n       \
    \     c = c + 32;\n        }\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n    \
    \        s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpxrufhqvy: /tmp/tmpxrufhqvy.cpp:68: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n       \
    \ else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n    \
    \    }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmphcee6lkx: /tmp/tmphcee6lkx.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097858
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n       \
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpx5vcx96p: /tmp/tmpx5vcx96p.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        s[i] = toupper(s[i]);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpz62ny8no: /tmp/tmpz62ny8no.cpp:16: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097837
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c = c + 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            c = c + 'a' - 'A';\n        }\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] ==\
    \ 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n       \
    \     s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpdox72gao: /tmp/tmpdox72gao.cpp:68: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097837
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        if\
    \ (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n \
    \   }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgrx10107.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpgrx10107.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmpgrx10107.cpp:8:28: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (size_t i = 0; i < s.size(); i++) {\n      |                \
    \            ^\n/tmp/tmpgrx10107.cpp:16:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   16 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097857
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n       \
    \ else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n    \
    \    }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    }\n    if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpuv32xigh: /tmp/tmpuv32xigh.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c ^= 32;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n \
    \           c ^= 32;\n        }\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097836
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n       \
    \ else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n    \
    \    }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097834

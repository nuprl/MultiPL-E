name: HumanEval_157_right_angle_triangle
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
  \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
  \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
  \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
  \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
  bool right_angle_triangle(long a, long b, long c) {\n"
tests: "}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
  \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
  \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
  \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n \
  \   assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15), (8),\
  \ (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
  \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n}\n"
completions: ["    // Write your code here\n    if(a==b){\n        if(a==c){\n   \
    \         return true;\n        }\n        else{\n            return false;\n\
    \        }\n    }\n    else if(a==c){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    long long a1 = abs(a), b1 = abs(b), c1 =\
    \ abs(c);\n    long long a2 = a1 + b1, c2 = a1 + c1, b2 = b1 + c1;\n    return\
    \ a1 == b2 && b1 == c2;", "    long d = b * b - 4 * a * c;\n    if (d < 0) {\n\
    \        return false;\n    }\n    long root = (long) sqrt(d);\n    long t1 =\
    \ (-b + root) / (2 * a);\n    long t2 = (-b - root) / (2 * a);\n    if (t1 ==\
    \ t2) {\n        return true;\n    }\n    return false;", "    long long ans =\
    \ (a * b) + (b * c);\n    long long ans2 = 0;\n    if (ans > 0) {\n        ans2\
    \ = ans / b;\n    }\n    if (ans < 0) {\n        ans2 = -ans2 / b;\n    }\n  \
    \  if (ans == 0) {\n        ans2 = 1;\n    }\n    if (ans2 == 0) {\n        return\
    \ true;\n    }\n    return false;", "    long d = b * b - 4 * a * c;\n    if (d\
    \ < 0)\n        return false;\n    long root = (long) sqrt(d);\n    long s = (-b\
    \ + root) / (2 * a);\n    long t = (-b - root) / (2 * a);\n    return (s == 0\
    \ && t == 0) || (s == t && s == 0);", "    long d = b * b - 4 * a * c;\n    if\
    \ (d < 0) {\n        return false;\n    }\n    long root = (long) sqrt(d);\n \
    \   long x = (long) (-b + root) / a;\n    long y = (long) (-b - root) / a;\n \
    \   return ((x == 0 && y == 0) || (x == 0 && y == 1) || (x == 1 && y == 1));",
  "    long d = b * b - 4 * a * c;\n    if (d < 0) {\n        return false;\n    }\n\
    \    long x = (b + c) / 2;\n    long y = (-b - c) / 2;\n    long root = (long)\
    \ sqrt(d);\n    long t1 = (long) (-b + root) / a;\n    long t2 = (long) (-b -\
    \ root) / a;\n    if (t1 == t2) {\n        return true;\n    }\n    if (t1 > t2)\
    \ {\n        long temp = t1;\n        t1 = t2;\n        t2 = temp;\n    }\n  \
    \  if (t1 == 0) {\n        return false;\n    }\n    long t = (t1 + t2) / 2;\n\
    \    if (t < 0 || t > 1) {\n        return false;\n    }\n    long u = (long)\
    \ sqrt(t * t + 1);\n    long v = (long) (-2 * t * t + 1);\n    long w = (long)\
    \ (-2 * t * t - 1);\n    long t1 = (long) (-b + u) / a;\n    long t2 = (long)\
    \ (-b - u) / a;\n    if (t1 == t2) {\n        return true;\n    }\n    if (t1\
    \ > t2) {\n        long temp = t1;\n        t1 = t2;\n        t2 = temp;\n   \
    \ }\n    if (t1 == 0) {\n        return false;\n    }\n    long t = (t1 + t2)\
    \ / 2;\n    if (t < 0 || t > 1) {\n        return false;\n    }\n    long u =\
    \ (long) sqrt(t * t + 1);\n    long v = (long) (-2 * t * t + 1);\n    long w =\
    \ (long) (-2 * t * t - 1);\n    long t1 = (long) (-b + v) / a;\n    long t2 =\
    \ (long) (-b - v) / a;\n    if (t1 == t2) {\n        return true;\n    }\n   \
    \ if (t1 > t2) {\n        long temp = t1;\n        t1 = t2;\n        t2 = temp;\n\
    \    }\n    if (t1 == 0) {\n        return false;\n    }\n    long t = (t1 + t2)\
    \ / 2;\n    if (t < 0 || t > 1) {\n        return false;\n    }\n    long u =\
    \ (long) sqrt(t * t + 1);\n    long v = (long) (-2 * t * t + 1);\n    long w =\
    \ (long) (-2 * t * t - 1);\n    long t1 = (long) (-b + w) / a;\n    long t2 =\
    \ (long) (-b - w) / a;\n    if (t1 == t2) {\n        return true;\n    }\n   \
    \ if (t1 > t2) {\n        long temp = t1;\n        t1 = t2;\n        t2 = temp;\n\
    \    }\n    if (t1 == 0) {\n        return false;\n    }\n    long t = (t1 + t2)\
    \ / 2;\n    if (t < 0 || t > 1) {\n        return false;\n    }\n    long u =\
    \ (", "    long d = b * b - 4 * a * c;\n    if (d < 0) {\n        return false;\n\
    \    }\n    long root = (long) sqrt(d);\n    long s = (-b + root) / (2 * a);\n\
    \    long t = (-b - root) / (2 * a);\n    return (s == 0 && t == 0) || (s == t\
    \ && s == 0);", "    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return\
    \ false;\n    long root = (long) sqrt(d);\n    long s = (-b + root) / (2 * a);\n\
    \    long t = (-b - root) / (2 * a);\n    return (s == 0 && t == 0) || (s == t\
    \ && s == 0);", "    long d = b * b - 4 * a * c;\n    if (d < 0) {\n        return\
    \ false;\n    }\n    long e = std::sqrt(d);\n    long f = (b + e) / (2 * a);\n\
    \    long g = (c + e) / (2 * a);\n    long h = (b + g) / (2 * a);\n    return\
    \ ((f < 0 && g > 0) || (f > 0 && g < 0));", "    // Write your code here\n   \
    \ if(a>b+c) return false;\n    if(a>c+b) return false;\n    if(b>c+a) return false;\n\
    \    return true;", "    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;", "    // Write your code\
    \ here\n    if(a==b){\n        if(a==c){\n            return true;\n        }\n\
    \    }\n    else if(a==c){\n        if(b==c){\n            return true;\n    \
    \    }\n    }\n    else if(b==c){\n        if(a==b){\n            return true;\n\
    \        }\n    }\n    return false;", "    if (a == 0 || b == 0 || c == 0)\n\
    \        return false;\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n    \
    \    return false;\n    long x = (b + d) / (2 * a);\n    long y = (-b - d) / (2\
    \ * a);\n    return ((x * x) + (y * y)) <= 1;", "    long d = b * b - 4 * a *\
    \ c;\n    if (d < 0) {\n        return false;\n    }\n    long root = (long) sqrt(d);\n\
    \    long t1 = (-b + root) / (2 * a);\n    long t2 = (-b - root) / (2 * a);\n\
    \    if (t1 < 0 || t2 < 0 || t1 > a || t2 > a) {\n        return false;\n    }\n\
    \    return true;", "    // Write your code here.\n    if(a==b){\n        if(a==c){\n\
    \            return true;\n        }\n        else{\n            return false;\n\
    \        }\n    }\n    else if(a==c){\n        return false;\n    }\n    else\
    \ if(b==c){\n        return false;\n    }\n    else{\n        if(a>b){\n     \
    \       if(a>c){\n                return true;\n            }\n            else{\n\
    \                return false;\n            }\n        }\n        else{\n    \
    \        if(b>c){\n                return true;\n            }\n            else{\n\
    \                return false;\n            }\n        }\n    }", "    long d\
    \ = b * b - 4 * a * c;\n    if (d < 0) {\n        return false;\n    }\n    long\
    \ s = (-b + sqrt(d)) / (2 * a);\n    long t = (-b - sqrt(d)) / (2 * a);\n    return\
    \ (s == t);", "    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return\
    \ false;\n    long root = (long) sqrt(d);\n    long x = (long) (-b + root) / (2\
    \ * a);\n    long y = (long) (-b - root) / (2 * a);\n    return ((x == 0 && y\
    \ == 0) || (x == 0 && y == b) || (x == b && y == 0));", "    long d = b * b -\
    \ 4 * a * c;\n    if (d < 0) {\n        return false;\n    }\n    long root =\
    \ (long) sqrt(d);\n    long t1 = (-b + root) / (2 * a);\n    long t2 = (-b - root)\
    \ / (2 * a);\n    if (t1 >= 0 && t1 <= 1) {\n        return true;\n    }\n   \
    \ if (t2 >= 0 && t2 <= 1) {\n        return true;\n    }\n    return false;",
  "    // Write your code here\n    if(a==b){\n        if(a==c){\n            return\
    \ true;\n        }\n    }\n    if(a==c){\n        return true;\n    }\n    if(b==c){\n\
    \        return false;\n    }\n    if(a>b){\n        if(a>c){\n            return\
    \ true;\n        }\n    }\n    if(b>c){\n        return true;\n    }\n    return\
    \ false;"]
stop_tokens:
- "\n}"

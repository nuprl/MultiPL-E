name: HumanEval_70_strange_sort_list
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given list of integers, return\
  \ list in strange order.\n// Strange sorting, is when you start with the minimum\
  \ value,\n// then maximum of the remaining integers, then minimum and so on.\n//\
  \ Examples:\n// >>> strange_sort_list((std::vector<long>({(long)1, (long)2, (long)3,\
  \ (long)4})))\n// (std::vector<long>({(long)1, (long)4, (long)2, (long)3}))\n//\
  \ >>> strange_sort_list((std::vector<long>({(long)5, (long)5, (long)5, (long)5})))\n\
  // (std::vector<long>({(long)5, (long)5, (long)5, (long)5}))\n// >>> strange_sort_list((std::vector<long>()))\n\
  // (std::vector<long>())\nstd::vector<long> strange_sort_list(std::vector<long>\
  \ lst) {\n"
tests: "}\nint main() {\n    auto candidate = strange_sort_list;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)4, (long)2,\
  \ (long)3})));\n    assert(candidate((std::vector<long>({(long)5, (long)6, (long)7,\
  \ (long)8, (long)9}))) == (std::vector<long>({(long)5, (long)9, (long)6, (long)8,\
  \ (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
  \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)5, (long)2, (long)4,\
  \ (long)3})));\n    assert(candidate((std::vector<long>({(long)5, (long)6, (long)7,\
  \ (long)8, (long)9, (long)1}))) == (std::vector<long>({(long)1, (long)9, (long)5,\
  \ (long)8, (long)6, (long)7})));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)5, (long)5, (long)5}))) == (std::vector<long>({(long)5, (long)5, (long)5,\
  \ (long)5})));\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
  \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5,\
  \ (long)6, (long)7, (long)8}))) == (std::vector<long>({(long)1, (long)8, (long)2,\
  \ (long)7, (long)3, (long)6, (long)4, (long)5})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)2, (long)2, (long)2, (long)5, (long)5, (long)-5, (long)-5}))) == (std::vector<long>({(long)-5,\
  \ (long)5, (long)-5, (long)5, (long)0, (long)2, (long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)111111})))\
  \ == (std::vector<long>({(long)111111})));\n}\n"
completions: ["    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        } else if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    for (long i : lst) {\n        if (i == min) {\n            result.push_back(min);\n\
    \        } else if (i == max) {\n            result.push_back(max);\n        }\
    \ else {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i == min) {\n            result.push_back(min);\n\
    \        } else if (i == max) {\n            result.push_back(max);\n        }\
    \ else {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> res;\n    long min = std::numeric_limits<long>::min();\n\
    \    long max = std::numeric_limits<long>::max();\n    for (long i : lst) {\n\
    \        if (i < min) min = i;\n        if (i > max) max = i;\n    }\n    for\
    \ (long i : lst) {\n        if (i < min) min = i;\n        if (i > max) max =\
    \ i;\n    }\n    for (long i : lst) {\n        if (i < min) min = i;\n       \
    \ if (i > max) max = i;\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ min = i;\n        if (i > max) max = i;\n    }\n    for (long i : lst) {\n \
    \       if (i < min) min = i;\n        if (i > max) max = i;\n    }\n    for (long\
    \ i : lst) {\n        if (i < min) min = i;\n        if (i > max) max = i;\n \
    \   }\n    for (long i : lst) {\n        if (i < min) min = i;\n        if (i\
    \ > max) max = i;\n    }\n    for (long i : lst) {\n        if (i < min) min =\
    \ i;\n        if (i > max) max = i;\n    }\n    for (long i : lst) {\n       \
    \ if (i < min) min = i;\n        if (i > max) max = i;\n    }\n    for (long i\
    \ : lst) {\n        if (i < min) min = i;\n        if (i > max) max = i;\n   \
    \ }\n    for (long i : lst) {\n        if (i < min) min = i;\n        if (i >\
    \ max) max = i;\n    }\n    for (long i : lst) {\n        if (i < min) min = i;\n\
    \        if (i > max) max = i;\n    }\n    for (long i : lst) {\n        if (i\
    \ < min) min = i;\n        if (i > max) max = i;\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) min = i;\n        if (i > max) max = i;\n    }\n   \
    \ for (long i : lst) {\n        if (i < min) min = i;\n        if (i > max) max\
    \ = i;\n    }\n    for (long i : lst) {\n        if (i < min) min = i;\n     \
    \   if (i > max) max = i;\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ min = i;\n        if (i > max) max = i;\n    }\n    for (long i : lst) {\n \
    \       if (i < min) min = i;\n        if (i > max) max = i;\n    }\n    for (long\
    \ i : lst) {\n        if (i < min) min = i;\n        if (i > max) max = i;\n \
    \   }\n    for (long i : lst) {\n        if (i < min) min = i;\n        if (i\
    \ > max) max = i;\n    }\n    for (long i : lst) {\n        if (i < min) min =\
    \ i;\n        if (i > max) max = i;\n    }", "    // Write your code here\n  \
    \  std::vector<long> res;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for(long i : lst)\n    {\n        if(i<min)\n        {\n            min=i;\n\
    \        }\n        if(i>max)\n        {\n            max=i;\n        }\n    }\n\
    \    long mid=(min+max)/2;\n    for(long i : lst)\n    {\n        if(i<mid)\n\
    \        {\n            res.push_back(min);\n            min=i;\n        }\n \
    \       if(i>mid)\n        {\n            res.push_back(max);\n            max=i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    return\
    \ res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n    for (long\
    \ i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    // Your code here\n    std::vector<long> lst2;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        } else if (i > max) {\n\
    \            max = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i < min) {\n            lst2.push_back(min);\n            min = i;\n      \
    \  } else if (i > max) {\n            lst2.push_back(max);\n            max =\
    \ i;\n        } else {\n            lst2.push_back(i);\n        }\n    }\n   \
    \ return lst2;", "    if (lst.size() == 0) {\n        return lst;\n    }\n   \
    \ std::vector<long> sorted_lst;\n    long min_val = lst[0];\n    long max_val\
    \ = lst[0];\n    for (long i : lst) {\n        if (i < min_val) {\n          \
    \  min_val = i;\n        }\n        if (i > max_val) {\n            max_val =\
    \ i;\n        }\n    }\n    long mid = min_val + max_val / 2;\n    long left_half\
    \ = min_val - mid;\n    long right_half = max_val - mid;\n    sorted_lst.push_back(mid);\n\
    \    sorted_lst.push_back(left_half);\n    sorted_lst.push_back(right_half);\n\
    \    sorted_lst.push_back(max_val);\n    sorted_lst.push_back(min_val);\n    return\
    \ sorted_lst;", "    std::vector<long> res;\n    long min = lst.front();\n   \
    \ long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        } else if (i > max) {\n            max = i;\n  \
    \      }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            res.push_back(i);\n        }\
    \ else if (i > max) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n    for (long\
    \ i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    // Your code goes here\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i == min) {\n            result.push_back(min);\n        } else if\
    \ (i == max) {\n            result.push_back(max);\n        } else {\n       \
    \     result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if (lst.size() == 0) {\n        return res;\n    }\n    long min =\
    \ lst[0];\n    long max = lst[0];\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        } else if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            result.push_back(min);\n            min\
    \ = i;\n        }\n        if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        }\n    }\n    if (min < max) {\n        result.push_back(min);\n\
    \        result.push_back(max);\n    }\n    return result;", "    std::vector<long>\
    \ lst2;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    long mid = min\
    \ + (max - min) / 2;\n    long mid2 = mid / 2;\n    long mid3 = mid * 2;\n   \
    \ long mid4 = mid * 3;\n    long mid5 = mid * 4;\n    long mid6 = mid * 5;\n \
    \   long mid7 = mid * 6;\n    long mid8 = mid * 7;\n    long mid9 = mid * 8;\n\
    \    long mid10 = mid * 9;\n    long mid11 = mid * 10;\n    long mid12 = mid *\
    \ 11;\n    long mid13 = mid * 12;\n    long mid14 = mid * 13;\n    long mid15\
    \ = mid * 14;\n    long mid16 = mid * 15;\n    long mid17 = mid * 16;\n    long\
    \ mid18 = mid * 17;\n    long mid19 = mid * 18;\n    long mid20 = mid * 19;\n\
    \    long mid21 = mid * 20;\n    long mid22 = mid * 21;\n    long mid23 = mid\
    \ * 22;\n    long mid24 = mid * 23;\n    long mid25 = mid * 24;\n    long mid26\
    \ = mid * 25;\n    long mid27 = mid * 26;\n    long mid28 = mid * 27;\n    long\
    \ mid29 = mid * 28;\n    long mid30 = mid * 29;\n    long mid31 = mid * 30;\n\
    \    long mid32 = mid * 31;\n    long mid33 = mid * 32;\n    long mid34 = mid\
    \ * 33;\n    long mid35 = mid * 34;\n    long mid36 = mid * 35;\n    long mid37\
    \ = mid * 36;\n    long mid38 = mid * 37;\n    long mid39 = mid * 38;\n    long\
    \ mid40 = mid * 39;\n    long mid41 = mid * 40;\n    long mid42 = mid * 41;\n\
    \    long mid43 = mid * 42;\n    long mid44 = mid * 43;\n    long mid45 = mid\
    \ * 44;\n    long mid46 = mid * 45;\n    long mid47 = mid * 46;\n", "    std::vector<long>\
    \ lst2;\n    long minval = lst[0];\n    long maxval = lst[0];\n    for (long i\
    \ : lst) {\n        if (i < minval) minval = i;\n        if (i > maxval) maxval\
    \ = i;\n    }\n    long midval = (minval + maxval) / 2;\n    long midval2 = midval;\n\
    \    long midval3 = midval;\n    long midval4 = midval;\n    long midval5 = midval;\n\
    \    long midval6 = midval;\n    long midval7 = midval;\n    long midval8 = midval;\n\
    \    long midval9 = midval;\n    long midval10 = midval;\n    long midval11 =\
    \ midval;\n    long midval12 = midval;\n    long midval13 = midval;\n    long\
    \ midval14 = midval;\n    long midval15 = midval;\n    long midval16 = midval;\n\
    \    long midval17 = midval;\n    long midval18 = midval;\n    long midval19 =\
    \ midval;\n    long midval20 = midval;\n    long midval21 = midval;\n    long\
    \ midval22 = midval;\n    long midval23 = midval;\n    long midval24 = midval;\n\
    \    long midval25 = midval;\n    long midval26 = midval;\n    long midval27 =\
    \ midval;\n    long midval28 = midval;\n    long midval29 = midval;\n    long\
    \ midval30 = midval;\n    long midval31 = midval;\n    long midval32 = midval;\n\
    \    long midval33 = midval;\n    long midval34 = midval;\n    long midval35 =\
    \ midval;\n    long midval36 = midval;\n    long midval37 = midval;\n    long\
    \ midval38 = midval;\n    long midval39 = midval;\n    long midval40 = midval;\n\
    \    long midval41 = midval;\n    long midval42 = midval;\n    long midval43 =\
    \ midval;\n    long midval44 = midval;\n    long midval45 = midval;\n    long\
    \ midval46 = midval;\n    long midval47 = midval;\n    long midval48 = midval;\n\
    \    long midval49 = midval;\n    long midval50 = midval;\n    long midval51 =\
    \ midval;\n    long midval52 = midval;\n    long mid", "    if (lst.size() ==\
    \ 0) {\n        return lst;\n    }\n    std::vector<long> res;\n    long min =\
    \ lst[0];\n    long max = lst[0];\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n        if (i > max) {\n            max\
    \ = i;\n        }\n    }\n    long mid = min + (max - min) / 2;\n    res.push_back(min);\n\
    \    res.push_back(mid);\n    res.push_back(max);\n    return res;", "    // Write\
    \ your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    long mid;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        mid = (min + max) / 2;\n        if (lst[i] < mid) {\n      \
    \      min = mid;\n        } else {\n            max = mid;\n        }\n    }\n\
    \    result.push_back(min);\n    result.push_back(max);\n    for (long i = 2;\
    \ i < lst.size(); i++) {\n        mid = (min + max) / 2;\n        if (lst[i] <\
    \ mid) {\n            min = mid;\n        } else {\n            max = mid;\n \
    \       }\n        result.push_back(mid);\n    }\n    result.push_back(max);\n\
    \    return result;", "    // Your code here\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i == min) {\n            result.push_back(min);\n        } else if\
    \ (i == max) {\n            result.push_back(max);\n        } else {\n       \
    \     result.push_back(i);\n        }\n    }\n    return result;", "    // Your\
    \ code here\n    std::vector<long> res;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for(long i : lst) {\n        if(i<min) {\n          \
    \  min = i;\n        }\n        if(i>max) {\n            max = i;\n        }\n\
    \    }\n    for(long i : lst) {\n        if(i<min) {\n            res.push_back(min);\n\
    \            min = i;\n        }\n        if(i>max) {\n            res.push_back(max);\n\
    \            max = i;\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    return res;", "    // Write your code here.\n    std::vector<long> lst2;\n\
    \    for(long i=0;i<lst.size();i++){\n        for(long j=i+1;j<lst.size();j++){\n\
    \            if(lst[i]<lst[j]){\n                long temp=lst[i];\n         \
    \       lst[i]=lst[j];\n                lst[j]=temp;\n            }\n        }\n\
    \    }\n    return lst2;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (auto i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    if (lst.size()\
    \ == 0) {\n        return res;\n    }\n    long min = lst[0];\n    long max =\
    \ lst[0];\n    for (long i : lst) {\n        if (i < min) {\n            min =\
    \ i;\n        }\n        if (i > max) {\n            max = i;\n        }\n   \
    \ }\n    res.push_back(min);\n    res.push_back(max);\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n  \
    \  res.push_back(max);\n    return res;", "    if (lst.size() == 0) {\n      \
    \  return lst;\n    }\n    std::vector<long> sorted_lst;\n    long min_val = lst[0];\n\
    \    long max_val = lst[0];\n    for (long i : lst) {\n        if (i < min_val)\
    \ {\n            min_val = i;\n        }\n        if (i > max_val) {\n       \
    \     max_val = i;\n        }\n    }\n    long mid = (min_val + max_val) / 2;\n\
    \    sorted_lst.push_back(min_val);\n    sorted_lst.push_back(mid);\n    sorted_lst.push_back(max_val);\n\
    \    return strange_sort_list(sorted_lst);", "    if (lst.size() == 0) {\n   \
    \     return lst;\n    }\n    std::vector<long> res;\n    long min = lst[0];\n\
    \    long max = lst[0];\n    for (long i : lst) {\n        if (i < min) {\n  \
    \          min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> res;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    for (long i : lst) {\n        if (i < min) {\n            i = min;\n    \
    \    }\n        if (i > max) {\n            i = max;\n        }\n        res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> lst2;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        } else if (i > max) {\n            max = i;\n \
    \       }\n    }\n    for (long i = min; i <= max; i++) {\n        lst2.push_back(i);\n\
    \    }\n    return lst2;", "    // Your code here\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            result.push_back(min);\n            min =\
    \ i;\n        }\n        if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        }\n    }\n    if (min < max) {\n        result.push_back(min);\n\
    \        result.push_back(max);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i == min) {\n            result.push_back(min);\n        } else\
    \ if (i == max) {\n            result.push_back(max);\n        } else {\n    \
    \        result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    for (long i = min;\
    \ i <= max; i++) {\n        result.push_back(i);\n    }\n    return result;",
  "    std::vector<long> res;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    return\
    \ res;", "    // Your code here\n    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> result;\n    long minval\
    \ = lst.front();\n    long maxval = lst.back();\n    for (long i : lst) {\n  \
    \      if (i < minval) {\n            result.push_back(minval);\n            minval\
    \ = i;\n        } else if (i > maxval) {\n            result.push_back(maxval);\n\
    \            maxval = i;\n        } else {\n            result.push_back(i);\n\
    \        }\n    }\n    if (minval != maxval) {\n        result.push_back(minval);\n\
    \        result.push_back(maxval);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if (lst.size() == 0) {\n        return res;\n    }\n    long min_val\
    \ = lst[0];\n    long max_val = lst[0];\n    for (long i : lst) {\n        if\
    \ (i < min_val) {\n            min_val = i;\n        }\n        if (i > max_val)\
    \ {\n            max_val = i;\n        }\n    }\n    res.push_back(min_val);\n\
    \    res.push_back(max_val);\n    for (long i : lst) {\n        if (i < min_val)\
    \ {\n            res.push_back(i);\n        }\n        if (i > max_val) {\n  \
    \          res.push_back(i);\n        }\n    }\n    return res;", "    if (lst.size()\
    \ == 0) {\n        return lst;\n    }\n    std::vector<long> res;\n    long min\
    \ = lst[0];\n    long max = lst[0];\n    for (long i : lst) {\n        if (i <\
    \ min) {\n            min = i;\n        }\n        if (i > max) {\n          \
    \  max = i;\n        }\n    }\n    long mid = min + (max - min) / 2;\n    res.push_back(mid);\n\
    \    long left = min;\n    long right = max;\n    while (left < right) {\n   \
    \     long mid = (left + right) / 2;\n        if (mid == mid) {\n            mid\
    \ = lst[mid];\n        }\n        if (mid < mid) {\n            left = mid;\n\
    \        } else {\n            right = mid;\n        }\n        res.push_back(mid);\n\
    \    }\n    return res;", "    // Your code here\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            result.push_back(min);\n            min =\
    \ i;\n        }\n        if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        }\n    }\n    if (min != max) {\n        result.push_back(min);\n\
    \        result.push_back(max);\n    }\n    return result;", "    // Your code\
    \ here\n    std::vector<long> res;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n          \
    \  min = i;\n        }\n        if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    for (long i : lst) {\n        if (i == min) {\n            res.push_back(min);\n\
    \        } else if (i == max) {\n            res.push_back(max);\n        } else\
    \ {\n            res.push_back(i);\n        }\n    }\n    return res;", "    //\
    \ Your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        } else if (i > max) {\n            max = i;\n \
    \       }\n    }\n    long mid = min + (max - min) / 2;\n    for (long i : lst)\
    \ {\n        if (i < mid) {\n            result.push_back(i);\n        } else\
    \ if (i > mid) {\n            result.push_back(max - i);\n        } else {\n \
    \           result.push_back(mid);\n        }\n    }\n    return result;", " \
    \   std::vector<long> res;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    return\
    \ res;", "    // Your code here\n    std::vector<long> result;\n    long min =\
    \ lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n       \
    \ if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n  \
    \          max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ < min) {\n            result.push_back(min);\n            min = i;\n       \
    \ }\n        if (i > max) {\n            result.push_back(max);\n            max\
    \ = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n \
    \           result.push_back(min);\n            min = i;\n        }\n        if\
    \ (i > max) {\n            result.push_back(max);\n            max = i;\n    \
    \    }\n    }\n    for (long i : lst) {\n        if (i < min) {\n            result.push_back(min);\n\
    \            min = i;\n        }\n        if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i < min) {\n            result.push_back(min);\n            min = i;\n    \
    \    }\n        if (i > max) {\n            result.push_back(max);\n         \
    \   max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            result.push_back(min);\n            min = i;\n        }\n   \
    \     if (i > max) {\n            result.push_back(max);\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    result.push_back(min);\n            min = i;\n        }\n        if (i >\
    \ max) {\n            result.push_back(max);\n            max = i;\n        }\n\
    \    }\n    for (long i : lst) {\n        if (i < min) {\n            result.push_back(min);\n\
    \            min = i;\n        }\n        if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i < min) {\n            result.push_back(min);\n            min = i;\n    \
    \    }\n        if (i > max) {\n            result.push_back(max);\n         \
    \   max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            result.push_back(min);\n            min = i;\n        }\n   \
    \     if (i > max) {\n            result.push_back(max);\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    result.push_back(min);\n            min = i;\n        }\n        if (i >\
    \ max) {\n            result.push_back(max);\n            max = i;\n        }\n\
    \    }\n    for (long i : lst) {\n        if (i < min) {\n            result.push_back(min);\n\
    \            min = i;\n        }\n        if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        }\n    }\n    for (long i ", "    // Write your\
    \ code here\n    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        }\n        if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    long mid = min + (max - min) / 2;\n    long temp;\n    for\
    \ (long i : lst) {\n        if (i == mid) {\n            temp = mid;\n       \
    \     mid = min + (max - min) / 2;\n            min = temp;\n            max =\
    \ temp;\n        }\n        else if (i < mid) {\n            temp = mid;\n   \
    \         mid = i;\n            min = temp;\n            max = temp;\n       \
    \ }\n        else if (i > mid) {\n            temp = mid;\n            mid = i;\n\
    \            min = temp;\n            max = temp;\n        }\n    }\n    result.push_back(mid);\n\
    \    result.push_back(max);\n    result.push_back(min);\n    return result;",
  "    std::vector<long> res;\n    res.reserve(lst.size());\n    for (long i : lst)\
    \ {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (auto i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> result;\n    long minval\
    \ = std::numeric_limits<long>::max();\n    long maxval = std::numeric_limits<long>::min();\n\
    \    for (auto i : lst) {\n        minval = std::min(minval, i);\n        maxval\
    \ = std::max(maxval, i);\n    }\n    for (auto i : lst) {\n        result.push_back(minval);\n\
    \        result.push_back(maxval);\n        result.push_back(i);\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        } else if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long i\
    \ : lst) {\n        if (i < min) {\n            min = i;\n        } else if (i\
    \ > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long minValue = lst.front();\n    long maxValue = lst.back();\n\
    \    for (long i : lst) {\n        if (i < minValue) {\n            result.push_back(minValue);\n\
    \            minValue = i;\n        } else if (i > maxValue) {\n            result.push_back(maxValue);\n\
    \            maxValue = i;\n        } else {\n            result.push_back(i);\n\
    \        }\n    }\n    if (minValue != maxValue) {\n        result.push_back(minValue);\n\
    \        result.push_back(maxValue);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long min = lst[0];\n    long max = lst[0];\n    for (auto i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        } else if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    long mid = min + (max - min)\
    \ / 2;\n    for (auto i : lst) {\n        if (i < mid) {\n            res.push_back(i);\n\
    \        } else if (i > mid) {\n            res.push_back(mid);\n            mid\
    \ = i;\n        } else {\n            res.push_back(i);\n        }\n    }\n  \
    \  return res;", "    std::vector<long> res;\n    if (lst.size() == 0) {\n   \
    \     return res;\n    }\n    long min = lst[0];\n    long max = lst[0];\n   \
    \ for (long i : lst) {\n        if (i < min) {\n            min = i;\n       \
    \ }\n        if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i > max) {\n \
    \           long temp = max;\n            max = i;\n            res.push_back(temp);\n\
    \        }\n        if (i < min) {\n            long temp = min;\n           \
    \ min = i;\n            res.push_back(temp);\n        }\n    }\n    return res;",
  "    std::vector<long> result;\n    long min_val = std::numeric_limits<long>::max();\n\
    \    long max_val = std::numeric_limits<long>::min();\n    for (auto i : lst)\
    \ {\n        min_val = std::min(min_val, i);\n        max_val = std::max(max_val,\
    \ i);\n    }\n    for (auto i : lst) {\n        if (min_val == max_val) {\n  \
    \          result.push_back(i);\n        } else {\n            result.push_back(min_val);\n\
    \            result.push_back(i);\n            result.push_back(max_val);\n  \
    \      }\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    long mid = min\
    \ + (max - min) / 2;\n    long left = min;\n    long right = max;\n    while (left\
    \ < right) {\n        while (left < right && lst[left] < mid) {\n            left++;\n\
    \        }\n        while (left < right && lst[right] > mid) {\n            right--;\n\
    \        }\n        if (left < right) {\n            result.push_back(lst[left]);\n\
    \            left++;\n            right--;\n        }\n    }\n    return result;",
  "    std::vector<long> res;\n    res.reserve(lst.size());\n    for (long i : lst)\
    \ {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            result.push_back(min);\n            min\
    \ = i;\n        } else if (i > max) {\n            result.push_back(max);\n  \
    \          max = i;\n        } else {\n            result.push_back(i);\n    \
    \    }\n    }\n    for (long i : result) {\n        if (i < min) {\n         \
    \   result.push_back(min);\n        } else if (i > max) {\n            result.push_back(max);\n\
    \        }\n    }\n    return result;", "    if (lst.size() == 0) {\n        return\
    \ lst;\n    }\n    std::vector<long> sorted_lst;\n    long min_val = lst[0];\n\
    \    long max_val = lst[0];\n    for (long i : lst) {\n        if (i < min_val)\
    \ {\n            min_val = i;\n        }\n        if (i > max_val) {\n       \
    \     max_val = i;\n        }\n    }\n    long min_val_pos = 0;\n    long max_val_pos\
    \ = 0;\n    for (long i : lst) {\n        if (i == min_val) {\n            sorted_lst.push_back(min_val);\n\
    \            min_val_pos = sorted_lst.size() - 1;\n        } else if (i == max_val)\
    \ {\n            sorted_lst.push_back(max_val);\n            max_val_pos = sorted_lst.size()\
    \ - 1;\n        } else {\n            sorted_lst.push_back(i);\n        }\n  \
    \  }\n    sorted_lst.insert(sorted_lst.begin() + min_val_pos, max_val);\n    sorted_lst.insert(sorted_lst.begin()\
    \ + max_val_pos, min_val);\n    return sorted_lst;", "    std::vector<long> res;\n\
    \    if (lst.size() == 0) {\n        return res;\n    }\n    long min = lst[0];\n\
    \    long max = lst[0];\n    for (long i : lst) {\n        if (i < min) {\n  \
    \          min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    long mid = min + (max - min) / 2;\n    res.push_back(min);\n\
    \    res.push_back(mid);\n    res.push_back(max);\n    return res;", "    // Your\
    \ code goes here\n    std::vector<long> res;\n    long min = lst.front();\n  \
    \  long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            res.push_back(min);\n      \
    \  }\n        if (i > max) {\n            res.push_back(max);\n        }\n   \
    \ }\n    return res;", "    // Your code goes here\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    long mid = max/2;\n\
    \    for(long i = min; i <= max; i++) {\n        for(long j = mid; j >= i; j--)\
    \ {\n            if(lst.at(j) < i) {\n                result.push_back(lst.at(j));\n\
    \                lst.at(j) = lst.at(i);\n                lst.at(i) = i;\n    \
    \        }\n        }\n    }\n    return result;", "    std::vector<long> res;\n\
    \    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            result.push_back(min);\n            min\
    \ = i;\n        } else if (i > max) {\n            result.push_back(max);\n  \
    \          max = i;\n        } else {\n            result.push_back(i);\n    \
    \    }\n    }\n    return result;", "    std::vector<long> result;\n    long min\
    \ = std::numeric_limits<long>::min();\n    long max = std::numeric_limits<long>::max();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i = min; i <= max; i++) {\n        result.push_back(i);\n    }\n    for\
    \ (long i = max; i >= min; i--) {\n        result.push_back(i);\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        } else if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long i\
    \ : lst) {\n        if (i < min) {\n            res.push_back(i);\n        } else\
    \ if (i > max) {\n            res.push_back(max);\n        }\n    }\n    return\
    \ res;", "    // Write your code here\n    std::vector<long> result;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            result.push_back(min);\n            min = i;\n\
    \        }\n        if (i > max) {\n            result.push_back(max);\n     \
    \       max = i;\n        }\n    }\n    if (min != max) {\n        result.push_back(min);\n\
    \        result.push_back(max);\n    }\n    return result;", "    // Your code\
    \ here\n    std::vector<long> res;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    long mid;\n    for (long i = 0; i < lst.size(); i++) {\n\
    \        mid = (min + max) / 2;\n        if (lst[i] < mid) {\n            min\
    \ = mid;\n        } else {\n            max = mid;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i = 2; i < lst.size(); i++) {\n      \
    \  mid = (min + max) / 2;\n        if (lst[i] < mid) {\n            min = mid;\n\
    \        } else {\n            max = mid;\n        }\n        res.push_back(min);\n\
    \        res.push_back(max);\n    }\n    return res;", "    if (lst.size() ==\
    \ 0) {\n        return lst;\n    }\n    std::vector<long> res;\n    long min =\
    \ lst[0];\n    long max = lst[0];\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        } else if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            res.push_back(i);\n        }\
    \ else if (i > max) {\n            res.push_back(max);\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    long mid;\n    for (long\
    \ i = lst.size() - 1; i >= 0; i--) {\n        mid = (min + max) / 2;\n       \
    \ if (mid > lst[i]) {\n            max = mid;\n        } else {\n            min\
    \ = mid;\n        }\n    }\n    result.push_back(min);\n    result.push_back(max);\n\
    \    result.push_back(lst.front());\n    return result;", "    std::vector<long>\
    \ res;\n    if (lst.size() == 0) {\n        return res;\n    }\n    long min =\
    \ lst[0];\n    long max = lst[0];\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n        if (i > max) {\n            max\
    \ = i;\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n \
    \   for (long i : lst) {\n        if (i == max) {\n            res.push_back(min);\n\
    \        } else if (i == min) {\n            res.push_back(max);\n        } else\
    \ {\n            res.push_back(i);\n        }\n    }\n    return res;", "    //\
    \ Write your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    long mid;\n    for(long i = 1; i < lst.size();\
    \ i++) {\n        mid = (min + max) / 2;\n        if(lst[i] < mid) {\n       \
    \     min = mid;\n        } else {\n            max = mid;\n        }\n    }\n\
    \    result.push_back(min);\n    result.push_back(max);\n    result.push_back(lst.front());\n\
    \    return result;", "    std::vector<long> result;\n    long min_val = *std::min_element(lst.begin(),\
    \ lst.end());\n    long max_val = *std::max_element(lst.begin(), lst.end());\n\
    \    long mid = min_val + max_val / 2;\n    long mid2 = mid / 2;\n    long mid3\
    \ = mid2 / 2;\n    long mid4 = mid3 / 2;\n    long mid5 = mid4 / 2;\n    long\
    \ mid6 = mid5 / 2;\n    long mid7 = mid6 / 2;\n    long mid8 = mid7 / 2;\n   \
    \ long mid9 = mid8 / 2;\n    long mid10 = mid9 / 2;\n    long mid11 = mid10 /\
    \ 2;\n    long mid12 = mid11 / 2;\n    long mid13 = mid12 / 2;\n    long mid14\
    \ = mid13 / 2;\n    long mid15 = mid14 / 2;\n    long mid16 = mid15 / 2;\n   \
    \ long mid17 = mid16 / 2;\n    long mid18 = mid17 / 2;\n    long mid19 = mid18\
    \ / 2;\n    long mid20 = mid19 / 2;\n    long mid21 = mid20 / 2;\n    long mid22\
    \ = mid21 / 2;\n    long mid23 = mid22 / 2;\n    long mid24 = mid23 / 2;\n   \
    \ long mid25 = mid24 / 2;\n    long mid26 = mid25 / 2;\n    long mid27 = mid26\
    \ / 2;\n    long mid28 = mid27 / 2;\n    long mid29 = mid28 / 2;\n    long mid30\
    \ = mid29 / 2;\n    long mid31 = mid30 / 2;\n    long mid32 = mid31 / 2;\n   \
    \ long mid33 = mid32 / 2;\n    long mid34 = mid33 / 2;\n    long mid35 = mid34\
    \ / 2;\n    long mid36 = mid35 / 2;\n    long mid37 = mid36 / 2;\n    long mid38\
    \ = mid37 / 2;\n    long mid39 = mid38 / 2;\n    long mid40 = mid39 / 2;\n   \
    \ long mid41 = mid40 / 2;\n    long mid42 = mid41 / 2;\n    long mid43 = mid42\
    \ / 2;\n    long mid44 = mid43 / 2;\n    long mid45 = mid44 / 2;\n    long mid46\
    \ = mid45 / 2;\n    long mid47 = mid46 / 2;\n    long mid48 = mid47 / 2;\n    ",
  "    std::vector<long> res;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    } else if (i > max) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            res.push_back(min);\n      \
    \      min = i;\n        } else if (i > max) {\n            res.push_back(max);\n\
    \            max = i;\n        } else {\n            res.push_back(i);\n     \
    \   }\n    }\n    return res;", "    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i == min) {\n            res.push_back(i);\n       \
    \ }\n        if (i == max) {\n            res.push_back(i);\n        }\n    }\n\
    \    return res;", "    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i = min; i <= max; i++) {\n        res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> lst2;\n    long min = lst[0];\n\
    \    long max = lst[0];\n    for (long i : lst) {\n        if (i < min) min =\
    \ i;\n        if (i > max) max = i;\n    }\n    long mid = min + (max - min) /\
    \ 2;\n    long mid2 = mid + (max - min) / 2;\n    long mid3 = mid + (max - min)\
    \ / 2;\n    long mid4 = mid + (max - min) / 2;\n    long mid5 = mid + (max - min)\
    \ / 2;\n    long mid6 = mid + (max - min) / 2;\n    long mid7 = mid + (max - min)\
    \ / 2;\n    long mid8 = mid + (max - min) / 2;\n    long mid9 = mid + (max - min)\
    \ / 2;\n    long mid10 = mid + (max - min) / 2;\n    long mid11 = mid + (max -\
    \ min) / 2;\n    long mid12 = mid + (max - min) / 2;\n    long mid13 = mid + (max\
    \ - min) / 2;\n    long mid14 = mid + (max - min) / 2;\n    long mid15 = mid +\
    \ (max - min) / 2;\n    long mid16 = mid + (max - min) / 2;\n    long mid17 =\
    \ mid + (max - min) / 2;\n    long mid18 = mid + (max - min) / 2;\n    long mid19\
    \ = mid + (max - min) / 2;\n    long mid20 = mid + (max - min) / 2;\n    long\
    \ mid21 = mid + (max - min) / 2;\n    long mid22 = mid + (max - min) / 2;\n  \
    \  long mid23 = mid + (max - min) / 2;\n    long mid24 = mid + (max - min) / 2;\n\
    \    long mid25 = mid + (max - min) / 2;\n    long mid26 = mid + (max - min) /\
    \ 2;\n    long mid27 = mid + (max - min) / 2;\n    long mid28 = mid + (max - min)\
    \ / 2;\n    long mid29 = mid + (max - min) / 2;\n    long mid30 = mid + (max -\
    \ min) / 2;\n    long mid31 = mid + (max - min) / 2;\n    long mid32 = mid + (max\
    \ - min) / 2;\n    long mid33 = mid + (max - min) / 2;\n    long mid34 = mid +\
    \ (max - min) / 2;\n    long mid35 = mid + (max - min) / 2;\n    long mid36 =\
    \ mid + (max - min) / 2;\n    long mid37 = mid + (max - min) / 2;\n    long mid38\
    \ = mid + (max - min) / 2;\n    long mid39 = mid + (max - min) / 2;\n    ", " \
    \   std::vector<long> res;\n    res.reserve(lst.size());\n    for (auto i : lst)\
    \ {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> sorted_lst;\n    long\
    \ min_val = *std::min_element(lst.begin(), lst.end());\n    long max_val = *std::max_element(lst.begin(),\
    \ lst.end());\n    for (long i = min_val; i <= max_val; i++) {\n        sorted_lst.push_back(i);\n\
    \    }\n    return sorted_lst;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> result;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        long min_value = lst[i];\n        long\
    \ max_value = lst[i];\n        for (long j = i + 1; j < lst.size(); j++) {\n \
    \           if (lst[j] < min_value) {\n                min_value = lst[j];\n \
    \           }\n            if (lst[j] > max_value) {\n                max_value\
    \ = lst[j];\n            }\n        }\n        result.push_back(min_value);\n\
    \        result.push_back(max_value);\n    }\n    return result;", "    std::vector<long>\
    \ lst2;\n    long minval = *std::min_element(lst.begin(), lst.end());\n    long\
    \ maxval = *std::max_element(lst.begin(), lst.end());\n    long midval = minval\
    \ + maxval / 2;\n    long midval2 = minval + maxval / 2;\n    long midval3 = minval\
    \ + maxval / 2;\n    long midval4 = minval + maxval / 2;\n    long midval5 = minval\
    \ + maxval / 2;\n    long midval6 = minval + maxval / 2;\n    long midval7 = minval\
    \ + maxval / 2;\n    long midval8 = minval + maxval / 2;\n    long midval9 = minval\
    \ + maxval / 2;\n    long midval10 = minval + maxval / 2;\n    long midval11 =\
    \ minval + maxval / 2;\n    long midval12 = minval + maxval / 2;\n    long midval13\
    \ = minval + maxval / 2;\n    long midval14 = minval + maxval / 2;\n    long midval15\
    \ = minval + maxval / 2;\n    long midval16 = minval + maxval / 2;\n    long midval17\
    \ = minval + maxval / 2;\n    long midval18 = minval + maxval / 2;\n    long midval19\
    \ = minval + maxval / 2;\n    long midval20 = minval + maxval / 2;\n    long midval21\
    \ = minval + maxval / 2;\n    long midval22 = minval + maxval / 2;\n    long midval23\
    \ = minval + maxval / 2;\n    long midval24 = minval + maxval / 2;\n    long midval25\
    \ = minval + maxval / 2;\n    long midval26 = minval + maxval / 2;\n    long midval27\
    \ = minval + maxval / 2;\n    long midval28 = minval + maxval / 2;\n    long midval29\
    \ = minval + maxval / 2;\n    long midval30 = minval + maxval / 2;\n    long midval31\
    \ = minval + maxval / 2;\n    long midval32 = minval + maxval / 2;\n    long midval33\
    \ = minval + maxval / 2;\n    long midval34 = minval + maxval / 2;\n    long midval35\
    \ = minval", "    std::vector<long> result;\n    long min = std::numeric_limits<long>::min();\n\
    \    long max = std::numeric_limits<long>::max();\n    for (auto i : lst) {\n\
    \        if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (auto i : lst) {\n      \
    \  if (i < min) {\n            result.push_back(min);\n            min = i;\n\
    \        } else if (i > max) {\n            result.push_back(max);\n         \
    \   max = i;\n        } else {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    // Your code goes here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n", "    // Your code here\n    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           res.push_back(i);\n        }\n        if (i > max) {\n           \
    \ res.push_back(i);\n        }\n    }\n    return res;", "    // Write your code\
    \ here\n    std::vector<long> temp;\n    long minval = lst[0];\n    long maxval\
    \ = lst[0];\n    for (long i : lst) {\n        if (i < minval) {\n           \
    \ minval = i;\n        }\n        if (i > maxval) {\n            maxval = i;\n\
    \        }\n    }\n    long midval = minval;\n    long tempval = maxval;\n   \
    \ while (tempval != minval) {\n        temp.push_back(tempval);\n        tempval\
    \ += midval;\n    }\n    temp.push_back(tempval);\n    temp.push_back(minval);\n\
    \    return temp;", "    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        } else if (i > max) {\n            max = i;\n \
    \       }\n    }\n    for (long i = min; i <= max; i++) {\n        res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    if (lst.size() == 0)\
    \ {\n        return res;\n    }\n    long min = lst[0];\n    for (long i = 1,\
    \ j = 0; i < lst.size(); i++) {\n        if (lst[i] < min) {\n            min\
    \ = lst[i];\n        }\n    }\n    long max = lst[0];\n    for (long i = 1, j\
    \ = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            max =\
    \ lst[i];\n        }\n    }\n    for (long i = 1, j = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] < min) {\n            min = lst[i];\n        }\n     \
    \   if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (long i = 1, j = 0; i < lst.size(); i++) {\n        if (lst[i] < min) {\n  \
    \          min = lst[i];\n        }\n        if (lst[i] > max) {\n           \
    \ max = lst[i];\n        }\n    }\n    for (long i = 1, j = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] < min) {\n            min = lst[i];\n        }\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (long i = 1, j = 0; i < lst.size(); i++) {\n        if (lst[i] < min) {\n\
    \            min = lst[i];\n        }\n        if (lst[i] > max) {\n         \
    \   max = lst[i];\n        }\n    }\n    for (long i = 1, j = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] < min) {\n            min = lst[i];\n        }\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (long i = 1, j = 0; i < lst.size(); i++) {\n        if (lst[i] < min) {\n\
    \            min = lst[i];\n        }\n        if (lst[i] > max) {\n         \
    \   max = lst[i];\n        }\n    }\n    for (long i = 1, j = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] < min) {\n            min = lst[i];\n        }\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (long i = 1, j = 0; i < lst.size(); i++) {\n        if (lst[i] < min) {\n\
    \            min = lst[i];\n        }\n        if (lst[i] > max) {\n         \
    \   max = lst[i];\n        }\n    }\n    for (long i = 1, j = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] < min) {\n            min = lst[i];\n        }\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (long i = 1, j = 0; i < lst.size(); i++) {\n        if (lst[i] < min) {\n\
    \            min = lst[i];\n        }\n        if (lst[i] > max) {\n         \
    \   max = lst[i];\n        }\n    }\n    for (long i = 1, j = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] < min) {\n", "    std::vector<long> lst2;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i = min; i <= max;\
    \ i++) {\n        lst2.push_back(i);\n    }\n    for (long i = max; i >= min;\
    \ i--) {\n        lst2.push_back(i);\n    }\n    return lst2;", "    // Write\
    \ your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    // Your code here\n    std::vector<long> result;\n    long min\
    \ = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n     \
    \   if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i == min) {\n            result.push_back(min);\n        } else if (i == max)\
    \ {\n            result.push_back(max);\n        } else {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long minval = lst.front();\n    long maxval = lst.back();\n   \
    \ long midval = (minval + maxval) / 2;\n    long midpos = 0;\n    for (long i\
    \ = 0; i < lst.size(); i++) {\n        if (lst[i] < minval) {\n            result.push_back(minval);\n\
    \            minval = lst[i];\n        } else if (lst[i] > maxval) {\n       \
    \     result.push_back(maxval);\n            maxval = lst[i];\n        } else\
    \ {\n            if (lst[i] < midval) {\n                result.push_back(midval);\n\
    \                midval = lst[i];\n                midpos = i;\n            }\
    \ else {\n                result.push_back(lst[i]);\n            }\n        }\n\
    \    }\n    if (minval != maxval) {\n        result.push_back(minval);\n     \
    \   result.push_back(maxval);\n    }\n    if (minval != midval) {\n        result.push_back(midval);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n \
    \           max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ < min) {\n            min = i;\n        }\n        if (i > max) {\n        \
    \    max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n        if (i > max) {\n            max\
    \ = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    min = i;\n        }\n        if (i > max) {\n            max = i;\n     \
    \   }\n    }\n    for (long i : lst) {\n        if (i < min) {\n            min\
    \ = i;\n        }\n        if (i > max) {\n            max = i;\n        }\n \
    \   }\n    for (long i : lst) {\n        if (i < min) {\n            min = i;\n\
    \        }\n        if (i > max) {\n            max = i;\n        }\n    }\n \
    \   for (long i : lst) {\n        if (i < min) {\n            min = i;\n     \
    \   }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            min = i;\n        }\n\
    \        if (i > max) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            min = i;\n        }\n        if (i > ", "    if\
    \ (lst.size() == 0) {\n        return lst;\n    }\n    std::vector<long> res;\n\
    \    long min = lst[0];\n    long max = lst[0];\n    for (long i : lst) {\n  \
    \      if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    long min = lst[0];\n\
    \    long max = lst[0];\n    for (long i : lst) {\n        if (i < min) {\n  \
    \          min = i;\n        } else if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    long mid = min + (max - min) / 2;\n    long mid2 = mid + (max\
    \ - min) / 2;\n    long mid3 = mid2 + (max - min) / 2;\n    long mid4 = mid3 +\
    \ (max - min) / 2;\n    long mid5 = mid4 + (max - min) / 2;\n    long mid6 = mid5\
    \ + (max - min) / 2;\n    long mid7 = mid6 + (max - min) / 2;\n    long mid8 =\
    \ mid7 + (max - min) / 2;\n    long mid9 = mid8 + (max - min) / 2;\n    long mid10\
    \ = mid9 + (max - min) / 2;\n    long mid11 = mid10 + (max - min) / 2;\n    long\
    \ mid12 = mid11 + (max - min) / 2;\n    long mid13 = mid12 + (max - min) / 2;\n\
    \    long mid14 = mid13 + (max - min) / 2;\n    long mid15 = mid14 + (max - min)\
    \ / 2;\n    long mid16 = mid15 + (max - min) / 2;\n    long mid17 = mid16 + (max\
    \ - min) / 2;\n    long mid18 = mid17 + (max - min) / 2;\n    long mid19 = mid18\
    \ + (max - min) / 2;\n    long mid20 = mid19 + (max - min) / 2;\n    long mid21\
    \ = mid20 + (max - min) / 2;\n    long mid22 = mid21 + (max - min) / 2;\n    long\
    \ mid23 = mid22 + (max - min) / 2;\n    long mid24 = mid23 + (max - min) / 2;\n\
    \    long mid25 = mid24 + (max - min) / 2;\n    long mid26 = mid25 + (max - min)\
    \ / 2;\n    long mid27 = mid26 + (max - min) / 2;\n    long mid28 = mid27 + (max\
    \ - min) / 2;\n    long mid29 = mid28 + (max - min) / 2;\n    long mid30 = mid29\
    \ + (max - min) / 2;\n    long mid31 = mid30 + (max - min) / 2;\n    long mid32\
    \ = mid31 + (max - min) / 2;\n    long mid33 = mid32 + (max - min) / 2;\n    long\
    \ mid34 = mid33 + (max - min) / 2;\n    long mid35 = mid34 + (max - min) / 2;\n\
    \    long mid36 = mid35 + (max - min) / 2;\n    long mid37 = mid36 + (max - min)\
    \ / ", "    std::vector<long> res;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    for (long i : lst) {\n        if (i < min) min = i;\n   \
    \     if (i > max) max = i;\n    }\n    for (long i = min; i <= max; i++) {\n\
    \        res.push_back(i);\n    }\n    return res;", "    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        } else if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            result.push_back(min);\n            min = i;\n\
    \        } else if (i > max) {\n            result.push_back(max);\n         \
    \   max = i;\n        } else {\n            result.push_back(i);\n        }\n\
    \    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if(i>max) max=i;\n    }\n    for(long\
    \ i : lst) {\n        if(i<min) min=i;\n        if", "    std::vector<long> res;\n\
    \    long minval = *std::min_element(lst.begin(), lst.end());\n    long maxval\
    \ = *std::max_element(lst.begin(), lst.end());\n    long midval = minval + maxval\
    \ / 2;\n    long midval2 = minval + maxval / 2;\n    long midval3 = minval + maxval\
    \ / 2;\n    long midval4 = minval + maxval / 2;\n    long midval5 = minval + maxval\
    \ / 2;\n    long midval6 = minval + maxval / 2;\n    long midval7 = minval + maxval\
    \ / 2;\n    long midval8 = minval + maxval / 2;\n    long midval9 = minval + maxval\
    \ / 2;\n    long midval10 = minval + maxval / 2;\n    long midval11 = minval +\
    \ maxval / 2;\n    long midval12 = minval + maxval / 2;\n    long midval13 = minval\
    \ + maxval / 2;\n    long midval14 = minval + maxval / 2;\n    long midval15 =\
    \ minval + maxval / 2;\n    long midval16 = minval + maxval / 2;\n    long midval17\
    \ = minval + maxval / 2;\n    long midval18 = minval + maxval / 2;\n    long midval19\
    \ = minval + maxval / 2;\n    long midval20 = minval + maxval / 2;\n    long midval21\
    \ = minval + maxval / 2;\n    long midval22 = minval + maxval / 2;\n    long midval23\
    \ = minval + maxval / 2;\n    long midval24 = minval + maxval / 2;\n    long midval25\
    \ = minval + maxval / 2;\n    long midval26 = minval + maxval / 2;\n    long midval27\
    \ = minval + maxval / 2;\n    long midval28 = minval + maxval / 2;\n    long midval29\
    \ = minval + maxval / 2;\n    long midval30 = minval + maxval / 2;\n    long midval31\
    \ = minval + maxval / 2;\n    long midval32 = minval + maxval / 2;\n    long midval33\
    \ = minval + maxval / 2;\n    long midval34 = minval + maxval / 2;\n    long midval35\
    \ = minval + ", "    std::vector<long> res;\n    res.reserve(lst.size());\n  \
    \  for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Your code here\n    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n \
    \           max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ < min) {\n            min = i;\n        }\n        if (i > max) {\n        \
    \    max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n        if (i > max) {\n            max\
    \ = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    min = i;\n        }\n        if (i > max) {\n            max = i;\n     \
    \   }\n    }\n    for (long i : lst) {\n        if (i < min) {\n            min\
    \ = i;\n        }\n        if (i > max) {\n            max = i;\n        }\n \
    \   }\n    for (long i : lst) {\n        if (i < min) {\n            min = i;\n\
    \        }\n        if (i > max) {\n            max = i;\n        }\n    }\n \
    \   for (long i : lst) {\n        if (i < min) {\n            min = i;\n     \
    \   }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            min = i;\n        }\n\
    \        if (i > max) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            min = i;\n        }\n        if (i > ", "    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    for (long i = min;\
    \ i <= max; i++) {\n        result.push_back(i);\n    }\n    return result;",
  "    if (lst.empty())\n        return lst;\n    std::vector<long> res;\n    long\
    \ min = lst[0];\n    long max = lst[0];\n    for (long i : lst)\n        if (i\
    \ < min)\n            min = i;\n        else if (i > max)\n            max = i;\n\
    \    long mid = min + (max - min) / 2;\n    for (long i : lst)\n        if (i\
    \ < mid)\n            res.push_back(i);\n        else if (i > mid)\n         \
    \   res.push_back(max - i);\n        else\n            res.push_back(min);\n \
    \   return res;", "    std::vector<long> sorted_lst;\n    long min_val = *std::min_element(lst.begin(),\
    \ lst.end());\n    long max_val = *std::max_element(lst.begin(), lst.end());\n\
    \    long mid = min_val + max_val / 2;\n    sorted_lst.push_back(min_val);\n \
    \   sorted_lst.push_back(mid);\n    sorted_lst.push_back(max_val);\n    sorted_lst.push_back(max_val);\n\
    \    sorted_lst.push_back(min_val);\n    return sorted_lst;", "    std::vector<long>\
    \ sorted_lst;\n    long min_val = std::numeric_limits<long>::max();\n    long\
    \ max_val = std::numeric_limits<long>::min();\n    for (long i : lst) {\n    \
    \    min_val = std::min(min_val, i);\n        max_val = std::max(max_val, i);\n\
    \    }\n    for (long i = min_val; i <= max_val; i++) {\n        sorted_lst.push_back(i);\n\
    \    }\n    for (long i = max_val; i >= min_val; i--) {\n        sorted_lst.push_back(i);\n\
    \    }\n    return sorted_lst;", "    std::vector<long> result;\n    long min\
    \ = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n     \
    \   if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    for (long i = min; i <= max; i++)\
    \ {\n        result.push_back(i);\n    }\n    return result;", "    // Write your\
    \ code here\n    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for(long i : lst) {\n        if(i<min) {\n          \
    \  min=i;\n        }\n        if(i>max) {\n            max=i;\n        }\n   \
    \ }\n    for(long i=min;i<=max;i++) {\n        result.push_back(i);\n    }\n \
    \   for(long i=max;i>min;i--) {\n        result.push_back(i);\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    long minval = std::numeric_limits<long>::min();\n\
    \    long maxval = std::numeric_limits<long>::max();\n    long midval = minval;\n\
    \    for (long i : lst) {\n        if (i < minval) {\n            minval = i;\n\
    \        } else if (i > maxval) {\n            maxval = i;\n        }\n    }\n\
    \    long mid = minval;\n    while (true) {\n        midval = mid;\n        mid\
    \ = minval + maxval / 2;\n        if (mid > maxval) {\n            break;\n  \
    \      }\n        res.push_back(midval);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           res.push_back(i);\n        } else if (i > max) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    if (lst.size()\
    \ == 0) {\n        return res;\n    }\n    long min = lst[0];\n    long max =\
    \ lst[0];\n    for (long i : lst) {\n        if (i < min) {\n            min =\
    \ i;\n        }\n        if (i > max) {\n            max = i;\n        }\n   \
    \ }\n    long mid = min + (max - min) / 2;\n    long left = min;\n    long right\
    \ = max;\n    while (left < right) {\n        while (left < right && lst[left]\
    \ < mid) {\n            left++;\n        }\n        while (left < right && lst[right]\
    \ > mid) {\n            right--;\n        }\n        if (left < right) {\n   \
    \         long temp = lst[left];\n            lst[left] = lst[right];\n      \
    \      lst[right] = temp;\n            left++;\n            right--;\n       \
    \ }\n    }\n    for (long i : lst) {\n        res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> lst2;\n    long min = lst[0];\n    long max =\
    \ lst[0];\n    for (long i : lst) {\n        if (i < min) {\n            min =\
    \ i;\n        } else if (i > max) {\n            max = i;\n        }\n    }\n\
    \    lst2.push_back(min);\n    lst2.push_back(max);\n    for (long i : lst) {\n\
    \        if (i < min) {\n            lst2.push_back(i);\n        } else if (i\
    \ > max) {\n            lst2.push_back(i);\n        }\n    }\n    return lst2;",
  "    std::vector<long> res;\n    res.reserve(lst.size());\n    for (auto i : lst)\
    \ {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    if (lst.size() == 0) {\n    \
    \    return lst;\n    }\n    std::vector<long> result;\n    long min = lst[0];\n\
    \    long max = lst[0];\n    for (long i : lst) {\n        if (i < min) {\n  \
    \          min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    long mid = min + (max - min) / 2;\n    long mid2 = mid\
    \ + (max - min) / 2;\n    long mid3 = mid2 + (max - min) / 2;\n    long mid4 =\
    \ mid3 + (max - min) / 2;\n    long mid5 = mid4 + (max - min) / 2;\n    long mid6\
    \ = mid5 + (max - min) / 2;\n    long mid7 = mid6 + (max - min) / 2;\n    long\
    \ mid8 = mid7 + (max - min) / 2;\n    long mid9 = mid8 + (max - min) / 2;\n  \
    \  long mid10 = mid9 + (max - min) / 2;\n    long mid11 = mid10 + (max - min)\
    \ / 2;\n    long mid12 = mid11 + (max - min) / 2;\n    long mid13 = mid12 + (max\
    \ - min) / 2;\n    long mid14 = mid13 + (max - min) / 2;\n    long mid15 = mid14\
    \ + (max - min) / 2;\n    long mid16 = mid15 + (max - min) / 2;\n    long mid17\
    \ = mid16 + (max - min) / 2;\n    long mid18 = mid17 + (max - min) / 2;\n    long\
    \ mid19 = mid18 + (max - min) / 2;\n    long mid20 = mid19 + (max - min) / 2;\n\
    \    long mid21 = mid20 + (max - min) / 2;\n    long mid22 = mid21 + (max - min)\
    \ / 2;\n    long mid23 = mid22 + (max - min) / 2;\n    long mid24 = mid23 + (max\
    \ - min) / 2;\n    long mid25 = mid24 + (max - min) / 2;\n    long mid26 = mid25\
    \ + (max - min) / 2;\n    long mid27 = mid26 + (max - min) / 2;\n    long mid28\
    \ = mid27 + (max - min) / 2;\n    long mid29 = mid28 + (max - min) / 2;\n    long\
    \ mid30 = mid29 + (max - min) / 2;\n    long mid31 = mid30 + (max - min) / 2;\n\
    \    long mid32 = mid31 + (max - min) / 2;\n    long mid33 = mid32 + (max - min)\
    \ / 2;\n    long mid34 = mid33 + (max - min) / 2;\n    long mid35 = mid34 + (max\
    \ - min) / 2;\n    long mid36 = mid35 + (max - ", "    std::vector<long> res;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            res.push_back(min);\n            min = i;\n\
    \        }\n        if (i > max) {\n            res.push_back(max);\n        \
    \    max = i;\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    return res;", "    std::vector<long> res;\n    if (lst.size() == 0) {\n \
    \       return res;\n    }\n    long min = lst[0];\n    long max = lst[0];\n \
    \   for (long i : lst) {\n        if (i < min) {\n            min = i;\n     \
    \   }\n        if (i > max) {\n            max = i;\n        }\n    }\n    long\
    \ mid = min + (max - min) / 2;\n    res.push_back(min);\n    res.push_back(mid);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> res;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        } else if (i > max) {\n\
    \            max = i;\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    } else if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    // Your code goes here\n    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i == min) {\n\
    \            res.push_back(i);\n        }\n        if (i == max) {\n         \
    \   res.push_back(i);\n        }\n    }\n    return res;", "    // Your code here\n\
    \    std::vector<long> result;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i == min) {\n            result.push_back(min);\n\
    \        } else if (i == max) {\n            result.push_back(max);\n        }\
    \ else {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> lst2;\n    long minval = std::numeric_limits<long>::min();\n\
    \    long maxval = std::numeric_limits<long>::max();\n    for (long i : lst) {\n\
    \        if (i < minval) {\n            minval = i;\n        }\n        if (i\
    \ > maxval) {\n            maxval = i;\n        }\n    }\n    long midval = minval\
    \ + maxval / 2;\n    long midval2 = minval + maxval / 2;\n    long midval3 = minval\
    \ + maxval / 2;\n    long midval4 = minval + maxval / 2;\n    long midval5 = minval\
    \ + maxval / 2;\n    long midval6 = minval + maxval / 2;\n    long midval7 = minval\
    \ + maxval / 2;\n    long midval8 = minval + maxval / 2;\n    long midval9 = minval\
    \ + maxval / 2;\n    long midval10 = minval + maxval / 2;\n    long midval11 =\
    \ minval + maxval / 2;\n    long midval12 = minval + maxval / 2;\n    long midval13\
    \ = minval + maxval / 2;\n    long midval14 = minval + maxval / 2;\n    long midval15\
    \ = minval + maxval / 2;\n    long midval16 = minval + maxval / 2;\n    long midval17\
    \ = minval + maxval / 2;\n    long midval18 = minval + maxval / 2;\n    long midval19\
    \ = minval + maxval / 2;\n    long midval20 = minval + maxval / 2;\n    long midval21\
    \ = minval + maxval / 2;\n    long midval22 = minval + maxval / 2;\n    long midval23\
    \ = minval + maxval / 2;\n    long midval24 = minval + maxval / 2;\n    long midval25\
    \ = minval + maxval / 2;\n    long midval26 = minval + maxval / 2;\n    long midval27\
    \ = minval + maxval / 2;\n    long midval28 = minval + maxval / 2;\n    long midval29\
    \ = minval + maxval / 2;\n    long midval30 = minval + maxval / 2;\n    long midval31\
    \ = minval + maxval / 2;\n    long midval32 = minval + maxval / 2;\n    long midval33\
    \ = minval + maxval / ", "    // Your code here\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i == min) {\n            result.push_back(min);\n        } else if\
    \ (i == max) {\n            result.push_back(max);\n        } else {\n       \
    \     result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i == min) {\n            result.push_back(min);\n        } else\
    \ if (i == max) {\n            result.push_back(max);\n        } else {\n    \
    \        result.push_back(i);\n        }\n    }\n    return result;", "    //\
    \ Write your code here\n    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> result;\n \
    \   long min = lst.front();\n    long max = lst.back();\n    long mid = min +\
    \ (max - min) / 2;\n    result.push_back(min);\n    result.push_back(mid);\n \
    \   result.push_back(max);\n    for(long i = min; i <= max; i++) {\n        for(long\
    \ j = mid; j >= i; j--) {\n            if(lst[j] < i) {\n                std::swap(lst[j],\
    \ lst[j - 1]);\n            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long minval = *std::min_element(lst.begin(), lst.end());\n    long\
    \ maxval = *std::max_element(lst.begin(), lst.end());\n    long midval = (minval\
    \ + maxval) / 2;\n    long midpos = lst.begin() + std::lower_bound(lst.begin(),\
    \ lst.end(), midval) - lst.begin();\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] < minval) {\n            minval = lst[i];\n        } else\
    \ if (lst[i] > maxval) {\n            maxval = lst[i];\n        }\n    }\n   \
    \ for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] < minval) {\n  \
    \          minval = lst[i];\n        } else if (lst[i] > maxval) {\n         \
    \   maxval = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] < minval) {\n            minval = lst[i];\n        } else\
    \ if (lst[i] > maxval) {\n            maxval = lst[i];\n        }\n    }\n   \
    \ for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] < minval) {\n  \
    \          minval = lst[i];\n        } else if (lst[i] > maxval) {\n         \
    \   maxval = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] < minval) {\n            minval = lst[i];\n        } else\
    \ if (lst[i] > maxval) {\n            maxval = lst[i];\n        }\n    }\n   \
    \ for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] < minval) {\n  \
    \          minval = lst[i];\n        } else if (lst[i] > maxval) {\n         \
    \   maxval = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] < minval) {\n            minval = lst[i];\n        } else\
    \ if (lst[i] > maxval) {\n            maxval = lst[i];\n        }\n    }\n   \
    \ for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] < minval) {\n  \
    \          minval = lst[i];\n        } else if (lst[i] > maxval) {\n         \
    \   maxval = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] < minval) {\n            minval = lst[i];\n        } else\
    \ if (lst[i] > maxval) {\n            maxval = lst[i];\n        }\n    }\n   \
    \ for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] < minval) {\n  \
    \          minval = lst[i];\n        } else if (lst[i] > maxval) {\n         \
    \   maxval = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] < minval) {\n            minval = lst[i];\n        } else\
    \ if (lst[i] > maxval) {\n            maxval = lst[i];\n        }\n    }\n   \
    \ for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] < minval) {\n  \
    \          minval = lst[i];\n        } else if (lst[i] > max", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Write\
    \ your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    long mid = 0;\n    for (long i : lst) {\n   \
    \     if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    mid = (min + max) / 2;\n    for (long\
    \ i : lst) {\n        if (i < mid) {\n            result.push_back(i);\n     \
    \   }\n        if (i > mid) {\n            result.push_back(mid);\n        }\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if (lst.size() ==\
    \ 0) {\n        return res;\n    }\n    long min = lst[0];\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        if (lst[i] < min) {\n            min = lst[i];\n\
    \        }\n    }\n    long max = lst[0];\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    long mid = min + (max - min) / 2;\n    std::vector<long> temp;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > mid) {\n   \
    \         temp.push_back(lst[i]);\n        }\n    }\n    for (long i = 0; i <\
    \ temp.size(); i++) {\n        res.push_back(temp[i]);\n    }\n    return res;",
  "    // Your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    result.push_back(min);\n            min = i;\n        } else if (i > max)\
    \ {\n            result.push_back(max);\n            max = i;\n        } else\
    \ {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> res;\n    if (lst.size() == 0) {\n        return res;\n \
    \   }\n    long min = lst[0];\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n    }\n    long max = lst[0];\n    for (long\
    \ i : lst) {\n        if (i > max) {\n            max = i;\n        }\n    }\n\
    \    long mid = min + (max - min) / 2;\n    res.push_back(min);\n    res.push_back(mid);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> sorted_lst;\n\
    \    long min_val = *std::min_element(lst.begin(), lst.end());\n    long max_val\
    \ = *std::max_element(lst.begin(), lst.end());\n    long mid = min_val + max_val\
    \ / 2;\n    long mid2 = max_val / 2;\n    long mid3 = mid2 + mid;\n    long mid4\
    \ = mid3 + mid;\n    long mid5 = mid4 + mid;\n    long mid6 = mid5 + mid;\n  \
    \  long mid7 = mid6 + mid;\n    long mid8 = mid7 + mid;\n    long mid9 = mid8\
    \ + mid;\n    long mid10 = mid9 + mid;\n    long mid11 = mid10 + mid;\n    long\
    \ mid12 = mid11 + mid;\n    long mid13 = mid12 + mid;\n    long mid14 = mid13\
    \ + mid;\n    long mid15 = mid14 + mid;\n    long mid16 = mid15 + mid;\n    long\
    \ mid17 = mid16 + mid;\n    long mid18 = mid17 + mid;\n    long mid19 = mid18\
    \ + mid;\n    long mid20 = mid19 + mid;\n    long mid21 = mid20 + mid;\n    long\
    \ mid22 = mid21 + mid;\n    long mid23 = mid22 + mid;\n    long mid24 = mid23\
    \ + mid;\n    long mid25 = mid24 + mid;\n    long mid26 = mid25 + mid;\n    long\
    \ mid27 = mid26 + mid;\n    long mid28 = mid27 + mid;\n    long mid29 = mid28\
    \ + mid;\n    long mid30 = mid29 + mid;\n    long mid31 = mid30 + mid;\n    long\
    \ mid32 = mid31 + mid;\n    long mid33 = mid32 + mid;\n    long mid34 = mid33\
    \ + mid;\n    long mid35 = mid34 + mid;\n    long mid36 = mid35 + mid;\n    long\
    \ mid37 = mid36 + mid;\n    long mid38 = mid37 + mid;\n    long mid39 = mid38\
    \ + mid;\n    long mid40 = mid39 + mid;\n    long mid41 = mid40 + mid;\n    long\
    \ mid42 = mid41 + mid;\n    long mid43 = mid42 + mid;\n    long mid44 = mid43\
    \ + mid;\n", "    std::vector<long> res;\n    res.reserve(lst.size());\n    for\
    \ (auto i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end(), [](long a, long b) { return a < b; });\n    return res;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Write\
    \ your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    // Your code goes here\n    std::vector<long> lst2;\n    for(long\
    \ i=0;i<lst.size();i++){\n        for(long j=i+1;j<lst.size();j++){\n        \
    \    if(lst[i]<lst[j]){\n                long temp=lst[i];\n                lst[i]=lst[j];\n\
    \                lst[j]=temp;\n            }\n        }\n    }\n    return lst2;",
  "    std::vector<long> result;\n    long min = std::numeric_limits<long>::min();\n\
    \    long max = std::numeric_limits<long>::max();\n    for (long i : lst) {\n\
    \        if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i = min; i <= max;\
    \ i++) {\n        result.push_back(i);\n    }\n    for (long i = max; i >= min;\
    \ i--) {\n        result.push_back(i);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Write\
    \ your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for(long i : lst) {\n        if(i<min) {\n  \
    \          min=i;\n        }\n        if(i>max) {\n            max=i;\n      \
    \  }\n    }\n    for(long i=min; i<=max; i++) {\n        result.push_back(i);\n\
    \    }\n    for(long i=max; i<=min; i++) {\n        result.push_back(i);\n   \
    \ }\n    for(long i=min; i<=max; i++) {\n        result.push_back(i);\n    }\n\
    \    for(long i=max; i<=min; i++) {\n        result.push_back(i);\n    }\n   \
    \ for(long i=min; i<=max; i++) {\n        result.push_back(i);\n    }\n    for(long\
    \ i=max; i<=min; i++) {\n        result.push_back(i);\n    }\n    for(long i=min;\
    \ i<=max; i++) {\n        result.push_back(i);\n    }\n    for(long i=max; i<=min;\
    \ i++) {\n        result.push_back(i);\n    }\n    for(long i=min; i<=max; i++)\
    \ {\n        result.push_back(i);\n    }\n    for(long i=max; i<=min; i++) {\n\
    \        result.push_back(i);\n    }\n    for(long i=min; i<=max; i++) {\n   \
    \     result.push_back(i);\n    }\n    for(long i=max; i<=min; i++) {\n      \
    \  result.push_back(i);\n    }\n    for(long i=min; i<=max; i++) {\n        result.push_back(i);\n\
    \    }\n    for(long i=max; i<=min; i++) {\n        result.push_back(i);\n   \
    \ }\n    for(long i=min; i<=max; i++) {\n        result.push_back(i);\n    }\n\
    \    for(long i=max; i<=min; i++) {\n        result.push_back(i);\n    }\n   \
    \ for(long i=min; i<=max; i++) {\n        result.push_back(i);\n    }\n    for(long\
    \ i=max; i<=min; i++) {\n        result.push_back(i);\n    }\n    for(long i=min;\
    \ i<=max; i++) {\n        result.push_back(i);\n    }\n    for(long i=max; i<=min;\
    \ i++) {\n        result.push_back(i);\n    }\n    for(long i=min; i<=max; i++)\
    \ {\n        result.push_back(i);\n    }\n    for(long i=max; i<=min; i++) {\n\
    \        result.push_back(i);\n    }\n    for(long i=min; i<=max; i++) {\n   \
    \     result.push_back(i);\n    }\n    for(long i=max; i<=min; i++) {\n      \
    \  result.push_back(i);\n    }\n    for(long i=min; i<=max; i++) {\n        result.push_back(i);\n\
    \    }\n    for(long i=max; i<=min; i++) {\n        result.push_back(i);\n   \
    \ }\n    for(long i=min; i<=max; i++) {\n        result.push_back(i);\n    }\n\
    \    for(long i=max; i<=min; i++) {\n        result.push_back(i);\n    }\n   \
    \ for(long ", "    // Your code here\n    std::vector<long> result;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n \
    \           max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ < min) {\n            min = i;\n        }\n        if (i > max) {\n        \
    \    max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n        if (i > max) {\n            max\
    \ = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    min = i;\n        }\n        if (i > max) {\n            max = i;\n     \
    \   }\n    }\n    for (long i : lst) {\n        if (i < min) {\n            min\
    \ = i;\n        }\n        if (i > max) {\n            max = i;\n        }\n \
    \   }\n    for (long i : lst) {\n        if (i < min) {\n            min = i;\n\
    \        }\n        if (i > max) {\n            max = i;\n        }\n    }\n \
    \   for (long i : lst) {\n        if (i < min) {\n            min = i;\n     \
    \   }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            min = i;\n        }\n\
    \        if (i > max) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n \
    \           max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ < min) {\n            min = i;\n        }\n        if (i > max) {\n        \
    \    max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n        if (i > ", "    // Your code goes\
    \ here\n    std::vector<long> result;\n    long minValue = lst.front();\n    long\
    \ maxValue = lst.back();\n    for (long i : lst) {\n        if (i < minValue)\
    \ {\n            result.push_back(minValue);\n            minValue = i;\n    \
    \    } else if (i > maxValue) {\n            result.push_back(maxValue);\n   \
    \         maxValue = i;\n        } else {\n            result.push_back(i);\n\
    \        }\n    }\n    if (minValue != maxValue) {\n        result.push_back(minValue);\n\
    \        result.push_back(maxValue);\n    }\n    return result;", "    std::vector<long>\
    \ lst2;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    lst2.push_back(min);\n\
    \    lst2.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n\
    \            lst2.push_back(i);\n        }\n        if (i > max) {\n         \
    \   lst2.push_back(i);\n        }\n    }\n    return lst2;", "    std::vector<long>\
    \ lst2;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i = min;\
    \ i <= max; i++) {\n        lst2.push_back(i);\n    }\n    return lst2;", "  \
    \  // Write your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    long mid;\n    for (long i : lst) {\n       \
    \ if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n  \
    \          max = i;\n        }\n    }\n    mid = (min + max) / 2;\n    for (long\
    \ i : lst) {\n        if (i < mid) {\n            result.push_back(i);\n     \
    \   }\n        if (i > mid) {\n            result.push_back(mid);\n        }\n\
    \    }\n    return result;", "    // Your code here\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        } else if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            result.push_back(min);\n        } else if (i >\
    \ max) {\n            result.push_back(max);\n        } else {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            result.push_back(min);\n            min = i;\n\
    \        }\n        if (i > max) {\n            result.push_back(max);\n     \
    \       max = i;\n        }\n    }\n    if (min != max) {\n        result.push_back(min);\n\
    \        result.push_back(max);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    long mid = min\
    \ + (max - min) / 2;\n    for (long i : lst) {\n        if (i < mid) {\n     \
    \       result.push_back(i);\n        } else if (i > mid) {\n            result.push_back(mid);\n\
    \        } else {\n            result.push_back(mid);\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        } else if (i > max) {\n\
    \            max = i;\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    } else if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            result.push_back(min);\n            min\
    \ = i;\n        } else if (i > max) {\n            result.push_back(max);\n  \
    \          max = i;\n        } else {\n            result.push_back(i);\n    \
    \    }\n    }\n    return result;", "    std::vector<long> result;\n    long min\
    \ = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n     \
    \   if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    for (long i = min; i <= max; i++)\
    \ {\n        result.push_back(i);\n    }\n    return result;", "    // Your code\
    \ here\n    std::vector<long> res;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n          \
    \  min = i;\n        }\n        if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long i\
    \ : lst) {\n        if (i > max) {\n            long temp = max;\n           \
    \ max = i;\n            res.push_back(temp);\n        }\n        if (i < min)\
    \ {\n            long temp = min;\n            min = i;\n            res.push_back(temp);\n\
    \        }\n    }\n    return res;", "    // Your code goes here\n    std::vector<long>\
    \ result;\n    long minval = lst.front();\n    long maxval = lst.back();\n   \
    \ for (long i : lst) {\n        if (i < minval) {\n            result.push_back(minval);\n\
    \            minval = i;\n        } else if (i > maxval) {\n            result.push_back(maxval);\n\
    \            maxval = i;\n        } else {\n            result.push_back(i);\n\
    \        }\n    }\n    if (minval != maxval) {\n        result.push_back(minval);\n\
    \        result.push_back(maxval);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    long mid = min\
    \ + (max - min) / 2;\n    for (long i : lst) {\n        if (i < mid) {\n     \
    \       result.push_back(i);\n        }\n        if (i > mid) {\n            result.push_back(max\
    \ - i);\n        }\n    }\n    return result;", "    std::vector<long> res;\n\
    \    if (lst.size() == 0) {\n        return res;\n    }\n    long min = lst[0];\n\
    \    for (long i = 1, max = lst[0]; i < lst.size(); i++) {\n        if (lst[i]\
    \ < min) {\n            min = lst[i];\n        }\n        if (lst[i] > max) {\n\
    \            max = lst[i];\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    for (long i = 1, max = lst[0]; i < lst.size(); i++) {\n        if (lst[i]\
    \ < min) {\n            min = lst[i];\n        }\n        if (lst[i] > max) {\n\
    \            max = lst[i];\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    return res;", "    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        } else if (i > max) {\n            max = i;\n \
    \       }\n    }\n    for (long i = min; i <= max; i++) {\n        res.push_back(i);\n\
    \    }\n    return res;", "    // Your code here\n    std::vector<long> res;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        } else if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            res.push_back(min);\n            min = i;\n   \
    \     } else if (i > max) {\n            res.push_back(max);\n            max\
    \ = i;\n        } else {\n            res.push_back(i);\n        }\n    }\n  \
    \  res.push_back(min);\n    res.push_back(max);\n    return res;", "    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i = min; i <= max; i++) {\n        res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        } else if (i > max) {\n            max = i;\n \
    \       }\n    }\n    for (long i = min; i <= max; i++) {\n        result.push_back(i);\n\
    \    }\n    return result;", "    std::vector<long> sorted_lst;\n    long min_val\
    \ = lst[0];\n    long max_val = lst[0];\n    for (long i : lst) {\n        if\
    \ (i < min_val) {\n            min_val = i;\n        }\n        if (i > max_val)\
    \ {\n            max_val = i;\n        }\n    }\n    long mid = (min_val + max_val)\
    \ / 2;\n    sorted_lst.push_back(min_val);\n    sorted_lst.push_back(mid);\n \
    \   sorted_lst.push_back(max_val);\n    return sorted_lst;", "    // Your code\
    \ here\n    std::vector<long> result;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    long mid = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] < min) {\n            min = lst[i];\n        }\n     \
    \   if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    mid\
    \ = min + (max - min) / 2;\n    for (long i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] < mid) {\n            result.push_back(lst[i]);\n        }\n \
    \   }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > mid)\
    \ {\n            result.push_back(lst[i]);\n        }\n    }\n    return result;",
  "    if (lst.size() == 0) {\n        return lst;\n    }\n    std::vector<long> lst2\
    \ = lst;\n    std::sort(lst2.begin(), lst2.end(), [](long a, long b) { return\
    \ a < b; });\n    return lst2;", "    if (lst.size() == 0) {\n        return lst;\n\
    \    }\n    std::vector<long> sorted_lst;\n    long min_val = lst[0];\n    long\
    \ max_val = lst[0];\n    for (long i : lst) {\n        if (i < min_val) {\n  \
    \          min_val = i;\n        }\n        if (i > max_val) {\n            max_val\
    \ = i;\n        }\n    }\n    long mid = (max_val + min_val) / 2;\n    sorted_lst.push_back(min_val);\n\
    \    sorted_lst.push_back(mid);\n    sorted_lst.push_back(max_val);\n    return\
    \ sorted_lst;", "    std::vector<long> res;\n    long min = lst.front();\n   \
    \ long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        } else if (i > max) {\n            max = i;\n  \
    \      }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> sorted_lst;\n\
    \    long min_val = *std::min_element(lst.begin(), lst.end());\n    long max_val\
    \ = *std::max_element(lst.begin(), lst.end());\n    for (long i = min_val; i <=\
    \ max_val; i++) {\n        sorted_lst.push_back(i);\n    }\n    for (long i =\
    \ max_val; i >= min_val; i--) {\n        sorted_lst.push_back(i);\n    }\n   \
    \ return sorted_lst;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (auto i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    long mid;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        mid = (min + max) / 2;\n\
    \        if (lst[i] < mid) {\n            min = mid;\n        } else {\n     \
    \       max = mid;\n        }\n    }\n    result.push_back(min);\n    result.push_back(max);\n\
    \    for (long i = lst.size() - 1; i > 0; i--) {\n        mid = (min + max) /\
    \ 2;\n        if (lst[i] > mid) {\n            min = mid;\n        } else {\n\
    \            max = mid;\n        }\n        result.push_back(mid);\n    }\n  \
    \  return result;", "    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        } else if (i > max) {\n            max = i;\n \
    \       }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            res.push_back(i);\n        }\
    \ else if (i > max) {\n            res.push_back(max);\n        }\n    }\n   \
    \ return res;", "    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        } else if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    for (long i : lst) {\n        if (i == min) {\n            res.push_back(min);\n\
    \        } else if (i == max) {\n            res.push_back(max);\n        } else\
    \ {\n            res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    for (long i = min;\
    \ i <= max; i++) {\n        result.push_back(i);\n    }\n    return result;",
  "    // Your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    // Your code here\n    std::vector<long> result;\n    long min\
    \ = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n     \
    \   if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i < min) {\n            result.push_back(min);\n            min = i;\n    \
    \    }\n        if (i > max) {\n            result.push_back(max);\n         \
    \   max = i;\n        }\n    }\n    if (min != max) {\n        result.push_back(min);\n\
    \        result.push_back(max);\n    }\n    return result;", "    // Write your\
    \ code here.\n    std::vector<long> result;\n    long minValue = *std::min_element(lst.begin(),\
    \ lst.end());\n    long maxValue = *std::max_element(lst.begin(), lst.end());\n\
    \    long middle = minValue + (maxValue - minValue) / 2;\n    long middle2 = middle\
    \ + 1;\n    long middle3 = middle2 + 1;\n    long middle4 = middle3 + 1;\n   \
    \ long middle5 = middle4 + 1;\n    long middle6 = middle5 + 1;\n    long middle7\
    \ = middle6 + 1;\n    long middle8 = middle7 + 1;\n    long middle9 = middle8\
    \ + 1;\n    long middle10 = middle9 + 1;\n    long middle11 = middle10 + 1;\n\
    \    long middle12 = middle11 + 1;\n    long middle13 = middle12 + 1;\n    long\
    \ middle14 = middle13 + 1;\n    long middle15 = middle14 + 1;\n    long middle16\
    \ = middle15 + 1;\n    long middle17 = middle16 + 1;\n    long middle18 = middle17\
    \ + 1;\n    long middle19 = middle18 + 1;\n    long middle20 = middle19 + 1;\n\
    \    long middle21 = middle20 + 1;\n    long middle22 = middle21 + 1;\n    long\
    \ middle23 = middle22 + 1;\n    long middle24 = middle23 + 1;\n    long middle25\
    \ = middle24 + 1;\n    long middle26 = middle25 + 1;\n    long middle27 = middle26\
    \ + 1;\n    long middle28 = middle27 + 1;\n    long middle29 = middle28 + 1;\n\
    \    long middle30 = middle29 + 1;\n    long middle31 = middle30 + 1;\n    long\
    \ middle32 = middle31 + 1;\n    long middle33 = middle32 + 1;\n    long middle34\
    \ = middle33 + 1;\n    long middle35 = middle34 + 1;\n    long middle36 = middle35\
    \ + 1;\n    long middle37 = middle36 + 1;\n    long middle38 = middle37 + 1;\n\
    \    long middle39 = middle38 + 1;\n    long middle40 = middle39 + 1;\n    long\
    \ middle41 = middle40 + 1;\n    long middle42 = middle41 + 1;\n    long middle43\
    \ = middle42 + 1;\n    long middle44 = middle43 + 1;\n    long middle45 = middle44\
    \ + 1;\n    long middle46 = middle45 + 1;\n    long middle47 = middle46 + 1;\n\
    \    long middle48 = middle47 + 1;\n    long middle49 = middle48 + 1;\n    long\
    \ middle50 = middle49 + 1;\n    long middle51 = middle50 + 1;\n    long middle52\
    \ = middle51 + 1;\n", "    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        } else if (i > max) {\n            max = i;\n \
    \       }\n    }\n    for (long i : lst) {\n        if (i < min) {\n         \
    \   res.push_back(min);\n            min = i;\n        } else if (i > max) {\n\
    \            res.push_back(max);\n            max = i;\n        } else {\n   \
    \         res.push_back(i);\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (auto i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end(), [](long a, long b) { return a < b; });\n    return res;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Your\
    \ code here\n    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        }\n        if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    for (long i : lst) {\n        if (i == min) {\n          \
    \  result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    // Your code goes here\n    std::vector<long> result;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            result.push_back(min);\n            min = i;\n\
    \        }\n        if (i > max) {\n            result.push_back(max);\n     \
    \       max = i;\n        }\n    }\n    if (min < max) {\n        result.push_back(min);\n\
    \        result.push_back(max);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Your\
    \ code here\n    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        }\n        if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    for (long i : lst) {\n        if (i < min) {\n           \
    \ result.push_back(min);\n            min = i;\n        } else if (i > max) {\n\
    \            result.push_back(max);\n            max = i;\n        } else {\n\
    \            result.push_back(i);\n        }\n    }\n    return result;", "  \
    \  if (lst.size() == 0) {\n        return lst;\n    }\n    std::vector<long> lst2\
    \ = lst;\n    std::sort(lst2.begin(), lst2.end());\n    return lst2;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Your\
    \ code here\n    std::vector<long> res;\n    res.reserve(lst.size());\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        } else if (i > max) {\n\
    \            max = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i < min) {\n            res.push_back(min);\n            min = i;\n       \
    \ } else if (i > max) {\n            res.push_back(max);\n            max = i;\n\
    \        } else {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> lst2;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n          \
    \  min = i;\n        } else if (i > max) {\n            max = i;\n        }\n\
    \    }\n    lst2.push_back(min);\n    lst2.push_back(max);\n    for (long i :\
    \ lst) {\n        if (i < min) {\n            lst2.push_back(i);\n        } else\
    \ if (i > max) {\n            lst2.push_back(i);\n        }\n    }\n    return\
    \ lst2;", "    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        }\n        if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    long mid = min + (max - min) / 2;\n    long mid2 = mid / 2;\n\
    \    long mid3 = mid2 / 2;\n    long mid4 = mid3 / 2;\n    long mid5 = mid4 /\
    \ 2;\n    long mid6 = mid5 / 2;\n    long mid7 = mid6 / 2;\n    long mid8 = mid7\
    \ / 2;\n    long mid9 = mid8 / 2;\n    long mid10 = mid9 / 2;\n    long mid11\
    \ = mid10 / 2;\n    long mid12 = mid11 / 2;\n    long mid13 = mid12 / 2;\n   \
    \ long mid14 = mid13 / 2;\n    long mid15 = mid14 / 2;\n    long mid16 = mid15\
    \ / 2;\n    long mid17 = mid16 / 2;\n    long mid18 = mid17 / 2;\n    long mid19\
    \ = mid18 / 2;\n    long mid20 = mid19 / 2;\n    long mid21 = mid20 / 2;\n   \
    \ long mid22 = mid21 / 2;\n    long mid23 = mid22 / 2;\n    long mid24 = mid23\
    \ / 2;\n    long mid25 = mid24 / 2;\n    long mid26 = mid25 / 2;\n    long mid27\
    \ = mid26 / 2;\n    long mid28 = mid27 / 2;\n    long mid29 = mid28 / 2;\n   \
    \ long mid30 = mid29 / 2;\n    long mid31 = mid30 / 2;\n    long mid32 = mid31\
    \ / 2;\n    long mid33 = mid32 / 2;\n    long mid34 = mid33 / 2;\n    long mid35\
    \ = mid34 / 2;\n    long mid36 = mid35 / 2;\n    long mid37 = mid36 / 2;\n   \
    \ long mid38 = mid37 / 2;\n    long mid39 = mid38 / 2;\n    long mid40 = mid39\
    \ / 2;\n    long mid41 = mid40 / 2;\n    long mid42 = mid41 / 2;\n    long mid43\
    \ = mid42 / 2;\n    long mid44 = mid43 / 2;\n    long mid45 = mid44 / 2;\n   \
    \ long mid46 = mid45 / 2;\n    long mid47 = mid46 / ", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Write\
    \ your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        } else if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    long mid = min + (max - min) / 2;\n    res.push_back(min);\n \
    \   res.push_back(mid);\n    res.push_back(max);\n    return res;", "    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        } else if (i > max) {\n            max = i;\n  \
    \      }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    return\
    \ res;", "    if (lst.size() == 0) {\n        return lst;\n    }\n    std::vector<long>\
    \ lst2;\n    long min = lst[0];\n    long max = lst[0];\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    long mid = min + (max -\
    \ min) / 2;\n    long mid2 = mid + (max - min) / 2;\n    long mid3 = mid2 + (max\
    \ - min) / 2;\n    long mid4 = mid3 + (max - min) / 2;\n    long mid5 = mid4 +\
    \ (max - min) / 2;\n    long mid6 = mid5 + (max - min) / 2;\n    long mid7 = mid6\
    \ + (max - min) / 2;\n    long mid8 = mid7 + (max - min) / 2;\n    long mid9 =\
    \ mid8 + (max - min) / 2;\n    long mid10 = mid9 + (max - min) / 2;\n    long\
    \ mid11 = mid10 + (max - min) / 2;\n    long mid12 = mid11 + (max - min) / 2;\n\
    \    long mid13 = mid12 + (max - min) / 2;\n    long mid14 = mid13 + (max - min)\
    \ / 2;\n    long mid15 = mid14 + (max - min) / 2;\n    long mid16 = mid15 + (max\
    \ - min) / 2;\n    long mid17 = mid16 + (max - min) / 2;\n    long mid18 = mid17\
    \ + (max - min) / 2;\n    long mid19 = mid18 + (max - min) / 2;\n    long mid20\
    \ = mid19 + (max - min) / 2;\n    long mid21 = mid20 + (max - min) / 2;\n    long\
    \ mid22 = mid21 + (max - min) / 2;\n    long mid23 = mid22 + (max - min) / 2;\n\
    \    long mid24 = mid23 + (max - min) / 2;\n    long mid25 = mid24 + (max - min)\
    \ / 2;\n    long mid26 = mid25 + (max - min) / 2;\n    long mid27 = mid26 + (max\
    \ - min) / 2;\n    long mid28 = mid27 + (max - min) / 2;\n    long mid29 = mid28\
    \ + (max - min) / 2;\n    long mid30 = mid29 + (max - min) / 2;\n    long mid31\
    \ = mid30 + (max - min) / 2;\n    long mid32 = mid31 + (max - min) / 2;\n    long\
    \ mid33 = mid32 + (max - min) / 2;\n    long mid34 = mid33 + (max - min) / 2;\n\
    \    long mid35 = mid34 + (max - min) / 2;\n    long mid36 = mid35 + (", "   \
    \ std::vector<long> lst2;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i = min; i <= max; i++) {\n        lst2.push_back(i);\n    }\n    for\
    \ (long i = max; i >= min; i--) {\n        lst2.push_back(i);\n    }\n    return\
    \ lst2;", "    std::vector<long> res;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n          \
    \  min = i;\n        }\n        if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long i\
    \ : lst) {\n        if (i < min) {\n            min = i;\n        }\n        if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    // Your code here\n    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n          \
    \  min = i;\n        } else if (i > max) {\n            max = i;\n        }\n\
    \    }\n    for (long i : lst) {\n        if (i == min) {\n            res.push_back(min);\n\
    \        } else if (i == max) {\n            res.push_back(max);\n        } else\
    \ {\n            res.push_back(i);\n        }\n    }\n    return res;", "    //\
    \ Your code here\n    std::vector<long> result;\n    long minval = std::numeric_limits<long>::max();\n\
    \    long maxval = std::numeric_limits<long>::min();\n    for (auto i : lst) {\n\
    \        minval = std::min(minval, i);\n        maxval = std::max(maxval, i);\n\
    \    }\n    for (auto i : lst) {\n        if (i < minval) result.push_back(minval);\n\
    \        else if (i > maxval) result.push_back(maxval);\n        else result.push_back(i);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        } else if (i > max) {\n            max = i;\n \
    \       }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    long mid = min + (max\
    \ - min) / 2;\n    long left = mid;\n    long right = mid;\n    for (long i :\
    \ lst) {\n        if (i < left) {\n            left = i;\n        } else if (i\
    \ > right) {\n            right = i;\n        }\n    }\n    result.push_back(left);\n\
    \    result.push_back(right);\n    result.push_back(min);\n    return result;",
  "    // Write your code here\n    std::vector<long> lst2;\n    for(long i=0;i<lst.size();i++){\n\
    \        long min=i;\n        for(long j=i+1;j<lst.size();j++){\n            if(lst[i]<lst[j]){\n\
    \                min=j;\n            }\n        }\n        lst2.push_back(lst[min]);\n\
    \        lst.erase(lst.begin()+min);\n    }\n    return lst2;", "    std::vector<long>\
    \ lst2;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    lst2.push_back(min);\n\
    \    lst2.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n\
    \            lst2.push_back(min);\n        }\n        if (i > max) {\n       \
    \     lst2.push_back(max);\n        }\n    }\n    return lst2;", "    // Write\
    \ your code here\n    std::vector<long> res;\n    res.reserve(lst.size());\n \
    \   for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Your code here\n    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    long mid = min + (max\
    \ - min) / 2;\n    for (long i : lst) {\n        if (i < mid) {\n            res.push_back(i);\n\
    \        } else if (i > mid) {\n            res.push_back(max - i);\n        }\
    \ else {\n            res.push_back(min);\n        }\n    }\n    return res;"]
stop_tokens:
- "\n}"

name: HumanEval_104_unique_digits
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
  \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
  // Note: Returned list should be sorted in increasing order.\n// For example:\n\
  // >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\n\
  // (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
  \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
  \ unique_digits(std::vector<long> x) {\n"
tests: "}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
  \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33})));\n\
  \    assert(candidate((std::vector<long>({(long)152, (long)323, (long)1422, (long)10})))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
  \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
  \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
  \ (std::vector<long>({(long)31, (long)135})));\n}\n"
completions: ["    std::vector<long> ans;\n    long long sum = 0;\n    for (long long\
    \ i : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> ans;\n    long long\
    \ an = x.front();\n    long long sum = 0;\n    for (long long i : x) {\n     \
    \   sum += i;\n        if (sum % 2 == 0) {\n            ans.push_back(an);\n \
    \           an = i;\n            sum = 0;\n        }\n    }\n    ans.push_back(an);\n\
    \    return ans;", "    std::vector<long> ans;\n    long long sum = 0;\n    for(long\
    \ long i : x) {\n        sum += i;\n    }\n    for(long long i : x) {\n      \
    \  if(sum % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    return\
    \ ans;", "    // write your code here\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long long sum = 0;\n    long long digit = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n        digit = sum % 10;\n        if (digit % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    return ans;",
  "    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i : x) {\n\
    \        sum += i;\n    }\n    for(long long i : x) {\n        long long d = i\
    \ % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 != 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     sum += i;\n    }\n    for(long long i : ans) {\n        long long d = i\
    \ % 10;\n        if(d % 2 != 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     sum += i;\n    }\n    for(long long i : ans) {\n        long long d = i\
    \ % 10;\n        if(d % 2 != 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 != 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     sum += i;\n    }\n    for(long long i : ans) {\n        long long d = i\
    \ % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 != 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     sum += i;\n    }\n    for(long long i : ans) {\n        long long d = i\
    \ % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 != 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     sum += i;\n    }\n    for(long long i : ans) {\n        ", "    std::vector<long>\
    \ ans;\n    long long sum = 0;\n    for(long long i : x) {\n        sum += i;\n\
    \    }\n    for(long long i : x) {\n        if(sum % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;", "    std::vector<long>\
    \ ans;\n    long long sum = 0;\n    for (long long i : x) {\n        sum += i;\n\
    \    }\n    long long mod = sum % 10;\n    for (long long i : x) {\n        if\
    \ (i % 10 != mod) {\n            ans.push_back(i);\n        }\n    }\n    return\
    \ ans;", "    std::vector<long> ans;\n    long long sum = 0;\n    for (long long\
    \ i : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long long sum = 0;\n    long long digit;\n    for (long long i : x)\
    \ {\n        sum += i;\n        digit = sum % 10;\n        if (digit % 2 == 0)\
    \ {\n            ans.push_back(i);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long long sum = 0;\n    for (long long i : x) {\n        sum += i;\n\
    \    }\n    long long mod = sum % 10;\n    for (long long i : x) {\n        if\
    \ (i % 10 != mod) {\n            ans.push_back(i);\n        }\n    }\n    return\
    \ ans;", "    std::vector<long> ans;\n    long long sum = 0;\n    for(long long\
    \ i : x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i\
    \ % 2 != 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        if(sum % 2 != 0) {\n            ans.push_back(i);\n    \
    \    }\n    }\n    return ans;", "    std::vector<long> ans;\n    long long ans\
    \ = 0;\n    long long sum = 0;\n    long long count = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n        count += 1;\n    }\n    for (long long i\
    \ : x) {\n        if (i % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for (long long i : ans) {\n        ans -= i;\n    }\n    ans.push_back(sum);\n\
    \    ans.push_back(count);\n    return ans;", "    // Write your code here\n \
    \   std::vector<long> ans;\n    long long sum = 0;\n    for(long long i : x){\n\
    \        sum += i;\n    }\n    for(long long i : x){\n        if(sum % 2 == 0){\n\
    \            ans.push_back(i);\n        }\n    }\n    sort(ans.begin(), ans.end());\n\
    \    return ans;", "    std::vector<long> ans;\n    long long ans = 0;\n    long\
    \ long sum = 0;\n    for(long long i = 0; i < x.size(); i++) {\n        sum +=\
    \ x[i];\n        if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n      \
    \  }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] =\
    \ ans[i] / 10;\n    }\n    sort(ans.begin(), ans.end());\n    return ans;", " \
    \   std::vector<long> ans;\n    long long sum = 0;\n    for (auto i : x) {\n \
    \       sum += i;\n    }\n    long long mod = sum % 10;\n    for (auto i : x)\
    \ {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;", "    std::vector<long> ans;\n    long long sum = 0;\n\
    \    for (long long i : x) {\n        sum += i;\n    }\n    long long mod = sum\
    \ % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n         \
    \   ans.push_back(i);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long long sum = 0;\n    for (auto i : x) {\n        sum += i;\n  \
    \  }\n    long long mod = sum % 10;\n    for (auto i : x) {\n        if (i % 10\
    \ != mod) {\n            ans.push_back(i);\n        }\n    }\n    return ans;",
  "    std::vector<long> ans;\n    long long ans = 0;\n    long long sum = 0;\n  \
    \  for (long long i : x) {\n        sum += i;\n        if (sum % 2 == 0) {\n \
    \           ans.push_back(i);\n        }\n    }\n    sort(ans.begin(), ans.end());\n\
    \    return ans;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto i : values) {\n        if (std::holds_alternative<long>(i))\
    \ {\n            out.push_back(std::get<long>(i));\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph5dli327.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmph5dli327.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmph5dli327.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmph5dli327.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmph5dli327.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmph5dli327.cpp:10:15: error: 'i' does not\
    \ name a type\n     for (auto i : values) {\n               ^\n/tmp/tmph5dli327.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmph5dli327.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph5dli327.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph5dli327.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph5dli327.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph5dli327.cpp: In function 'int main()':\n/tmp/tmph5dli327.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph5dli327.cpp:2:\n/tmp/tmph5dli327.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmph5dli327.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmph5dli327.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmph5dli327.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmph5dli327.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vect"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpcrczfgqk.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpcrczfgqk.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpcrczfgqk.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpcrczfgqk.cpp: In function 'int main()':\n/tmp/tmpcrczfgqk.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcrczfgqk.cpp:2:\n/tmp/tmpcrczfgqk.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpcrczfgqk.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpcrczfgqk.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpcrczfgqk.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (s"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)[0]);\n\
    \        } else {\n            out.emplace_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpngbcbfw_.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpngbcbfw_.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpngbcbfw_.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpngbcbfw_.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpngbcbfw_.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpngbcbfw_.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpngbcbfw_.cpp:17:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpngbcbfw_.cpp:17:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpngbcbfw_.cpp:17:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpngbcbfw_.cpp:17:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpngbcbfw_.cpp:17:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpngbcbfw_.cpp: In function 'int main()':\n/tmp/tmpngbcbfw_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpngbcbfw_.cpp:2:\n/tmp/tmpngbcbfw_.cpp:21:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpngbcbfw_.cpp:21:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpngbcbfw_.cpp:21:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpngbcbfw_.cpp:21:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpngbcbfw_.cpp:21:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmb2w4b9u.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpmb2w4b9u.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpmb2w4b9u.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpmb2w4b9u.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpmb2w4b9u.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpmb2w4b9u.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpmb2w4b9u.cpp: In function 'int main()':\n/tmp/tmpmb2w4b9u.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmb2w4b9u.cpp:2:\n/tmp/tmpmb2w4b9u.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpmb2w4b9u.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpmb2w4b9u.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpmb2w4b9u.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpmb2w4b9u.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ =="
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv0o3w0ca.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpv0o3w0ca.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpv0o3w0ca.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpv0o3w0ca.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpv0o3w0ca.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpv0o3w0ca.cpp:10:15: error: ISO C++ forbids\
    \ declaration of 'value' with no type [-fpermissive]\n     for(auto &value : values)\
    \ {\n               ^\n/tmp/tmpv0o3w0ca.cpp:10:23: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for(auto &value : values) {\n          \
    \             ^\n/tmp/tmpv0o3w0ca.cpp:11:12: error: 'holds_alternative' is not\
    \ a member of 'std'\n         if(std::holds_alternative<long>(value)) {\n    \
    \        ^\n/tmp/tmpv0o3w0ca.cpp:11:35: error: expected primary-expression before\
    \ 'long'\n         if(std::holds_alternative<long>(value)) {\n               \
    \                    ^\n/tmp/tmpv0o3w0ca.cpp:11:35: error: expected ')' before\
    \ 'long'\n/tmp/tmpv0o3w0ca.cpp:12:30: error: 'any_cast' is not a member of 'std'\n\
    \             result.push_back(std::any_cast<long>(value));\n                \
    \              ^\n/tmp/tmpv0o3w0ca.cpp:12:44: error: expected primary-expression\
    \ before 'long'\n             result.push_back(std::any_cast<long>(value));\n\
    \                                            ^\n/tmp/tmpv0o3w0ca.cpp: In function\
    \ 'int main()':\n/tmp/tmpv0o3w0ca.cpp:18:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = filter_integers;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv0o3w0ca.cpp:2:\n/tmp/tmpv0o3w0ca.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vect"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpk2yv8xcw.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpk2yv8xcw.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpk2yv8xcw.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpk2yv8xcw.cpp: In function 'int main()':\n/tmp/tmpk2yv8xcw.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk2yv8xcw.cpp:2:\n/tmp/tmpk2yv8xcw.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpk2yv8xcw.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpk2yv8xcw.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpk2yv8xcw.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpnm1vwpe9.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpnm1vwpe9.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpnm1vwpe9.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpnm1vwpe9.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpnm1vwpe9.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpnm1vwpe9.cpp:10:15: error: ISO C++ forbids\
    \ declaration of 'v' with no type [-fpermissive]\n     for(auto &v: values) {\n\
    \               ^\n/tmp/tmpnm1vwpe9.cpp:10:18: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for(auto &v: values) {\n               \
    \   ^\n/tmp/tmpnm1vwpe9.cpp:11:12: error: 'holds_alternative' is not a member\
    \ of 'std'\n         if(std::holds_alternative<long>(v)) {\n            ^\n/tmp/tmpnm1vwpe9.cpp:11:35:\
    \ error: expected primary-expression before 'long'\n         if(std::holds_alternative<long>(v))\
    \ {\n                                   ^\n/tmp/tmpnm1vwpe9.cpp:11:35: error:\
    \ expected ')' before 'long'\n/tmp/tmpnm1vwpe9.cpp:12:30: error: 'any_cast' is\
    \ not a member of 'std'\n             result.push_back(std::any_cast<long>(v));\n\
    \                              ^\n/tmp/tmpnm1vwpe9.cpp:12:44: error: expected\
    \ primary-expression before 'long'\n             result.push_back(std::any_cast<long>(v));\n\
    \                                            ^\n/tmp/tmpnm1vwpe9.cpp: In function\
    \ 'int main()':\n/tmp/tmpnm1vwpe9.cpp:18:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = filter_integers;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnm1vwpe9.cpp:2:\n/tmp/tmpnm1vwpe9.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<lo"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            out.push_back(value.as<long>());\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9h9o4704.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmp9h9o4704.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmp9h9o4704.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmp9h9o4704.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmp9h9o4704.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmp9h9o4704.cpp:10:16: error: ISO C++ forbids\
    \ declaration of 'value' with no type [-fpermissive]\n     for (auto &value :\
    \ values) {\n                ^\n/tmp/tmp9h9o4704.cpp:10:24: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &value : values) {\n\
    \                        ^\n/tmp/tmp9h9o4704.cpp:11:19: error: request for member\
    \ 'type' in 'value', which is of non-class type 'int'\n         if (value.type()\
    \ == typeid(long)) {\n                   ^\n/tmp/tmp9h9o4704.cpp:12:33: error:\
    \ request for member 'as' in 'value', which is of non-class type 'int'\n     \
    \        out.push_back(value.as<long>());\n                                 ^\n\
    /tmp/tmp9h9o4704.cpp:12:36: error: expected primary-expression before 'long'\n\
    \             out.push_back(value.as<long>());\n                             \
    \       ^\n/tmp/tmp9h9o4704.cpp: In function 'int main()':\n/tmp/tmp9h9o4704.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9h9o4704.cpp:2:\n/tmp/tmp9h9o4704.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmp9h9o4704.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmp9h9o4704.cpp:19:43: error: template\
    \ arg"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpk2yv8xcw.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpk2yv8xcw.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpk2yv8xcw.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpk2yv8xcw.cpp: In function 'int main()':\n/tmp/tmpk2yv8xcw.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk2yv8xcw.cpp:2:\n/tmp/tmpk2yv8xcw.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpk2yv8xcw.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpk2yv8xcw.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpk2yv8xcw.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(v.type() == typeid(long)) {\n  \
    \          out.push_back(v);\n        }\n    }\n    return out;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpt_kc9l7y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            for(auto item : std::get<std::vector<long>>(value)) {\n     \
    \           if(std::holds_alternative<long>(item)) {\n                    result.push_back(std::get<long>(item));\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcpom5or2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(v.type() == typeid(int)) {\n   \
    \         out.push_back((long)v.as<int>());\n        }\n    }\n    return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4bvgxgnt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<uint64_t>(value)) {\n            result.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\
    \ // TODO: add support for std::map<std::string,std::string>\n        } else if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::vector<long>>(value)); //\
    \ TODO: add support for std::vector<std::map<std::string,std::string>>\n     \
    \   } else {\n            throw std::runtime_error(\"Unsupported type\");\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwpusxrwt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n            for (auto val : std::get<std::vector<long>>(value)) {\n     \
    \           result.push_back(val);\n            }\n        } else if (std::holds_alternative<std::vector<std::map<long,long>>>(value))\
    \ {\n            for (auto val : std::get<std::vector<std::map<long,long>>>(value))\
    \ {\n                result.push_back(std::get<long>(val));\n            }\n \
    \       } else if (std::holds_alternative<std::map<long,long>>(value)) {\n   \
    \         for (auto val : std::get<std::map<long,long>>(value)) {\n          \
    \      result.push_back(std::get<long>(val));\n            }\n        } else if\
    \ (std::holds_alternative<std::string>(value)) {\n            result.push_back(std::get<std::string>(value));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            for (auto val : std::get<std::vector<std::any>>(value)) {\n     \
    \           result.push_back(filter_integers(val));\n            }\n        }\
    \ else {\n            result.push_back(std::any_cast<long>(value));\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5y8knt85.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjp6xeha0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\n\
    \        } else if(std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       result.push_back(std::any_cast<std::vector<long>>(value));\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9h2nq84e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv0o3w0ca.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpv0o3w0ca.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpv0o3w0ca.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpv0o3w0ca.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpv0o3w0ca.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpv0o3w0ca.cpp:10:15: error: ISO C++ forbids\
    \ declaration of 'value' with no type [-fpermissive]\n     for(auto &value : values)\
    \ {\n               ^\n/tmp/tmpv0o3w0ca.cpp:10:23: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for(auto &value : values) {\n          \
    \             ^\n/tmp/tmpv0o3w0ca.cpp:11:12: error: 'holds_alternative' is not\
    \ a member of 'std'\n         if(std::holds_alternative<long>(value)) {\n    \
    \        ^\n/tmp/tmpv0o3w0ca.cpp:11:35: error: expected primary-expression before\
    \ 'long'\n         if(std::holds_alternative<long>(value)) {\n               \
    \                    ^\n/tmp/tmpv0o3w0ca.cpp:11:35: error: expected ')' before\
    \ 'long'\n/tmp/tmpv0o3w0ca.cpp:12:30: error: 'any_cast' is not a member of 'std'\n\
    \             result.push_back(std::any_cast<long>(value));\n                \
    \              ^\n/tmp/tmpv0o3w0ca.cpp:12:44: error: expected primary-expression\
    \ before 'long'\n             result.push_back(std::any_cast<long>(value));\n\
    \                                            ^\n/tmp/tmpv0o3w0ca.cpp: In function\
    \ 'int main()':\n/tmp/tmpv0o3w0ca.cpp:18:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = filter_integers;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv0o3w0ca.cpp:2:\n/tmp/tmpv0o3w0ca.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vect"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto &v : values) {\n        if (std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgeb4312i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpk2yv8xcw.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpk2yv8xcw.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpk2yv8xcw.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpk2yv8xcw.cpp: In function 'int main()':\n/tmp/tmpk2yv8xcw.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk2yv8xcw.cpp:2:\n/tmp/tmpk2yv8xcw.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpk2yv8xcw.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpk2yv8xcw.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpk2yv8xcw.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto &v : values) {\n        if (v.type() == typeid(int)) {\n\
    \            out.push_back((long)v.as<int>());\n        }\n    }\n    return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqjx4ikaw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpk2yv8xcw.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpk2yv8xcw.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpk2yv8xcw.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpk2yv8xcw.cpp: In function 'int main()':\n/tmp/tmpk2yv8xcw.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk2yv8xcw.cpp:2:\n/tmp/tmpk2yv8xcw.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpk2yv8xcw.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpk2yv8xcw.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpk2yv8xcw.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            for(auto item : std::get<std::vector<long>>(value)) {\n     \
    \           if(std::holds_alternative<long>(item)) {\n                    result.push_back(std::get<long>(item));\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcpom5or2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpk2yv8xcw.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpk2yv8xcw.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpk2yv8xcw.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpk2yv8xcw.cpp: In function 'int main()':\n/tmp/tmpk2yv8xcw.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk2yv8xcw.cpp:2:\n/tmp/tmpk2yv8xcw.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpk2yv8xcw.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpk2yv8xcw.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpk2yv8xcw.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto &v : values) {\n        if (std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgeb4312i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpcrczfgqk.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpcrczfgqk.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpcrczfgqk.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpcrczfgqk.cpp: In function 'int main()':\n/tmp/tmpcrczfgqk.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcrczfgqk.cpp:2:\n/tmp/tmpcrczfgqk.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpcrczfgqk.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpcrczfgqk.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpcrczfgqk.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (s"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmb2w4b9u.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpmb2w4b9u.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpmb2w4b9u.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpmb2w4b9u.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpmb2w4b9u.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpmb2w4b9u.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpmb2w4b9u.cpp: In function 'int main()':\n/tmp/tmpmb2w4b9u.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmb2w4b9u.cpp:2:\n/tmp/tmpmb2w4b9u.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpmb2w4b9u.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpmb2w4b9u.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpmb2w4b9u.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpmb2w4b9u.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ =="
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n            auto vec = std::get<std::vector<long>>(v);\n            for(auto\
    \ i: vec) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(v))\
    \ {\n            auto vec = std::get<std::vector<std::pair<long,long>>>(v);\n\
    \            for(auto i: vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<long,long>>(v))\
    \ {\n            auto map = std::get<std::map<long,long>>(v);\n            for(auto\
    \ i: map) {\n                result.push_back(i.first);\n            }\n     \
    \   }\n        else if(std::holds_alternative<std::set<long>>(v)) {\n        \
    \    auto set = std::get<std::set<long>>(v);\n            for(auto i: set) {\n\
    \                result.push_back(i);\n            }\n        }\n        else\
    \ if(std::holds_alternative<std::unordered_set<long>>(v)) {\n            auto\
    \ set = std::get<std::unordered_set<long>>(v);\n            for(auto i: set) {\n\
    \                result.push_back(i);\n            }\n        }\n        else\
    \ if(std::holds_alternative<std::string>(v)) {\n            result.push_back(std::get<std::string>(v));\n\
    \        }\n        else if(std::holds_alternative<bool>(v)) {\n            result.push_back(std::get<bool>(v));\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(v))\
    \ {\n            auto vec = std::get<std::vector<std::pair<long,long>>>(v);\n\
    \            for(auto i: vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<long,long>>(v))\
    \ {\n            auto map = std::get<std::map<long,long>>(v);\n            for(auto\
    \ i: map) {\n                result.push_back(i.first);\n            }\n     \
    \   }\n        else if(std::holds_alternative<std::set<long>>(v)) {\n        \
    \    auto set = std::get<std::set<long>>(v);\n            for(auto i: set) {\n\
    \                result.push_back(i);\n            }\n        }\n        else\
    \ if(std::holds_alternative<std::unordered_set<long>>(v)) {\n            auto\
    \ set = std::get<std::unordered_set<long>>(v);\n            for(auto i: set) {\n\
    \                result.push_back(i);\n            }\n        }\n        else\
    \ if(std::holds_alternative<std::vector<std::pair<long,long>>>(v)) {\n       \
    \     auto vec = std::get<std::vector<std::\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5ov8awf_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<int64_t>(v))\
    \ {\n            out.push_back(std::any_cast<int64_t>(v));\n        } else if(std::holds_alternative<double>(v))\
    \ {\n            out.push_back(std::any_cast<double>(v));\n        } else if(std::holds_alternative<std::string>(v))\
    \ {\n            out.push_back(std::any_cast<std::string>(v));\n        } else\
    \ if(std::holds_alternative<std::map<long,long>>(v)) {\n            out.push_back(std::any_cast<std::map<long,long>>(v));\n\
    \        } else if(std::holds_alternative<std::vector<long>>(v)) {\n         \
    \   out.push_back(std::any_cast<std::vector<long>>(v));\n        } else {\n  \
    \          throw std::runtime_error(\"Unsupported type\");\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvcg0nmmb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto it : values) {\n        if (std::holds_alternative<long>(it))\
    \ {\n            out.push_back(std::any_cast<long>(it));\n        }\n    }\n \
    \   return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6pxc2j8v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpop_s95g6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            for(auto val : std::get<std::vector<long>>(value)) {\n      \
    \          result.push_back(val);\n            }\n        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            for(auto val : std::get<std::vector<std::pair<long,long>>>(value))\
    \ {\n                result.push_back(val.first);\n                result.push_back(val.second);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            for(auto val : std::get<std::map<long,long>>(value)) {\n    \
    \            result.push_back(val.first);\n                result.push_back(val.second);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::vector<std::pair<long,std::pair<long,long>>>>(value))\
    \ {\n            for(auto val : std::get<std::vector<std::pair<long,std::pair<long,long>>>>(value))\
    \ {\n                result.push_back(val.first);\n                result.push_back(val.second.first);\n\
    \                result.push_back(val.second.second);\n            }\n       \
    \ }\n        else if(std::holds_alternative<std::set<long>>(value)) {\n      \
    \      for(auto val : std::get<std::set<long>>(value)) {\n                result.push_back(val);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::pair<long,long>>>(value))\
    \ {\n            for(auto val : std::get<std::set<std::pair<long,long>>>(value))\
    \ {\n                result.push_back(val.first);\n                result.push_back(val.second);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::pair<long,std::pair<long,long>>>>(value))\
    \ {\n            for(auto val : std::get<std::set<std::pair<long,std::pair<long,long>>>>(value))\
    \ {\n                result.push_back(val.first);\n                result.push_back(val.second.first);\n\
    \                result.push_back(val.second.second);\n            }\n       \
    \ }\n        else if(std::holds_alternative<std::set<std::pair<long,std::pair<long,std::pair<long,long>>>>>(value))\
    \ {\n            for(auto val : std::get<std::set<std::pair<long,std::pair<long,std::pair<long,long>>>>>(value))\
    \ {\n                result.push_back(val.first);\n                result.push_back(val.second.first);\n\
    \                result.push_back(val.second.second.first);\n                result.push_back(val.second.second.second);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpr36b9ihp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv0o3w0ca.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpv0o3w0ca.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpv0o3w0ca.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpv0o3w0ca.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpv0o3w0ca.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpv0o3w0ca.cpp:10:15: error: ISO C++ forbids\
    \ declaration of 'value' with no type [-fpermissive]\n     for(auto &value : values)\
    \ {\n               ^\n/tmp/tmpv0o3w0ca.cpp:10:23: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for(auto &value : values) {\n          \
    \             ^\n/tmp/tmpv0o3w0ca.cpp:11:12: error: 'holds_alternative' is not\
    \ a member of 'std'\n         if(std::holds_alternative<long>(value)) {\n    \
    \        ^\n/tmp/tmpv0o3w0ca.cpp:11:35: error: expected primary-expression before\
    \ 'long'\n         if(std::holds_alternative<long>(value)) {\n               \
    \                    ^\n/tmp/tmpv0o3w0ca.cpp:11:35: error: expected ')' before\
    \ 'long'\n/tmp/tmpv0o3w0ca.cpp:12:30: error: 'any_cast' is not a member of 'std'\n\
    \             result.push_back(std::any_cast<long>(value));\n                \
    \              ^\n/tmp/tmpv0o3w0ca.cpp:12:44: error: expected primary-expression\
    \ before 'long'\n             result.push_back(std::any_cast<long>(value));\n\
    \                                            ^\n/tmp/tmpv0o3w0ca.cpp: In function\
    \ 'int main()':\n/tmp/tmpv0o3w0ca.cpp:18:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = filter_integers;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv0o3w0ca.cpp:2:\n/tmp/tmpv0o3w0ca.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vect"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if (std::holds_alternative<uint64_t>(value)) {\n            result.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if (std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if (std::holds_alternative<bool>(value)) {\n            result.push_back(std::any_cast<bool>(value));\n\
    \        } else if (std::holds_alternative<std::string>(value)) {\n          \
    \  result.push_back(std::any_cast<std::string>(value));\n        } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\n\
    \        } else if (std::holds_alternative<std::vector<long>>(value)) {\n    \
    \        result.push_back(std::any_cast<std::vector<long>>(value));\n        }\
    \ else {\n            throw std::runtime_error(\"Unknown type\");\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpob6a1e46.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpcrczfgqk.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpcrczfgqk.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpcrczfgqk.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpcrczfgqk.cpp: In function 'int main()':\n/tmp/tmpcrczfgqk.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcrczfgqk.cpp:2:\n/tmp/tmpcrczfgqk.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpcrczfgqk.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpcrczfgqk.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpcrczfgqk.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (s"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto &v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpet8w3dty.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<int64_t>(v))\
    \ {\n            out.push_back(std::any_cast<int64_t>(v));\n        } else if(std::holds_alternative<double>(v))\
    \ {\n            out.push_back(std::any_cast<double>(v));\n        } else if(std::holds_alternative<std::string>(v))\
    \ {\n            out.push_back(std::any_cast<std::string>(v));\n        } else\
    \ if(std::holds_alternative<std::map<long,long>>(v)) {\n            out.push_back(std::any_cast<std::map<long,long>>(v));\
    \ // TODO: handle maps\n        } else if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n            out.push_back(std::any_cast<std::vector<long>>(v)); // TODO:\
    \ handle lists\n        }\n    }\n    return out;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkf58faim.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::vector<long>>(value).begin(),\
    \ std::get<std::vector<long>>(value).end());\n        } else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::vector<std::pair<long,long>>>(value).begin(),\
    \ std::get<std::vector<std::pair<long,long>>>(value).end());\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::map<long,long>>(value).begin(),\
    \ std::get<std::map<long,long>>(value).end());\n        } else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::vector<std::pair<long,long>>>(value).begin(),\
    \ std::get<std::vector<std::pair<long,long>>>(value).end());\n        } else if(std::holds_alternative<std::set<long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::set<long>>(value).begin(),\
    \ std::get<std::set<long>>(value).end());\n        } else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::vector<std::pair<long,long>>>(value).begin(),\
    \ std::get<std::vector<std::pair<long,long>>>(value).end());\n        } else if(std::holds_alternative<std::unordered_set<long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::unordered_set<long>>(value).begin(),\
    \ std::get<std::unordered_set<long>>(value).end());\n        } else if(std::holds_alternative<std::unordered_map<long,long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::unordered_map<long,long>>(value).begin(),\
    \ std::get<std::unordered_map<long,long>>(value).end());\n        } else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::vector<std::pair<long,long>>>(value).begin(),\
    \ std::get<std::vector<std::pair<long,long>>>(value).end());\n        } else if(std::holds_alternative<std::list<long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::list<long>>(value).begin(),\
    \ std::get<std::list<long>>\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5du4swir.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpcrczfgqk.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpcrczfgqk.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpcrczfgqk.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpcrczfgqk.cpp: In function 'int main()':\n/tmp/tmpcrczfgqk.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcrczfgqk.cpp:2:\n/tmp/tmpcrczfgqk.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpcrczfgqk.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpcrczfgqk.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpcrczfgqk.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (s"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(v)->size());\n\
    \        } else {\n            out.emplace_back(std::any_cast<long>(v));\n   \
    \     }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpz9dbnbrm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            auto vec = std::get<std::vector<long>>(value);\n            for(auto\
    \ i : vec) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::pair<long,long>>>(value);\n\
    \            for(auto i : vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            auto map = std::get<std::map<long,long>>(value);\n          \
    \  for(auto i : map) {\n                result.push_back(i.first);\n         \
    \   }\n        }\n        else if(std::holds_alternative<std::set<long>>(value))\
    \ {\n            auto set = std::get<std::set<long>>(value);\n            for(auto\
    \ i : set) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::string>(value)) {\n            result.push_back(std::stoi(value));\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::any>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::any>>(value);\n        \
    \    for(auto i : vec) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::any>>(value))\
    \ {\n            auto set = std::get<std::set<std::any>>(value);\n           \
    \ for(auto i : set) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<std::any,std::any>>(value))\
    \ {\n            auto map = std::get<std::map<std::any,std::any>>(value);\n  \
    \          for(auto i : map) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n        else if(std::holds_alternative<std::vector<std::any>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::any>>(value);\n        \
    \    for(auto i : vec) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::any>>(value))\
    \ {\n            auto set = std::get<std::set<std::any>>(value);\n           \
    \ for(auto i : set) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<std::any,std::any>>(value))\
    \ {\n            auto map = std::get<std::map<std::any,std::any>>(value);\n  \
    \          for(auto i : map) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpmj7gyqqi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::map<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::map<long,long>>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphrpyhpsa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::get<long>(value));\n        }\n    }\n   \
    \ return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0iw7i0wq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\
    \ // TODO: handle maps\n        } else if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::vector<long>>(value)); //\
    \ TODO: handle vectors\n        } else {\n            throw std::runtime_error(\"\
    Unsupported type\");\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6rbm3dt2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(v.type() == typeid(long)) {\n  \
    \          out.push_back(v);\n        }\n    }\n    return out;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpt_kc9l7y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmb2w4b9u.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpmb2w4b9u.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpmb2w4b9u.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpmb2w4b9u.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpmb2w4b9u.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpmb2w4b9u.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpmb2w4b9u.cpp: In function 'int main()':\n/tmp/tmpmb2w4b9u.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmb2w4b9u.cpp:2:\n/tmp/tmpmb2w4b9u.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpmb2w4b9u.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpmb2w4b9u.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpmb2w4b9u.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpmb2w4b9u.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ =="
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqpc4ap58.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv0o3w0ca.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpv0o3w0ca.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpv0o3w0ca.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpv0o3w0ca.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpv0o3w0ca.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpv0o3w0ca.cpp:10:15: error: ISO C++ forbids\
    \ declaration of 'value' with no type [-fpermissive]\n     for(auto &value : values)\
    \ {\n               ^\n/tmp/tmpv0o3w0ca.cpp:10:23: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for(auto &value : values) {\n          \
    \             ^\n/tmp/tmpv0o3w0ca.cpp:11:12: error: 'holds_alternative' is not\
    \ a member of 'std'\n         if(std::holds_alternative<long>(value)) {\n    \
    \        ^\n/tmp/tmpv0o3w0ca.cpp:11:35: error: expected primary-expression before\
    \ 'long'\n         if(std::holds_alternative<long>(value)) {\n               \
    \                    ^\n/tmp/tmpv0o3w0ca.cpp:11:35: error: expected ')' before\
    \ 'long'\n/tmp/tmpv0o3w0ca.cpp:12:30: error: 'any_cast' is not a member of 'std'\n\
    \             result.push_back(std::any_cast<long>(value));\n                \
    \              ^\n/tmp/tmpv0o3w0ca.cpp:12:44: error: expected primary-expression\
    \ before 'long'\n             result.push_back(std::any_cast<long>(value));\n\
    \                                            ^\n/tmp/tmpv0o3w0ca.cpp: In function\
    \ 'int main()':\n/tmp/tmpv0o3w0ca.cpp:18:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = filter_integers;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv0o3w0ca.cpp:2:\n/tmp/tmpv0o3w0ca.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vect"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpk2yv8xcw.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpk2yv8xcw.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpk2yv8xcw.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpk2yv8xcw.cpp: In function 'int main()':\n/tmp/tmpk2yv8xcw.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk2yv8xcw.cpp:2:\n/tmp/tmpk2yv8xcw.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpk2yv8xcw.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpk2yv8xcw.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpk2yv8xcw.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\n\
    \        } else if(std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       result.push_back(std::any_cast<std::vector<long>>(value));\n        }\
    \ else {\n            throw std::runtime_error(\"Unsupported type\");\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_ib6vbnv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        } else if\
    \ (std::holds_alternative<std::map<long,long>>(value)) {\n            auto map\
    \ = std::any_cast<std::map<long,long>>(value);\n            for (auto it = map.begin();\
    \ it != map.end(); ++it) {\n                out.push_back(it->first);\n      \
    \      }\n        } else if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n            auto vec = std::any_cast<std::vector<long>>(value);\n       \
    \     for (auto it = vec.begin(); it != vec.end(); ++it) {\n                out.push_back(*it);\n\
    \            }\n        } else {\n            out.push_back(0);\n        }\n \
    \   }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2hr2qbwj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            out.push_back(value.as<long>());\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_fvhvvl8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<uint64_t>(value)) {\n            result.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if(std::holds_alternative<int32_t>(value)) {\n            result.push_back(std::any_cast<int32_t>(value));\n\
    \        } else if(std::holds_alternative<uint32_t>(value)) {\n            result.push_back(std::any_cast<uint32_t>(value));\n\
    \        } else if(std::holds_alternative<int16_t>(value)) {\n            result.push_back(std::any_cast<int16_t>(value));\n\
    \        } else if(std::holds_alternative<uint16_t>(value)) {\n            result.push_back(std::any_cast<uint16_t>(value));\n\
    \        } else if(std::holds_alternative<int8_t>(value)) {\n            result.push_back(std::any_cast<int8_t>(value));\n\
    \        } else if(std::holds_alternative<uint8_t>(value)) {\n            result.push_back(std::any_cast<uint8_t>(value));\n\
    \        } else if(std::holds_alternative<bool>(value)) {\n            result.push_back(std::any_cast<bool>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\n\
    \        } else if(std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       result.push_back(std::any_cast<std::vector<long>>(value));\n        }\
    \ else {\n            throw std::runtime_error(\"Unknown type for filter_integers:\
    \ \" + std::to_string(value.get_type()));\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvnzz2mo7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto val : values) {\n        if (val && val->is_int()) {\n \
    \           out.push_back(val->as<int>());\n        }\n    }\n    return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptcdppdwm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<int64_t>(value))\
    \ {\n            out.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if (std::holds_alternative<uint64_t>(value)) {\n            out.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if (std::holds_alternative<int32_t>(value)) {\n            out.push_back(std::any_cast<int32_t>(value));\n\
    \        } else if (std::holds_alternative<uint32_t>(value)) {\n            out.push_back(std::any_cast<uint32_t>(value));\n\
    \        } else if (std::holds_alternative<int16_t>(value)) {\n            out.push_back(std::any_cast<int16_t>(value));\n\
    \        } else if (std::holds_alternative<uint16_t>(value)) {\n            out.push_back(std::any_cast<uint16_t>(value));\n\
    \        } else if (std::holds_alternative<int8_t>(value)) {\n            out.push_back(std::any_cast<int8_t>(value));\n\
    \        } else if (std::holds_alternative<uint8_t>(value)) {\n            out.push_back(std::any_cast<uint8_t>(value));\n\
    \        } else if (std::holds_alternative<bool>(value)) {\n            out.push_back(std::any_cast<bool>(value));\n\
    \        } else if (std::holds_alternative<std::string>(value)) {\n          \
    \  out.push_back(std::any_cast<std::string>(value));\n        } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.push_back(std::any_cast<std::map<long,long>>(value));\n \
    \       } else if (std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       out.push_back(std::any_cast<std::vector<long>>(value));\n        } else\
    \ {\n            throw std::runtime_error(\"Unsupported type\");\n        }\n\
    \    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpphnge1zz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto &v : values) {\n        if(v.type() == typeid(long)) {\n\
    \            out.push_back(v);\n        }\n    }\n    return out;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpalm7ju8k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv0o3w0ca.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpv0o3w0ca.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpv0o3w0ca.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpv0o3w0ca.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpv0o3w0ca.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpv0o3w0ca.cpp:10:15: error: ISO C++ forbids\
    \ declaration of 'value' with no type [-fpermissive]\n     for(auto &value : values)\
    \ {\n               ^\n/tmp/tmpv0o3w0ca.cpp:10:23: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for(auto &value : values) {\n          \
    \             ^\n/tmp/tmpv0o3w0ca.cpp:11:12: error: 'holds_alternative' is not\
    \ a member of 'std'\n         if(std::holds_alternative<long>(value)) {\n    \
    \        ^\n/tmp/tmpv0o3w0ca.cpp:11:35: error: expected primary-expression before\
    \ 'long'\n         if(std::holds_alternative<long>(value)) {\n               \
    \                    ^\n/tmp/tmpv0o3w0ca.cpp:11:35: error: expected ')' before\
    \ 'long'\n/tmp/tmpv0o3w0ca.cpp:12:30: error: 'any_cast' is not a member of 'std'\n\
    \             result.push_back(std::any_cast<long>(value));\n                \
    \              ^\n/tmp/tmpv0o3w0ca.cpp:12:44: error: expected primary-expression\
    \ before 'long'\n             result.push_back(std::any_cast<long>(value));\n\
    \                                            ^\n/tmp/tmpv0o3w0ca.cpp: In function\
    \ 'int main()':\n/tmp/tmpv0o3w0ca.cpp:18:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = filter_integers;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv0o3w0ca.cpp:2:\n/tmp/tmpv0o3w0ca.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vect"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            auto vec = std::get<std::vector<long>>(value);\n            for(auto\
    \ i : vec) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<long>(value)) {\n            result.push_back(std::get<long>(value));\n\
    \        }\n        else {\n            throw std::runtime_error(\"Invalid value\
    \ type\");\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvb_zc2nt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpk2yv8xcw.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpk2yv8xcw.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpk2yv8xcw.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpk2yv8xcw.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpk2yv8xcw.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpk2yv8xcw.cpp: In function 'int main()':\n/tmp/tmpk2yv8xcw.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk2yv8xcw.cpp:2:\n/tmp/tmpk2yv8xcw.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpk2yv8xcw.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpk2yv8xcw.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpk2yv8xcw.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpk2yv8xcw.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto val : values) {\n        auto pyval = py::cast(val);\n \
    \       if (pyval.is(py::int_)) {\n            out.push_back(pyval.ptr());\n \
    \       }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxv2dmmaf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<int64_t>(value))\
    \ {\n            out.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if (std::holds_alternative<uint64_t>(value)) {\n            out.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if (std::holds_alternative<double>(value)) {\n            out.push_back(std::any_cast<double>(value));\n\
    \        } else if (std::holds_alternative<bool>(value)) {\n            out.push_back(std::any_cast<bool>(value));\n\
    \        } else if (std::holds_alternative<std::string>(value)) {\n          \
    \  out.push_back(std::any_cast<std::string>(value));\n        } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.push_back(std::any_cast<std::map<long,long>>(value));\n \
    \       } else if (std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       out.push_back(std::any_cast<std::vector<long>>(value));\n        } else\
    \ {\n            throw std::runtime_error(\"Unknown type\");\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkkfkyb7h.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpg1k1gp71.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(v.type() == typeid(int)) {\n\
    \            result.push_back((long)v.as<int>());\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5s8c1vao.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(v)->at(0));\n\
    \        } else {\n            out.emplace_back(std::any_cast<long>(v));\n   \
    \     }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpq6ugnq0h.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto it = values.begin(); it != values.end(); ++it) {\n      \
    \  if(std::holds_alternative<long>(*it)) {\n            out.push_back(std::get<long>(*it));\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppv8i8mwx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   auto val = std::any_cast<long>(*it);\n        if (val != std::any_cast<long>(-1))\
    \ {\n            out.push_back(val);\n        }\n    }\n    return out;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp96f5c9bt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            out.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<uint64_t>(value)) {\n            out.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if(std::holds_alternative<double>(value)) {\n            out.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ out.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.push_back(std::any_cast<std::map<long,long>>(value));\n \
    \       } else if(std::holds_alternative<std::vector<long>>(value)) {\n      \
    \      out.push_back(std::any_cast<std::vector<long>>(value));\n        } else\
    \ {\n            throw std::runtime_error(\"Unsupported type\");\n        }\n\
    \    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpm6_6874m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            auto vec = std::get<std::vector<long>>(value);\n            for(auto\
    \ i : vec) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::pair<long,long>>>(value);\n\
    \            for(auto i : vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            auto map = std::get<std::map<long,long>>(value);\n          \
    \  for(auto i : map) {\n                result.push_back(i.first);\n         \
    \   }\n        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::pair<long,long>>>(value);\n\
    \            for(auto i : vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::vector<std::pair<std::string,long>>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::pair<std::string,long>>>(value);\n\
    \            for(auto i : vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<long>>(value))\
    \ {\n            auto set = std::get<std::set<long>>(value);\n            for(auto\
    \ i : set) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::set<std::string>>(value)) {\n   \
    \         auto set = std::get<std::set<std::string>>(value);\n            for(auto\
    \ i : set) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::set<std::pair<long,long>>>(value))\
    \ {\n            auto set = std::get<std::set<std::pair<long,long>>>(value);\n\
    \            for(auto i : set) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::pair<std::string,long>>>(value))\
    \ {\n            auto set = std::get<std::set<std::pair<std::string,long>>>(value);\n\
    \            for(auto i : set) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::pair<std::string,std::string>>>(value))\
    \ {\n            auto set = std::get<std::set<std::pair<std::string,std::string>>>(value);\n\
    \            for(auto i : set) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8arsbd9t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\
    \ // TODO: handle maps\n        } else if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::vector<long>>(value)); //\
    \ TODO: handle vectors\n        } else {\n            throw std::runtime_error(\"\
    Unsupported type\");\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpmhgsn0ja.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2pw0y_fr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,long>>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,long>>>>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,std::pair<long,long>>>&>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,std::pair<long,long>>>>&>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>>&>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>&>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>>&>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>&>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>>&>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>>&>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>>&>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,std::pair<long,std::\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1enz62n2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjp6xeha0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<int64_t>(v))\
    \ {\n            out.push_back(std::any_cast<int64_t>(v));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp298lkqkz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.push_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7wr2s66i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpcrczfgqk.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpcrczfgqk.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpcrczfgqk.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpcrczfgqk.cpp: In function 'int main()':\n/tmp/tmpcrczfgqk.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcrczfgqk.cpp:2:\n/tmp/tmpcrczfgqk.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpcrczfgqk.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpcrczfgqk.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpcrczfgqk.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (s"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)[0]);\n\
    \        } else {\n            out.emplace_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpngbcbfw_.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpngbcbfw_.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpngbcbfw_.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpngbcbfw_.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpngbcbfw_.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpngbcbfw_.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpngbcbfw_.cpp:17:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpngbcbfw_.cpp:17:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpngbcbfw_.cpp:17:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpngbcbfw_.cpp:17:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpngbcbfw_.cpp:17:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpngbcbfw_.cpp: In function 'int main()':\n/tmp/tmpngbcbfw_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpngbcbfw_.cpp:2:\n/tmp/tmpngbcbfw_.cpp:21:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpngbcbfw_.cpp:21:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpngbcbfw_.cpp:21:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpngbcbfw_.cpp:21:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpngbcbfw_.cpp:21:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)->at(0));\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)->at(0));\n\
    \        }\n        else if(std::holds_alternative<std::set<long>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::set<long>>(value)->at(0));\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::string>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::string>>(value)->at(0));\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::tuple<long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2njreveg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpxp249_6t.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpxp249_6t.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpxp249_6t.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpxp249_6t.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpxp249_6t.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpxp249_6t.cpp: In function 'int main()':\n/tmp/tmpxp249_6t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxp249_6t.cpp:2:\n/tmp/tmpxp249_6t.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpxp249_6t.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpxp249_6t.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpxp249_6t.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpxp249_6t.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\n\
    \        } else if(std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       result.push_back(std::any_cast<std::vector<long>>(value));\n        }\
    \ else {\n            throw std::runtime_error(\"Unknown type\");\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzlwh498w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpcrczfgqk.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpcrczfgqk.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpcrczfgqk.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpcrczfgqk.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpcrczfgqk.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpcrczfgqk.cpp: In function 'int main()':\n/tmp/tmpcrczfgqk.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcrczfgqk.cpp:2:\n/tmp/tmpcrczfgqk.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpcrczfgqk.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpcrczfgqk.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpcrczfgqk.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpcrczfgqk.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (s"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto val : values) {\n        if (std::holds_alternative<long>(val))\
    \ {\n            out.push_back(std::any_cast<long>(val));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwkyk8hqp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmb2w4b9u.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpmb2w4b9u.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpmb2w4b9u.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpmb2w4b9u.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpmb2w4b9u.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpmb2w4b9u.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpmb2w4b9u.cpp: In function 'int main()':\n/tmp/tmpmb2w4b9u.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmb2w4b9u.cpp:2:\n/tmp/tmpmb2w4b9u.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpmb2w4b9u.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpmb2w4b9u.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpmb2w4b9u.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpmb2w4b9u.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ =="
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto &v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpet8w3dty.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto &v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpet8w3dty.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqpc4ap58.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjp6xeha0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\
    \ // TODO: handle maps\n        } else if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::vector<long>>(value)); //\
    \ TODO: handle vectors\n        } else {\n            throw std::runtime_error(\"\
    Unknown type\");\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzfhk93sa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmb2w4b9u.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpmb2w4b9u.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpmb2w4b9u.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpmb2w4b9u.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpmb2w4b9u.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpmb2w4b9u.cpp:10:15: error: 'value' does\
    \ not name a type\n     for (auto value : values) {\n               ^\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpmb2w4b9u.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpmb2w4b9u.cpp: In function 'int main()':\n/tmp/tmpmb2w4b9u.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmb2w4b9u.cpp:2:\n/tmp/tmpmb2w4b9u.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpmb2w4b9u.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpmb2w4b9u.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpmb2w4b9u.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpmb2w4b9u.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ =="
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4v5tt1iv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795195
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<int64_t>(v))\
    \ {\n            out.push_back(std::any_cast<int64_t>(v));\n        } else if(std::holds_alternative<double>(v))\
    \ {\n            out.push_back(std::any_cast<double>(v));\n        } else if(std::holds_alternative<std::string>(v))\
    \ {\n            out.push_back(std::any_cast<std::string>(v));\n        } else\
    \ if(std::holds_alternative<std::map<long,long>>(v)) {\n            out.push_back(std::any_cast<std::map<long,long>>(v));\
    \ // TODO: handle maps\n        } else if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n            out.push_back(std::any_cast<std::vector<long>>(v)); // TODO:\
    \ handle vectors\n        } else {\n            throw std::runtime_error(\"Unsupported\
    \ type\");\n        }\n    }\n    return out;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpddmvkla9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(v.type() == typeid(long)) {\n  \
    \          out.push_back(v.as<long>());\n        }\n    }\n    return out;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk77cmyxw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659795196
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmppx9_h0w0.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmppx9_h0w0.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmppx9_h0w0.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmppx9_h0w0.cpp:10:14: error: 'v' does not\
    \ name a type\n     for(auto v: values) {\n              ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return out;\n     ^\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmppx9_h0w0.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmppx9_h0w0.cpp: In function 'int main()':\n/tmp/tmppx9_h0w0.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppx9_h0w0.cpp:2:\n/tmp/tmppx9_h0w0.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmppx9_h0w0.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmppx9_h0w0.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmppx9_h0w0.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmppx9_h0w0.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member of 'std'\n std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n                          \
    \                     ^\n/tmp/tmpwlhp1cmd.cpp:8:47: error: 'any' is not a member\
    \ of 'std'\n/tmp/tmpwlhp1cmd.cpp:8:55: error: template argument 1 is invalid\n\
    \ std::vector<long> filter_integers(std::vector<std::any> values) {\n        \
    \                                               ^\n/tmp/tmpwlhp1cmd.cpp:8:55:\
    \ error: template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp: In function 'std::vector<long\
    \ int> filter_integers(int)':\n/tmp/tmpwlhp1cmd.cpp:10:14: error: 'value' does\
    \ not name a type\n     for(auto value : values) {\n              ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpwlhp1cmd.cpp:15:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpwlhp1cmd.cpp: In function 'int main()':\n/tmp/tmpwlhp1cmd.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = filter_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwlhp1cmd.cpp:2:\n/tmp/tmpwlhp1cmd.cpp:19:35: error:\
    \ 'any' is not a member of 'std'\n     assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n                                   ^\n/tmp/tmpwlhp1cmd.cpp:19:35:\
    \ error: 'any' is not a member of 'std'\n/tmp/tmpwlhp1cmd.cpp:19:43: error: template\
    \ argument 1 is invalid\n     assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \                                           ^\n/tmp/tmpwlhp1cmd.cpp:19:43: error:\
    \ template argument 2 is invalid\n/tmp/tmpwlhp1cmd.cpp:19:47: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((std::vector<std::any>()))\
    \ == ("
  stdout: ''
